Return-Path: <linux-cifs-owner@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 7A52B586E98
	for <lists+linux-cifs@lfdr.de>; Mon,  1 Aug 2022 18:34:53 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232762AbiHAQeu (ORCPT <rfc822;lists+linux-cifs@lfdr.de>);
        Mon, 1 Aug 2022 12:34:50 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54802 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S232304AbiHAQes (ORCPT
        <rfc822;linux-cifs@vger.kernel.org>); Mon, 1 Aug 2022 12:34:48 -0400
Received: from mail-ua1-x929.google.com (mail-ua1-x929.google.com [IPv6:2607:f8b0:4864:20::929])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 9ACD53AB0D
        for <linux-cifs@vger.kernel.org>; Mon,  1 Aug 2022 09:34:44 -0700 (PDT)
Received: by mail-ua1-x929.google.com with SMTP id h19so3779045ual.8
        for <linux-cifs@vger.kernel.org>; Mon, 01 Aug 2022 09:34:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=mime-version:from:date:message-id:subject:to:cc;
        bh=YaoiJviIWdWizhJQFUSpGcfrJLU1A49t87J0lQqJ3Os=;
        b=kkUwHYRidt3y/vLXpq0C4t6j7kBFPNx/EX1VquwIoVz1O2m7edgkyWH+vwyFwGEsRB
         VY/qtxQN7Q2rpC7lZGh4qX/BfR1k5I3AQk/FUhliULpYPQYwCPCEhmsRwbwixa9uA8xc
         eR5n7GjXosiu1joQ5uoXwV59gNrBwdJT194241uOgvZa6/yHjYCGDnijxH72ZCSwpPQL
         ItqXBOO8TXnQpI/X09NxblmjGVWW4j5kr4S4LeXxeQ41QvdXYJtWTHchu0KDg3pp5B8+
         QmVSlWv4jyDbt/sE1qaOg4kKxiaT6dVdQ0ytuPXbJzqto1UA9WklVAsWB+xWHJSC5LTs
         TvSw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to:cc;
        bh=YaoiJviIWdWizhJQFUSpGcfrJLU1A49t87J0lQqJ3Os=;
        b=kcaDWiUVnMBCS8nShiNUFVa3R54Rqby/zX36ZolyMem4tjBVcagYjSUJkSpDJbPHDm
         UmUK2sNV+ZITKZ7mg83HbBRZ16tu1rhDwniFkdo5oz0wjescYqWo8pdePRhMLVXQrY4r
         lbwrco+F+k12rlLINB32KtUeiC/zZdGnLJGDi81nzA8uQvZ2jjy1sTE5gaNffIDaR0pZ
         FImUauieHvZqfEXl106Lfs/GCk5/iPR1sLWhjg0mCj8iGurwE4WJ1Zq/e5axRHZRXqNZ
         wZ0BEfcl0bNsQwrk0rLbBEEaHa35ZxVJxsMeg+HFI3JCDAJXBwFb5ymKgWeXuAQcHBpB
         fmMA==
X-Gm-Message-State: ACgBeo2LUtleckNTbVyD8QTsupbXH1NE3tqEPA2EoDuIWxRCs69RqtAd
        h5k4UbPjlfj0Q2HUQtLJXBhmdzMCsLpU5rx1vI1edIb+QCg=
X-Google-Smtp-Source: AA6agR4lN152Vb4wc1GfD70nMUb9FI11ca6d13UXPc6sveOyllguw8OF+aCSTuRTb0bmZajbKLh7hwV3Xl2MgDcWIyE=
X-Received: by 2002:a05:6130:10b:b0:37f:a52:99fd with SMTP id
 h11-20020a056130010b00b0037f0a5299fdmr6197076uag.96.1659371683389; Mon, 01
 Aug 2022 09:34:43 -0700 (PDT)
MIME-Version: 1.0
From:   Steve French <smfrench@gmail.com>
Date:   Mon, 1 Aug 2022 11:34:32 -0500
Message-ID: <CAH2r5mu3RZOXe3j8ii4daOGtorL8h2nsu1jUe74UeOMxijqjWQ@mail.gmail.com>
Subject: [PATCH][CIFS] when insecure legacy is disabled shrink amount of SMB1 code
To:     CIFS <linux-cifs@vger.kernel.org>
Cc:     ronnie sahlberg <ronniesahlberg@gmail.com>
Content-Type: multipart/mixed; boundary="000000000000bd920905e5309328"
X-Spam-Status: No, score=-2.1 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,FREEMAIL_FROM,
        RCVD_IN_DNSWL_NONE,SPF_HELO_NONE,SPF_PASS autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-cifs.vger.kernel.org>
X-Mailing-List: linux-cifs@vger.kernel.org

--000000000000bd920905e5309328
Content-Type: text/plain; charset="UTF-8"

[updated to include fix for Ronnie's comment, follow on patch can address
moving some #ifdeffed smb1 functions in file.c/dir.c/inode.c out of those
files to make the code clearer]

Currently much of the smb1 code is built even when
CONFIG_CIFS_ALLOW_INSECURE_LEGACY is disabled.

Move cifssmb.c to only be compiled when insecure legacy is disabled,
and move various SMB1/CIFS helper functions to that ifdef.  Some
functions that were not SMB1/CIFS specific needed to be moved out of
cifssmb.c

This shrinks cifs.ko by more than 10% which is good - but also will
help with the eventual movement of the legacy code to a distinct
module.  Follow on patches can shrink the number of ifdefs by
code restructuring where smb1 code is wedged in functions that
should be calling dialect specific helper functions instead,
and also by moving some functions from file.c/dir.c/inode.c into
smb1 specific c files.

-- 
Thanks,

Steve

--000000000000bd920905e5309328
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-when-insecure-legacy-is-disabled-shrink-amount-.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-when-insecure-legacy-is-disabled-shrink-amount-.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_l6az0cl00>
X-Attachment-Id: f_l6az0cl00

RnJvbSAxOTYyYzEwODk1NzEwOTY0NDQ4ZDcxYjNlMzAyODBlYzM4NzNlMWNhIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
CkRhdGU6IE1vbiwgMSBBdWcgMjAyMiAxMToxNzo0NiAtMDUwMApTdWJqZWN0OiBbUEFUQ0hdIGNp
ZnM6IHdoZW4gaW5zZWN1cmUgbGVnYWN5IGlzIGRpc2FibGVkIHNocmluayBhbW91bnQgb2YgU01C
MQogY29kZQoKQ3VycmVudGx5IG11Y2ggb2YgdGhlIHNtYjEgY29kZSBpcyBidWlsdCBldmVuIHdo
ZW4KQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZIGlzIGRpc2FibGVkLgoKTW92ZSBj
aWZzc21iLmMgdG8gb25seSBiZSBjb21waWxlZCB3aGVuIGluc2VjdXJlIGxlZ2FjeSBpcyBkaXNh
YmxlZCwKYW5kIG1vdmUgdmFyaW91cyBTTUIxL0NJRlMgaGVscGVyIGZ1bmN0aW9ucyB0byB0aGF0
IGlmZGVmLiAgU29tZQpmdW5jdGlvbnMgdGhhdCB3ZXJlIG5vdCBTTUIxL0NJRlMgc3BlY2lmaWMg
bmVlZGVkIHRvIGJlIG1vdmVkIG91dCBvZgpjaWZzc21iLmMKClRoaXMgc2hyaW5rcyBjaWZzLmtv
IGJ5IG1vcmUgdGhhbiAxMCUgd2hpY2ggaXMgZ29vZCAtIGJ1dCBhbHNvIHdpbGwKaGVscCB3aXRo
IHRoZSBldmVudHVhbCBtb3ZlbWVudCBvZiB0aGUgbGVnYWN5IGNvZGUgdG8gYSBkaXN0aW5jdApt
b2R1bGUuICBGb2xsb3cgb24gcGF0Y2hlcyBjYW4gc2hyaW5rIHRoZSBudW1iZXIgb2YgaWZkZWZz
IGJ5CmNvZGUgcmVzdHJ1Y3R1cmluZyB3aGVyZSBzbWIxIGNvZGUgaXMgd2VkZ2VkIGluIGZ1bmN0
aW9ucyB0aGF0CnNob3VsZCBiZSBjYWxsaW5nIGRpYWxlY3Qgc3BlY2lmaWMgaGVscGVyIGZ1bmN0
aW9ucyBpbnN0ZWFkLAphbmQgYWxzbyBieSBtb3Zpbmcgc29tZSBmdW5jdGlvbnMgZnJvbSBmaWxl
LmMvZGlyLmMvaW5vZGUuYyBpbnRvCnNtYjEgc3BlY2lmaWMgYyBmaWxlcy4KClJldmlld2VkLWJ5
OiBSb25uaWUgU2FobGJlcmcgPGxzYWhsYmVyQHJlZGhhdC5jb20+ClNpZ25lZC1vZmYtYnk6IFN0
ZXZlIEZyZW5jaCA8c3RmcmVuY2hAbWljcm9zb2Z0LmNvbT4KLS0tCiBmcy9jaWZzL01ha2VmaWxl
ICAgIHwgICA0ICstCiBmcy9jaWZzL2NpZnNhY2wuYyAgIHwgICAyICsKIGZzL2NpZnMvY2lmc3By
b3RvLmggfCAgIDIgKwogZnMvY2lmcy9jaWZzc21iLmMgICB8IDQ1MyArLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogZnMvY2lmcy9jb25uZWN0LmMgICB8ICA1MyAr
KysrKysKIGZzL2NpZnMvZGlyLmMgICAgICAgfCAgIDggKwogZnMvY2lmcy9maWxlLmMgICAgICB8
IDI2NCArKysrKysrKysrKysrKysrKysrKysrKysrLQogZnMvY2lmcy9pbm9kZS5jICAgICB8ICA2
MCArKysrKy0KIGZzL2NpZnMvaW9jdGwuYyAgICAgfCAgIDIgKwogZnMvY2lmcy9saW5rLmMgICAg
ICB8ICAgOCArCiBmcy9jaWZzL3Nlc3MuYyAgICAgIHwgICA1ICstCiBmcy9jaWZzL3RyYW5zcG9y
dC5jIHwgMTc5ICsrKysrKysrKysrKysrKysrCiBmcy9jaWZzL3hhdHRyLmMgICAgIHwgICA1ICst
CiAxMyBmaWxlcyBjaGFuZ2VkLCA1ODIgaW5zZXJ0aW9ucygrKSwgNDYzIGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2ZzL2NpZnMvTWFrZWZpbGUgYi9mcy9jaWZzL01ha2VmaWxlCmluZGV4IDhj
OWYyYzAwYmU3Mi4uZTg4MmU5MTJhNTE3IDEwMDY0NAotLS0gYS9mcy9jaWZzL01ha2VmaWxlCisr
KyBiL2ZzL2NpZnMvTWFrZWZpbGUKQEAgLTUsNyArNSw3IEBACiBjY2ZsYWdzLXkgKz0gLUkkKHNy
YykJCSMgbmVlZGVkIGZvciB0cmFjZSBldmVudHMKIG9iai0kKENPTkZJR19DSUZTKSArPSBjaWZz
Lm8KIAotY2lmcy15IDo9IHRyYWNlLm8gY2lmc2ZzLm8gY2lmc3NtYi5vIGNpZnNfZGVidWcubyBj
b25uZWN0Lm8gZGlyLm8gZmlsZS5vIFwKK2NpZnMteSA6PSB0cmFjZS5vIGNpZnNmcy5vIGNpZnNf
ZGVidWcubyBjb25uZWN0Lm8gZGlyLm8gZmlsZS5vIFwKIAkgIGlub2RlLm8gbGluay5vIG1pc2Mu
byBuZXRtaXNjLm8gc21iZW5jcnlwdC5vIHRyYW5zcG9ydC5vIFwKIAkgIGNpZnNfdW5pY29kZS5v
IG50ZXJyLm8gY2lmc2VuY3J5cHQubyBcCiAJICByZWFkZGlyLm8gaW9jdGwubyBzZXNzLm8gZXhw
b3J0Lm8gdW5jLm8gd2ludWNhc2UubyBcCkBAIC0zMSw0ICszMSw0IEBAIGNpZnMtJChDT05GSUdf
Q0lGU19TTUJfRElSRUNUKSArPSBzbWJkaXJlY3QubwogCiBjaWZzLSQoQ09ORklHX0NJRlNfUk9P
VCkgKz0gY2lmc3Jvb3QubwogCi1jaWZzLSQoQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVH
QUNZKSArPSBzbWIxb3BzLm8KK2NpZnMtJChDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdB
Q1kpICs9IHNtYjFvcHMubyBjaWZzc21iLm8KZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc2FjbC5j
IGIvZnMvY2lmcy9jaWZzYWNsLmMKaW5kZXggYmY4NjFmZWYyZjBjLi5mYTQ4MGQ2MmYzMTMgMTAw
NjQ0Ci0tLSBhL2ZzL2NpZnMvY2lmc2FjbC5jCisrKyBiL2ZzL2NpZnMvY2lmc2FjbC5jCkBAIC0x
Mzc5LDYgKzEzNzksNyBAQCBzdGF0aWMgaW50IGJ1aWxkX3NlY19kZXNjKHN0cnVjdCBjaWZzX250
c2QgKnBudHNkLCBzdHJ1Y3QgY2lmc19udHNkICpwbm50c2QsCiAJcmV0dXJuIHJjOwogfQogCisj
aWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiBzdHJ1Y3QgY2lmc19udHNk
ICpnZXRfY2lmc19hY2xfYnlfZmlkKHN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IsCiAJCQkJ
ICAgICAgY29uc3Qgc3RydWN0IGNpZnNfZmlkICpjaWZzZmlkLCB1MzIgKnBhY2xsZW4sCiAJCQkJ
ICAgICAgdTMyIF9fbWF5YmVfdW51c2VkIHVudXNlZCkKQEAgLTE1MTIsNiArMTUxMyw3IEBAIGlu
dCBzZXRfY2lmc19hY2woc3RydWN0IGNpZnNfbnRzZCAqcG5udHNkLCBfX3UzMiBhY2xsZW4sCiAJ
Y2lmc19wdXRfdGxpbmsodGxpbmspOwogCXJldHVybiByYzsKIH0KKyNlbmRpZiAvKiBDT05GSUdf
Q0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAogLyogVHJhbnNsYXRlIHRoZSBDSUZTIEFD
TCAoc2ltaWxhciB0byBOVEZTIEFDTCkgZm9yIGEgZmlsZSBpbnRvIG1vZGUgYml0cyAqLwogaW50
CmRpZmYgLS1naXQgYS9mcy9jaWZzL2NpZnNwcm90by5oIGIvZnMvY2lmcy9jaWZzcHJvdG8uaApp
bmRleCBkNTlhZWJlZmE3MWMuLmRlMTY3ZTNhZjAxNSAxMDA2NDQKLS0tIGEvZnMvY2lmcy9jaWZz
cHJvdG8uaAorKysgYi9mcy9jaWZzL2NpZnNwcm90by5oCkBAIC01MjEsNiArNTIxLDcgQEAgZXh0
ZXJuIGludCBnZW5lcmF0ZV9zbWIzMHNpZ25pbmdrZXkoc3RydWN0IGNpZnNfc2VzICpzZXMsCiBl
eHRlcm4gaW50IGdlbmVyYXRlX3NtYjMxMXNpZ25pbmdrZXkoc3RydWN0IGNpZnNfc2VzICpzZXMs
CiAJCQkJICAgICBzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpOwogCisjaWZkZWYgQ09O
RklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiBleHRlcm4gaW50IENJRlNTTUJDb3B5KHVu
c2lnbmVkIGludCB4aWQsCiAJCQlzdHJ1Y3QgY2lmc190Y29uICpzb3VyY2VfdGNvbiwKIAkJCWNv
bnN0IGNoYXIgKmZyb21OYW1lLApAQCAtNTUxLDYgKzU1Miw3IEBAIGV4dGVybiBpbnQgQ0lGU1NN
QlNldFBvc2l4QUNMKGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3Rjb24gKnRj
b24sCiAJCWNvbnN0IHN0cnVjdCBubHNfdGFibGUgKm5sc19jb2RlcGFnZSwgaW50IHJlbWFwX3Nw
ZWNpYWxfY2hhcnMpOwogZXh0ZXJuIGludCBDSUZTR2V0RXh0QXR0cihjb25zdCB1bnNpZ25lZCBp
bnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCQkJY29uc3QgaW50IG5ldGZpZCwgX191
NjQgKnBFeHRBdHRyQml0cywgX191NjQgKnBNYXNrKTsKKyNlbmRpZiAvKiBDSUZTX0FMTE9XX0lO
U0VDVVJFX0xFR0FDWSAqLwogZXh0ZXJuIHZvaWQgY2lmc19hdXRvZGlzYWJsZV9zZXJ2ZXJpbm8o
c3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYik7CiBleHRlcm4gYm9vbCBjb3VsZGJlX21mX3N5
bWxpbmsoY29uc3Qgc3RydWN0IGNpZnNfZmF0dHIgKmZhdHRyKTsKIGV4dGVybiBpbnQgY2hlY2tf
bWZfc3ltbGluayh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLApkaWZm
IC0tZ2l0IGEvZnMvY2lmcy9jaWZzc21iLmMgYi9mcy9jaWZzL2NpZnNzbWIuYwppbmRleCAwNGE0
YzMwNGQwMDQuLjI2YjlkMjQzODIyOCAxMDA2NDQKLS0tIGEvZnMvY2lmcy9jaWZzc21iLmMKKysr
IGIvZnMvY2lmcy9jaWZzc21iLmMKQEAgLTI5LDcgKzI5LDYgQEAKICNpbmNsdWRlICJjaWZzcHJv
dG8uaCIKICNpbmNsdWRlICJjaWZzX3VuaWNvZGUuaCIKICNpbmNsdWRlICJjaWZzX2RlYnVnLmgi
Ci0jaW5jbHVkZSAic21iMnByb3RvLmgiCiAjaW5jbHVkZSAiZnNjYWNoZS5oIgogI2luY2x1ZGUg
InNtYmRpcmVjdC5oIgogI2lmZGVmIENPTkZJR19DSUZTX0RGU19VUENBTEwKQEAgLTYyLDUyICs2
MSw2IEBAIHN0YXRpYyBzdHJ1Y3QgewogI2RlZmluZSBDSUZTX05VTV9QUk9UIDEKICNlbmRpZiAv
KiBDSUZTX1BPU0lYICovCiAKLS8qCi0gKiBNYXJrIGFzIGludmFsaWQsIGFsbCBvcGVuIGZpbGVz
IG9uIHRyZWUgY29ubmVjdGlvbnMgc2luY2UgdGhleQotICogd2VyZSBjbG9zZWQgd2hlbiBzZXNz
aW9uIHRvIHNlcnZlciB3YXMgbG9zdC4KLSAqLwotdm9pZAotY2lmc19tYXJrX29wZW5fZmlsZXNf
aW52YWxpZChzdHJ1Y3QgY2lmc190Y29uICp0Y29uKQotewotCXN0cnVjdCBjaWZzRmlsZUluZm8g
Km9wZW5fZmlsZSA9IE5VTEw7Ci0Jc3RydWN0IGxpc3RfaGVhZCAqdG1wOwotCXN0cnVjdCBsaXN0
X2hlYWQgKnRtcDE7Ci0KLQkvKiBvbmx5IHNlbmQgb25jZSBwZXIgY29ubmVjdCAqLwotCXNwaW5f
bG9jaygmdGNvbi0+c2VzLT5zZXNfbG9jayk7Ci0JaWYgKCh0Y29uLT5zZXMtPnNlc19zdGF0dXMg
IT0gU0VTX0dPT0QpIHx8ICh0Y29uLT5zdGF0dXMgIT0gVElEX05FRURfUkVDT04pKSB7Ci0JCXNw
aW5fdW5sb2NrKCZ0Y29uLT5zZXMtPnNlc19sb2NrKTsKLQkJcmV0dXJuOwotCX0KLQl0Y29uLT5z
dGF0dXMgPSBUSURfSU5fRklMRVNfSU5WQUxJREFURTsKLQlzcGluX3VubG9jaygmdGNvbi0+c2Vz
LT5zZXNfbG9jayk7Ci0KLQkvKiBsaXN0IGFsbCBmaWxlcyBvcGVuIG9uIHRyZWUgY29ubmVjdGlv
biBhbmQgbWFyayB0aGVtIGludmFsaWQgKi8KLQlzcGluX2xvY2soJnRjb24tPm9wZW5fZmlsZV9s
b2NrKTsKLQlsaXN0X2Zvcl9lYWNoX3NhZmUodG1wLCB0bXAxLCAmdGNvbi0+b3BlbkZpbGVMaXN0
KSB7Ci0JCW9wZW5fZmlsZSA9IGxpc3RfZW50cnkodG1wLCBzdHJ1Y3QgY2lmc0ZpbGVJbmZvLCB0
bGlzdCk7Ci0JCW9wZW5fZmlsZS0+aW52YWxpZEhhbmRsZSA9IHRydWU7Ci0JCW9wZW5fZmlsZS0+
b3Bsb2NrX2JyZWFrX2NhbmNlbGxlZCA9IHRydWU7Ci0JfQotCXNwaW5fdW5sb2NrKCZ0Y29uLT5v
cGVuX2ZpbGVfbG9jayk7Ci0KLQltdXRleF9sb2NrKCZ0Y29uLT5jcmZpZC5maWRfbXV0ZXgpOwot
CXRjb24tPmNyZmlkLmlzX3ZhbGlkID0gZmFsc2U7Ci0JLyogY2FjaGVkIGhhbmRsZSBpcyBub3Qg
dmFsaWQsIHNvIFNNQjJfQ0xPU0Ugd29uJ3QgYmUgc2VudCBiZWxvdyAqLwotCWNsb3NlX2NhY2hl
ZF9kaXJfbGVhc2VfbG9ja2VkKCZ0Y29uLT5jcmZpZCk7Ci0JbWVtc2V0KHRjb24tPmNyZmlkLmZp
ZCwgMCwgc2l6ZW9mKHN0cnVjdCBjaWZzX2ZpZCkpOwotCW11dGV4X3VubG9jaygmdGNvbi0+Y3Jm
aWQuZmlkX211dGV4KTsKLQotCXNwaW5fbG9jaygmdGNvbi0+dGNfbG9jayk7Ci0JaWYgKHRjb24t
PnN0YXR1cyA9PSBUSURfSU5fRklMRVNfSU5WQUxJREFURSkKLQkJdGNvbi0+c3RhdHVzID0gVElE
X05FRURfVENPTjsKLQlzcGluX3VubG9jaygmdGNvbi0+dGNfbG9jayk7Ci0KLQkvKgotCSAqIEJC
IEFkZCBjYWxsIHRvIGludmFsaWRhdGVfaW5vZGVzKHNiKSBmb3IgYWxsIHN1cGVyYmxvY2tzIG1v
dW50ZWQKLQkgKiB0byB0aGlzIHRjb24uCi0JICovCi19CiAKIC8qIHJlY29ubmVjdCB0aGUgc29j
a2V0LCB0Y29uLCBhbmQgc21iIHNlc3Npb24gaWYgbmVlZGVkICovCiBzdGF0aWMgaW50CkBAIC00
NTcsNTIgKzQxMCw2IEBAIGRlY29kZV9leHRfc2VjX2Jsb2Ioc3RydWN0IGNpZnNfc2VzICpzZXMs
IE5FR09USUFURV9SU1AgKnBTTUJyKQogCXJldHVybiAwOwogfQogCi1pbnQKLWNpZnNfZW5hYmxl
X3NpZ25pbmcoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBib29sIG1udF9zaWduX3Jl
cXVpcmVkKQotewotCWJvb2wgc3J2X3NpZ25fcmVxdWlyZWQgPSBzZXJ2ZXItPnNlY19tb2RlICYg
c2VydmVyLT52YWxzLT5zaWduaW5nX3JlcXVpcmVkOwotCWJvb2wgc3J2X3NpZ25fZW5hYmxlZCA9
IHNlcnZlci0+c2VjX21vZGUgJiBzZXJ2ZXItPnZhbHMtPnNpZ25pbmdfZW5hYmxlZDsKLQlib29s
IG1udF9zaWduX2VuYWJsZWQ7Ci0KLQkvKgotCSAqIElzIHNpZ25pbmcgcmVxdWlyZWQgYnkgbW50
IG9wdGlvbnM/IElmIG5vdCB0aGVuIGNoZWNrCi0JICogZ2xvYmFsX3NlY2ZsYWdzIHRvIHNlZSBp
ZiBpdCBpcyB0aGVyZS4KLQkgKi8KLQlpZiAoIW1udF9zaWduX3JlcXVpcmVkKQotCQltbnRfc2ln
bl9yZXF1aXJlZCA9ICgoZ2xvYmFsX3NlY2ZsYWdzICYgQ0lGU1NFQ19NVVNUX1NJR04pID09Ci0J
CQkJCQlDSUZTU0VDX01VU1RfU0lHTik7Ci0KLQkvKgotCSAqIElmIHNpZ25pbmcgaXMgcmVxdWly
ZWQgdGhlbiBpdCdzIGF1dG9tYXRpY2FsbHkgZW5hYmxlZCB0b28sCi0JICogb3RoZXJ3aXNlLCBj
aGVjayB0byBzZWUgaWYgdGhlIHNlY2ZsYWdzIGFsbG93IGl0LgotCSAqLwotCW1udF9zaWduX2Vu
YWJsZWQgPSBtbnRfc2lnbl9yZXF1aXJlZCA/IG1udF9zaWduX3JlcXVpcmVkIDoKLQkJCQkoZ2xv
YmFsX3NlY2ZsYWdzICYgQ0lGU1NFQ19NQVlfU0lHTik7Ci0KLQkvKiBJZiBzZXJ2ZXIgcmVxdWly
ZXMgc2lnbmluZywgZG9lcyBjbGllbnQgYWxsb3cgaXQ/ICovCi0JaWYgKHNydl9zaWduX3JlcXVp
cmVkKSB7Ci0JCWlmICghbW50X3NpZ25fZW5hYmxlZCkgewotCQkJY2lmc19kYmcoVkZTLCAiU2Vy
dmVyIHJlcXVpcmVzIHNpZ25pbmcsIGJ1dCBpdCdzIGRpc2FibGVkIGluIFNlY3VyaXR5RmxhZ3Mh
XG4iKTsKLQkJCXJldHVybiAtRU5PVFNVUFA7Ci0JCX0KLQkJc2VydmVyLT5zaWduID0gdHJ1ZTsK
LQl9Ci0KLQkvKiBJZiBjbGllbnQgcmVxdWlyZXMgc2lnbmluZywgZG9lcyBzZXJ2ZXIgYWxsb3cg
aXQ/ICovCi0JaWYgKG1udF9zaWduX3JlcXVpcmVkKSB7Ci0JCWlmICghc3J2X3NpZ25fZW5hYmxl
ZCkgewotCQkJY2lmc19kYmcoVkZTLCAiU2VydmVyIGRvZXMgbm90IHN1cHBvcnQgc2lnbmluZyFc
biIpOwotCQkJcmV0dXJuIC1FTk9UU1VQUDsKLQkJfQotCQlzZXJ2ZXItPnNpZ24gPSB0cnVlOwot
CX0KLQotCWlmIChjaWZzX3JkbWFfZW5hYmxlZChzZXJ2ZXIpICYmIHNlcnZlci0+c2lnbikKLQkJ
Y2lmc19kYmcoVkZTLCAiU2lnbmluZyBpcyBlbmFibGVkLCBhbmQgUkRNQSByZWFkL3dyaXRlIHdp
bGwgYmUgZGlzYWJsZWRcbiIpOwotCi0JcmV0dXJuIDA7Ci19Ci0KIHN0YXRpYyBib29sCiBzaG91
bGRfc2V0X2V4dF9zZWNfZmxhZyhlbnVtIHNlY3VyaXR5RW51bSBzZWN0eXBlKQogewpAQCAtMTM3
OSwxODQgKzEyODYsNiBAQCBDSUZTX29wZW4oY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0
IGNpZnNfb3Blbl9wYXJtcyAqb3Bhcm1zLCBpbnQgKm9wbG9jaywKIAlyZXR1cm4gcmM7CiB9CiAK
LS8qCi0gKiBEaXNjYXJkIGFueSByZW1haW5pbmcgZGF0YSBpbiB0aGUgY3VycmVudCBTTUIuIFRv
IGRvIHRoaXMsIHdlIGJvcnJvdyB0aGUKLSAqIGN1cnJlbnQgYmlnYnVmLgotICovCi1pbnQKLWNp
ZnNfZGlzY2FyZF9yZW1haW5pbmdfZGF0YShzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIp
Ci17Ci0JdW5zaWduZWQgaW50IHJmY2xlbiA9IHNlcnZlci0+cGR1X3NpemU7Ci0JaW50IHJlbWFp
bmluZyA9IHJmY2xlbiArIHNlcnZlci0+dmFscy0+aGVhZGVyX3ByZWFtYmxlX3NpemUgLQotCQlz
ZXJ2ZXItPnRvdGFsX3JlYWQ7Ci0KLQl3aGlsZSAocmVtYWluaW5nID4gMCkgewotCQlpbnQgbGVu
Z3RoOwotCi0JCWxlbmd0aCA9IGNpZnNfZGlzY2FyZF9mcm9tX3NvY2tldChzZXJ2ZXIsCi0JCQkJ
bWluX3Qoc2l6ZV90LCByZW1haW5pbmcsCi0JCQkJICAgICAgQ0lGU01heEJ1ZlNpemUgKyBNQVhf
SEVBREVSX1NJWkUoc2VydmVyKSkpOwotCQlpZiAobGVuZ3RoIDwgMCkKLQkJCXJldHVybiBsZW5n
dGg7Ci0JCXNlcnZlci0+dG90YWxfcmVhZCArPSBsZW5ndGg7Ci0JCXJlbWFpbmluZyAtPSBsZW5n
dGg7Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQKLV9fY2lmc19yZWFkdl9kaXNj
YXJkKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IG1pZF9xX2VudHJ5ICpt
aWQsCi0JCSAgICAgYm9vbCBtYWxmb3JtZWQpCi17Ci0JaW50IGxlbmd0aDsKLQotCWxlbmd0aCA9
IGNpZnNfZGlzY2FyZF9yZW1haW5pbmdfZGF0YShzZXJ2ZXIpOwotCWRlcXVldWVfbWlkKG1pZCwg
bWFsZm9ybWVkKTsKLQltaWQtPnJlc3BfYnVmID0gc2VydmVyLT5zbWFsbGJ1ZjsKLQlzZXJ2ZXIt
PnNtYWxsYnVmID0gTlVMTDsKLQlyZXR1cm4gbGVuZ3RoOwotfQotCi1zdGF0aWMgaW50Ci1jaWZz
X3JlYWR2X2Rpc2NhcmQoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3QgbWlk
X3FfZW50cnkgKm1pZCkKLXsKLQlzdHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEgPSBtaWQtPmNh
bGxiYWNrX2RhdGE7Ci0KLQlyZXR1cm4gIF9fY2lmc19yZWFkdl9kaXNjYXJkKHNlcnZlciwgbWlk
LCByZGF0YS0+cmVzdWx0KTsKLX0KLQotaW50Ci1jaWZzX3JlYWR2X3JlY2VpdmUoc3RydWN0IFRD
UF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKLXsKLQlpbnQg
bGVuZ3RoLCBsZW47Ci0JdW5zaWduZWQgaW50IGRhdGFfb2Zmc2V0LCBkYXRhX2xlbjsKLQlzdHJ1
Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEgPSBtaWQtPmNhbGxiYWNrX2RhdGE7Ci0JY2hhciAqYnVm
ID0gc2VydmVyLT5zbWFsbGJ1ZjsKLQl1bnNpZ25lZCBpbnQgYnVmbGVuID0gc2VydmVyLT5wZHVf
c2l6ZSArCi0JCXNlcnZlci0+dmFscy0+aGVhZGVyX3ByZWFtYmxlX3NpemU7Ci0JYm9vbCB1c2Vf
cmRtYV9tciA9IGZhbHNlOwotCi0JY2lmc19kYmcoRllJLCAiJXM6IG1pZD0lbGx1IG9mZnNldD0l
bGx1IGJ5dGVzPSV1XG4iLAotCQkgX19mdW5jX18sIG1pZC0+bWlkLCByZGF0YS0+b2Zmc2V0LCBy
ZGF0YS0+Ynl0ZXMpOwotCi0JLyoKLQkgKiByZWFkIHRoZSByZXN0IG9mIFJFQURfUlNQIGhlYWRl
ciAoc2FucyBEYXRhIGFycmF5KSwgb3Igd2hhdGV2ZXIgd2UKLQkgKiBjYW4gaWYgdGhlcmUncyBu
b3QgZW5vdWdoIGRhdGEuIEF0IHRoaXMgcG9pbnQsIHdlJ3ZlIHJlYWQgZG93biB0bwotCSAqIHRo
ZSBNaWQuCi0JICovCi0JbGVuID0gbWluX3QodW5zaWduZWQgaW50LCBidWZsZW4sIHNlcnZlci0+
dmFscy0+cmVhZF9yc3Bfc2l6ZSkgLQotCQkJCQkJCUhFQURFUl9TSVpFKHNlcnZlcikgKyAxOwot
Ci0JbGVuZ3RoID0gY2lmc19yZWFkX2Zyb21fc29ja2V0KHNlcnZlciwKLQkJCQkgICAgICAgYnVm
ICsgSEVBREVSX1NJWkUoc2VydmVyKSAtIDEsIGxlbik7Ci0JaWYgKGxlbmd0aCA8IDApCi0JCXJl
dHVybiBsZW5ndGg7Ci0Jc2VydmVyLT50b3RhbF9yZWFkICs9IGxlbmd0aDsKLQotCWlmIChzZXJ2
ZXItPm9wcy0+aXNfc2Vzc2lvbl9leHBpcmVkICYmCi0JICAgIHNlcnZlci0+b3BzLT5pc19zZXNz
aW9uX2V4cGlyZWQoYnVmKSkgewotCQljaWZzX3JlY29ubmVjdChzZXJ2ZXIsIHRydWUpOwotCQly
ZXR1cm4gLTE7Ci0JfQotCi0JaWYgKHNlcnZlci0+b3BzLT5pc19zdGF0dXNfcGVuZGluZyAmJgot
CSAgICBzZXJ2ZXItPm9wcy0+aXNfc3RhdHVzX3BlbmRpbmcoYnVmLCBzZXJ2ZXIpKSB7Ci0JCWNp
ZnNfZGlzY2FyZF9yZW1haW5pbmdfZGF0YShzZXJ2ZXIpOwotCQlyZXR1cm4gLTE7Ci0JfQotCi0J
Lyogc2V0IHVwIGZpcnN0IHR3byBpb3YgZm9yIHNpZ25hdHVyZSBjaGVjayBhbmQgdG8gZ2V0IGNy
ZWRpdHMgKi8KLQlyZGF0YS0+aW92WzBdLmlvdl9iYXNlID0gYnVmOwotCXJkYXRhLT5pb3ZbMF0u
aW92X2xlbiA9IHNlcnZlci0+dmFscy0+aGVhZGVyX3ByZWFtYmxlX3NpemU7Ci0JcmRhdGEtPmlv
dlsxXS5pb3ZfYmFzZSA9IGJ1ZiArIHNlcnZlci0+dmFscy0+aGVhZGVyX3ByZWFtYmxlX3NpemU7
Ci0JcmRhdGEtPmlvdlsxXS5pb3ZfbGVuID0KLQkJc2VydmVyLT50b3RhbF9yZWFkIC0gc2VydmVy
LT52YWxzLT5oZWFkZXJfcHJlYW1ibGVfc2l6ZTsKLQljaWZzX2RiZyhGWUksICIwOiBpb3ZfYmFz
ZT0lcCBpb3ZfbGVuPSV6dVxuIiwKLQkJIHJkYXRhLT5pb3ZbMF0uaW92X2Jhc2UsIHJkYXRhLT5p
b3ZbMF0uaW92X2xlbik7Ci0JY2lmc19kYmcoRllJLCAiMTogaW92X2Jhc2U9JXAgaW92X2xlbj0l
enVcbiIsCi0JCSByZGF0YS0+aW92WzFdLmlvdl9iYXNlLCByZGF0YS0+aW92WzFdLmlvdl9sZW4p
OwotCi0JLyogV2FzIHRoZSBTTUIgcmVhZCBzdWNjZXNzZnVsPyAqLwotCXJkYXRhLT5yZXN1bHQg
PSBzZXJ2ZXItPm9wcy0+bWFwX2Vycm9yKGJ1ZiwgZmFsc2UpOwotCWlmIChyZGF0YS0+cmVzdWx0
ICE9IDApIHsKLQkJY2lmc19kYmcoRllJLCAiJXM6IHNlcnZlciByZXR1cm5lZCBlcnJvciAlZFxu
IiwKLQkJCSBfX2Z1bmNfXywgcmRhdGEtPnJlc3VsdCk7Ci0JCS8qIG5vcm1hbCBlcnJvciBvbiBy
ZWFkIHJlc3BvbnNlICovCi0JCXJldHVybiBfX2NpZnNfcmVhZHZfZGlzY2FyZChzZXJ2ZXIsIG1p
ZCwgZmFsc2UpOwotCX0KLQotCS8qIElzIHRoZXJlIGVub3VnaCB0byBnZXQgdG8gdGhlIHJlc3Qg
b2YgdGhlIFJFQURfUlNQIGhlYWRlcj8gKi8KLQlpZiAoc2VydmVyLT50b3RhbF9yZWFkIDwgc2Vy
dmVyLT52YWxzLT5yZWFkX3JzcF9zaXplKSB7Ci0JCWNpZnNfZGJnKEZZSSwgIiVzOiBzZXJ2ZXIg
cmV0dXJuZWQgc2hvcnQgaGVhZGVyLiBnb3Q9JXUgZXhwZWN0ZWQ9JXp1XG4iLAotCQkJIF9fZnVu
Y19fLCBzZXJ2ZXItPnRvdGFsX3JlYWQsCi0JCQkgc2VydmVyLT52YWxzLT5yZWFkX3JzcF9zaXpl
KTsKLQkJcmRhdGEtPnJlc3VsdCA9IC1FSU87Ci0JCXJldHVybiBjaWZzX3JlYWR2X2Rpc2NhcmQo
c2VydmVyLCBtaWQpOwotCX0KLQotCWRhdGFfb2Zmc2V0ID0gc2VydmVyLT5vcHMtPnJlYWRfZGF0
YV9vZmZzZXQoYnVmKSArCi0JCXNlcnZlci0+dmFscy0+aGVhZGVyX3ByZWFtYmxlX3NpemU7Ci0J
aWYgKGRhdGFfb2Zmc2V0IDwgc2VydmVyLT50b3RhbF9yZWFkKSB7Ci0JCS8qCi0JCSAqIHdpbjJr
OCBzb21ldGltZXMgc2VuZHMgYW4gb2Zmc2V0IG9mIDAgd2hlbiB0aGUgcmVhZAotCQkgKiBpcyBi
ZXlvbmQgdGhlIEVPRi4gVHJlYXQgaXQgYXMgaWYgdGhlIGRhdGEgc3RhcnRzIGp1c3QgYWZ0ZXIK
LQkJICogdGhlIGhlYWRlci4KLQkJICovCi0JCWNpZnNfZGJnKEZZSSwgIiVzOiBkYXRhIG9mZnNl
dCAoJXUpIGluc2lkZSByZWFkIHJlc3BvbnNlIGhlYWRlclxuIiwKLQkJCSBfX2Z1bmNfXywgZGF0
YV9vZmZzZXQpOwotCQlkYXRhX29mZnNldCA9IHNlcnZlci0+dG90YWxfcmVhZDsKLQl9IGVsc2Ug
aWYgKGRhdGFfb2Zmc2V0ID4gTUFYX0NJRlNfU01BTExfQlVGRkVSX1NJWkUpIHsKLQkJLyogZGF0
YV9vZmZzZXQgaXMgYmV5b25kIHRoZSBlbmQgb2Ygc21hbGxidWYgKi8KLQkJY2lmc19kYmcoRllJ
LCAiJXM6IGRhdGEgb2Zmc2V0ICgldSkgYmV5b25kIGVuZCBvZiBzbWFsbGJ1ZlxuIiwKLQkJCSBf
X2Z1bmNfXywgZGF0YV9vZmZzZXQpOwotCQlyZGF0YS0+cmVzdWx0ID0gLUVJTzsKLQkJcmV0dXJu
IGNpZnNfcmVhZHZfZGlzY2FyZChzZXJ2ZXIsIG1pZCk7Ci0JfQotCi0JY2lmc19kYmcoRllJLCAi
JXM6IHRvdGFsX3JlYWQ9JXUgZGF0YV9vZmZzZXQ9JXVcbiIsCi0JCSBfX2Z1bmNfXywgc2VydmVy
LT50b3RhbF9yZWFkLCBkYXRhX29mZnNldCk7Ci0KLQlsZW4gPSBkYXRhX29mZnNldCAtIHNlcnZl
ci0+dG90YWxfcmVhZDsKLQlpZiAobGVuID4gMCkgewotCQkvKiByZWFkIGFueSBqdW5rIGJlZm9y
ZSBkYXRhIGludG8gdGhlIHJlc3Qgb2Ygc21hbGxidWYgKi8KLQkJbGVuZ3RoID0gY2lmc19yZWFk
X2Zyb21fc29ja2V0KHNlcnZlciwKLQkJCQkJICAgICAgIGJ1ZiArIHNlcnZlci0+dG90YWxfcmVh
ZCwgbGVuKTsKLQkJaWYgKGxlbmd0aCA8IDApCi0JCQlyZXR1cm4gbGVuZ3RoOwotCQlzZXJ2ZXIt
PnRvdGFsX3JlYWQgKz0gbGVuZ3RoOwotCX0KLQotCS8qIGhvdyBtdWNoIGRhdGEgaXMgaW4gdGhl
IHJlc3BvbnNlPyAqLwotI2lmZGVmIENPTkZJR19DSUZTX1NNQl9ESVJFQ1QKLQl1c2VfcmRtYV9t
ciA9IHJkYXRhLT5tcjsKLSNlbmRpZgotCWRhdGFfbGVuID0gc2VydmVyLT5vcHMtPnJlYWRfZGF0
YV9sZW5ndGgoYnVmLCB1c2VfcmRtYV9tcik7Ci0JaWYgKCF1c2VfcmRtYV9tciAmJiAoZGF0YV9v
ZmZzZXQgKyBkYXRhX2xlbiA+IGJ1ZmxlbikpIHsKLQkJLyogZGF0YV9sZW4gaXMgY29ycnVwdCAt
LSBkaXNjYXJkIGZyYW1lICovCi0JCXJkYXRhLT5yZXN1bHQgPSAtRUlPOwotCQlyZXR1cm4gY2lm
c19yZWFkdl9kaXNjYXJkKHNlcnZlciwgbWlkKTsKLQl9Ci0KLQlsZW5ndGggPSByZGF0YS0+cmVh
ZF9pbnRvX3BhZ2VzKHNlcnZlciwgcmRhdGEsIGRhdGFfbGVuKTsKLQlpZiAobGVuZ3RoIDwgMCkK
LQkJcmV0dXJuIGxlbmd0aDsKLQotCXNlcnZlci0+dG90YWxfcmVhZCArPSBsZW5ndGg7Ci0KLQlj
aWZzX2RiZyhGWUksICJ0b3RhbF9yZWFkPSV1IGJ1Zmxlbj0ldSByZW1haW5pbmc9JXVcbiIsCi0J
CSBzZXJ2ZXItPnRvdGFsX3JlYWQsIGJ1ZmxlbiwgZGF0YV9sZW4pOwotCi0JLyogZGlzY2FyZCBh
bnl0aGluZyBsZWZ0IG92ZXIgKi8KLQlpZiAoc2VydmVyLT50b3RhbF9yZWFkIDwgYnVmbGVuKQot
CQlyZXR1cm4gY2lmc19yZWFkdl9kaXNjYXJkKHNlcnZlciwgbWlkKTsKLQotCWRlcXVldWVfbWlk
KG1pZCwgZmFsc2UpOwotCW1pZC0+cmVzcF9idWYgPSBzZXJ2ZXItPnNtYWxsYnVmOwotCXNlcnZl
ci0+c21hbGxidWYgPSBOVUxMOwotCXJldHVybiBsZW5ndGg7Ci19Ci0KIHN0YXRpYyB2b2lkCiBj
aWZzX3JlYWR2X2NhbGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogewpAQCAtMTkwOSwx
ODMgKzE2MzgsNiBAQCBDSUZTU01CV3JpdGUoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0
IGNpZnNfaW9fcGFybXMgKmlvX3Bhcm1zLAogCXJldHVybiByYzsKIH0KIAotdm9pZAotY2lmc193
cml0ZWRhdGFfcmVsZWFzZShzdHJ1Y3Qga3JlZiAqcmVmY291bnQpCi17Ci0Jc3RydWN0IGNpZnNf
d3JpdGVkYXRhICp3ZGF0YSA9IGNvbnRhaW5lcl9vZihyZWZjb3VudCwKLQkJCQkJc3RydWN0IGNp
ZnNfd3JpdGVkYXRhLCByZWZjb3VudCk7Ci0jaWZkZWYgQ09ORklHX0NJRlNfU01CX0RJUkVDVAot
CWlmICh3ZGF0YS0+bXIpIHsKLQkJc21iZF9kZXJlZ2lzdGVyX21yKHdkYXRhLT5tcik7Ci0JCXdk
YXRhLT5tciA9IE5VTEw7Ci0JfQotI2VuZGlmCi0KLQlpZiAod2RhdGEtPmNmaWxlKQotCQljaWZz
RmlsZUluZm9fcHV0KHdkYXRhLT5jZmlsZSk7Ci0KLQlrdmZyZWUod2RhdGEtPnBhZ2VzKTsKLQlr
ZnJlZSh3ZGF0YSk7Ci19Ci0KLS8qCi0gKiBXcml0ZSBmYWlsZWQgd2l0aCBhIHJldHJ5YWJsZSBl
cnJvci4gUmVzZW5kIHRoZSB3cml0ZSByZXF1ZXN0LiBJdCdzIGFsc28KLSAqIHBvc3NpYmxlIHRo
YXQgdGhlIHBhZ2Ugd2FzIHJlZGlydGllZCBzbyByZS1jbGVhbiB0aGUgcGFnZS4KLSAqLwotc3Rh
dGljIHZvaWQKLWNpZnNfd3JpdGV2X3JlcXVldWUoc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0
YSkKLXsKLQlpbnQgaSwgcmMgPSAwOwotCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBkX2lub2RlKHdk
YXRhLT5jZmlsZS0+ZGVudHJ5KTsKLQlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXI7Ci0J
dW5zaWduZWQgaW50IHJlc3RfbGVuOwotCi0Jc2VydmVyID0gdGxpbmtfdGNvbih3ZGF0YS0+Y2Zp
bGUtPnRsaW5rKS0+c2VzLT5zZXJ2ZXI7Ci0JaSA9IDA7Ci0JcmVzdF9sZW4gPSB3ZGF0YS0+Ynl0
ZXM7Ci0JZG8gewotCQlzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhMjsKLQkJdW5zaWduZWQg
aW50IGosIG5yX3BhZ2VzLCB3c2l6ZSwgdGFpbHN6LCBjdXJfbGVuOwotCi0JCXdzaXplID0gc2Vy
dmVyLT5vcHMtPndwX3JldHJ5X3NpemUoaW5vZGUpOwotCQlpZiAod3NpemUgPCByZXN0X2xlbikg
ewotCQkJbnJfcGFnZXMgPSB3c2l6ZSAvIFBBR0VfU0laRTsKLQkJCWlmICghbnJfcGFnZXMpIHsK
LQkJCQlyYyA9IC1FTk9UU1VQUDsKLQkJCQlicmVhazsKLQkJCX0KLQkJCWN1cl9sZW4gPSBucl9w
YWdlcyAqIFBBR0VfU0laRTsKLQkJCXRhaWxzeiA9IFBBR0VfU0laRTsKLQkJfSBlbHNlIHsKLQkJ
CW5yX3BhZ2VzID0gRElWX1JPVU5EX1VQKHJlc3RfbGVuLCBQQUdFX1NJWkUpOwotCQkJY3VyX2xl
biA9IHJlc3RfbGVuOwotCQkJdGFpbHN6ID0gcmVzdF9sZW4gLSAobnJfcGFnZXMgLSAxKSAqIFBB
R0VfU0laRTsKLQkJfQotCi0JCXdkYXRhMiA9IGNpZnNfd3JpdGVkYXRhX2FsbG9jKG5yX3BhZ2Vz
LCBjaWZzX3dyaXRldl9jb21wbGV0ZSk7Ci0JCWlmICghd2RhdGEyKSB7Ci0JCQlyYyA9IC1FTk9N
RU07Ci0JCQlicmVhazsKLQkJfQotCi0JCWZvciAoaiA9IDA7IGogPCBucl9wYWdlczsgaisrKSB7
Ci0JCQl3ZGF0YTItPnBhZ2VzW2pdID0gd2RhdGEtPnBhZ2VzW2kgKyBqXTsKLQkJCWxvY2tfcGFn
ZSh3ZGF0YTItPnBhZ2VzW2pdKTsKLQkJCWNsZWFyX3BhZ2VfZGlydHlfZm9yX2lvKHdkYXRhMi0+
cGFnZXNbal0pOwotCQl9Ci0KLQkJd2RhdGEyLT5zeW5jX21vZGUgPSB3ZGF0YS0+c3luY19tb2Rl
OwotCQl3ZGF0YTItPm5yX3BhZ2VzID0gbnJfcGFnZXM7Ci0JCXdkYXRhMi0+b2Zmc2V0ID0gcGFn
ZV9vZmZzZXQod2RhdGEyLT5wYWdlc1swXSk7Ci0JCXdkYXRhMi0+cGFnZXN6ID0gUEFHRV9TSVpF
OwotCQl3ZGF0YTItPnRhaWxzeiA9IHRhaWxzejsKLQkJd2RhdGEyLT5ieXRlcyA9IGN1cl9sZW47
Ci0KLQkJcmMgPSBjaWZzX2dldF93cml0YWJsZV9maWxlKENJRlNfSShpbm9kZSksIEZJTkRfV1Jf
QU5ZLAotCQkJCQkgICAgJndkYXRhMi0+Y2ZpbGUpOwotCQlpZiAoIXdkYXRhMi0+Y2ZpbGUpIHsK
LQkJCWNpZnNfZGJnKFZGUywgIk5vIHdyaXRhYmxlIGhhbmRsZSB0byByZXRyeSB3cml0ZXBhZ2Vz
IHJjPSVkXG4iLAotCQkJCSByYyk7Ci0JCQlpZiAoIWlzX3JldHJ5YWJsZV9lcnJvcihyYykpCi0J
CQkJcmMgPSAtRUJBREY7Ci0JCX0gZWxzZSB7Ci0JCQl3ZGF0YTItPnBpZCA9IHdkYXRhMi0+Y2Zp
bGUtPnBpZDsKLQkJCXJjID0gc2VydmVyLT5vcHMtPmFzeW5jX3dyaXRldih3ZGF0YTIsCi0JCQkJ
CQkgICAgICAgY2lmc193cml0ZWRhdGFfcmVsZWFzZSk7Ci0JCX0KLQotCQlmb3IgKGogPSAwOyBq
IDwgbnJfcGFnZXM7IGorKykgewotCQkJdW5sb2NrX3BhZ2Uod2RhdGEyLT5wYWdlc1tqXSk7Ci0J
CQlpZiAocmMgIT0gMCAmJiAhaXNfcmV0cnlhYmxlX2Vycm9yKHJjKSkgewotCQkJCVNldFBhZ2VF
cnJvcih3ZGF0YTItPnBhZ2VzW2pdKTsKLQkJCQllbmRfcGFnZV93cml0ZWJhY2sod2RhdGEyLT5w
YWdlc1tqXSk7Ci0JCQkJcHV0X3BhZ2Uod2RhdGEyLT5wYWdlc1tqXSk7Ci0JCQl9Ci0JCX0KLQot
CQlrcmVmX3B1dCgmd2RhdGEyLT5yZWZjb3VudCwgY2lmc193cml0ZWRhdGFfcmVsZWFzZSk7Ci0J
CWlmIChyYykgewotCQkJaWYgKGlzX3JldHJ5YWJsZV9lcnJvcihyYykpCi0JCQkJY29udGludWU7
Ci0JCQlpICs9IG5yX3BhZ2VzOwotCQkJYnJlYWs7Ci0JCX0KLQotCQlyZXN0X2xlbiAtPSBjdXJf
bGVuOwotCQlpICs9IG5yX3BhZ2VzOwotCX0gd2hpbGUgKGkgPCB3ZGF0YS0+bnJfcGFnZXMpOwot
Ci0JLyogY2xlYW51cCByZW1haW5pbmcgcGFnZXMgZnJvbSB0aGUgb3JpZ2luYWwgd2RhdGEgKi8K
LQlmb3IgKDsgaSA8IHdkYXRhLT5ucl9wYWdlczsgaSsrKSB7Ci0JCVNldFBhZ2VFcnJvcih3ZGF0
YS0+cGFnZXNbaV0pOwotCQllbmRfcGFnZV93cml0ZWJhY2sod2RhdGEtPnBhZ2VzW2ldKTsKLQkJ
cHV0X3BhZ2Uod2RhdGEtPnBhZ2VzW2ldKTsKLQl9Ci0KLQlpZiAocmMgIT0gMCAmJiAhaXNfcmV0
cnlhYmxlX2Vycm9yKHJjKSkKLQkJbWFwcGluZ19zZXRfZXJyb3IoaW5vZGUtPmlfbWFwcGluZywg
cmMpOwotCWtyZWZfcHV0KCZ3ZGF0YS0+cmVmY291bnQsIGNpZnNfd3JpdGVkYXRhX3JlbGVhc2Up
OwotfQotCi12b2lkCi1jaWZzX3dyaXRldl9jb21wbGV0ZShzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndv
cmspCi17Ci0Jc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YSA9IGNvbnRhaW5lcl9vZih3b3Jr
LAotCQkJCQkJc3RydWN0IGNpZnNfd3JpdGVkYXRhLCB3b3JrKTsKLQlzdHJ1Y3QgaW5vZGUgKmlu
b2RlID0gZF9pbm9kZSh3ZGF0YS0+Y2ZpbGUtPmRlbnRyeSk7Ci0JaW50IGkgPSAwOwotCi0JaWYg
KHdkYXRhLT5yZXN1bHQgPT0gMCkgewotCQlzcGluX2xvY2soJmlub2RlLT5pX2xvY2spOwotCQlj
aWZzX3VwZGF0ZV9lb2YoQ0lGU19JKGlub2RlKSwgd2RhdGEtPm9mZnNldCwgd2RhdGEtPmJ5dGVz
KTsKLQkJc3Bpbl91bmxvY2soJmlub2RlLT5pX2xvY2spOwotCQljaWZzX3N0YXRzX2J5dGVzX3dy
aXR0ZW4odGxpbmtfdGNvbih3ZGF0YS0+Y2ZpbGUtPnRsaW5rKSwKLQkJCQkJIHdkYXRhLT5ieXRl
cyk7Ci0JfSBlbHNlIGlmICh3ZGF0YS0+c3luY19tb2RlID09IFdCX1NZTkNfQUxMICYmIHdkYXRh
LT5yZXN1bHQgPT0gLUVBR0FJTikKLQkJcmV0dXJuIGNpZnNfd3JpdGV2X3JlcXVldWUod2RhdGEp
OwotCi0JZm9yIChpID0gMDsgaSA8IHdkYXRhLT5ucl9wYWdlczsgaSsrKSB7Ci0JCXN0cnVjdCBw
YWdlICpwYWdlID0gd2RhdGEtPnBhZ2VzW2ldOwotCQlpZiAod2RhdGEtPnJlc3VsdCA9PSAtRUFH
QUlOKQotCQkJX19zZXRfcGFnZV9kaXJ0eV9ub2J1ZmZlcnMocGFnZSk7Ci0JCWVsc2UgaWYgKHdk
YXRhLT5yZXN1bHQgPCAwKQotCQkJU2V0UGFnZUVycm9yKHBhZ2UpOwotCQllbmRfcGFnZV93cml0
ZWJhY2socGFnZSk7Ci0JCWNpZnNfcmVhZHBhZ2VfdG9fZnNjYWNoZShpbm9kZSwgcGFnZSk7Ci0J
CXB1dF9wYWdlKHBhZ2UpOwotCX0KLQlpZiAod2RhdGEtPnJlc3VsdCAhPSAtRUFHQUlOKQotCQlt
YXBwaW5nX3NldF9lcnJvcihpbm9kZS0+aV9tYXBwaW5nLCB3ZGF0YS0+cmVzdWx0KTsKLQlrcmVm
X3B1dCgmd2RhdGEtPnJlZmNvdW50LCBjaWZzX3dyaXRlZGF0YV9yZWxlYXNlKTsKLX0KLQotc3Ry
dWN0IGNpZnNfd3JpdGVkYXRhICoKLWNpZnNfd3JpdGVkYXRhX2FsbG9jKHVuc2lnbmVkIGludCBu
cl9wYWdlcywgd29ya19mdW5jX3QgY29tcGxldGUpCi17Ci0Jc3RydWN0IHBhZ2UgKipwYWdlcyA9
Ci0JCWtjYWxsb2MobnJfcGFnZXMsIHNpemVvZihzdHJ1Y3QgcGFnZSAqKSwgR0ZQX05PRlMpOwot
CWlmIChwYWdlcykKLQkJcmV0dXJuIGNpZnNfd3JpdGVkYXRhX2RpcmVjdF9hbGxvYyhwYWdlcywg
Y29tcGxldGUpOwotCi0JcmV0dXJuIE5VTEw7Ci19Ci0KLXN0cnVjdCBjaWZzX3dyaXRlZGF0YSAq
Ci1jaWZzX3dyaXRlZGF0YV9kaXJlY3RfYWxsb2Moc3RydWN0IHBhZ2UgKipwYWdlcywgd29ya19m
dW5jX3QgY29tcGxldGUpCi17Ci0Jc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YTsKLQotCXdk
YXRhID0ga3phbGxvYyhzaXplb2YoKndkYXRhKSwgR0ZQX05PRlMpOwotCWlmICh3ZGF0YSAhPSBO
VUxMKSB7Ci0JCXdkYXRhLT5wYWdlcyA9IHBhZ2VzOwotCQlrcmVmX2luaXQoJndkYXRhLT5yZWZj
b3VudCk7Ci0JCUlOSVRfTElTVF9IRUFEKCZ3ZGF0YS0+bGlzdCk7Ci0JCWluaXRfY29tcGxldGlv
bigmd2RhdGEtPmRvbmUpOwotCQlJTklUX1dPUksoJndkYXRhLT53b3JrLCBjb21wbGV0ZSk7Ci0J
fQotCXJldHVybiB3ZGF0YTsKLX0KLQogLyoKICAqIENoZWNrIHRoZSBtaWRfc3RhdGUgYW5kIHNp
Z25hdHVyZSBvbiByZWNlaXZlZCBidWZmZXIgKGlmIGFueSksIGFuZCBxdWV1ZSB0aGUKICAqIHdv
cmtxdWV1ZSBjb21wbGV0aW9uIHRhc2suCkBAIC0zNjYwLDcgKzMyMTIsNiBAQCBDSUZTU01CU2V0
UG9zaXhBQ0woY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwK
IAlyZXR1cm4gcmM7CiB9CiAKLS8qIEJCIGZpeCB0YWJzIGluIHRoaXMgZnVuY3Rpb24gRklYTUUg
QkIgKi8KIGludAogQ0lGU0dldEV4dEF0dHIoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0
IGNpZnNfdGNvbiAqdGNvbiwKIAkgICAgICAgY29uc3QgaW50IG5ldGZpZCwgX191NjQgKnBFeHRB
dHRyQml0cywgX191NjQgKnBNYXNrKQpAQCAtMzY3Nyw3ICszMjI4LDcgQEAgQ0lGU0dldEV4dEF0
dHIoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKIAogR2V0
RXh0QXR0clJldHJ5OgogCXJjID0gc21iX2luaXQoU01CX0NPTV9UUkFOU0FDVElPTjIsIDE1LCB0
Y29uLCAodm9pZCAqKikgJnBTTUIsCi0JCQkodm9pZCAqKikgJnBTTUJyKTsKKwkJICAgICAgKHZv
aWQgKiopICZwU01Ccik7CiAJaWYgKHJjKQogCQlyZXR1cm4gcmM7CiAKQEAgLTM3MjMsNyArMzI3
NCw3IEBAIENJRlNHZXRFeHRBdHRyKGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZz
X3Rjb24gKnRjb24sCiAJCQlfX3UxNiBkYXRhX29mZnNldCA9IGxlMTZfdG9fY3B1KHBTTUJyLT50
Mi5EYXRhT2Zmc2V0KTsKIAkJCV9fdTE2IGNvdW50ID0gbGUxNl90b19jcHUocFNNQnItPnQyLkRh
dGFDb3VudCk7CiAJCQlzdHJ1Y3QgZmlsZV9jaGF0dHJfaW5mbyAqcGZpbmZvOwotCQkJLyogQkIg
RG8gd2UgbmVlZCBhIGNhc3Qgb3IgaGFzaCBoZXJlID8gKi8KKwogCQkJaWYgKGNvdW50ICE9IDE2
KSB7CiAJCQkJY2lmc19kYmcoRllJLCAiSW52YWxpZCBzaXplIHJldCBpbiBHZXRFeHRBdHRyXG4i
KTsKIAkJCQlyYyA9IC1FSU87CmRpZmYgLS1naXQgYS9mcy9jaWZzL2Nvbm5lY3QuYyBiL2ZzL2Np
ZnMvY29ubmVjdC5jCmluZGV4IDEzNjIyMTBmM2VjZS4uYWJiNjVkZDc0NzFmIDEwMDY0NAotLS0g
YS9mcy9jaWZzL2Nvbm5lY3QuYworKysgYi9mcy9jaWZzL2Nvbm5lY3QuYwpAQCAtODk4LDYgKzg5
OCw1MyBAQCBoYW5kbGVfbWlkKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkLCBzdHJ1Y3QgVENQX1Nl
cnZlcl9JbmZvICpzZXJ2ZXIsCiAJZGVxdWV1ZV9taWQobWlkLCBtYWxmb3JtZWQpOwogfQogCitp
bnQKK2NpZnNfZW5hYmxlX3NpZ25pbmcoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBi
b29sIG1udF9zaWduX3JlcXVpcmVkKQoreworCWJvb2wgc3J2X3NpZ25fcmVxdWlyZWQgPSBzZXJ2
ZXItPnNlY19tb2RlICYgc2VydmVyLT52YWxzLT5zaWduaW5nX3JlcXVpcmVkOworCWJvb2wgc3J2
X3NpZ25fZW5hYmxlZCA9IHNlcnZlci0+c2VjX21vZGUgJiBzZXJ2ZXItPnZhbHMtPnNpZ25pbmdf
ZW5hYmxlZDsKKwlib29sIG1udF9zaWduX2VuYWJsZWQ7CisKKwkvKgorCSAqIElzIHNpZ25pbmcg
cmVxdWlyZWQgYnkgbW50IG9wdGlvbnM/IElmIG5vdCB0aGVuIGNoZWNrCisJICogZ2xvYmFsX3Nl
Y2ZsYWdzIHRvIHNlZSBpZiBpdCBpcyB0aGVyZS4KKwkgKi8KKwlpZiAoIW1udF9zaWduX3JlcXVp
cmVkKQorCQltbnRfc2lnbl9yZXF1aXJlZCA9ICgoZ2xvYmFsX3NlY2ZsYWdzICYgQ0lGU1NFQ19N
VVNUX1NJR04pID09CisJCQkJCQlDSUZTU0VDX01VU1RfU0lHTik7CisKKwkvKgorCSAqIElmIHNp
Z25pbmcgaXMgcmVxdWlyZWQgdGhlbiBpdCdzIGF1dG9tYXRpY2FsbHkgZW5hYmxlZCB0b28sCisJ
ICogb3RoZXJ3aXNlLCBjaGVjayB0byBzZWUgaWYgdGhlIHNlY2ZsYWdzIGFsbG93IGl0LgorCSAq
LworCW1udF9zaWduX2VuYWJsZWQgPSBtbnRfc2lnbl9yZXF1aXJlZCA/IG1udF9zaWduX3JlcXVp
cmVkIDoKKwkJCQkoZ2xvYmFsX3NlY2ZsYWdzICYgQ0lGU1NFQ19NQVlfU0lHTik7CisKKwkvKiBJ
ZiBzZXJ2ZXIgcmVxdWlyZXMgc2lnbmluZywgZG9lcyBjbGllbnQgYWxsb3cgaXQ/ICovCisJaWYg
KHNydl9zaWduX3JlcXVpcmVkKSB7CisJCWlmICghbW50X3NpZ25fZW5hYmxlZCkgeworCQkJY2lm
c19kYmcoVkZTLCAiU2VydmVyIHJlcXVpcmVzIHNpZ25pbmcsIGJ1dCBpdCdzIGRpc2FibGVkIGlu
IFNlY3VyaXR5RmxhZ3MhXG4iKTsKKwkJCXJldHVybiAtRU9QTk9UU1VQUDsKKwkJfQorCQlzZXJ2
ZXItPnNpZ24gPSB0cnVlOworCX0KKworCS8qIElmIGNsaWVudCByZXF1aXJlcyBzaWduaW5nLCBk
b2VzIHNlcnZlciBhbGxvdyBpdD8gKi8KKwlpZiAobW50X3NpZ25fcmVxdWlyZWQpIHsKKwkJaWYg
KCFzcnZfc2lnbl9lbmFibGVkKSB7CisJCQljaWZzX2RiZyhWRlMsICJTZXJ2ZXIgZG9lcyBub3Qg
c3VwcG9ydCBzaWduaW5nIVxuIik7CisJCQlyZXR1cm4gLUVPUE5PVFNVUFA7CisJCX0KKwkJc2Vy
dmVyLT5zaWduID0gdHJ1ZTsKKwl9CisKKwlpZiAoY2lmc19yZG1hX2VuYWJsZWQoc2VydmVyKSAm
JiBzZXJ2ZXItPnNpZ24pCisJCWNpZnNfZGJnKFZGUywgIlNpZ25pbmcgaXMgZW5hYmxlZCwgYW5k
IFJETUEgcmVhZC93cml0ZSB3aWxsIGJlIGRpc2FibGVkXG4iKTsKKworCXJldHVybiAwOworfQor
CisKIHN0YXRpYyB2b2lkIGNsZWFuX2RlbXVsdGlwbGV4X2luZm8oc3RydWN0IFRDUF9TZXJ2ZXJf
SW5mbyAqc2VydmVyKQogewogCWludCBsZW5ndGg7CkBAIC0yOTc2LDYgKzMwMjMsNyBAQCBpcF9j
b25uZWN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcikKIAlyZXR1cm4gZ2VuZXJpY19p
cF9jb25uZWN0KHNlcnZlcik7CiB9CiAKKyNpZmRlZiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VS
RV9MRUdBQ1kKIHZvaWQgcmVzZXRfY2lmc191bml4X2NhcHModW5zaWduZWQgaW50IHhpZCwgc3Ry
dWN0IGNpZnNfdGNvbiAqdGNvbiwKIAkJCSAgc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiwg
c3RydWN0IHNtYjNfZnNfY29udGV4dCAqY3R4KQogewpAQCAtMzA4MSw2ICszMTI5LDcgQEAgdm9p
ZCByZXNldF9jaWZzX3VuaXhfY2Fwcyh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29u
ICp0Y29uLAogCQl9CiAJfQogfQorI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJF
X0xFR0FDWSAqLwogCiBpbnQgY2lmc19zZXR1cF9jaWZzX3NiKHN0cnVjdCBjaWZzX3NiX2luZm8g
KmNpZnNfc2IpCiB7CkBAIC0zMTk3LDYgKzMyNDYsNyBAQCBzdGF0aWMgaW50IG1vdW50X2dldF9j
b25ucyhzdHJ1Y3QgbW91bnRfY3R4ICptbnRfY3R4KQogCWlmICh0Y29uLT5wb3NpeF9leHRlbnNp
b25zKQogCQljaWZzX3NiLT5tbnRfY2lmc19mbGFncyB8PSBDSUZTX01PVU5UX1BPU0lYX1BBVEhT
OwogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAJLyogdGVsbCBz
ZXJ2ZXIgd2hpY2ggVW5peCBjYXBzIHdlIHN1cHBvcnQgKi8KIAlpZiAoY2FwX3VuaXgodGNvbi0+
c2VzKSkgewogCQkvKgpAQCAtMzIxNCw2ICszMjY0LDcgQEAgc3RhdGljIGludCBtb3VudF9nZXRf
Y29ubnMoc3RydWN0IG1vdW50X2N0eCAqbW50X2N0eCkKIAkJfQogCQlzcGluX3VubG9jaygmdGNv
bi0+c2VzLT5zZXJ2ZXItPnNydl9sb2NrKTsKIAl9IGVsc2UKKyNlbmRpZiAvKiBDT05GSUdfQ0lG
U19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAkJdGNvbi0+dW5peF9leHQgPSAwOyAvKiBzZXJ2
ZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGVtICovCiAKIAkvKiBkbyBub3QgY2FyZSBpZiBhIGZvbGxv
d2luZyBjYWxsIHN1Y2NlZWQgLSBpbmZvcm1hdGlvbmFsICovCkBAIC00MTg5LDggKzQyNDAsMTAg
QEAgY2lmc19jb25zdHJ1Y3RfdGNvbihzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiLCBrdWlk
X3QgZnN1aWQpCiAJCWdvdG8gb3V0OwogCX0KIAorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lO
U0VDVVJFX0xFR0FDWQogCWlmIChjYXBfdW5peChzZXMpKQogCQlyZXNldF9jaWZzX3VuaXhfY2Fw
cygwLCB0Y29uLCBOVUxMLCBjdHgpOworI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VD
VVJFX0xFR0FDWSAqLwogCiBvdXQ6CiAJa2ZyZWUoY3R4LT51c2VybmFtZSk7CmRpZmYgLS1naXQg
YS9mcy9jaWZzL2Rpci5jIGIvZnMvY2lmcy9kaXIuYwppbmRleCBjZTliMjJhZWNmYmEuLjA4Zjcz
OTI3MTZlMiAxMDA2NDQKLS0tIGEvZnMvY2lmcy9kaXIuYworKysgYi9mcy9jaWZzL2Rpci5jCkBA
IC0xOTMsNiArMTkzLDcgQEAgY2lmc19kb19jcmVhdGUoc3RydWN0IGlub2RlICppbm9kZSwgc3Ry
dWN0IGRlbnRyeSAqZGlyZW50cnksIHVuc2lnbmVkIGludCB4aWQsCiAJCXJldHVybiBQVFJfRVJS
KGZ1bGxfcGF0aCk7CiAJfQogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVH
QUNZCiAJaWYgKHRjb24tPnVuaXhfZXh0ICYmIGNhcF91bml4KHRjb24tPnNlcykgJiYgIXRjb24t
PmJyb2tlbl9wb3NpeF9vcGVuICYmCiAJICAgIChDSUZTX1VOSVhfUE9TSVhfUEFUSF9PUFNfQ0FQ
ICYKIAkJCWxlNjRfdG9fY3B1KHRjb24tPmZzVW5peEluZm8uQ2FwYWJpbGl0eSkpKSB7CkBAIC0y
NjEsNiArMjYyLDcgQEAgY2lmc19kb19jcmVhdGUoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0
IGRlbnRyeSAqZGlyZW50cnksIHVuc2lnbmVkIGludCB4aWQsCiAJCSAqIHJhcmUgZm9yIHBhdGgg
bm90IGNvdmVyZWQgb24gZmlsZXMpCiAJCSAqLwogCX0KKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19B
TExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAogCWRlc2lyZWRfYWNjZXNzID0gMDsKIAlpZiAoT1BF
Tl9GTU9ERShvZmxhZ3MpICYgRk1PREVfUkVBRCkKQEAgLTMxNiw2ICszMTgsNyBAQCBjaWZzX2Rv
X2NyZWF0ZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgdW5z
aWduZWQgaW50IHhpZCwKIAkJZ290byBvdXQ7CiAJfQogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxM
T1dfSU5TRUNVUkVfTEVHQUNZCiAJLyoKIAkgKiBJZiBPcGVuIHJlcG9ydGVkIHRoYXQgd2UgYWN0
dWFsbHkgY3JlYXRlZCBhIGZpbGUgdGhlbiB3ZSBub3cgaGF2ZSB0bwogCSAqIHNldCB0aGUgbW9k
ZSBpZiBwb3NzaWJsZS4KQEAgLTM1Nyw2ICszNjAsOSBAQCBjaWZzX2RvX2NyZWF0ZShzdHJ1Y3Qg
aW5vZGUgKmlub2RlLCBzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgdW5zaWduZWQgaW50IHhpZCwK
IAkJcmMgPSBjaWZzX2dldF9pbm9kZV9pbmZvX3VuaXgoJm5ld2lub2RlLCBmdWxsX3BhdGgsIGlu
b2RlLT5pX3NiLAogCQkJCQkgICAgICB4aWQpOwogCWVsc2UgeworI2Vsc2UKKwl7CisjZW5kaWYg
LyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZICovCiAJCS8qIFRPRE86IEFkZCBz
dXBwb3J0IGZvciBjYWxsaW5nIFBPU0lYIHF1ZXJ5IGluZm8gaGVyZSwgYnV0IHBhc3NpbmcgaW4g
ZmlkICovCiAJCXJjID0gY2lmc19nZXRfaW5vZGVfaW5mbygmbmV3aW5vZGUsIGZ1bGxfcGF0aCwg
YnVmLCBpbm9kZS0+aV9zYiwKIAkJCQkJIHhpZCwgZmlkKTsKQEAgLTM3Nyw3ICszODMsOSBAQCBj
aWZzX2RvX2NyZWF0ZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRy
eSwgdW5zaWduZWQgaW50IHhpZCwKIAkJfQogCX0KIAorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9X
X0lOU0VDVVJFX0xFR0FDWQogY2lmc19jcmVhdGVfc2V0X2RlbnRyeToKKyNlbmRpZiAvKiBDT05G
SUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAlpZiAocmMgIT0gMCkgewogCQljaWZz
X2RiZyhGWUksICJDcmVhdGUgd29ya2VkLCBnZXRfaW5vZGVfaW5mbyBmYWlsZWQgcmMgPSAlZFxu
IiwKIAkJCSByYyk7CmRpZmYgLS1naXQgYS9mcy9jaWZzL2ZpbGUuYyBiL2ZzL2NpZnMvZmlsZS5j
CmluZGV4IGE1OTJmZGYwNDMxMy4uODVmMmFiY2IyNzk1IDEwMDY0NAotLS0gYS9mcy9jaWZzL2Zp
bGUuYworKysgYi9mcy9jaWZzL2ZpbGUuYwpAQCAtMjYsNiArMjYsNyBAQAogI2luY2x1ZGUgImNp
ZnNwZHUuaCIKICNpbmNsdWRlICJjaWZzZ2xvYi5oIgogI2luY2x1ZGUgImNpZnNwcm90by5oIgor
I2luY2x1ZGUgInNtYjJwcm90by5oIgogI2luY2x1ZGUgImNpZnNfdW5pY29kZS5oIgogI2luY2x1
ZGUgImNpZnNfZGVidWcuaCIKICNpbmNsdWRlICJjaWZzX2ZzX3NiLmgiCkBAIC0zNCw2ICszNSw1
MyBAQAogI2luY2x1ZGUgImZzX2NvbnRleHQuaCIKICNpbmNsdWRlICJjaWZzX2lvY3RsLmgiCiAK
Ky8qCisgKiBNYXJrIGFzIGludmFsaWQsIGFsbCBvcGVuIGZpbGVzIG9uIHRyZWUgY29ubmVjdGlv
bnMgc2luY2UgdGhleQorICogd2VyZSBjbG9zZWQgd2hlbiBzZXNzaW9uIHRvIHNlcnZlciB3YXMg
bG9zdC4KKyAqLwordm9pZAorY2lmc19tYXJrX29wZW5fZmlsZXNfaW52YWxpZChzdHJ1Y3QgY2lm
c190Y29uICp0Y29uKQoreworCXN0cnVjdCBjaWZzRmlsZUluZm8gKm9wZW5fZmlsZSA9IE5VTEw7
CisJc3RydWN0IGxpc3RfaGVhZCAqdG1wOworCXN0cnVjdCBsaXN0X2hlYWQgKnRtcDE7CisKKwkv
KiBvbmx5IHNlbmQgb25jZSBwZXIgY29ubmVjdCAqLworCXNwaW5fbG9jaygmdGNvbi0+c2VzLT5z
ZXNfbG9jayk7CisJaWYgKCh0Y29uLT5zZXMtPnNlc19zdGF0dXMgIT0gU0VTX0dPT0QpIHx8ICh0
Y29uLT5zdGF0dXMgIT0gVElEX05FRURfUkVDT04pKSB7CisJCXNwaW5fdW5sb2NrKCZ0Y29uLT5z
ZXMtPnNlc19sb2NrKTsKKwkJcmV0dXJuOworCX0KKwl0Y29uLT5zdGF0dXMgPSBUSURfSU5fRklM
RVNfSU5WQUxJREFURTsKKwlzcGluX3VubG9jaygmdGNvbi0+c2VzLT5zZXNfbG9jayk7CisKKwkv
KiBsaXN0IGFsbCBmaWxlcyBvcGVuIG9uIHRyZWUgY29ubmVjdGlvbiBhbmQgbWFyayB0aGVtIGlu
dmFsaWQgKi8KKwlzcGluX2xvY2soJnRjb24tPm9wZW5fZmlsZV9sb2NrKTsKKwlsaXN0X2Zvcl9l
YWNoX3NhZmUodG1wLCB0bXAxLCAmdGNvbi0+b3BlbkZpbGVMaXN0KSB7CisJCW9wZW5fZmlsZSA9
IGxpc3RfZW50cnkodG1wLCBzdHJ1Y3QgY2lmc0ZpbGVJbmZvLCB0bGlzdCk7CisJCW9wZW5fZmls
ZS0+aW52YWxpZEhhbmRsZSA9IHRydWU7CisJCW9wZW5fZmlsZS0+b3Bsb2NrX2JyZWFrX2NhbmNl
bGxlZCA9IHRydWU7CisJfQorCXNwaW5fdW5sb2NrKCZ0Y29uLT5vcGVuX2ZpbGVfbG9jayk7CisK
KwltdXRleF9sb2NrKCZ0Y29uLT5jcmZpZC5maWRfbXV0ZXgpOworCXRjb24tPmNyZmlkLmlzX3Zh
bGlkID0gZmFsc2U7CisJLyogY2FjaGVkIGhhbmRsZSBpcyBub3QgdmFsaWQsIHNvIFNNQjJfQ0xP
U0Ugd29uJ3QgYmUgc2VudCBiZWxvdyAqLworCWNsb3NlX2NhY2hlZF9kaXJfbGVhc2VfbG9ja2Vk
KCZ0Y29uLT5jcmZpZCk7CisJbWVtc2V0KHRjb24tPmNyZmlkLmZpZCwgMCwgc2l6ZW9mKHN0cnVj
dCBjaWZzX2ZpZCkpOworCW11dGV4X3VubG9jaygmdGNvbi0+Y3JmaWQuZmlkX211dGV4KTsKKwor
CXNwaW5fbG9jaygmdGNvbi0+dGNfbG9jayk7CisJaWYgKHRjb24tPnN0YXR1cyA9PSBUSURfSU5f
RklMRVNfSU5WQUxJREFURSkKKwkJdGNvbi0+c3RhdHVzID0gVElEX05FRURfVENPTjsKKwlzcGlu
X3VubG9jaygmdGNvbi0+dGNfbG9jayk7CisKKwkvKgorCSAqIEJCIEFkZCBjYWxsIHRvIGludmFs
aWRhdGVfaW5vZGVzKHNiKSBmb3IgYWxsIHN1cGVyYmxvY2tzIG1vdW50ZWQKKwkgKiB0byB0aGlz
IHRjb24uCisJICovCit9CisKIHN0YXRpYyBpbmxpbmUgaW50IGNpZnNfY29udmVydF9mbGFncyh1
bnNpZ25lZCBpbnQgZmxhZ3MpCiB7CiAJaWYgKChmbGFncyAmIE9fQUNDTU9ERSkgPT0gT19SRE9O
TFkpCkBAIC01Miw2ICsxMDAsNyBAQCBzdGF0aWMgaW5saW5lIGludCBjaWZzX2NvbnZlcnRfZmxh
Z3ModW5zaWduZWQgaW50IGZsYWdzKQogCQlGSUxFX1JFQURfREFUQSk7CiB9CiAKKyNpZmRlZiBD
T05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIHN0YXRpYyB1MzIgY2lmc19wb3NpeF9j
b252ZXJ0X2ZsYWdzKHVuc2lnbmVkIGludCBmbGFncykKIHsKIAl1MzIgcG9zaXhfZmxhZ3MgPSAw
OwpAQCAtODUsNiArMTM0LDcgQEAgc3RhdGljIHUzMiBjaWZzX3Bvc2l4X2NvbnZlcnRfZmxhZ3Mo
dW5zaWduZWQgaW50IGZsYWdzKQogCiAJcmV0dXJuIHBvc2l4X2ZsYWdzOwogfQorI2VuZGlmIC8q
IENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWSAqLwogCiBzdGF0aWMgaW5saW5lIGlu
dCBjaWZzX2dldF9kaXNwb3NpdGlvbih1bnNpZ25lZCBpbnQgZmxhZ3MpCiB7CkBAIC0xMDAsNiAr
MTUwLDcgQEAgc3RhdGljIGlubGluZSBpbnQgY2lmc19nZXRfZGlzcG9zaXRpb24odW5zaWduZWQg
aW50IGZsYWdzKQogCQlyZXR1cm4gRklMRV9PUEVOOwogfQogCisjaWZkZWYgQ09ORklHX0NJRlNf
QUxMT1dfSU5TRUNVUkVfTEVHQUNZCiBpbnQgY2lmc19wb3NpeF9vcGVuKGNvbnN0IGNoYXIgKmZ1
bGxfcGF0aCwgc3RydWN0IGlub2RlICoqcGlub2RlLAogCQkJc3RydWN0IHN1cGVyX2Jsb2NrICpz
YiwgaW50IG1vZGUsIHVuc2lnbmVkIGludCBmX2ZsYWdzLAogCQkJX191MzIgKnBvcGxvY2ssIF9f
dTE2ICpwbmV0ZmlkLCB1bnNpZ25lZCBpbnQgeGlkKQpAQCAtMTYxLDYgKzIxMiw3IEBAIGludCBj
aWZzX3Bvc2l4X29wZW4oY29uc3QgY2hhciAqZnVsbF9wYXRoLCBzdHJ1Y3QgaW5vZGUgKipwaW5v
ZGUsCiAJa2ZyZWUocHJlc3BfZGF0YSk7CiAJcmV0dXJuIHJjOwogfQorI2VuZGlmIC8qIENPTkZJ
R19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWSAqLwogCiBzdGF0aWMgaW50CiBjaWZzX250X29w
ZW4oY29uc3QgY2hhciAqZnVsbF9wYXRoLCBzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgY2lm
c19zYl9pbmZvICpjaWZzX3NiLApAQCAtNTc5LDYgKzYzMSw3IEBAIGludCBjaWZzX29wZW4oc3Ry
dWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCiAJZWxzZQogCQlvcGxvY2sgPSAw
OwogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAJaWYgKCF0Y29u
LT5icm9rZW5fcG9zaXhfb3BlbiAmJiB0Y29uLT51bml4X2V4dCAmJgogCSAgICBjYXBfdW5peCh0
Y29uLT5zZXMpICYmIChDSUZTX1VOSVhfUE9TSVhfUEFUSF9PUFNfQ0FQICYKIAkJCQlsZTY0X3Rv
X2NwdSh0Y29uLT5mc1VuaXhJbmZvLkNhcGFiaWxpdHkpKSkgewpAQCAtNjAzLDYgKzY1Niw3IEBA
IGludCBjaWZzX29wZW4oc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCiAJ
CSAqIG9yIERGUyBlcnJvcnMuCiAJCSAqLwogCX0KKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExP
V19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAogCWlmIChzZXJ2ZXItPm9wcy0+Z2V0X2xlYXNlX2tleSkK
IAkJc2VydmVyLT5vcHMtPmdldF9sZWFzZV9rZXkoaW5vZGUsICZmaWQpOwpAQCAtNjMwLDYgKzY4
NCw3IEBAIGludCBjaWZzX29wZW4oc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZp
bGUpCiAJCWdvdG8gb3V0OwogCX0KIAorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJF
X0xFR0FDWQogCWlmICgob3Bsb2NrICYgQ0lGU19DUkVBVEVfQUNUSU9OKSAmJiAhcG9zaXhfb3Bl
bl9vayAmJiB0Y29uLT51bml4X2V4dCkgewogCQkvKgogCQkgKiBUaW1lIHRvIHNldCBtb2RlIHdo
aWNoIHdlIGNhbiBub3Qgc2V0IGVhcmxpZXIgZHVlIHRvCkBAIC02NDcsNiArNzAyLDcgQEAgaW50
IGNpZnNfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKIAkJQ0lG
U1NNQlVuaXhTZXRGaWxlSW5mbyh4aWQsIHRjb24sICZhcmdzLCBmaWQubmV0ZmlkLAogCQkJCSAg
ICAgICBjZmlsZS0+cGlkKTsKIAl9CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNV
UkVfTEVHQUNZICovCiAKIHVzZV9jYWNoZToKIAlmc2NhY2hlX3VzZV9jb29raWUoY2lmc19pbm9k
ZV9jb29raWUoZmlsZV9pbm9kZShmaWxlKSksCkBAIC02NjQsNyArNzIwLDkgQEAgaW50IGNpZnNf
b3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKIAlyZXR1cm4gcmM7
CiB9CiAKKyNpZmRlZiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIHN0YXRpYyBp
bnQgY2lmc19wdXNoX3Bvc2l4X2xvY2tzKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlKTsKKyNl
bmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAogLyoKICAqIFRy
eSB0byByZWFjcXVpcmUgYnl0ZSByYW5nZSBsb2NrcyB0aGF0IHdlcmUgcmVsZWFzZWQgd2hlbiBz
ZXNzaW9uCkBAIC02NzMsMTAgKzczMSwxMiBAQCBzdGF0aWMgaW50IGNpZnNfcHVzaF9wb3NpeF9s
b2NrcyhzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpjZmlsZSk7CiBzdGF0aWMgaW50CiBjaWZzX3JlbG9j
a19maWxlKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlKQogewotCXN0cnVjdCBjaWZzX3NiX2lu
Zm8gKmNpZnNfc2IgPSBDSUZTX1NCKGNmaWxlLT5kZW50cnktPmRfc2IpOwogCXN0cnVjdCBjaWZz
SW5vZGVJbmZvICpjaW5vZGUgPSBDSUZTX0koZF9pbm9kZShjZmlsZS0+ZGVudHJ5KSk7CiAJc3Ry
dWN0IGNpZnNfdGNvbiAqdGNvbiA9IHRsaW5rX3Rjb24oY2ZpbGUtPnRsaW5rKTsKIAlpbnQgcmMg
PSAwOworI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQorCXN0cnVjdCBj
aWZzX3NiX2luZm8gKmNpZnNfc2IgPSBDSUZTX1NCKGNmaWxlLT5kZW50cnktPmRfc2IpOworI2Vu
ZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWSAqLwogCiAJZG93bl9yZWFk
X25lc3RlZCgmY2lub2RlLT5sb2NrX3NlbSwgU0lOR0xFX0RFUFRIX05FU1RJTkcpOwogCWlmIChj
aW5vZGUtPmNhbl9jYWNoZV9icmxja3MpIHsKQEAgLTY4NSwxMSArNzQ1LDEzIEBAIGNpZnNfcmVs
b2NrX2ZpbGUoc3RydWN0IGNpZnNGaWxlSW5mbyAqY2ZpbGUpCiAJCXJldHVybiByYzsKIAl9CiAK
KyNpZmRlZiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIAlpZiAoY2FwX3VuaXgo
dGNvbi0+c2VzKSAmJgogCSAgICAoQ0lGU19VTklYX0ZDTlRMX0NBUCAmIGxlNjRfdG9fY3B1KHRj
b24tPmZzVW5peEluZm8uQ2FwYWJpbGl0eSkpICYmCiAJICAgICgoY2lmc19zYi0+bW50X2NpZnNf
ZmxhZ3MgJiBDSUZTX01PVU5UX05PUE9TSVhCUkwpID09IDApKQogCQlyYyA9IGNpZnNfcHVzaF9w
b3NpeF9sb2NrcyhjZmlsZSk7CiAJZWxzZQorI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lO
U0VDVVJFX0xFR0FDWSAqLwogCQlyYyA9IHRjb24tPnNlcy0+c2VydmVyLT5vcHMtPnB1c2hfbWFu
ZF9sb2NrcyhjZmlsZSk7CiAKIAl1cF9yZWFkKCZjaW5vZGUtPmxvY2tfc2VtKTsKQEAgLTc1MCw2
ICs4MTIsNyBAQCBjaWZzX3Jlb3Blbl9maWxlKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlLCBi
b29sIGNhbl9mbHVzaCkKIAllbHNlCiAJCW9wbG9jayA9IDA7CiAKKyNpZmRlZiBDT05GSUdfQ0lG
U19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIAlpZiAodGNvbi0+dW5peF9leHQgJiYgY2FwX3VuaXgo
dGNvbi0+c2VzKSAmJgogCSAgICAoQ0lGU19VTklYX1BPU0lYX1BBVEhfT1BTX0NBUCAmCiAJCQkJ
bGU2NF90b19jcHUodGNvbi0+ZnNVbml4SW5mby5DYXBhYmlsaXR5KSkpIHsKQEAgLTc3Myw2ICs4
MzYsNyBAQCBjaWZzX3Jlb3Blbl9maWxlKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlLCBib29s
IGNhbl9mbHVzaCkKIAkJICogaW4gdGhlIHJlY29ubmVjdCBwYXRoIGl0IGlzIGltcG9ydGFudCB0
byByZXRyeSBoYXJkCiAJCSAqLwogCX0KKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNF
Q1VSRV9MRUdBQ1kgKi8KIAogCWRlc2lyZWRfYWNjZXNzID0gY2lmc19jb252ZXJ0X2ZsYWdzKGNm
aWxlLT5mX2ZsYWdzKTsKIApAQCAtODE3LDcgKzg4MSw5IEBAIGNpZnNfcmVvcGVuX2ZpbGUoc3Ry
dWN0IGNpZnNGaWxlSW5mbyAqY2ZpbGUsIGJvb2wgY2FuX2ZsdXNoKQogCQlnb3RvIHJlb3Blbl9l
cnJvcl9leGl0OwogCX0KIAorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FD
WQogcmVvcGVuX3N1Y2Nlc3M6CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVf
TEVHQUNZICovCiAJY2ZpbGUtPmludmFsaWRIYW5kbGUgPSBmYWxzZTsKIAltdXRleF91bmxvY2so
JmNmaWxlLT5maF9tdXRleCk7CiAJY2lub2RlID0gQ0lGU19JKGlub2RlKTsKQEAgLTExOTIsNiAr
MTI1OCw3IEBAIGNpZnNfbG9ja19hZGRfaWYoc3RydWN0IGNpZnNGaWxlSW5mbyAqY2ZpbGUsIHN0
cnVjdCBjaWZzTG9ja0luZm8gKmxvY2ssCiAJcmV0dXJuIHJjOwogfQogCisjaWZkZWYgQ09ORklH
X0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAvKgogICogQ2hlY2sgaWYgdGhlcmUgaXMgYW5v
dGhlciBsb2NrIHRoYXQgcHJldmVudHMgdXMgdG8gc2V0IHRoZSBsb2NrIChwb3NpeAogICogc3R5
bGUpLiBJZiBzdWNoIGEgbG9jayBleGlzdHMsIHVwZGF0ZSB0aGUgZmxvY2sgc3RydWN0dXJlIHdp
dGggaXRzCkBAIC0xMzMwLDYgKzEzOTcsNyBAQCBoYXNoX2xvY2tvd25lcihmbF9vd25lcl90IG93
bmVyKQogewogCXJldHVybiBjaWZzX2xvY2tfc2VjcmV0IF4gaGFzaDMyX3B0cigoY29uc3Qgdm9p
ZCAqKW93bmVyKTsKIH0KKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdB
Q1kgKi8KIAogc3RydWN0IGxvY2tfdG9fcHVzaCB7CiAJc3RydWN0IGxpc3RfaGVhZCBsbGlzdDsK
QEAgLTEzNDAsNiArMTQwOCw3IEBAIHN0cnVjdCBsb2NrX3RvX3B1c2ggewogCV9fdTggdHlwZTsK
IH07CiAKKyNpZmRlZiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIHN0YXRpYyBp
bnQKIGNpZnNfcHVzaF9wb3NpeF9sb2NrcyhzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpjZmlsZSkKIHsK
QEAgLTE0MjcsMTQgKzE0OTYsMTcgQEAgY2lmc19wdXNoX3Bvc2l4X2xvY2tzKHN0cnVjdCBjaWZz
RmlsZUluZm8gKmNmaWxlKQogCX0KIAlnb3RvIG91dDsKIH0KKyNlbmRpZiAvKiBDT05GSUdfQ0lG
U19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAogc3RhdGljIGludAogY2lmc19wdXNoX2xvY2tz
KHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlKQogewotCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNp
ZnNfc2IgPSBDSUZTX1NCKGNmaWxlLT5kZW50cnktPmRfc2IpOwogCXN0cnVjdCBjaWZzSW5vZGVJ
bmZvICpjaW5vZGUgPSBDSUZTX0koZF9pbm9kZShjZmlsZS0+ZGVudHJ5KSk7CiAJc3RydWN0IGNp
ZnNfdGNvbiAqdGNvbiA9IHRsaW5rX3Rjb24oY2ZpbGUtPnRsaW5rKTsKIAlpbnQgcmMgPSAwOwor
I2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQorCXN0cnVjdCBjaWZzX3Ni
X2luZm8gKmNpZnNfc2IgPSBDSUZTX1NCKGNmaWxlLT5kZW50cnktPmRfc2IpOworI2VuZGlmIC8q
IENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWSAqLwogCiAJLyogd2UgYXJlIGdvaW5n
IHRvIHVwZGF0ZSBjYW5fY2FjaGVfYnJsY2tzIGhlcmUgLSBuZWVkIGEgd3JpdGUgYWNjZXNzICov
CiAJY2lmc19kb3duX3dyaXRlKCZjaW5vZGUtPmxvY2tfc2VtKTsKQEAgLTE0NDMsMTEgKzE1MTUs
MTMgQEAgY2lmc19wdXNoX2xvY2tzKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlKQogCQlyZXR1
cm4gcmM7CiAJfQogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAJ
aWYgKGNhcF91bml4KHRjb24tPnNlcykgJiYKIAkgICAgKENJRlNfVU5JWF9GQ05UTF9DQVAgJiBs
ZTY0X3RvX2NwdSh0Y29uLT5mc1VuaXhJbmZvLkNhcGFiaWxpdHkpKSAmJgogCSAgICAoKGNpZnNf
c2ItPm1udF9jaWZzX2ZsYWdzICYgQ0lGU19NT1VOVF9OT1BPU0lYQlJMKSA9PSAwKSkKIAkJcmMg
PSBjaWZzX3B1c2hfcG9zaXhfbG9ja3MoY2ZpbGUpOwogCWVsc2UKKyNlbmRpZiAvKiBDT05GSUdf
Q0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAkJcmMgPSB0Y29uLT5zZXMtPnNlcnZlci0+
b3BzLT5wdXNoX21hbmRfbG9ja3MoY2ZpbGUpOwogCiAJY2lub2RlLT5jYW5fY2FjaGVfYnJsY2tz
ID0gZmFsc2U7CkBAIC0xNTExLDYgKzE1ODUsNyBAQCBjaWZzX2dldGxrKHN0cnVjdCBmaWxlICpm
aWxlLCBzdHJ1Y3QgZmlsZV9sb2NrICpmbG9jaywgX191MzIgdHlwZSwKIAlzdHJ1Y3QgY2lmc0Zp
bGVJbmZvICpjZmlsZSA9IChzdHJ1Y3QgY2lmc0ZpbGVJbmZvICopZmlsZS0+cHJpdmF0ZV9kYXRh
OwogCXN0cnVjdCBjaWZzX3Rjb24gKnRjb24gPSB0bGlua190Y29uKGNmaWxlLT50bGluayk7CiAJ
c3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyID0gdGNvbi0+c2VzLT5zZXJ2ZXI7CisjaWZk
ZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAJX191MTYgbmV0ZmlkID0gY2Zp
bGUtPmZpZC5uZXRmaWQ7CiAKIAlpZiAocG9zaXhfbGNrKSB7CkBAIC0xNTMwLDYgKzE2MDUsNyBA
QCBjaWZzX2dldGxrKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgZmlsZV9sb2NrICpmbG9jaywg
X191MzIgdHlwZSwKIAkJCQkgICAgICBwb3NpeF9sb2NrX3R5cGUsIHdhaXRfZmxhZyk7CiAJCXJl
dHVybiByYzsKIAl9CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZ
ICovCiAKIAlyYyA9IGNpZnNfbG9ja190ZXN0KGNmaWxlLCBmbG9jay0+Zmxfc3RhcnQsIGxlbmd0
aCwgdHlwZSwgZmxvY2spOwogCWlmICghcmMpCkBAIC0xNTkwLDYgKzE2NjYsNyBAQCBjaWZzX2Zy
ZWVfbGxpc3Qoc3RydWN0IGxpc3RfaGVhZCAqbGxpc3QpCiAJfQogfQogCisjaWZkZWYgQ09ORklH
X0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiBpbnQKIGNpZnNfdW5sb2NrX3JhbmdlKHN0cnVj
dCBjaWZzRmlsZUluZm8gKmNmaWxlLCBzdHJ1Y3QgZmlsZV9sb2NrICpmbG9jaywKIAkJICB1bnNp
Z25lZCBpbnQgeGlkKQpAQCAtMTcwMiw2ICsxNzc5LDcgQEAgY2lmc191bmxvY2tfcmFuZ2Uoc3Ry
dWN0IGNpZnNGaWxlSW5mbyAqY2ZpbGUsIHN0cnVjdCBmaWxlX2xvY2sgKmZsb2NrLAogCWtmcmVl
KGJ1Zik7CiAJcmV0dXJuIHJjOwogfQorI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VD
VVJFX0xFR0FDWSAqLwogCiBzdGF0aWMgaW50CiBjaWZzX3NldGxrKHN0cnVjdCBmaWxlICpmaWxl
LCBzdHJ1Y3QgZmlsZV9sb2NrICpmbG9jaywgX191MzIgdHlwZSwKQEAgLTE3MTUsNiArMTc5Myw3
IEBAIGNpZnNfc2V0bGsoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBmaWxlX2xvY2sgKmZsb2Nr
LCBfX3UzMiB0eXBlLAogCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciA9IHRjb24tPnNl
cy0+c2VydmVyOwogCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBkX2lub2RlKGNmaWxlLT5kZW50cnkp
OwogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAJaWYgKHBvc2l4
X2xjaykgewogCQlpbnQgcG9zaXhfbG9ja190eXBlOwogCkBAIC0xNzM2LDcgKzE4MTUsNyBAQCBj
aWZzX3NldGxrKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgZmlsZV9sb2NrICpmbG9jaywgX191
MzIgdHlwZSwKIAkJCQkgICAgICBOVUxMLCBwb3NpeF9sb2NrX3R5cGUsIHdhaXRfZmxhZyk7CiAJ
CWdvdG8gb3V0OwogCX0KLQorI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xF
R0FDWSAqLwogCWlmIChsb2NrKSB7CiAJCXN0cnVjdCBjaWZzTG9ja0luZm8gKmxvY2s7CiAKQEAg
LTIyMDAsNiArMjI3OSwxODUgQEAgY2lmc19nZXRfcmVhZGFibGVfcGF0aChzdHJ1Y3QgY2lmc190
Y29uICp0Y29uLCBjb25zdCBjaGFyICpuYW1lLAogCXJldHVybiAtRU5PRU5UOwogfQogCit2b2lk
CitjaWZzX3dyaXRlZGF0YV9yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWZjb3VudCkKK3sKKwlzdHJ1
Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhID0gY29udGFpbmVyX29mKHJlZmNvdW50LAorCQkJCQlz
dHJ1Y3QgY2lmc193cml0ZWRhdGEsIHJlZmNvdW50KTsKKyNpZmRlZiBDT05GSUdfQ0lGU19TTUJf
RElSRUNUCisJaWYgKHdkYXRhLT5tcikgeworCQlzbWJkX2RlcmVnaXN0ZXJfbXIod2RhdGEtPm1y
KTsKKwkJd2RhdGEtPm1yID0gTlVMTDsKKwl9CisjZW5kaWYKKworCWlmICh3ZGF0YS0+Y2ZpbGUp
CisJCWNpZnNGaWxlSW5mb19wdXQod2RhdGEtPmNmaWxlKTsKKworCWt2ZnJlZSh3ZGF0YS0+cGFn
ZXMpOworCWtmcmVlKHdkYXRhKTsKK30KKworLyoKKyAqIFdyaXRlIGZhaWxlZCB3aXRoIGEgcmV0
cnlhYmxlIGVycm9yLiBSZXNlbmQgdGhlIHdyaXRlIHJlcXVlc3QuIEl0J3MgYWxzbworICogcG9z
c2libGUgdGhhdCB0aGUgcGFnZSB3YXMgcmVkaXJ0aWVkIHNvIHJlLWNsZWFuIHRoZSBwYWdlLgor
ICovCitzdGF0aWMgdm9pZAorY2lmc193cml0ZXZfcmVxdWV1ZShzdHJ1Y3QgY2lmc193cml0ZWRh
dGEgKndkYXRhKQoreworCWludCBpLCByYyA9IDA7CisJc3RydWN0IGlub2RlICppbm9kZSA9IGRf
aW5vZGUod2RhdGEtPmNmaWxlLT5kZW50cnkpOworCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNl
cnZlcjsKKwl1bnNpZ25lZCBpbnQgcmVzdF9sZW47CisKKwlzZXJ2ZXIgPSB0bGlua190Y29uKHdk
YXRhLT5jZmlsZS0+dGxpbmspLT5zZXMtPnNlcnZlcjsKKwlpID0gMDsKKwlyZXN0X2xlbiA9IHdk
YXRhLT5ieXRlczsKKwlkbyB7CisJCXN0cnVjdCBjaWZzX3dyaXRlZGF0YSAqd2RhdGEyOworCQl1
bnNpZ25lZCBpbnQgaiwgbnJfcGFnZXMsIHdzaXplLCB0YWlsc3osIGN1cl9sZW47CisKKwkJd3Np
emUgPSBzZXJ2ZXItPm9wcy0+d3BfcmV0cnlfc2l6ZShpbm9kZSk7CisJCWlmICh3c2l6ZSA8IHJl
c3RfbGVuKSB7CisJCQlucl9wYWdlcyA9IHdzaXplIC8gUEFHRV9TSVpFOworCQkJaWYgKCFucl9w
YWdlcykgeworCQkJCXJjID0gLUVPUE5PVFNVUFA7CisJCQkJYnJlYWs7CisJCQl9CisJCQljdXJf
bGVuID0gbnJfcGFnZXMgKiBQQUdFX1NJWkU7CisJCQl0YWlsc3ogPSBQQUdFX1NJWkU7CisJCX0g
ZWxzZSB7CisJCQlucl9wYWdlcyA9IERJVl9ST1VORF9VUChyZXN0X2xlbiwgUEFHRV9TSVpFKTsK
KwkJCWN1cl9sZW4gPSByZXN0X2xlbjsKKwkJCXRhaWxzeiA9IHJlc3RfbGVuIC0gKG5yX3BhZ2Vz
IC0gMSkgKiBQQUdFX1NJWkU7CisJCX0KKworCQl3ZGF0YTIgPSBjaWZzX3dyaXRlZGF0YV9hbGxv
Yyhucl9wYWdlcywgY2lmc193cml0ZXZfY29tcGxldGUpOworCQlpZiAoIXdkYXRhMikgeworCQkJ
cmMgPSAtRU5PTUVNOworCQkJYnJlYWs7CisJCX0KKworCQlmb3IgKGogPSAwOyBqIDwgbnJfcGFn
ZXM7IGorKykgeworCQkJd2RhdGEyLT5wYWdlc1tqXSA9IHdkYXRhLT5wYWdlc1tpICsgal07CisJ
CQlsb2NrX3BhZ2Uod2RhdGEyLT5wYWdlc1tqXSk7CisJCQljbGVhcl9wYWdlX2RpcnR5X2Zvcl9p
byh3ZGF0YTItPnBhZ2VzW2pdKTsKKwkJfQorCisJCXdkYXRhMi0+c3luY19tb2RlID0gd2RhdGEt
PnN5bmNfbW9kZTsKKwkJd2RhdGEyLT5ucl9wYWdlcyA9IG5yX3BhZ2VzOworCQl3ZGF0YTItPm9m
ZnNldCA9IHBhZ2Vfb2Zmc2V0KHdkYXRhMi0+cGFnZXNbMF0pOworCQl3ZGF0YTItPnBhZ2VzeiA9
IFBBR0VfU0laRTsKKwkJd2RhdGEyLT50YWlsc3ogPSB0YWlsc3o7CisJCXdkYXRhMi0+Ynl0ZXMg
PSBjdXJfbGVuOworCisJCXJjID0gY2lmc19nZXRfd3JpdGFibGVfZmlsZShDSUZTX0koaW5vZGUp
LCBGSU5EX1dSX0FOWSwKKwkJCQkJICAgICZ3ZGF0YTItPmNmaWxlKTsKKwkJaWYgKCF3ZGF0YTIt
PmNmaWxlKSB7CisJCQljaWZzX2RiZyhWRlMsICJObyB3cml0YWJsZSBoYW5kbGUgdG8gcmV0cnkg
d3JpdGVwYWdlcyByYz0lZFxuIiwKKwkJCQkgcmMpOworCQkJaWYgKCFpc19yZXRyeWFibGVfZXJy
b3IocmMpKQorCQkJCXJjID0gLUVCQURGOworCQl9IGVsc2UgeworCQkJd2RhdGEyLT5waWQgPSB3
ZGF0YTItPmNmaWxlLT5waWQ7CisJCQlyYyA9IHNlcnZlci0+b3BzLT5hc3luY193cml0ZXYod2Rh
dGEyLAorCQkJCQkJICAgICAgIGNpZnNfd3JpdGVkYXRhX3JlbGVhc2UpOworCQl9CisKKwkJZm9y
IChqID0gMDsgaiA8IG5yX3BhZ2VzOyBqKyspIHsKKwkJCXVubG9ja19wYWdlKHdkYXRhMi0+cGFn
ZXNbal0pOworCQkJaWYgKHJjICE9IDAgJiYgIWlzX3JldHJ5YWJsZV9lcnJvcihyYykpIHsKKwkJ
CQlTZXRQYWdlRXJyb3Iod2RhdGEyLT5wYWdlc1tqXSk7CisJCQkJZW5kX3BhZ2Vfd3JpdGViYWNr
KHdkYXRhMi0+cGFnZXNbal0pOworCQkJCXB1dF9wYWdlKHdkYXRhMi0+cGFnZXNbal0pOworCQkJ
fQorCQl9CisKKwkJa3JlZl9wdXQoJndkYXRhMi0+cmVmY291bnQsIGNpZnNfd3JpdGVkYXRhX3Jl
bGVhc2UpOworCQlpZiAocmMpIHsKKwkJCWlmIChpc19yZXRyeWFibGVfZXJyb3IocmMpKQorCQkJ
CWNvbnRpbnVlOworCQkJaSArPSBucl9wYWdlczsKKwkJCWJyZWFrOworCQl9CisKKwkJcmVzdF9s
ZW4gLT0gY3VyX2xlbjsKKwkJaSArPSBucl9wYWdlczsKKwl9IHdoaWxlIChpIDwgd2RhdGEtPm5y
X3BhZ2VzKTsKKworCS8qIGNsZWFudXAgcmVtYWluaW5nIHBhZ2VzIGZyb20gdGhlIG9yaWdpbmFs
IHdkYXRhICovCisJZm9yICg7IGkgPCB3ZGF0YS0+bnJfcGFnZXM7IGkrKykgeworCQlTZXRQYWdl
RXJyb3Iod2RhdGEtPnBhZ2VzW2ldKTsKKwkJZW5kX3BhZ2Vfd3JpdGViYWNrKHdkYXRhLT5wYWdl
c1tpXSk7CisJCXB1dF9wYWdlKHdkYXRhLT5wYWdlc1tpXSk7CisJfQorCisJaWYgKHJjICE9IDAg
JiYgIWlzX3JldHJ5YWJsZV9lcnJvcihyYykpCisJCW1hcHBpbmdfc2V0X2Vycm9yKGlub2RlLT5p
X21hcHBpbmcsIHJjKTsKKwlrcmVmX3B1dCgmd2RhdGEtPnJlZmNvdW50LCBjaWZzX3dyaXRlZGF0
YV9yZWxlYXNlKTsKK30KKwordm9pZAorY2lmc193cml0ZXZfY29tcGxldGUoc3RydWN0IHdvcmtf
c3RydWN0ICp3b3JrKQoreworCXN0cnVjdCBjaWZzX3dyaXRlZGF0YSAqd2RhdGEgPSBjb250YWlu
ZXJfb2Yod29yaywKKwkJCQkJCXN0cnVjdCBjaWZzX3dyaXRlZGF0YSwgd29yayk7CisJc3RydWN0
IGlub2RlICppbm9kZSA9IGRfaW5vZGUod2RhdGEtPmNmaWxlLT5kZW50cnkpOworCWludCBpID0g
MDsKKworCWlmICh3ZGF0YS0+cmVzdWx0ID09IDApIHsKKwkJc3Bpbl9sb2NrKCZpbm9kZS0+aV9s
b2NrKTsKKwkJY2lmc191cGRhdGVfZW9mKENJRlNfSShpbm9kZSksIHdkYXRhLT5vZmZzZXQsIHdk
YXRhLT5ieXRlcyk7CisJCXNwaW5fdW5sb2NrKCZpbm9kZS0+aV9sb2NrKTsKKwkJY2lmc19zdGF0
c19ieXRlc193cml0dGVuKHRsaW5rX3Rjb24od2RhdGEtPmNmaWxlLT50bGluayksCisJCQkJCSB3
ZGF0YS0+Ynl0ZXMpOworCX0gZWxzZSBpZiAod2RhdGEtPnN5bmNfbW9kZSA9PSBXQl9TWU5DX0FM
TCAmJiB3ZGF0YS0+cmVzdWx0ID09IC1FQUdBSU4pCisJCXJldHVybiBjaWZzX3dyaXRldl9yZXF1
ZXVlKHdkYXRhKTsKKworCWZvciAoaSA9IDA7IGkgPCB3ZGF0YS0+bnJfcGFnZXM7IGkrKykgewor
CQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IHdkYXRhLT5wYWdlc1tpXTsKKworCQlpZiAod2RhdGEtPnJl
c3VsdCA9PSAtRUFHQUlOKQorCQkJX19zZXRfcGFnZV9kaXJ0eV9ub2J1ZmZlcnMocGFnZSk7CisJ
CWVsc2UgaWYgKHdkYXRhLT5yZXN1bHQgPCAwKQorCQkJU2V0UGFnZUVycm9yKHBhZ2UpOworCQll
bmRfcGFnZV93cml0ZWJhY2socGFnZSk7CisJCWNpZnNfcmVhZHBhZ2VfdG9fZnNjYWNoZShpbm9k
ZSwgcGFnZSk7CisJCXB1dF9wYWdlKHBhZ2UpOworCX0KKwlpZiAod2RhdGEtPnJlc3VsdCAhPSAt
RUFHQUlOKQorCQltYXBwaW5nX3NldF9lcnJvcihpbm9kZS0+aV9tYXBwaW5nLCB3ZGF0YS0+cmVz
dWx0KTsKKwlrcmVmX3B1dCgmd2RhdGEtPnJlZmNvdW50LCBjaWZzX3dyaXRlZGF0YV9yZWxlYXNl
KTsKK30KKworc3RydWN0IGNpZnNfd3JpdGVkYXRhICoKK2NpZnNfd3JpdGVkYXRhX2FsbG9jKHVu
c2lnbmVkIGludCBucl9wYWdlcywgd29ya19mdW5jX3QgY29tcGxldGUpCit7CisJc3RydWN0IHBh
Z2UgKipwYWdlcyA9CisJCWtjYWxsb2MobnJfcGFnZXMsIHNpemVvZihzdHJ1Y3QgcGFnZSAqKSwg
R0ZQX05PRlMpOworCWlmIChwYWdlcykKKwkJcmV0dXJuIGNpZnNfd3JpdGVkYXRhX2RpcmVjdF9h
bGxvYyhwYWdlcywgY29tcGxldGUpOworCisJcmV0dXJuIE5VTEw7Cit9CisKK3N0cnVjdCBjaWZz
X3dyaXRlZGF0YSAqCitjaWZzX3dyaXRlZGF0YV9kaXJlY3RfYWxsb2Moc3RydWN0IHBhZ2UgKipw
YWdlcywgd29ya19mdW5jX3QgY29tcGxldGUpCit7CisJc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3
ZGF0YTsKKworCXdkYXRhID0ga3phbGxvYyhzaXplb2YoKndkYXRhKSwgR0ZQX05PRlMpOworCWlm
ICh3ZGF0YSAhPSBOVUxMKSB7CisJCXdkYXRhLT5wYWdlcyA9IHBhZ2VzOworCQlrcmVmX2luaXQo
JndkYXRhLT5yZWZjb3VudCk7CisJCUlOSVRfTElTVF9IRUFEKCZ3ZGF0YS0+bGlzdCk7CisJCWlu
aXRfY29tcGxldGlvbigmd2RhdGEtPmRvbmUpOworCQlJTklUX1dPUksoJndkYXRhLT53b3JrLCBj
b21wbGV0ZSk7CisJfQorCXJldHVybiB3ZGF0YTsKK30KKworCiBzdGF0aWMgaW50IGNpZnNfcGFy
dGlhbHBhZ2V3cml0ZShzdHJ1Y3QgcGFnZSAqcGFnZSwgdW5zaWduZWQgZnJvbSwgdW5zaWduZWQg
dG8pCiB7CiAJc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcgPSBwYWdlLT5tYXBwaW5nOwpk
aWZmIC0tZ2l0IGEvZnMvY2lmcy9pbm9kZS5jIGIvZnMvY2lmcy9pbm9kZS5jCmluZGV4IDNhZDMw
M2RkNWU1YS4uZWVlYWJhM2RlYzA1IDEwMDY0NAotLS0gYS9mcy9jaWZzL2lub2RlLmMKKysrIGIv
ZnMvY2lmcy9pbm9kZS5jCkBAIC0zMzksNiArMzM5LDcgQEAgY2lmc19jcmVhdGVfZGZzX2ZhdHRy
KHN0cnVjdCBjaWZzX2ZhdHRyICpmYXR0ciwgc3RydWN0IHN1cGVyX2Jsb2NrICpzYikKIAlmYXR0
ci0+Y2ZfZmxhZ3MgPSBDSUZTX0ZBVFRSX0RGU19SRUZFUlJBTDsKIH0KIAorI2lmZGVmIENPTkZJ
R19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQogc3RhdGljIGludAogY2lmc19nZXRfZmlsZV9p
bmZvX3VuaXgoc3RydWN0IGZpbGUgKmZpbHApCiB7CkBAIC00MzIsNiArNDMzLDE0IEBAIGludCBj
aWZzX2dldF9pbm9kZV9pbmZvX3VuaXgoc3RydWN0IGlub2RlICoqcGlub2RlLAogY2dpaXVfZXhp
dDoKIAlyZXR1cm4gcmM7CiB9CisjZWxzZQoraW50IGNpZnNfZ2V0X2lub2RlX2luZm9fdW5peChz
dHJ1Y3QgaW5vZGUgKipwaW5vZGUsCisJCQkgICAgIGNvbnN0IHVuc2lnbmVkIGNoYXIgKmZ1bGxf
cGF0aCwKKwkJCSAgICAgc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgdW5zaWduZWQgaW50IHhpZCkK
K3sKKwlyZXR1cm4gLUVPUE5PVFNVUFA7Cit9CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxMT1df
SU5TRUNVUkVfTEVHQUNZICovCiAKIHN0YXRpYyBpbnQKIGNpZnNfc2Z1X3R5cGUoc3RydWN0IGNp
ZnNfZmF0dHIgKmZhdHRyLCBjb25zdCBjaGFyICpwYXRoLApAQCAtNzk1LDYgKzgwNCw3IEBAIHN0
YXRpYyBfX3U2NCBzaW1wbGVfaGFzaHN0cihjb25zdCBjaGFyICpzdHIpCiAJcmV0dXJuIGhhc2g7
CiB9CiAKKyNpZmRlZiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIC8qKgogICog
Y2lmc19iYWNrdXBfcXVlcnlfcGF0aF9pbmZvIC0gU01CMSBmYWxsYmFjayBjb2RlIHRvIGdldCBp
bm8KICAqCkBAIC04NDcsNiArODU3LDcgQEAgY2lmc19iYWNrdXBfcXVlcnlfcGF0aF9pbmZvKGlu
dCB4aWQsCiAJKmRhdGEgPSAoRklMRV9BTExfSU5GTyAqKWluZm8uc3JjaF9lbnRyaWVzX3N0YXJ0
OwogCXJldHVybiAwOwogfQorI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xF
R0FDWSAqLwogCiBzdGF0aWMgdm9pZAogY2lmc19zZXRfZmF0dHJfaW5vKGludCB4aWQsCkBAIC05
OTEsNiArMTAwMiw3IEBAIGNpZnNfZ2V0X2lub2RlX2luZm8oc3RydWN0IGlub2RlICoqaW5vZGUs
CiAJCXJjID0gMDsKIAkJYnJlYWs7CiAJY2FzZSAtRUFDQ0VTOgorI2lmZGVmIENPTkZJR19DSUZT
X0FMTE9XX0lOU0VDVVJFX0xFR0FDWQogCQkvKgogCQkgKiBwZXJtIGVycm9ycywgdHJ5IGFnYWlu
IHdpdGggYmFja3VwIGZsYWdzIGlmIHBvc3NpYmxlCiAJCSAqCkBAIC0xMDIyLDYgKzEwMzQsOSBA
QCBjaWZzX2dldF9pbm9kZV9pbmZvKHN0cnVjdCBpbm9kZSAqKmlub2RlLAogCQkJLyogbm90aGlu
ZyB3ZSBjYW4gZG8sIGJhaWwgb3V0ICovCiAJCQlnb3RvIG91dDsKIAkJfQorI2Vsc2UKKwkJZ290
byBvdXQ7CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZICovCiAJ
CWJyZWFrOwogCWRlZmF1bHQ6CiAJCWNpZnNfZGJnKEZZSSwgIiVzOiB1bmhhbmRsZWQgZXJyIHJj
ICVkXG4iLCBfX2Z1bmNfXywgcmMpOwpAQCAtMTAzNyw4ICsxMDUyLDkgQEAgY2lmc19nZXRfaW5v
ZGVfaW5mbyhzdHJ1Y3QgaW5vZGUgKippbm9kZSwKIAkvKgogCSAqIDQuIFR3ZWFrIGZhdHRyIGJh
c2VkIG9uIG1vdW50IG9wdGlvbnMKIAkgKi8KLQorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lO
U0VDVVJFX0xFR0FDWQogaGFuZGxlX21udF9vcHQ6CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxM
T1dfSU5TRUNVUkVfTEVHQUNZICovCiAJLyogcXVlcnkgZm9yIFNGVSB0eXBlIGluZm8gaWYgc3Vw
cG9ydGVkIGFuZCBuZWVkZWQgKi8KIAlpZiAoZmF0dHIuY2ZfY2lmc2F0dHJzICYgQVRUUl9TWVNU
RU0gJiYKIAkgICAgY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX1VOWF9FTVVM
KSB7CkBAIC0xNDM1LDYgKzE0NTEsNyBAQCBjaWZzX3NldF9maWxlX2luZm8oc3RydWN0IGlub2Rl
ICppbm9kZSwgc3RydWN0IGlhdHRyICphdHRycywgdW5zaWduZWQgaW50IHhpZCwKIAlyZXR1cm4g
c2VydmVyLT5vcHMtPnNldF9maWxlX2luZm8oaW5vZGUsIGZ1bGxfcGF0aCwgJmluZm9fYnVmLCB4
aWQpOwogfQogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAvKgog
ICogT3BlbiB0aGUgZ2l2ZW4gZmlsZSAoaWYgaXQgaXNuJ3QgYWxyZWFkeSksIHNldCB0aGUgREVM
RVRFX09OX0NMT1NFIGJpdAogICogYW5kIHJlbmFtZSBpdCB0byBhIHJhbmRvbSBuYW1lIHRoYXQg
aG9wZWZ1bGx5IHdvbid0IGNvbmZsaWN0IHdpdGgKQEAgLTE1NjUsNiArMTU4Miw3IEBAIGNpZnNf
cmVuYW1lX3BlbmRpbmdfZGVsZXRlKGNvbnN0IGNoYXIgKmZ1bGxfcGF0aCwgc3RydWN0IGRlbnRy
eSAqZGVudHJ5LAogCiAJZ290byBvdXRfY2xvc2U7CiB9CisjZW5kaWYgLyogQ09ORklHX0NJRlNf
QUxMT1dfSU5TRUNVUkVfTEVHQUNZICovCiAKIC8qIGNvcGllZCBmcm9tIGZzL25mcy9kaXIuYyB3
aXRoIHNtYWxsIGNoYW5nZXMgKi8KIHN0YXRpYyB2b2lkCkBAIC0xNjI3LDYgKzE2NDUsNyBAQCBp
bnQgY2lmc191bmxpbmsoc3RydWN0IGlub2RlICpkaXIsIHN0cnVjdCBkZW50cnkgKmRlbnRyeSkK
IAl9CiAKIAljaWZzX2Nsb3NlX2RlZmVycmVkX2ZpbGVfdW5kZXJfZGVudHJ5KHRjb24sIGZ1bGxf
cGF0aCk7CisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAJaWYgKGNh
cF91bml4KHRjb24tPnNlcykgJiYgKENJRlNfVU5JWF9QT1NJWF9QQVRIX09QU19DQVAgJgogCQkJ
CWxlNjRfdG9fY3B1KHRjb24tPmZzVW5peEluZm8uQ2FwYWJpbGl0eSkpKSB7CiAJCXJjID0gQ0lG
U1BPU0lYRGVsRmlsZSh4aWQsIHRjb24sIGZ1bGxfcGF0aCwKQEAgLTE2MzYsNiArMTY1NSw3IEBA
IGludCBjaWZzX3VubGluayhzdHJ1Y3QgaW5vZGUgKmRpciwgc3RydWN0IGRlbnRyeSAqZGVudHJ5
KQogCQlpZiAoKHJjID09IDApIHx8IChyYyA9PSAtRU5PRU5UKSkKIAkJCWdvdG8gcHN4X2RlbF9u
b19yZXRyeTsKIAl9CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZ
ICovCiAKIHJldHJ5X3N0ZF9kZWxldGU6CiAJaWYgKCFzZXJ2ZXItPm9wcy0+dW5saW5rKSB7CkBA
IC0xNzE0LDkgKzE3MzQsMTEgQEAgY2lmc19ta2Rpcl9xaW5mbyhzdHJ1Y3QgaW5vZGUgKnBhcmVu
dCwgc3RydWN0IGRlbnRyeSAqZGVudHJ5LCB1bW9kZV90IG1vZGUsCiAKIAlpZiAodGNvbi0+cG9z
aXhfZXh0ZW5zaW9ucykKIAkJcmMgPSBzbWIzMTFfcG9zaXhfZ2V0X2lub2RlX2luZm8oJmlub2Rl
LCBmdWxsX3BhdGgsIHBhcmVudC0+aV9zYiwgeGlkKTsKKyNpZmRlZiBDT05GSUdfQ0lGU19BTExP
V19JTlNFQ1VSRV9MRUdBQ1kKIAllbHNlIGlmICh0Y29uLT51bml4X2V4dCkKIAkJcmMgPSBjaWZz
X2dldF9pbm9kZV9pbmZvX3VuaXgoJmlub2RlLCBmdWxsX3BhdGgsIHBhcmVudC0+aV9zYiwKIAkJ
CQkJICAgICAgeGlkKTsKKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdB
Q1kgKi8KIAllbHNlCiAJCXJjID0gY2lmc19nZXRfaW5vZGVfaW5mbygmaW5vZGUsIGZ1bGxfcGF0
aCwgTlVMTCwgcGFyZW50LT5pX3NiLAogCQkJCQkgeGlkLCBOVUxMKTsKQEAgLTE3NDYsNiArMTc2
OCw3IEBAIGNpZnNfbWtkaXJfcWluZm8oc3RydWN0IGlub2RlICpwYXJlbnQsIHN0cnVjdCBkZW50
cnkgKmRlbnRyeSwgdW1vZGVfdCBtb2RlLAogCWlmIChwYXJlbnQtPmlfbW9kZSAmIFNfSVNHSUQp
CiAJCW1vZGUgfD0gU19JU0dJRDsKIAorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJF
X0xFR0FDWQogCWlmICh0Y29uLT51bml4X2V4dCkgewogCQlzdHJ1Y3QgY2lmc191bml4X3NldF9p
bmZvX2FyZ3MgYXJncyA9IHsKIAkJCS5tb2RlCT0gbW9kZSwKQEAgLTE3NjgsNiArMTc5MSw5IEBA
IGNpZnNfbWtkaXJfcWluZm8oc3RydWN0IGlub2RlICpwYXJlbnQsIHN0cnVjdCBkZW50cnkgKmRl
bnRyeSwgdW1vZGVfdCBtb2RlLAogCQkJCSAgICAgICBjaWZzX3NiLT5sb2NhbF9ubHMsCiAJCQkJ
ICAgICAgIGNpZnNfcmVtYXAoY2lmc19zYikpOwogCX0gZWxzZSB7CisjZWxzZQorCXsKKyNlbmRp
ZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAkJc3RydWN0IFRDUF9T
ZXJ2ZXJfSW5mbyAqc2VydmVyID0gdGNvbi0+c2VzLT5zZXJ2ZXI7CiAJCWlmICghKGNpZnNfc2It
Pm1udF9jaWZzX2ZsYWdzICYgQ0lGU19NT1VOVF9DSUZTX0FDTCkgJiYKIAkJICAgIChtb2RlICYg
U19JV1VHTykgPT0gMCAmJiBzZXJ2ZXItPm9wcy0+bWtkaXJfc2V0aW5mbykKQEAgLTE3ODgsNiAr
MTgxNCw3IEBAIGNpZnNfbWtkaXJfcWluZm8oc3RydWN0IGlub2RlICpwYXJlbnQsIHN0cnVjdCBk
ZW50cnkgKmRlbnRyeSwgdW1vZGVfdCBtb2RlLAogCXJldHVybiAwOwogfQogCisjaWZkZWYgQ09O
RklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiBzdGF0aWMgaW50CiBjaWZzX3Bvc2l4X21r
ZGlyKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgdW1vZGVfdCBt
b2RlLAogCQkgY29uc3QgY2hhciAqZnVsbF9wYXRoLCBzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZz
X3NiLApAQCAtMTg1MCw2ICsxODc3LDcgQEAgY2lmc19wb3NpeF9ta2RpcihzdHJ1Y3QgaW5vZGUg
Kmlub2RlLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksIHVtb2RlX3QgbW9kZSwKIAkJCSAgICAgIHhp
ZCk7CiAJZ290byBwb3NpeF9ta2Rpcl9vdXQ7CiB9CisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxM
T1dfSU5TRUNVUkVfTEVHQUNZICovCiAKIGludCBjaWZzX21rZGlyKHN0cnVjdCB1c2VyX25hbWVz
cGFjZSAqbW50X3VzZXJucywgc3RydWN0IGlub2RlICppbm9kZSwKIAkgICAgICAgc3RydWN0IGRl
bnRyeSAqZGlyZW50cnksIHVtb2RlX3QgbW9kZSkKQEAgLTE4OTIsNiArMTkyMCw3IEBAIGludCBj
aWZzX21rZGlyKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywgc3RydWN0IGlub2Rl
ICppbm9kZSwKIAkJZ290byBta2Rpcl9vdXQ7CiAJfQogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxM
T1dfSU5TRUNVUkVfTEVHQUNZCiAJaWYgKGNhcF91bml4KHRjb24tPnNlcykgJiYgKENJRlNfVU5J
WF9QT1NJWF9QQVRIX09QU19DQVAgJgogCQkJCWxlNjRfdG9fY3B1KHRjb24tPmZzVW5peEluZm8u
Q2FwYWJpbGl0eSkpKSB7CiAJCXJjID0gY2lmc19wb3NpeF9ta2Rpcihpbm9kZSwgZGlyZW50cnks
IG1vZGUsIGZ1bGxfcGF0aCwgY2lmc19zYiwKQEAgLTE4OTksNiArMTkyOCw3IEBAIGludCBjaWZz
X21rZGlyKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywgc3RydWN0IGlub2RlICpp
bm9kZSwKIAkJaWYgKHJjICE9IC1FT1BOT1RTVVBQKQogCQkJZ290byBta2Rpcl9vdXQ7CiAJfQor
I2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWSAqLwogCiAJaWYgKCFz
ZXJ2ZXItPm9wcy0+bWtkaXIpIHsKIAkJcmMgPSAtRU5PU1lTOwpAQCAtMjAxNSw5ICsyMDQ1LDEy
IEBAIGNpZnNfZG9fcmVuYW1lKGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBkZW50cnkg
KmZyb21fZGVudHJ5LAogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZzX3Rj
b24gKnRjb247CiAJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyOworI2lmZGVmIENPTkZJ
R19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQogCXN0cnVjdCBjaWZzX2ZpZCBmaWQ7CiAJc3Ry
dWN0IGNpZnNfb3Blbl9wYXJtcyBvcGFybXM7Ci0JaW50IG9wbG9jaywgcmM7CisJaW50IG9wbG9j
azsKKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KKwlpbnQg
cmM7CiAKIAl0bGluayA9IGNpZnNfc2JfdGxpbmsoY2lmc19zYik7CiAJaWYgKElTX0VSUih0bGlu
aykpCkBAIC0yMDQzLDYgKzIwNzYsNyBAQCBjaWZzX2RvX3JlbmFtZShjb25zdCB1bnNpZ25lZCBp
bnQgeGlkLCBzdHJ1Y3QgZGVudHJ5ICpmcm9tX2RlbnRyeSwKIAlpZiAoc2VydmVyLT52YWxzLT5w
cm90b2NvbF9pZCAhPSAwKQogCQlnb3RvIGRvX3JlbmFtZV9leGl0OwogCisjaWZkZWYgQ09ORklH
X0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZCiAJLyogb3Blbi1maWxlIHJlbmFtZXMgZG9uJ3Qg
d29yayBhY3Jvc3MgZGlyZWN0b3JpZXMgKi8KIAlpZiAodG9fZGVudHJ5LT5kX3BhcmVudCAhPSBm
cm9tX2RlbnRyeS0+ZF9wYXJlbnQpCiAJCWdvdG8gZG9fcmVuYW1lX2V4aXQ7CkBAIC0yMDY0LDYg
KzIwOTgsNyBAQCBjaWZzX2RvX3JlbmFtZShjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3Qg
ZGVudHJ5ICpmcm9tX2RlbnRyeSwKIAkJCQljaWZzX3NiLT5sb2NhbF9ubHMsIGNpZnNfcmVtYXAo
Y2lmc19zYikpOwogCQlDSUZTU01CQ2xvc2UoeGlkLCB0Y29uLCBmaWQubmV0ZmlkKTsKIAl9Cisj
ZW5kaWYgLyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZICovCiBkb19yZW5hbWVf
ZXhpdDoKIAlpZiAocmMgPT0gMCkKIAkJZF9tb3ZlKGZyb21fZGVudHJ5LCB0b19kZW50cnkpOwpA
QCAtMjA4MSwxMSArMjExNiwxMyBAQCBjaWZzX3JlbmFtZTIoc3RydWN0IHVzZXJfbmFtZXNwYWNl
ICptbnRfdXNlcm5zLCBzdHJ1Y3QgaW5vZGUgKnNvdXJjZV9kaXIsCiAJc3RydWN0IGNpZnNfc2Jf
aW5mbyAqY2lmc19zYjsKIAlzdHJ1Y3QgdGNvbl9saW5rICp0bGluazsKIAlzdHJ1Y3QgY2lmc190
Y29uICp0Y29uOwotCUZJTEVfVU5JWF9CQVNJQ19JTkZPICppbmZvX2J1Zl9zb3VyY2UgPSBOVUxM
OwotCUZJTEVfVU5JWF9CQVNJQ19JTkZPICppbmZvX2J1Zl90YXJnZXQ7CiAJdW5zaWduZWQgaW50
IHhpZDsKIAlpbnQgcmMsIHRtcHJjOwogCWludCByZXRyeV9jb3VudCA9IDA7CisJRklMRV9VTklY
X0JBU0lDX0lORk8gKmluZm9fYnVmX3NvdXJjZSA9IE5VTEw7CisjaWZkZWYgQ09ORklHX0NJRlNf
QUxMT1dfSU5TRUNVUkVfTEVHQUNZCisJRklMRV9VTklYX0JBU0lDX0lORk8gKmluZm9fYnVmX3Rh
cmdldDsKKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAog
CWlmIChmbGFncyAmIH5SRU5BTUVfTk9SRVBMQUNFKQogCQlyZXR1cm4gLUVJTlZBTDsKQEAgLTIx
MzksNiArMjE3Niw3IEBAIGNpZnNfcmVuYW1lMihzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91
c2VybnMsIHN0cnVjdCBpbm9kZSAqc291cmNlX2RpciwKIAlpZiAoZmxhZ3MgJiBSRU5BTUVfTk9S
RVBMQUNFKQogCQlnb3RvIGNpZnNfcmVuYW1lX2V4aXQ7CiAKKyNpZmRlZiBDT05GSUdfQ0lGU19B
TExPV19JTlNFQ1VSRV9MRUdBQ1kKIAlpZiAocmMgPT0gLUVFWElTVCAmJiB0Y29uLT51bml4X2V4
dCkgewogCQkvKgogCQkgKiBBcmUgc3JjIGFuZCBkc3QgaGFyZGxpbmtzIG9mIHNhbWUgaW5vZGU/
IFdlIGNhbiBvbmx5IHRlbGwKQEAgLTIxNzgsNiArMjIxNiw4IEBAIGNpZnNfcmVuYW1lMihzdHJ1
Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqc291cmNlX2RpciwK
IAkgKi8KIAogdW5saW5rX3RhcmdldDoKKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNF
Q1VSRV9MRUdBQ1kgKi8KKwogCS8qIFRyeSB1bmxpbmtpbmcgdGhlIHRhcmdldCBkZW50cnkgaWYg
aXQncyBub3QgbmVnYXRpdmUgKi8KIAlpZiAoZF9yZWFsbHlfaXNfcG9zaXRpdmUodGFyZ2V0X2Rl
bnRyeSkgJiYgKHJjID09IC1FQUNDRVMgfHwgcmMgPT0gLUVFWElTVCkpIHsKIAkJaWYgKGRfaXNf
ZGlyKHRhcmdldF9kZW50cnkpKQpAQCAtMjMzNywxNCArMjM3NywxOCBAQCBpbnQgY2lmc19yZXZh
bGlkYXRlX2ZpbGVfYXR0cihzdHJ1Y3QgZmlsZSAqZmlscCkKIHsKIAlpbnQgcmMgPSAwOwogCXN0
cnVjdCBkZW50cnkgKmRlbnRyeSA9IGZpbGVfZGVudHJ5KGZpbHApOworI2lmZGVmIENPTkZJR19D
SUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQogCXN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlID0g
KHN0cnVjdCBjaWZzRmlsZUluZm8gKikgZmlscC0+cHJpdmF0ZV9kYXRhOworI2VuZGlmIC8qIENP
TkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWSAqLwogCiAJaWYgKCFjaWZzX2RlbnRyeV9u
ZWVkc19yZXZhbChkZW50cnkpKQogCQlyZXR1cm4gcmM7CiAKKyNpZmRlZiBDT05GSUdfQ0lGU19B
TExPV19JTlNFQ1VSRV9MRUdBQ1kKIAlpZiAodGxpbmtfdGNvbihjZmlsZS0+dGxpbmspLT51bml4
X2V4dCkKIAkJcmMgPSBjaWZzX2dldF9maWxlX2luZm9fdW5peChmaWxwKTsKIAllbHNlCisjZW5k
aWYgLyogQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZICovCiAJCXJjID0gY2lmc19n
ZXRfZmlsZV9pbmZvKGZpbHApOwogCiAJcmV0dXJuIHJjOwpAQCAtMjY1Myw2ICsyNjk3LDcgQEAg
Y2lmc19zZXRfZmlsZV9zaXplKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBpYXR0ciAqYXR0
cnMsCiAJcmV0dXJuIHJjOwogfQogCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVf
TEVHQUNZCiBzdGF0aWMgaW50CiBjaWZzX3NldGF0dHJfdW5peChzdHJ1Y3QgZGVudHJ5ICpkaXJl
bnRyeSwgc3RydWN0IGlhdHRyICphdHRycykKIHsKQEAgLTI4MDAsNiArMjg0NSw3IEBAIGNpZnNf
c2V0YXR0cl91bml4KHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LCBzdHJ1Y3QgaWF0dHIgKmF0dHJz
KQogCWZyZWVfeGlkKHhpZCk7CiAJcmV0dXJuIHJjOwogfQorI2VuZGlmIC8qIENPTkZJR19DSUZT
X0FMTE9XX0lOU0VDVVJFX0xFR0FDWSAqLwogCiBzdGF0aWMgaW50CiBjaWZzX3NldGF0dHJfbm91
bml4KHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LCBzdHJ1Y3QgaWF0dHIgKmF0dHJzKQpAQCAtMjk5
NSwxNiArMzA0MSwyMCBAQCBjaWZzX3NldGF0dHIoc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRf
dXNlcm5zLCBzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwKIAkgICAgIHN0cnVjdCBpYXR0ciAqYXR0
cnMpCiB7CiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoZGlyZW50cnkt
PmRfc2IpOwotCXN0cnVjdCBjaWZzX3Rjb24gKnBUY29uID0gY2lmc19zYl9tYXN0ZXJfdGNvbihj
aWZzX3NiKTsKIAlpbnQgcmMsIHJldHJpZXMgPSAwOworI2lmZGVmIENPTkZJR19DSUZTX0FMTE9X
X0lOU0VDVVJFX0xFR0FDWQorCXN0cnVjdCBjaWZzX3Rjb24gKnBUY29uID0gY2lmc19zYl9tYXN0
ZXJfdGNvbihjaWZzX3NiKTsKKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9M
RUdBQ1kgKi8KIAogCWlmICh1bmxpa2VseShjaWZzX2ZvcmNlZF9zaHV0ZG93bihjaWZzX3NiKSkp
CiAJCXJldHVybiAtRUlPOwogCiAJZG8geworI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VD
VVJFX0xFR0FDWQogCQlpZiAocFRjb24tPnVuaXhfZXh0KQogCQkJcmMgPSBjaWZzX3NldGF0dHJf
dW5peChkaXJlbnRyeSwgYXR0cnMpOwogCQllbHNlCisjZW5kaWYgLyogQ09ORklHX0NJRlNfQUxM
T1dfSU5TRUNVUkVfTEVHQUNZICovCiAJCQlyYyA9IGNpZnNfc2V0YXR0cl9ub3VuaXgoZGlyZW50
cnksIGF0dHJzKTsKIAkJcmV0cmllcysrOwogCX0gd2hpbGUgKGlzX3JldHJ5YWJsZV9lcnJvcihy
YykgJiYgcmV0cmllcyA8IDIpOwpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9pb2N0bC5jIGIvZnMvY2lm
cy9pb2N0bC5jCmluZGV4IDAzNTliNjA0YmRiYy4uYjZlNmU1ZDZjOGRkIDEwMDY0NAotLS0gYS9m
cy9jaWZzL2lvY3RsLmMKKysrIGIvZnMvY2lmcy9pb2N0bC5jCkBAIC0zMzMsNiArMzMzLDcgQEAg
bG9uZyBjaWZzX2lvY3RsKHN0cnVjdCBmaWxlICpmaWxlcCwgdW5zaWduZWQgaW50IGNvbW1hbmQs
IHVuc2lnbmVkIGxvbmcgYXJnKQogCQkJdGNvbiA9IHRsaW5rX3Rjb24ocFNNQkZpbGUtPnRsaW5r
KTsKIAkJCWNhcHMgPSBsZTY0X3RvX2NwdSh0Y29uLT5mc1VuaXhJbmZvLkNhcGFiaWxpdHkpOwog
I2lmZGVmIENPTkZJR19DSUZTX1BPU0lYCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNV
UkVfTEVHQUNZCiAJCQlpZiAoQ0lGU19VTklYX0VYVEFUVFJfQ0FQICYgY2FwcykgewogCQkJCV9f
dTY0CUV4dEF0dHJNYXNrID0gMDsKIAkJCQlyYyA9IENJRlNHZXRFeHRBdHRyKHhpZCwgdGNvbiwK
QEAgLTM0NSw2ICszNDYsNyBAQCBsb25nIGNpZnNfaW9jdGwoc3RydWN0IGZpbGUgKmZpbGVwLCB1
bnNpZ25lZCBpbnQgY29tbWFuZCwgdW5zaWduZWQgbG9uZyBhcmcpCiAJCQkJaWYgKHJjICE9IEVP
UE5PVFNVUFApCiAJCQkJCWJyZWFrOwogCQkJfQorI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9X
X0lOU0VDVVJFX0xFR0FDWSAqLwogI2VuZGlmIC8qIENPTkZJR19DSUZTX1BPU0lYICovCiAJCQly
YyA9IDA7CiAJCQlpZiAoQ0lGU19JKGlub2RlKS0+Y2lmc0F0dHJzICYgQVRUUl9DT01QUkVTU0VE
KSB7CmRpZmYgLS1naXQgYS9mcy9jaWZzL2xpbmsuYyBiL2ZzL2NpZnMvbGluay5jCmluZGV4IGJi
ZGYzMjgxNTU5Yy4uNjgwM2NiMjdlZWNjIDEwMDY0NAotLS0gYS9mcy9jaWZzL2xpbmsuYworKysg
Yi9mcy9jaWZzL2xpbmsuYwpAQCAtMjg2LDYgKzI4Niw3IEBAIGNoZWNrX21mX3N5bWxpbmsodW5z
aWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKIAlyZXR1cm4gcmM7CiB9CiAK
KyNpZmRlZiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIC8qCiAgKiBTTUIgMS4w
IFByb3RvY29sIHNwZWNpZmljIGZ1bmN0aW9ucwogICovCkBAIC0zNjgsNiArMzY5LDcgQEAgY2lm
c19jcmVhdGVfbWZfc3ltbGluayh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0
Y29uLAogCUNJRlNTTUJDbG9zZSh4aWQsIHRjb24sIGZpZC5uZXRmaWQpOwogCXJldHVybiByYzsK
IH0KKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAogLyoK
ICAqIFNNQiAyLjEvU01CMyBQcm90b2NvbCBzcGVjaWZpYyBmdW5jdGlvbnMKQEAgLTUzMiwxMSAr
NTM0LDE1IEBAIGNpZnNfaGFyZGxpbmsoc3RydWN0IGRlbnRyeSAqb2xkX2ZpbGUsIHN0cnVjdCBp
bm9kZSAqaW5vZGUsCiAJCWdvdG8gY2lmc19obF9leGl0OwogCX0KIAorI2lmZGVmIENPTkZJR19D
SUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQogCWlmICh0Y29uLT51bml4X2V4dCkKIAkJcmMgPSBD
SUZTVW5peENyZWF0ZUhhcmRMaW5rKHhpZCwgdGNvbiwgZnJvbV9uYW1lLCB0b19uYW1lLAogCQkJ
CQkgICAgY2lmc19zYi0+bG9jYWxfbmxzLAogCQkJCQkgICAgY2lmc19yZW1hcChjaWZzX3NiKSk7
CiAJZWxzZSB7CisjZWxzZQorCXsKKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VS
RV9MRUdBQ1kgKi8KIAkJc2VydmVyID0gdGNvbi0+c2VzLT5zZXJ2ZXI7CiAJCWlmICghc2VydmVy
LT5vcHMtPmNyZWF0ZV9oYXJkbGluaykgewogCQkJcmMgPSAtRU5PU1lTOwpAQCAtNzA0LDEwICs3
MTAsMTIgQEAgY2lmc19zeW1saW5rKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3VzZXJucywg
c3RydWN0IGlub2RlICppbm9kZSwKIAkvKiBCQiB3aGF0IGlmIERGUyBhbmQgdGhpcyB2b2x1bWUg
aXMgb24gZGlmZmVyZW50IHNoYXJlPyBCQiAqLwogCWlmIChjaWZzX3NiLT5tbnRfY2lmc19mbGFn
cyAmIENJRlNfTU9VTlRfTUZfU1lNTElOS1MpCiAJCXJjID0gY3JlYXRlX21mX3N5bWxpbmsoeGlk
LCBwVGNvbiwgY2lmc19zYiwgZnVsbF9wYXRoLCBzeW1uYW1lKTsKKyNpZmRlZiBDT05GSUdfQ0lG
U19BTExPV19JTlNFQ1VSRV9MRUdBQ1kKIAllbHNlIGlmIChwVGNvbi0+dW5peF9leHQpCiAJCXJj
ID0gQ0lGU1VuaXhDcmVhdGVTeW1MaW5rKHhpZCwgcFRjb24sIGZ1bGxfcGF0aCwgc3ltbmFtZSwK
IAkJCQkJICAgY2lmc19zYi0+bG9jYWxfbmxzLAogCQkJCQkgICBjaWZzX3JlbWFwKGNpZnNfc2Ip
KTsKKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAkvKiBl
bHNlCiAJICAgcmMgPSBDSUZTQ3JlYXRlUmVwYXJzZVN5bUxpbmsoeGlkLCBwVGNvbiwgZnJvbU5h
bWUsIHRvTmFtZSwKIAkJCQkJY2lmc19zYl90YXJnZXQtPmxvY2FsX25scyk7ICovCmRpZmYgLS1n
aXQgYS9mcy9jaWZzL3Nlc3MuYyBiL2ZzL2NpZnMvc2Vzcy5jCmluZGV4IDAyYzhiMjkwNjE5Ni4u
M2FmM2IwNWI2Yzc0IDEwMDY0NAotLS0gYS9mcy9jaWZzL3Nlc3MuYworKysgYi9mcy9jaWZzL3Nl
c3MuYwpAQCAtNDk5LDYgKzQ5OSw3IEBAIGNpZnNfc2VzX2FkZF9jaGFubmVsKHN0cnVjdCBjaWZz
X3NiX2luZm8gKmNpZnNfc2IsIHN0cnVjdCBjaWZzX3NlcyAqc2VzLAogCXJldHVybiByYzsKIH0K
IAorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQogc3RhdGljIF9fdTMy
IGNpZnNfc3NldHVwX2hkcihzdHJ1Y3QgY2lmc19zZXMgKnNlcywKIAkJCSAgICAgc3RydWN0IFRD
UF9TZXJ2ZXJfSW5mbyAqc2VydmVyLAogCQkJICAgICBTRVNTSU9OX1NFVFVQX0FORFggKnBTTUIp
CkBAIC01OTEsNyArNTkyLDYgQEAgc3RhdGljIHZvaWQgdW5pY29kZV9kb21haW5fc3RyaW5nKGNo
YXIgKipwYmNjX2FyZWEsIHN0cnVjdCBjaWZzX3NlcyAqc2VzLAogCSpwYmNjX2FyZWEgPSBiY2Nf
cHRyOwogfQogCi0KIHN0YXRpYyB2b2lkIHVuaWNvZGVfc3NldHVwX3N0cmluZ3MoY2hhciAqKnBi
Y2NfYXJlYSwgc3RydWN0IGNpZnNfc2VzICpzZXMsCiAJCQkJICAgY29uc3Qgc3RydWN0IG5sc190
YWJsZSAqbmxzX2NwKQogewpAQCAtNzUzLDYgKzc1Myw3IEBAIHN0YXRpYyB2b2lkIGRlY29kZV9h
c2NpaV9zc2V0dXAoY2hhciAqKnBiY2NfYXJlYSwgX191MTYgYmxlZnQsCiAJICAgZm9yIGl0IGxh
dGVyLCBidXQgaXQgaXMgbm90IHZlcnkgaW1wb3J0YW50ICovCiAJY2lmc19kYmcoRllJLCAiYXNj
aWk6IGJ5dGVzIGxlZnQgJWRcbiIsIGJsZWZ0KTsKIH0KKyNlbmRpZiAvKiBDT05GSUdfQ0lGU19B
TExPV19JTlNFQ1VSRV9MRUdBQ1kgKi8KIAogaW50IGRlY29kZV9udGxtc3NwX2NoYWxsZW5nZShj
aGFyICpiY2NfcHRyLCBpbnQgYmxvYl9sZW4sCiAJCQkJICAgIHN0cnVjdCBjaWZzX3NlcyAqc2Vz
KQpAQCAtMTE3MCw2ICsxMTcxLDcgQEAgc3RydWN0IHNlc3NfZGF0YSB7CiAJc3RydWN0IGt2ZWMg
aW92WzNdOwogfTsKIAorI2lmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQog
c3RhdGljIGludAogc2Vzc19hbGxvY19idWZmZXIoc3RydWN0IHNlc3NfZGF0YSAqc2Vzc19kYXRh
LCBpbnQgd2N0KQogewpAQCAtMTg0NiwzICsxODQ4LDQgQEAgaW50IENJRlNfU2Vzc1NldHVwKGNv
bnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3NlcyAqc2VzLAogCWtmcmVlKHNlc3Nf
ZGF0YSk7CiAJcmV0dXJuIHJjOwogfQorI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VD
VVJFX0xFR0FDWSAqLwpkaWZmIC0tZ2l0IGEvZnMvY2lmcy90cmFuc3BvcnQuYyBiL2ZzL2NpZnMv
dHJhbnNwb3J0LmMKaW5kZXggMTYwNDYzZTIyYzk1Li45MTRhN2FhZjlmYTcgMTAwNjQ0Ci0tLSBh
L2ZzL2NpZnMvdHJhbnNwb3J0LmMKKysrIGIvZnMvY2lmcy90cmFuc3BvcnQuYwpAQCAtMjEsNiAr
MjEsNyBAQAogI2luY2x1ZGUgPGFzbS9wcm9jZXNzb3IuaD4KICNpbmNsdWRlIDxsaW51eC9tZW1w
b29sLmg+CiAjaW5jbHVkZSA8bGludXgvc2NoZWQvc2lnbmFsLmg+CisjaW5jbHVkZSA8bGludXgv
dGFza19pb19hY2NvdW50aW5nX29wcy5oPgogI2luY2x1ZGUgImNpZnNwZHUuaCIKICNpbmNsdWRl
ICJjaWZzZ2xvYi5oIgogI2luY2x1ZGUgImNpZnNwcm90by5oIgpAQCAtMTYzOCwzICsxNjM5LDE4
MSBAQCBTZW5kUmVjZWl2ZUJsb2NraW5nTG9jayhjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1
Y3QgY2lmc190Y29uICp0Y29uLAogCQlyZXR1cm4gLUVSRVNUQVJUU1lTOwogCXJldHVybiByYzsK
IH0KKworLyoKKyAqIERpc2NhcmQgYW55IHJlbWFpbmluZyBkYXRhIGluIHRoZSBjdXJyZW50IFNN
Qi4gVG8gZG8gdGhpcywgd2UgYm9ycm93IHRoZQorICogY3VycmVudCBiaWdidWYuCisgKi8KK2lu
dAorY2lmc19kaXNjYXJkX3JlbWFpbmluZ19kYXRhKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNl
cnZlcikKK3sKKwl1bnNpZ25lZCBpbnQgcmZjbGVuID0gc2VydmVyLT5wZHVfc2l6ZTsKKwlpbnQg
cmVtYWluaW5nID0gcmZjbGVuICsgc2VydmVyLT52YWxzLT5oZWFkZXJfcHJlYW1ibGVfc2l6ZSAt
CisJCXNlcnZlci0+dG90YWxfcmVhZDsKKworCXdoaWxlIChyZW1haW5pbmcgPiAwKSB7CisJCWlu
dCBsZW5ndGg7CisKKwkJbGVuZ3RoID0gY2lmc19kaXNjYXJkX2Zyb21fc29ja2V0KHNlcnZlciwK
KwkJCQltaW5fdChzaXplX3QsIHJlbWFpbmluZywKKwkJCQkgICAgICBDSUZTTWF4QnVmU2l6ZSAr
IE1BWF9IRUFERVJfU0laRShzZXJ2ZXIpKSk7CisJCWlmIChsZW5ndGggPCAwKQorCQkJcmV0dXJu
IGxlbmd0aDsKKwkJc2VydmVyLT50b3RhbF9yZWFkICs9IGxlbmd0aDsKKwkJcmVtYWluaW5nIC09
IGxlbmd0aDsKKwl9CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludAorX19jaWZzX3JlYWR2
X2Rpc2NhcmQoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3QgbWlkX3FfZW50
cnkgKm1pZCwKKwkJICAgICBib29sIG1hbGZvcm1lZCkKK3sKKwlpbnQgbGVuZ3RoOworCisJbGVu
Z3RoID0gY2lmc19kaXNjYXJkX3JlbWFpbmluZ19kYXRhKHNlcnZlcik7CisJZGVxdWV1ZV9taWQo
bWlkLCBtYWxmb3JtZWQpOworCW1pZC0+cmVzcF9idWYgPSBzZXJ2ZXItPnNtYWxsYnVmOworCXNl
cnZlci0+c21hbGxidWYgPSBOVUxMOworCXJldHVybiBsZW5ndGg7Cit9CisKK3N0YXRpYyBpbnQK
K2NpZnNfcmVhZHZfZGlzY2FyZChzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHN0cnVj
dCBtaWRfcV9lbnRyeSAqbWlkKQoreworCXN0cnVjdCBjaWZzX3JlYWRkYXRhICpyZGF0YSA9IG1p
ZC0+Y2FsbGJhY2tfZGF0YTsKKworCXJldHVybiAgX19jaWZzX3JlYWR2X2Rpc2NhcmQoc2VydmVy
LCBtaWQsIHJkYXRhLT5yZXN1bHQpOworfQorCitpbnQKK2NpZnNfcmVhZHZfcmVjZWl2ZShzdHJ1
Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQorewor
CWludCBsZW5ndGgsIGxlbjsKKwl1bnNpZ25lZCBpbnQgZGF0YV9vZmZzZXQsIGRhdGFfbGVuOwor
CXN0cnVjdCBjaWZzX3JlYWRkYXRhICpyZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKKwljaGFy
ICpidWYgPSBzZXJ2ZXItPnNtYWxsYnVmOworCXVuc2lnbmVkIGludCBidWZsZW4gPSBzZXJ2ZXIt
PnBkdV9zaXplICsKKwkJc2VydmVyLT52YWxzLT5oZWFkZXJfcHJlYW1ibGVfc2l6ZTsKKwlib29s
IHVzZV9yZG1hX21yID0gZmFsc2U7CisKKwljaWZzX2RiZyhGWUksICIlczogbWlkPSVsbHUgb2Zm
c2V0PSVsbHUgYnl0ZXM9JXVcbiIsCisJCSBfX2Z1bmNfXywgbWlkLT5taWQsIHJkYXRhLT5vZmZz
ZXQsIHJkYXRhLT5ieXRlcyk7CisKKwkvKgorCSAqIHJlYWQgdGhlIHJlc3Qgb2YgUkVBRF9SU1Ag
aGVhZGVyIChzYW5zIERhdGEgYXJyYXkpLCBvciB3aGF0ZXZlciB3ZQorCSAqIGNhbiBpZiB0aGVy
ZSdzIG5vdCBlbm91Z2ggZGF0YS4gQXQgdGhpcyBwb2ludCwgd2UndmUgcmVhZCBkb3duIHRvCisJ
ICogdGhlIE1pZC4KKwkgKi8KKwlsZW4gPSBtaW5fdCh1bnNpZ25lZCBpbnQsIGJ1Zmxlbiwgc2Vy
dmVyLT52YWxzLT5yZWFkX3JzcF9zaXplKSAtCisJCQkJCQkJSEVBREVSX1NJWkUoc2VydmVyKSAr
IDE7CisKKwlsZW5ndGggPSBjaWZzX3JlYWRfZnJvbV9zb2NrZXQoc2VydmVyLAorCQkJCSAgICAg
ICBidWYgKyBIRUFERVJfU0laRShzZXJ2ZXIpIC0gMSwgbGVuKTsKKwlpZiAobGVuZ3RoIDwgMCkK
KwkJcmV0dXJuIGxlbmd0aDsKKwlzZXJ2ZXItPnRvdGFsX3JlYWQgKz0gbGVuZ3RoOworCisJaWYg
KHNlcnZlci0+b3BzLT5pc19zZXNzaW9uX2V4cGlyZWQgJiYKKwkgICAgc2VydmVyLT5vcHMtPmlz
X3Nlc3Npb25fZXhwaXJlZChidWYpKSB7CisJCWNpZnNfcmVjb25uZWN0KHNlcnZlciwgdHJ1ZSk7
CisJCXJldHVybiAtMTsKKwl9CisKKwlpZiAoc2VydmVyLT5vcHMtPmlzX3N0YXR1c19wZW5kaW5n
ICYmCisJICAgIHNlcnZlci0+b3BzLT5pc19zdGF0dXNfcGVuZGluZyhidWYsIHNlcnZlcikpIHsK
KwkJY2lmc19kaXNjYXJkX3JlbWFpbmluZ19kYXRhKHNlcnZlcik7CisJCXJldHVybiAtMTsKKwl9
CisKKwkvKiBzZXQgdXAgZmlyc3QgdHdvIGlvdiBmb3Igc2lnbmF0dXJlIGNoZWNrIGFuZCB0byBn
ZXQgY3JlZGl0cyAqLworCXJkYXRhLT5pb3ZbMF0uaW92X2Jhc2UgPSBidWY7CisJcmRhdGEtPmlv
dlswXS5pb3ZfbGVuID0gc2VydmVyLT52YWxzLT5oZWFkZXJfcHJlYW1ibGVfc2l6ZTsKKwlyZGF0
YS0+aW92WzFdLmlvdl9iYXNlID0gYnVmICsgc2VydmVyLT52YWxzLT5oZWFkZXJfcHJlYW1ibGVf
c2l6ZTsKKwlyZGF0YS0+aW92WzFdLmlvdl9sZW4gPQorCQlzZXJ2ZXItPnRvdGFsX3JlYWQgLSBz
ZXJ2ZXItPnZhbHMtPmhlYWRlcl9wcmVhbWJsZV9zaXplOworCWNpZnNfZGJnKEZZSSwgIjA6IGlv
dl9iYXNlPSVwIGlvdl9sZW49JXp1XG4iLAorCQkgcmRhdGEtPmlvdlswXS5pb3ZfYmFzZSwgcmRh
dGEtPmlvdlswXS5pb3ZfbGVuKTsKKwljaWZzX2RiZyhGWUksICIxOiBpb3ZfYmFzZT0lcCBpb3Zf
bGVuPSV6dVxuIiwKKwkJIHJkYXRhLT5pb3ZbMV0uaW92X2Jhc2UsIHJkYXRhLT5pb3ZbMV0uaW92
X2xlbik7CisKKwkvKiBXYXMgdGhlIFNNQiByZWFkIHN1Y2Nlc3NmdWw/ICovCisJcmRhdGEtPnJl
c3VsdCA9IHNlcnZlci0+b3BzLT5tYXBfZXJyb3IoYnVmLCBmYWxzZSk7CisJaWYgKHJkYXRhLT5y
ZXN1bHQgIT0gMCkgeworCQljaWZzX2RiZyhGWUksICIlczogc2VydmVyIHJldHVybmVkIGVycm9y
ICVkXG4iLAorCQkJIF9fZnVuY19fLCByZGF0YS0+cmVzdWx0KTsKKwkJLyogbm9ybWFsIGVycm9y
IG9uIHJlYWQgcmVzcG9uc2UgKi8KKwkJcmV0dXJuIF9fY2lmc19yZWFkdl9kaXNjYXJkKHNlcnZl
ciwgbWlkLCBmYWxzZSk7CisJfQorCisJLyogSXMgdGhlcmUgZW5vdWdoIHRvIGdldCB0byB0aGUg
cmVzdCBvZiB0aGUgUkVBRF9SU1AgaGVhZGVyPyAqLworCWlmIChzZXJ2ZXItPnRvdGFsX3JlYWQg
PCBzZXJ2ZXItPnZhbHMtPnJlYWRfcnNwX3NpemUpIHsKKwkJY2lmc19kYmcoRllJLCAiJXM6IHNl
cnZlciByZXR1cm5lZCBzaG9ydCBoZWFkZXIuIGdvdD0ldSBleHBlY3RlZD0lenVcbiIsCisJCQkg
X19mdW5jX18sIHNlcnZlci0+dG90YWxfcmVhZCwKKwkJCSBzZXJ2ZXItPnZhbHMtPnJlYWRfcnNw
X3NpemUpOworCQlyZGF0YS0+cmVzdWx0ID0gLUVJTzsKKwkJcmV0dXJuIGNpZnNfcmVhZHZfZGlz
Y2FyZChzZXJ2ZXIsIG1pZCk7CisJfQorCisJZGF0YV9vZmZzZXQgPSBzZXJ2ZXItPm9wcy0+cmVh
ZF9kYXRhX29mZnNldChidWYpICsKKwkJc2VydmVyLT52YWxzLT5oZWFkZXJfcHJlYW1ibGVfc2l6
ZTsKKwlpZiAoZGF0YV9vZmZzZXQgPCBzZXJ2ZXItPnRvdGFsX3JlYWQpIHsKKwkJLyoKKwkJICog
d2luMms4IHNvbWV0aW1lcyBzZW5kcyBhbiBvZmZzZXQgb2YgMCB3aGVuIHRoZSByZWFkCisJCSAq
IGlzIGJleW9uZCB0aGUgRU9GLiBUcmVhdCBpdCBhcyBpZiB0aGUgZGF0YSBzdGFydHMganVzdCBh
ZnRlcgorCQkgKiB0aGUgaGVhZGVyLgorCQkgKi8KKwkJY2lmc19kYmcoRllJLCAiJXM6IGRhdGEg
b2Zmc2V0ICgldSkgaW5zaWRlIHJlYWQgcmVzcG9uc2UgaGVhZGVyXG4iLAorCQkJIF9fZnVuY19f
LCBkYXRhX29mZnNldCk7CisJCWRhdGFfb2Zmc2V0ID0gc2VydmVyLT50b3RhbF9yZWFkOworCX0g
ZWxzZSBpZiAoZGF0YV9vZmZzZXQgPiBNQVhfQ0lGU19TTUFMTF9CVUZGRVJfU0laRSkgeworCQkv
KiBkYXRhX29mZnNldCBpcyBiZXlvbmQgdGhlIGVuZCBvZiBzbWFsbGJ1ZiAqLworCQljaWZzX2Ri
ZyhGWUksICIlczogZGF0YSBvZmZzZXQgKCV1KSBiZXlvbmQgZW5kIG9mIHNtYWxsYnVmXG4iLAor
CQkJIF9fZnVuY19fLCBkYXRhX29mZnNldCk7CisJCXJkYXRhLT5yZXN1bHQgPSAtRUlPOworCQly
ZXR1cm4gY2lmc19yZWFkdl9kaXNjYXJkKHNlcnZlciwgbWlkKTsKKwl9CisKKwljaWZzX2RiZyhG
WUksICIlczogdG90YWxfcmVhZD0ldSBkYXRhX29mZnNldD0ldVxuIiwKKwkJIF9fZnVuY19fLCBz
ZXJ2ZXItPnRvdGFsX3JlYWQsIGRhdGFfb2Zmc2V0KTsKKworCWxlbiA9IGRhdGFfb2Zmc2V0IC0g
c2VydmVyLT50b3RhbF9yZWFkOworCWlmIChsZW4gPiAwKSB7CisJCS8qIHJlYWQgYW55IGp1bmsg
YmVmb3JlIGRhdGEgaW50byB0aGUgcmVzdCBvZiBzbWFsbGJ1ZiAqLworCQlsZW5ndGggPSBjaWZz
X3JlYWRfZnJvbV9zb2NrZXQoc2VydmVyLAorCQkJCQkgICAgICAgYnVmICsgc2VydmVyLT50b3Rh
bF9yZWFkLCBsZW4pOworCQlpZiAobGVuZ3RoIDwgMCkKKwkJCXJldHVybiBsZW5ndGg7CisJCXNl
cnZlci0+dG90YWxfcmVhZCArPSBsZW5ndGg7CisJfQorCisJLyogaG93IG11Y2ggZGF0YSBpcyBp
biB0aGUgcmVzcG9uc2U/ICovCisjaWZkZWYgQ09ORklHX0NJRlNfU01CX0RJUkVDVAorCXVzZV9y
ZG1hX21yID0gcmRhdGEtPm1yOworI2VuZGlmCisJZGF0YV9sZW4gPSBzZXJ2ZXItPm9wcy0+cmVh
ZF9kYXRhX2xlbmd0aChidWYsIHVzZV9yZG1hX21yKTsKKwlpZiAoIXVzZV9yZG1hX21yICYmIChk
YXRhX29mZnNldCArIGRhdGFfbGVuID4gYnVmbGVuKSkgeworCQkvKiBkYXRhX2xlbiBpcyBjb3Jy
dXB0IC0tIGRpc2NhcmQgZnJhbWUgKi8KKwkJcmRhdGEtPnJlc3VsdCA9IC1FSU87CisJCXJldHVy
biBjaWZzX3JlYWR2X2Rpc2NhcmQoc2VydmVyLCBtaWQpOworCX0KKworCWxlbmd0aCA9IHJkYXRh
LT5yZWFkX2ludG9fcGFnZXMoc2VydmVyLCByZGF0YSwgZGF0YV9sZW4pOworCWlmIChsZW5ndGgg
PCAwKQorCQlyZXR1cm4gbGVuZ3RoOworCisJc2VydmVyLT50b3RhbF9yZWFkICs9IGxlbmd0aDsK
KworCWNpZnNfZGJnKEZZSSwgInRvdGFsX3JlYWQ9JXUgYnVmbGVuPSV1IHJlbWFpbmluZz0ldVxu
IiwKKwkJIHNlcnZlci0+dG90YWxfcmVhZCwgYnVmbGVuLCBkYXRhX2xlbik7CisKKwkvKiBkaXNj
YXJkIGFueXRoaW5nIGxlZnQgb3ZlciAqLworCWlmIChzZXJ2ZXItPnRvdGFsX3JlYWQgPCBidWZs
ZW4pCisJCXJldHVybiBjaWZzX3JlYWR2X2Rpc2NhcmQoc2VydmVyLCBtaWQpOworCisJZGVxdWV1
ZV9taWQobWlkLCBmYWxzZSk7CisJbWlkLT5yZXNwX2J1ZiA9IHNlcnZlci0+c21hbGxidWY7CisJ
c2VydmVyLT5zbWFsbGJ1ZiA9IE5VTEw7CisJcmV0dXJuIGxlbmd0aDsKK30KZGlmZiAtLWdpdCBh
L2ZzL2NpZnMveGF0dHIuYyBiL2ZzL2NpZnMveGF0dHIuYwppbmRleCA5ZDQ4NmZiYmZiYmQuLjk5
OGZhNTFmOWI2OCAxMDA2NDQKLS0tIGEvZnMvY2lmcy94YXR0ci5jCisrKyBiL2ZzL2NpZnMveGF0
dHIuYwpAQCAtMjAxLDYgKzIwMSw3IEBAIHN0YXRpYyBpbnQgY2lmc194YXR0cl9zZXQoY29uc3Qg
c3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIsCiAJCWJyZWFrOwogCX0KIAorI2lmZGVmIENP
TkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWQogCWNhc2UgWEFUVFJfQUNMX0FDQ0VTUzoK
ICNpZmRlZiBDT05GSUdfQ0lGU19QT1NJWAogCQlpZiAoIXZhbHVlKQpAQCAtMjI0LDYgKzIyNSw3
IEBAIHN0YXRpYyBpbnQgY2lmc194YXR0cl9zZXQoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIg
KmhhbmRsZXIsCiAJCQkJY2lmc19yZW1hcChjaWZzX3NiKSk7CiAjZW5kaWYgIC8qIENPTkZJR19D
SUZTX1BPU0lYICovCiAJCWJyZWFrOworI2VuZGlmIC8qIENPTkZJR19DSUZTX0FMTE9XX0lOU0VD
VVJFX0xFR0FDWSAqLwogCX0KIAogb3V0OgpAQCAtMzY0LDcgKzM2Niw3IEBAIHN0YXRpYyBpbnQg
Y2lmc194YXR0cl9nZXQoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIsCiAJCX0K
IAkJYnJlYWs7CiAJfQotCisjaWZkZWYgQ09ORklHX0NJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZ
CiAJY2FzZSBYQVRUUl9BQ0xfQUNDRVNTOgogI2lmZGVmIENPTkZJR19DSUZTX1BPU0lYCiAJCWlm
IChzYi0+c19mbGFncyAmIFNCX1BPU0lYQUNMKQpAQCAtMzg0LDYgKzM4Niw3IEBAIHN0YXRpYyBp
bnQgY2lmc194YXR0cl9nZXQoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIsCiAJ
CQkJY2lmc19yZW1hcChjaWZzX3NiKSk7CiAjZW5kaWYgIC8qIENPTkZJR19DSUZTX1BPU0lYICov
CiAJCWJyZWFrOworI2VuZGlmIC8qIGlmZGVmIENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xF
R0FDWSAqLwogCX0KIAogCS8qIFdlIGNvdWxkIGFkZCBhbiBhZGRpdGlvbmFsIGNoZWNrIGZvciBz
dHJlYW1zIGllCi0tIAoyLjM0LjEKCg==
--000000000000bd920905e5309328--
