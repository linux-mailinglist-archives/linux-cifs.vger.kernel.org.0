Return-Path: <linux-cifs-owner@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 4A1923AC3E2
	for <lists+linux-cifs@lfdr.de>; Fri, 18 Jun 2021 08:29:57 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231436AbhFRGcE (ORCPT <rfc822;lists+linux-cifs@lfdr.de>);
        Fri, 18 Jun 2021 02:32:04 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:50152 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231422AbhFRGcE (ORCPT
        <rfc822;linux-cifs@vger.kernel.org>); Fri, 18 Jun 2021 02:32:04 -0400
Received: from mail-lf1-x12b.google.com (mail-lf1-x12b.google.com [IPv6:2a00:1450:4864:20::12b])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 6926FC061574
        for <linux-cifs@vger.kernel.org>; Thu, 17 Jun 2021 23:29:55 -0700 (PDT)
Received: by mail-lf1-x12b.google.com with SMTP id j2so14722745lfg.9
        for <linux-cifs@vger.kernel.org>; Thu, 17 Jun 2021 23:29:55 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:from:date:message-id:subject:to;
        bh=0MbWd1AfCSK01HrWsd4kG/qhZFGBppSG/d3MO0ZX71E=;
        b=fu2MR3qy/3eaJKmo4fAVwM1SX20rLAv895bUJw4mvQH4D4v6RW++WmaUpcz4xDDbZK
         WZxphjXYOO9norcgDO4NuE8ldrhuMmsd09yzSbUIOtIu0S9qjWdgTUPgti/gXseGD/0i
         DyIzjwUe6jl3ZEiR/R232eSVAB3HUljRZp7rbG0ezXczn3GLiZV+48Zg7wq7VjKHRt+/
         lzlHUHJmWPFR8mQPO5W2KPX/kpNm7bq6lAvT3qS+4dgL8G43qEaubeITKNNy6dMjZNh+
         9zhgJJLD+M3ai9vf+K5zck6amg5hm1HkbW5lGWeSHR1Azf10QtKk9bvSMJBRfrq+4iXf
         N45A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to;
        bh=0MbWd1AfCSK01HrWsd4kG/qhZFGBppSG/d3MO0ZX71E=;
        b=oSEleyBxL6Fw4pN2bif76pVTsVUs3uOQf2aoKvDS3KJfEf6xxxgMV8sdM6FX9awkWJ
         AMxTAl5XlGbkYbW+UX379FJ6O1QqVF6/p1CVgLmdV+4xOy9xJMxFhz3yBs/LM/leOXPv
         igWYvE0YYzGsRPEOyYzo/mOSnjJ74tfYKR6K7V9gJAq06W/ywUUnlHamuMJ3VXj9N/zQ
         3SbZjJGqlvlEvMuQSWBHhEw5NGHm5tTJ0Cy/GNUiq3m5Bd9DLTf0a9GJ36zSwMIh5DgY
         kamEAeqh0nhImkdGxqvBrutStDJFr4PJTEJysCe79ZEJsW+SyU3NP2HUviqWwm49abOu
         GI9A==
X-Gm-Message-State: AOAM531FokhMgmTSfFDA/rnQk3xz72fE1OHt9OMrmHbRDRD6e7ypAdA4
        rxRLMLkyTUPCUfQONkt6ha9mKHVM9oeJZSQtd8PM1qBdMdM=
X-Google-Smtp-Source: ABdhPJyzKEmP5y8jVEMCczgBWxKV3STH0epq8PUjFu7ITY3Ep8ZS/6H4rCkK5gl0+rhPNbT/KNqphxPLN7tNNSLtgH4=
X-Received: by 2002:a05:6512:344f:: with SMTP id j15mr1892115lfr.175.1623997793593;
 Thu, 17 Jun 2021 23:29:53 -0700 (PDT)
MIME-Version: 1.0
From:   Steve French <smfrench@gmail.com>
Date:   Fri, 18 Jun 2021 01:29:42 -0500
Message-ID: <CAH2r5mtF2ps+3TetStX7cZE-B2RXvXi3ffZKMkFdT7h_giA53Q@mail.gmail.com>
Subject: [PATCH] [CIFS] changes to support multichannel during channel reconnect
To:     Shyam Prasad N <nspmangalore@gmail.com>,
        CIFS <linux-cifs@vger.kernel.org>
Content-Type: multipart/mixed; boundary="0000000000009a8a4005c50473db"
Precedence: bulk
List-ID: <linux-cifs.vger.kernel.org>
X-Mailing-List: linux-cifs@vger.kernel.org

--0000000000009a8a4005c50473db
Content-Type: text/plain; charset="UTF-8"

Lightly updated version of Shyam's patch to merge into current for-next


-- 
Thanks,

Steve

--0000000000009a8a4005c50473db
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-changes-to-support-multichannel-during-channel-.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-changes-to-support-multichannel-during-channel-.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_kq1ycjc50>
X-Attachment-Id: f_kq1ycjc50

RnJvbSBlNzYwNWM4YjE2OGU0OGEzMWE4Y2ZlMmRjYjViMjQ3OGZiMjZmNjc4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTaHlhbSBQcmFzYWQgTiA8c3ByYXNhZEBtaWNyb3NvZnQuY29t
PgpEYXRlOiBTYXQsIDIyIE1heSAyMDIxIDE1OjQ0OjQ0ICswMDAwClN1YmplY3Q6IFtQQVRDSF0g
Y2lmczogY2hhbmdlcyB0byBzdXBwb3J0IG11bHRpY2hhbm5lbCBkdXJpbmcgY2hhbm5lbAogcmVj
b25uZWN0CgpUaGUgcmVjb25uZWN0IHNjZW5hcmlvIHdoZW4gdXNpbmcgYSBtdWx0aWNoYW5uZWwg
bW91bnQgaGFkIGEKZmV3IGlzc3VlczoKCjEuIEEgdGNwIGNvbm5lY3Rpb24gb24gYmluZGluZyBj
aGFubmVsIGRpZCBub3QgaGF2ZSBhIHdheSB0bwpnZXQgdG8gdGhlIHByaW1hcnkgY29ubmVjdGlv
biBvciBzbWIgY2hhbm5lbCBlYXNpbHkuCkkgcmVwbGFjZWQgaXNfY2hhbm5lbCBmaWVsZCB3aXRo
IHByaW1hcnlfc2VydmVyLCB3aGljaCBpcyBhCnJlZmVyZW5jZWQgcG9pbnRlciB0byB0aGUgcHJp
bWFyeSBjaGFubmVsIHRjcCBjb25uZWN0aW9uLgpUaGlzIGFsc28gYWxsb3dzIHVzIHRvIGdldCB0
byB0aGUgc21iIHNlc3Npb24gZm9yIHRoZSBjaGFubmVsLgoKMi4gSW4gY2FzZSBvZiBjaWZzX3Jl
Y29ubmVjdCwgd2UgbmVlZGVkIGEgd2F5IHRvIGlkZW50aWZ5IHRoZQpjaGFubmVscyB1bmRlciB0
aGUgc21iIHNlc3Npb24gd2hpY2ggYXJlIGluIHJlY29ubmVjdCwgc28gdGhhdAp0aGUgdHJhZmZp
YyB0byBvdGhlciBjaGFubmVscyBjYW4gY29udGludWUuIFNvIEkgcmVwbGFjZWQKdGhlIGJvb2wg
bmVlZF9yZWNvbm5lY3Qgd2l0aCBhIGJpdG1hc2sgaWRlbnRpZnlpbmcgYWxsIHRoZQpjaGFubmVs
cyB0aGF0IGFyZSBjdXJyZW50bHkgbmVlZGluZyByZWNvbm5lY3Rpb24gYW5kIGNhbGxlZCBpdApj
aGFuc19uZWVkX3JlY29ubmVjdC4gV2hlbiBhIGNoYW5uZWwgbmVlZHMgcmVjb25uZWN0aW9uLCB0
aGUgYml0CmNvcnJlc3BvbmRpbmcgdG8gdGhlIGluZGV4IG9mIHRoZSBzZXJ2ZXIgaW4gc2VzLT5j
aGFucyBpcyB1c2VkCnRvIHNldCB0aGlzIGJpdG1hc2suIENoZWNraW5nIGlmIG5vIGNoYW5uZWxz
IG9yIGFsbCB0aGUgY2hhbm5lbHMKbmVlZCByZWNvbm5lY3QgdGhlbiBiZWNvbWVzIHZlcnkgZWFz
eS4KCjMuIE1hcmsgdGNvbi0+bmVlZF9yZWNvbm5lY3Qgb25seSB3aGVuIGFsbCB0aGUgY2hhbm5l
bHMgdW5kZXJuZWF0aApuZWVkIHRvIHJlY29ubmVjdC4KClNpZ25lZC1vZmYtYnk6IFNoeWFtIFBy
YXNhZCBOIDxzcHJhc2FkQG1pY3Jvc29mdC5jb20+ClNpZ25lZC1vZmYtYnk6IFN0ZXZlIEZyZW5j
aCA8c3RmcmVuY2hAbWljcm9zb2Z0LmNvbT4KLS0tCiBmcy9jaWZzL2NpZnNfZGVidWcuYyAgICB8
ICAyICstCiBmcy9jaWZzL2NpZnNnbG9iLmggICAgICB8IDI0ICsrKysrKysrKysrLS0KIGZzL2Np
ZnMvY2lmc3Byb3RvLmggICAgIHwgMTcgKysrKysrKystCiBmcy9jaWZzL2NpZnNzbWIuYyAgICAg
ICB8IDI3ICsrKysrKysrKysrLS0tCiBmcy9jaWZzL2Nvbm5lY3QuYyAgICAgICB8IDQ0ICsrKysr
KysrKysrKysrKysrKystLS0tCiBmcy9jaWZzL3Nlc3MuYyAgICAgICAgICB8IDgwICsrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLS0tCiBmcy9jaWZzL3NtYjJwZHUuYyAgICAg
ICB8IDQ0ICsrKysrKysrKysrKysrKysrLS0tLS0tCiBmcy9jaWZzL3NtYjJ0cmFuc3BvcnQuYyB8
ICA1ICsrLQogOCBmaWxlcyBjaGFuZ2VkLCAyMDcgaW5zZXJ0aW9ucygrKSwgMzYgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9jaWZzX2RlYnVnLmMgYi9mcy9jaWZzL2NpZnNfZGVi
dWcuYwppbmRleCA4ODU3YWM3ZTdhMTQuLmFjNjY5ODU3MjhjMCAxMDA2NDQKLS0tIGEvZnMvY2lm
cy9jaWZzX2RlYnVnLmMKKysrIGIvZnMvY2lmcy9jaWZzX2RlYnVnLmMKQEAgLTI3NSw3ICsyNzUs
NyBAQCBzdGF0aWMgaW50IGNpZnNfZGVidWdfZGF0YV9wcm9jX3Nob3coc3RydWN0IHNlcV9maWxl
ICptLCB2b2lkICp2KQogCWMgPSAwOwogCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwog
CWxpc3RfZm9yX2VhY2hfZW50cnkoc2VydmVyLCAmY2lmc190Y3Bfc2VzX2xpc3QsIHRjcF9zZXNf
bGlzdCkgewotCQlpZiAoc2VydmVyLT5pc19jaGFubmVsKQorCQlpZiAoQ0lGU19TRVJWRVJfSVNf
Q0hBTihzZXJ2ZXIpKQogCQkJY29udGludWU7CiAKIAkJYysrOwpkaWZmIC0tZ2l0IGEvZnMvY2lm
cy9jaWZzZ2xvYi5oIGIvZnMvY2lmcy9jaWZzZ2xvYi5oCmluZGV4IDk4ODM0NjkwNGZkMC4uNzg0
OWRmM2RhODFiIDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNnbG9iLmgKKysrIGIvZnMvY2lmcy9j
aWZzZ2xvYi5oCkBAIC02ODEsNyArNjgxLDE1IEBAIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gewog
CSAqLwogCWludCBucl90YXJnZXRzOwogCWJvb2wgbm9ibG9ja2NudDsgLyogdXNlIG5vbi1ibG9j
a2luZyBjb25uZWN0KCkgKi8KLQlib29sIGlzX2NoYW5uZWw7IC8qIGlmIGEgc2Vzc2lvbiBjaGFu
bmVsICovCisKKwkvKgorCSAqIElmIHRoaXMgaXMgYSBzZXNzaW9uIGNoYW5uZWwsCisJICogcHJp
bWFyeV9zZXJ2ZXIgaG9sZHMgdGhlIHJlZi1jb3VudGVkCisJICogcG9pbnRlciB0byBwcmltYXJ5
IGNoYW5uZWwgY29ubmVjdGlvbiBmb3IgdGhlIHNlc3Npb24uCisJICovCisjZGVmaW5lIENJRlNf
U0VSVkVSX0lTX0NIQU4oc2VydmVyKQkoISEoc2VydmVyKS0+cHJpbWFyeV9zZXJ2ZXIpCisJc3Ry
dWN0IFRDUF9TZXJ2ZXJfSW5mbyAqcHJpbWFyeV9zZXJ2ZXI7CisKICNpZmRlZiBDT05GSUdfQ0lG
U19TV05fVVBDQUxMCiAJYm9vbCB1c2Vfc3duX2RzdGFkZHI7CiAJc3RydWN0IHNvY2thZGRyX3N0
b3JhZ2Ugc3duX2RzdGFkZHI7CkBAIC05MDUsNyArOTEzLDYgQEAgc3RydWN0IGNpZnNfc2VzIHsK
IAlzdHJ1Y3QgbnRsbXNzcF9hdXRoICpudGxtc3NwOyAvKiBjaXBoZXJ0ZXh0LCBmbGFncywgc2Vy
dmVyIGNoYWxsZW5nZSAqLwogCWVudW0gc2VjdXJpdHlFbnVtIHNlY3R5cGU7IC8qIHdoYXQgc2Vj
dXJpdHkgZmxhdm9yIHdhcyBzcGVjaWZpZWQ/ICovCiAJYm9vbCBzaWduOwkJLyogaXMgc2lnbmlu
ZyByZXF1aXJlZD8gKi8KLQlib29sIG5lZWRfcmVjb25uZWN0OjE7IC8qIGNvbm5lY3Rpb24gcmVz
ZXQsIHVpZCBub3cgaW52YWxpZCAqLwogCWJvb2wgZG9tYWluQXV0bzoxOwogCWJvb2wgYmluZGlu
ZzoxOyAvKiBhcmUgd2UgYmluZGluZyB0aGUgc2Vzc2lvbj8gKi8KIAlfX3UxNiBzZXNzaW9uX2Zs
YWdzOwpAQCAtOTMxLDExICs5MzgsMjQgQEAgc3RydWN0IGNpZnNfc2VzIHsKIAl1bnNpZ25lZCBs
b25nIGlmYWNlX2xhc3RfdXBkYXRlOyAvKiBqaWZmaWVzICovCiAKICNkZWZpbmUgQ0lGU19NQVhf
Q0hBTk5FTFMgMTYKKyNkZWZpbmUgQ0lGU19BTExfQ0hBTk5FTFNfU0VUKHNlcykJXAorCSgoMVVM
IDw8IChzZXMpLT5jaGFuX2NvdW50KSAtIDEpCisjZGVmaW5lIENJRlNfQUxMX0NIQU5TX05FRURf
UkVDT05ORUNUKHNlcykJXAorCSgoc2VzKS0+Y2hhbnNfbmVlZF9yZWNvbm5lY3QgPT0gQ0lGU19B
TExfQ0hBTk5FTFNfU0VUKHNlcykpCisjZGVmaW5lIENJRlNfQ0hBTl9ORUVEU19SRUNPTk5FQ1Qo
c2VzLCBpbmRleCkJXAorCXRlc3RfYml0KChpbmRleCksICYoc2VzKS0+Y2hhbnNfbmVlZF9yZWNv
bm5lY3QpCisKIAlzdHJ1Y3QgY2lmc19jaGFuIGNoYW5zW0NJRlNfTUFYX0NIQU5ORUxTXTsKIAlz
dHJ1Y3QgY2lmc19jaGFuICpiaW5kaW5nX2NoYW47CiAJc2l6ZV90IGNoYW5fY291bnQ7CiAJc2l6
ZV90IGNoYW5fbWF4OwogCWF0b21pY190IGNoYW5fc2VxOyAvKiByb3VuZCByb2JpbiBzdGF0ZSAq
LworCS8qCisJICogY2hhbnNfbmVlZF9yZWNvbm5lY3QgaXMgYSBiaXRtYXAgaW5kaWNhdGluZyB3
aGljaCBvZiB0aGUgY2hhbm5lbHMKKwkgKiB1bmRlciB0aGlzIHNtYiBzZXNzaW9uIG5lZWRzIHRv
IGJlIHJlY29ubmVjdGVkLgorCSAqIElmIG5vdCBtdWx0aWNoYW5uZWwgc2Vzc2lvbiwgb25seSBv
bmUgYml0IHdpbGwgYmUgdXNlZC4KKwkgKi8KKwl1bnNpZ25lZCBsb25nIGNoYW5zX25lZWRfcmVj
b25uZWN0OwogfTsKIAogLyoKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc3Byb3RvLmggYi9mcy9j
aWZzL2NpZnNwcm90by5oCmluZGV4IGUwZGVmMGYwNzE0Yi4uMjg5NTFjZDExMjgwIDEwMDY0NAot
LS0gYS9mcy9jaWZzL2NpZnNwcm90by5oCisrKyBiL2ZzL2NpZnMvY2lmc3Byb3RvLmgKQEAgLTI2
OCw3ICsyNjgsOSBAQCBleHRlcm4gdm9pZCBjaWZzX2Nsb3NlX2RlZmVycmVkX2ZpbGUoc3RydWN0
IGNpZnNJbm9kZUluZm8gKmNpZnNfaW5vZGUpOwogCiBleHRlcm4gdm9pZCBjaWZzX2Nsb3NlX2Fs
bF9kZWZlcnJlZF9maWxlcyhzdHJ1Y3QgY2lmc190Y29uICpjaWZzX3Rjb24pOwogCi1leHRlcm4g
c3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqY2lmc19nZXRfdGNwX3Nlc3Npb24oc3RydWN0IHNtYjNf
ZnNfY29udGV4dCAqY3R4KTsKK2V4dGVybiBzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICoKK2NpZnNf
Z2V0X3RjcF9zZXNzaW9uKHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCwKKwkJICAgICBzdHJ1
Y3QgVENQX1NlcnZlcl9JbmZvICpwcmltYXJ5X3NlcnZlcik7CiBleHRlcm4gdm9pZCBjaWZzX3B1
dF90Y3Bfc2Vzc2lvbihzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsCiAJCQkJIGludCBm
cm9tX3JlY29ubmVjdCk7CiBleHRlcm4gdm9pZCBjaWZzX3B1dF90Y29uKHN0cnVjdCBjaWZzX3Rj
b24gKnRjb24pOwpAQCAtNjA3LDYgKzYwOSwxOSBAQCBib29sIGlzX3NlcnZlcl91c2luZ19pZmFj
ZShzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsCiAJCQkgICBzdHJ1Y3QgY2lmc19zZXJ2
ZXJfaWZhY2UgKmlmYWNlKTsKIGJvb2wgaXNfc2VzX3VzaW5nX2lmYWNlKHN0cnVjdCBjaWZzX3Nl
cyAqc2VzLCBzdHJ1Y3QgY2lmc19zZXJ2ZXJfaWZhY2UgKmlmYWNlKTsKIAordW5zaWduZWQgaW50
CitjaWZzX3Nlc19nZXRfY2hhbl9pbmRleChzdHJ1Y3QgY2lmc19zZXMgKnNlcywKKwkJCXN0cnVj
dCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcik7Cit2b2lkCitjaWZzX2NoYW5fc2V0X25lZWRfcmVj
b25uZWN0KHN0cnVjdCBjaWZzX3NlcyAqc2VzLAorCQkJICAgICBzdHJ1Y3QgVENQX1NlcnZlcl9J
bmZvICpzZXJ2ZXIpOwordm9pZAorY2lmc19jaGFuX2NsZWFyX25lZWRfcmVjb25uZWN0KHN0cnVj
dCBjaWZzX3NlcyAqc2VzLAorCQkJICAgICAgIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZl
cik7Citib29sCitjaWZzX2NoYW5fbmVlZHNfcmVjb25uZWN0KHN0cnVjdCBjaWZzX3NlcyAqc2Vz
LAorCQkJICAgIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcik7CisKIHZvaWQgZXh0cmFj
dF91bmNfaG9zdG5hbWUoY29uc3QgY2hhciAqdW5jLCBjb25zdCBjaGFyICoqaCwgc2l6ZV90ICps
ZW4pOwogaW50IGNvcHlfcGF0aF9uYW1lKGNoYXIgKmRzdCwgY29uc3QgY2hhciAqc3JjKTsKIGlu
dCBzbWIyX3BhcnNlX3F1ZXJ5X2RpcmVjdG9yeShzdHJ1Y3QgY2lmc190Y29uICp0Y29uLCBzdHJ1
Y3Qga3ZlYyAqcnNwX2lvdiwKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc3NtYi5jIGIvZnMvY2lm
cy9jaWZzc21iLmMKaW5kZXggNThlYmVjNGQ0NDEzLi45NGNkMTU0YzRiOWEgMTAwNjQ0Ci0tLSBh
L2ZzL2NpZnMvY2lmc3NtYi5jCisrKyBiL2ZzL2NpZnMvY2lmc3NtYi5jCkBAIC0xODMsOSArMTgz
LDEzIEBAIGNpZnNfcmVjb25uZWN0X3Rjb24oc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwgaW50IHNt
Yl9jb21tYW5kKQogCQlyZXRyaWVzID0gc2VydmVyLT5ucl90YXJnZXRzOwogCX0KIAotCWlmICgh
c2VzLT5uZWVkX3JlY29ubmVjdCAmJiAhdGNvbi0+bmVlZF9yZWNvbm5lY3QpCisJaWYgKCFjaWZz
X2NoYW5fbmVlZHNfcmVjb25uZWN0KHNlcywgc2VydmVyKSAmJiAhdGNvbi0+bmVlZF9yZWNvbm5l
Y3QpCiAJCXJldHVybiAwOwogCisJY2lmc19kYmcoRllJLCAic2VzcyByZWNvbm5lY3QgbWFzazog
MHglbHgsIHRjb24gcmVjb25uZWN0OiAlZCIsCisJCSB0Y29uLT5zZXMtPmNoYW5zX25lZWRfcmVj
b25uZWN0LAorCQkgdGNvbi0+bmVlZF9yZWNvbm5lY3QpOworCiAJbmxzX2NvZGVwYWdlID0gbG9h
ZF9ubHNfZGVmYXVsdCgpOwogCiAJLyoKQEAgLTIwNSw4ICsyMDksMTkgQEAgY2lmc19yZWNvbm5l
Y3RfdGNvbihzdHJ1Y3QgY2lmc190Y29uICp0Y29uLCBpbnQgc21iX2NvbW1hbmQpCiAJCWdvdG8g
b3V0OwogCX0KIAorCS8qIFJlY2hlY2sgYWZ0ZXIgYWNxdWlyZSBtdXRleCAqLworCWlmICghY2lm
c19jaGFuX25lZWRzX3JlY29ubmVjdChzZXMsIHNlcnZlcikpIHsKKwkJLyogdGhpcyBqdXN0IG1l
YW5zIHRoYXQgd2Ugb25seSBuZWVkIHRvIHRjb24gKi8KKwkJaWYgKHRjb24tPm5lZWRfcmVjb25u
ZWN0KQorCQkJZ290byBza2lwX3Nlc3Nfc2V0dXA7CisKKwkJcmMgPSAtRUhPU1RET1dOOworCQlt
dXRleF91bmxvY2soJnNlcy0+c2Vzc2lvbl9tdXRleCk7CisJCWdvdG8gb3V0OworCX0KKwogCXJj
ID0gY2lmc19uZWdvdGlhdGVfcHJvdG9jb2woMCwgc2VzKTsKLQlpZiAocmMgPT0gMCAmJiBzZXMt
Pm5lZWRfcmVjb25uZWN0KQorCWlmICghcmMpCiAJCXJjID0gY2lmc19zZXR1cF9zZXNzaW9uKDAs
IHNlcywgbmxzX2NvZGVwYWdlKTsKIAogCS8qIGRvIHdlIG5lZWQgdG8gcmVjb25uZWN0IHRjb24/
ICovCkBAIC0yMTUsNiArMjMwLDcgQEAgY2lmc19yZWNvbm5lY3RfdGNvbihzdHJ1Y3QgY2lmc190
Y29uICp0Y29uLCBpbnQgc21iX2NvbW1hbmQpCiAJCWdvdG8gb3V0OwogCX0KIAorc2tpcF9zZXNz
X3NldHVwOgogCWNpZnNfbWFya19vcGVuX2ZpbGVzX2ludmFsaWQodGNvbik7CiAJcmMgPSBjaWZz
X3RyZWVfY29ubmVjdCgwLCB0Y29uLCBubHNfY29kZXBhZ2UpOwogCW11dGV4X3VubG9jaygmc2Vz
LT5zZXNzaW9uX211dGV4KTsKQEAgLTM1NCw3ICszNzAsOCBAQCBzdGF0aWMgaW50CiBzbWJfaW5p
dF9ub19yZWNvbm5lY3QoaW50IHNtYl9jb21tYW5kLCBpbnQgd2N0LCBzdHJ1Y3QgY2lmc190Y29u
ICp0Y29uLAogCQkJdm9pZCAqKnJlcXVlc3RfYnVmLCB2b2lkICoqcmVzcG9uc2VfYnVmKQogewot
CWlmICh0Y29uLT5zZXMtPm5lZWRfcmVjb25uZWN0IHx8IHRjb24tPm5lZWRfcmVjb25uZWN0KQor
CWlmIChjaWZzX2NoYW5fbmVlZHNfcmVjb25uZWN0KHRjb24tPnNlcywgdGNvbi0+c2VzLT5zZXJ2
ZXIpIHx8CisJICAgIHRjb24tPm5lZWRfcmVjb25uZWN0KQogCQlyZXR1cm4gLUVIT1NURE9XTjsK
IAogCXJldHVybiBfX3NtYl9pbml0KHNtYl9jb21tYW5kLCB3Y3QsIHRjb24sIHJlcXVlc3RfYnVm
LCByZXNwb25zZV9idWYpOwpAQCAtNzA1LDcgKzcyMiw3IEBAIENJRlNTTUJURGlzKGNvbnN0IHVu
c2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24pCiAJICogdGhlIHRjb24gaXMg
bm8gbG9uZ2VyIG9uIHRoZSBsaXN0LCBzbyBubyBuZWVkIHRvIHRha2UgbG9jayBiZWZvcmUKIAkg
KiBjaGVja2luZyB0aGlzLgogCSAqLwotCWlmICgodGNvbi0+bmVlZF9yZWNvbm5lY3QpIHx8ICh0
Y29uLT5zZXMtPm5lZWRfcmVjb25uZWN0KSkKKwlpZiAoKHRjb24tPm5lZWRfcmVjb25uZWN0KSB8
fCBDSUZTX0FMTF9DSEFOU19ORUVEX1JFQ09OTkVDVCh0Y29uLT5zZXMpKQogCQlyZXR1cm4gMDsK
IAogCXJjID0gc21hbGxfc21iX2luaXQoU01CX0NPTV9UUkVFX0RJU0NPTk5FQ1QsIDAsIHRjb24s
CkBAIC04MDEsNyArODE4LDcgQEAgQ0lGU1NNQkxvZ29mZihjb25zdCB1bnNpZ25lZCBpbnQgeGlk
LCBzdHJ1Y3QgY2lmc19zZXMgKnNlcykKIAkJcmV0dXJuIC1FSU87CiAKIAltdXRleF9sb2NrKCZz
ZXMtPnNlc3Npb25fbXV0ZXgpOwotCWlmIChzZXMtPm5lZWRfcmVjb25uZWN0KQorCWlmIChDSUZT
X0FMTF9DSEFOU19ORUVEX1JFQ09OTkVDVChzZXMpKQogCQlnb3RvIHNlc3Npb25fYWxyZWFkeV9k
ZWFkOyAvKiBubyBuZWVkIHRvIHNlbmQgU01CbG9nb2ZmIGlmIHVpZAogCQkJCQkgICAgICBhbHJl
YWR5IGNsb3NlZCBkdWUgdG8gcmVjb25uZWN0ICovCiAJcmMgPSBzbWFsbF9zbWJfaW5pdChTTUJf
Q09NX0xPR09GRl9BTkRYLCAyLCBOVUxMLCAodm9pZCAqKikmcFNNQik7CmRpZmYgLS1naXQgYS9m
cy9jaWZzL2Nvbm5lY3QuYyBiL2ZzL2NpZnMvY29ubmVjdC5jCmluZGV4IDhkOTU2MDdhOTMxMi4u
MDkyZGFmNTJlYjE3IDEwMDY0NAotLS0gYS9mcy9jaWZzL2Nvbm5lY3QuYworKysgYi9mcy9jaWZz
L2Nvbm5lY3QuYwpAQCAtMTY0LDcgKzE2NCw3IEBAIHN0YXRpYyBpbmxpbmUgaW50IHJlY29ubl9z
ZXR1cF9kZnNfdGFyZ2V0cyhzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiLAogICogY2lmcyB0
Y3Agc2Vzc2lvbiByZWNvbm5lY3Rpb24KICAqCiAgKiBtYXJrIHRjcCBzZXNzaW9uIGFzIHJlY29u
bmVjdGluZyBzbyB0ZW1wb3JhcmlseSBsb2NrZWQKLSAqIG1hcmsgYWxsIHNtYiBzZXNzaW9ucyBh
cyByZWNvbm5lY3RpbmcgZm9yIHRjcCBzZXNzaW9uCisgKiB1cGRhdGUgYWxsIHNtYiBzZXNzaW9u
cyBhYm91dCByZWNvbm5lY3Qgb2YgdGhpcyB0Y3Agc2Vzc2lvbgogICogcmVjb25uZWN0IHRjcCBz
ZXNzaW9uCiAgKiB3YWtlIHVwIHdhaXRlcnMgb24gcmVjb25uZWN0aW9uPyAtIChub3QgbmVlZGVk
IGN1cnJlbnRseSkKICAqLwpAQCAtMTcyLDYgKzE3Miw3IEBAIGludAogY2lmc19yZWNvbm5lY3Qo
c3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyKQogewogCWludCByYyA9IDA7CisJc3RydWN0
IFRDUF9TZXJ2ZXJfSW5mbyAqcHNlcnZlcjsKIAlzdHJ1Y3QgbGlzdF9oZWFkICp0bXAsICp0bXAy
OwogCXN0cnVjdCBjaWZzX3NlcyAqc2VzOwogCXN0cnVjdCBjaWZzX3Rjb24gKnRjb247CkBAIC0x
ODQsNiArMTg1LDkgQEAgY2lmc19yZWNvbm5lY3Qoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2Vy
dmVyKQogCXN0cnVjdCBkZnNfY2FjaGVfdGd0X2l0ZXJhdG9yICp0Z3RfaXQgPSBOVUxMOwogI2Vu
ZGlmCiAKKwkvKiBJZiBzZXJ2ZXIgaXMgYSBjaGFubmVsLCBzZWxlY3QgdGhlIHByaW1hcnkgY2hh
bm5lbCAqLworCXBzZXJ2ZXIgPSBDSUZTX1NFUlZFUl9JU19DSEFOKHNlcnZlcikgPyBzZXJ2ZXIt
PnByaW1hcnlfc2VydmVyIDogc2VydmVyOworCiAJc3Bpbl9sb2NrKCZHbG9iYWxNaWRfTG9jayk7
CiAJc2VydmVyLT5ucl90YXJnZXRzID0gMTsKICNpZmRlZiBDT05GSUdfQ0lGU19ERlNfVVBDQUxM
CkBAIC0yMzQsMTYgKzIzOCwzMCBAQCBjaWZzX3JlY29ubmVjdChzdHJ1Y3QgVENQX1NlcnZlcl9J
bmZvICpzZXJ2ZXIpCiAJCWFuZCB0aGUgdGlkIGJhZCBzbyB0aGV5IGFyZSBub3QgdXNlZCB1bnRp
bCByZWNvbm5lY3RlZCAqLwogCWNpZnNfZGJnKEZZSSwgIiVzOiBtYXJraW5nIHNlc3Npb25zIGFu
ZCB0Y29ucyBmb3IgcmVjb25uZWN0XG4iLAogCQkgX19mdW5jX18pOworCiAJc3Bpbl9sb2NrKCZj
aWZzX3RjcF9zZXNfbG9jayk7Ci0JbGlzdF9mb3JfZWFjaCh0bXAsICZzZXJ2ZXItPnNtYl9zZXNf
bGlzdCkgeworCWxpc3RfZm9yX2VhY2godG1wLCAmcHNlcnZlci0+c21iX3Nlc19saXN0KSB7CiAJ
CXNlcyA9IGxpc3RfZW50cnkodG1wLCBzdHJ1Y3QgY2lmc19zZXMsIHNtYl9zZXNfbGlzdCk7Ci0J
CXNlcy0+bmVlZF9yZWNvbm5lY3QgPSB0cnVlOworCisJCS8qCisJCSAqIHdlJ3JlIGhhdmluZyB0
byBwaWNrIHRoaXMgbXV0ZXggd2l0aGluIGEgc3BpbmxvY2sKKwkJICogTWFrZSBzdXJlIHRoYXQg
d2UgZG9uJ3Qgc2xlZXAgdG9vIG11Y2guCisJCSAqLworCQltdXRleF9sb2NrKCZzZXMtPnNlc3Np
b25fbXV0ZXgpOworCQljaWZzX2NoYW5fc2V0X25lZWRfcmVjb25uZWN0KHNlcywgc2VydmVyKTsK
KworCQkvKiBJZiBhbGwgY2hhbm5lbHMgbmVlZCByZWNvbm5lY3QsIHRoZW4gdGNvbiBuZWVkcyBy
ZWNvbm5lY3QgKi8KKwkJaWYgKCFDSUZTX0FMTF9DSEFOU19ORUVEX1JFQ09OTkVDVChzZXMpKQor
CQkJZ290byBza2lwX3Rjb25fcmVjb25uZWN0OworCiAJCWxpc3RfZm9yX2VhY2godG1wMiwgJnNl
cy0+dGNvbl9saXN0KSB7CiAJCQl0Y29uID0gbGlzdF9lbnRyeSh0bXAyLCBzdHJ1Y3QgY2lmc190
Y29uLCB0Y29uX2xpc3QpOwogCQkJdGNvbi0+bmVlZF9yZWNvbm5lY3QgPSB0cnVlOwogCQl9CiAJ
CWlmIChzZXMtPnRjb25faXBjKQogCQkJc2VzLT50Y29uX2lwYy0+bmVlZF9yZWNvbm5lY3QgPSB0
cnVlOworc2tpcF90Y29uX3JlY29ubmVjdDoKKwkJbXV0ZXhfdW5sb2NrKCZzZXMtPnNlc3Npb25f
bXV0ZXgpOwogCX0KIAlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCkBAIC0xMjMx
LDcgKzEyNDksNyBAQCBjaWZzX2ZpbmRfdGNwX3Nlc3Npb24oc3RydWN0IHNtYjNfZnNfY29udGV4
dCAqY3R4KQogCQkgKiBTa2lwIHNlcyBjaGFubmVscyBzaW5jZSB0aGV5J3JlIG9ubHkgaGFuZGxl
ZCBpbiBsb3dlciBsYXllcnMKIAkJICogKGUuZy4gY2lmc19zZW5kX3JlY3YpLgogCQkgKi8KLQkJ
aWYgKHNlcnZlci0+aXNfY2hhbm5lbCB8fCAhbWF0Y2hfc2VydmVyKHNlcnZlciwgY3R4KSkKKwkJ
aWYgKENJRlNfU0VSVkVSX0lTX0NIQU4oc2VydmVyKSB8fCAhbWF0Y2hfc2VydmVyKHNlcnZlciwg
Y3R4KSkKIAkJCWNvbnRpbnVlOwogCiAJCSsrc2VydmVyLT5zcnZfY291bnQ7CkBAIC0xMjU5LDYg
KzEyNzcsMTAgQEAgY2lmc19wdXRfdGNwX3Nlc3Npb24oc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAq
c2VydmVyLCBpbnQgZnJvbV9yZWNvbm5lY3QpCiAJbGlzdF9kZWxfaW5pdCgmc2VydmVyLT50Y3Bf
c2VzX2xpc3QpOwogCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAKKwkvKiBGb3Ig
c2Vjb25kYXJ5IGNoYW5uZWxzLCB3ZSBwaWNrIHVwIHJlZi1jb3VudCBvbiB0aGUgcHJpbWFyeSBz
ZXJ2ZXIgKi8KKwlpZiAoQ0lGU19TRVJWRVJfSVNfQ0hBTihzZXJ2ZXIpKQorCQljaWZzX3B1dF90
Y3Bfc2Vzc2lvbihzZXJ2ZXItPnByaW1hcnlfc2VydmVyLCBmcm9tX3JlY29ubmVjdCk7CisKIAlj
YW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJnNlcnZlci0+ZWNobyk7CiAKIAlpZiAoZnJvbV9yZWNv
bm5lY3QpCkBAIC0xMjg5LDcgKzEzMTEsOCBAQCBjaWZzX3B1dF90Y3Bfc2Vzc2lvbihzdHJ1Y3Qg
VENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIGludCBmcm9tX3JlY29ubmVjdCkKIH0KIAogc3RydWN0
IFRDUF9TZXJ2ZXJfSW5mbyAqCi1jaWZzX2dldF90Y3Bfc2Vzc2lvbihzdHJ1Y3Qgc21iM19mc19j
b250ZXh0ICpjdHgpCitjaWZzX2dldF90Y3Bfc2Vzc2lvbihzdHJ1Y3Qgc21iM19mc19jb250ZXh0
ICpjdHgsCisJCSAgICAgc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqcHJpbWFyeV9zZXJ2ZXIpCiB7
CiAJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqdGNwX3NlcyA9IE5VTEw7CiAJaW50IHJjOwpAQCAt
MTMxNiw2ICsxMzM5LDEwIEBAIGNpZnNfZ2V0X3RjcF9zZXNzaW9uKHN0cnVjdCBzbWIzX2ZzX2Nv
bnRleHQgKmN0eCkKIAkJZ290byBvdXRfZXJyX2NyeXB0b19yZWxlYXNlOwogCX0KIAorCWlmIChw
cmltYXJ5X3NlcnZlcikgeworCQkrK3ByaW1hcnlfc2VydmVyLT5zcnZfY291bnQ7CisJCXRjcF9z
ZXMtPnByaW1hcnlfc2VydmVyID0gcHJpbWFyeV9zZXJ2ZXI7CisJfQogCXRjcF9zZXMtPmNvbm5f
aWQgPSBhdG9taWNfaW5jX3JldHVybigmdGNwU2VzTmV4dElkKTsKIAl0Y3Bfc2VzLT5ub2Jsb2Nr
Y250ID0gY3R4LT5yb290ZnM7CiAJdGNwX3Nlcy0+bm9ibG9ja3NuZCA9IGN0eC0+bm9ibG9ja3Nu
ZCB8fCBjdHgtPnJvb3RmczsKQEAgLTE0MzEsNiArMTQ1OCw4IEBAIGNpZnNfZ2V0X3RjcF9zZXNz
aW9uKHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCkKIAogb3V0X2VycjoKIAlpZiAodGNwX3Nl
cykgeworCQlpZiAoQ0lGU19TRVJWRVJfSVNfQ0hBTih0Y3Bfc2VzKSkKKwkJCWNpZnNfcHV0X3Rj
cF9zZXNzaW9uKHRjcF9zZXMtPnByaW1hcnlfc2VydmVyLCBmYWxzZSk7CiAJCWlmICghSVNfRVJS
KHRjcF9zZXMtPmhvc3RuYW1lKSkKIAkJCWtmcmVlKHRjcF9zZXMtPmhvc3RuYW1lKTsKIAkJaWYg
KHRjcF9zZXMtPnNzb2NrZXQpCkBAIC0xODEyLDcgKzE4NDEsNyBAQCBjaWZzX2dldF9zbWJfc2Vz
KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IHNtYjNfZnNfY29udGV4dCAq
Y3R4KQogCQkJZnJlZV94aWQoeGlkKTsKIAkJCXJldHVybiBFUlJfUFRSKHJjKTsKIAkJfQotCQlp
ZiAoc2VzLT5uZWVkX3JlY29ubmVjdCkgeworCQlpZiAoY2lmc19jaGFuX25lZWRzX3JlY29ubmVj
dChzZXMsIHNlcnZlcikpIHsKIAkJCWNpZnNfZGJnKEZZSSwgIlNlc3Npb24gbmVlZHMgcmVjb25u
ZWN0XG4iKTsKIAkJCXJjID0gY2lmc19zZXR1cF9zZXNzaW9uKHhpZCwgc2VzLAogCQkJCQkJY3R4
LT5sb2NhbF9ubHMpOwpAQCAtMTg3NCw2ICsxOTAzLDcgQEAgY2lmc19nZXRfc21iX3NlcyhzdHJ1
Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCkK
IAlzZXMtPmNoYW5zWzBdLnNlcnZlciA9IHNlcnZlcjsKIAlzZXMtPmNoYW5fY291bnQgPSAxOwog
CXNlcy0+Y2hhbl9tYXggPSBjdHgtPm11bHRpY2hhbm5lbCA/IGN0eC0+bWF4X2NoYW5uZWxzOjE7
CisJc2VzLT5jaGFuc19uZWVkX3JlY29ubmVjdCA9IDE7CiAKIAlyYyA9IGNpZnNfbmVnb3RpYXRl
X3Byb3RvY29sKHhpZCwgc2VzKTsKIAlpZiAoIXJjKQpAQCAtMjc5Niw3ICsyODI2LDcgQEAgc3Rh
dGljIGludCBtb3VudF9nZXRfY29ubnMoc3RydWN0IHNtYjNfZnNfY29udGV4dCAqY3R4LCBzdHJ1
Y3QgY2lmc19zYl9pbmZvICpjaWYKIAkqeGlkID0gZ2V0X3hpZCgpOwogCiAJLyogZ2V0IGEgcmVm
ZXJlbmNlIHRvIGEgdGNwIHNlc3Npb24gKi8KLQlzZXJ2ZXIgPSBjaWZzX2dldF90Y3Bfc2Vzc2lv
bihjdHgpOworCXNlcnZlciA9IGNpZnNfZ2V0X3RjcF9zZXNzaW9uKGN0eCwgTlVMTCk7CiAJaWYg
KElTX0VSUihzZXJ2ZXIpKSB7CiAJCXJjID0gUFRSX0VSUihzZXJ2ZXIpOwogCQlyZXR1cm4gcmM7
CmRpZmYgLS1naXQgYS9mcy9jaWZzL3Nlc3MuYyBiL2ZzL2NpZnMvc2Vzcy5jCmluZGV4IGM1Nzg1
ZmQzZjUyZS4uYTAwNWQxM2ZiOGYwIDEwMDY0NAotLS0gYS9mcy9jaWZzL3Nlc3MuYworKysgYi9m
cy9jaWZzL3Nlc3MuYwpAQCAtNjIsNiArNjIsNTMgQEAgYm9vbCBpc19zZXNfdXNpbmdfaWZhY2Uo
c3RydWN0IGNpZnNfc2VzICpzZXMsIHN0cnVjdCBjaWZzX3NlcnZlcl9pZmFjZSAqaWZhY2UpCiAJ
cmV0dXJuIGZhbHNlOwogfQogCit1bnNpZ25lZCBpbnQKK2NpZnNfc2VzX2dldF9jaGFuX2luZGV4
KHN0cnVjdCBjaWZzX3NlcyAqc2VzLAorCQkgICBzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2
ZXIpCit7CisJdW5zaWduZWQgaW50IGk7CisKKwlmb3IgKGkgPSAwOyBpIDwgc2VzLT5jaGFuX2Nv
dW50OyBpKyspIHsKKwkJaWYgKHNlcy0+Y2hhbnNbaV0uc2VydmVyID09IHNlcnZlcikKKwkJCXJl
dHVybiBpOworCX0KKworCS8qIElmIHdlIGRpZG4ndCBmaW5kIHRoZSBjaGFubmVsLCBpdCBpcyBs
aWtlbHkgYSBidWcgKi8KKwlXQVJOX09OKDEpOworCXJldHVybiAwOworfQorCit2b2lkCitjaWZz
X2NoYW5fc2V0X25lZWRfcmVjb25uZWN0KHN0cnVjdCBjaWZzX3NlcyAqc2VzLAorCQkJICAgICBz
dHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpCit7CisJdW5zaWduZWQgaW50IGNoYW5faW5k
ZXggPSBjaWZzX3Nlc19nZXRfY2hhbl9pbmRleChzZXMsIHNlcnZlcik7CisKKwlzZXRfYml0KGNo
YW5faW5kZXgsICZzZXMtPmNoYW5zX25lZWRfcmVjb25uZWN0KTsKKwljaWZzX2RiZyhGWUksICJT
ZXQgcmVjb25uZWN0IGJpdG1hc2sgZm9yIGNoYW4gJXU7IG5vdyAweCVseFxuIiwKKwkJIGNoYW5f
aW5kZXgsIHNlcy0+Y2hhbnNfbmVlZF9yZWNvbm5lY3QpOworfQorCit2b2lkCitjaWZzX2NoYW5f
Y2xlYXJfbmVlZF9yZWNvbm5lY3Qoc3RydWN0IGNpZnNfc2VzICpzZXMsCisJCQkgICAgICAgc3Ry
dWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyKQoreworCXVuc2lnbmVkIGludCBjaGFuX2luZGV4
ID0gY2lmc19zZXNfZ2V0X2NoYW5faW5kZXgoc2VzLCBzZXJ2ZXIpOworCisJY2xlYXJfYml0KGNo
YW5faW5kZXgsICZzZXMtPmNoYW5zX25lZWRfcmVjb25uZWN0KTsKKwljaWZzX2RiZyhGWUksICJD
bGVhcmVkIHJlY29ubmVjdCBiaXRtYXNrIGZvciBjaGFuICV1OyBub3cgMHglbHhcbiIsCisJCSBj
aGFuX2luZGV4LCBzZXMtPmNoYW5zX25lZWRfcmVjb25uZWN0KTsKK30KKworYm9vbAorY2lmc19j
aGFuX25lZWRzX3JlY29ubmVjdChzdHJ1Y3QgY2lmc19zZXMgKnNlcywKKwkJCSAgICBzdHJ1Y3Qg
VENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpCit7CisJdW5zaWduZWQgaW50IGNoYW5faW5kZXggPSBj
aWZzX3Nlc19nZXRfY2hhbl9pbmRleChzZXMsIHNlcnZlcik7CisKKwlyZXR1cm4gQ0lGU19DSEFO
X05FRURTX1JFQ09OTkVDVChzZXMsIGNoYW5faW5kZXgpOworfQorCiAvKiByZXR1cm5zIG51bWJl
ciBvZiBjaGFubmVscyBhZGRlZCAqLwogaW50IGNpZnNfdHJ5X2FkZGluZ19jaGFubmVscyhzdHJ1
Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcykKIHsKQEAgLTE3
MCw2ICsyMTcsNyBAQCBjaWZzX3Nlc19hZGRfY2hhbm5lbChzdHJ1Y3QgY2lmc19zYl9pbmZvICpj
aWZzX3NiLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcywKIAkJICAgICBzdHJ1Y3QgY2lmc19zZXJ2ZXJf
aWZhY2UgKmlmYWNlKQogewogCXN0cnVjdCBjaWZzX2NoYW4gKmNoYW47CisJc3RydWN0IFRDUF9T
ZXJ2ZXJfSW5mbyAqY2hhbl9zZXJ2ZXI7CiAJc3RydWN0IHNtYjNfZnNfY29udGV4dCBjdHggPSB7
TlVMTH07CiAJc3RhdGljIGNvbnN0IGNoYXIgdW5jX2ZtdFtdID0gIlxcJXNcXGZvbyI7CiAJY2hh
ciB1bmNbc2l6ZW9mKHVuY19mbXQpK1NFUlZFUl9OQU1FX0xFTl9XSVRIX05VTExdID0gezB9OwpA
QCAtMjQxLDE4ICsyODksMjMgQEAgY2lmc19zZXNfYWRkX2NoYW5uZWwoc3RydWN0IGNpZnNfc2Jf
aW5mbyAqY2lmc19zYiwgc3RydWN0IGNpZnNfc2VzICpzZXMsCiAJICAgICAgIFNNQjJfQ0xJRU5U
X0dVSURfU0laRSk7CiAJY3R4LnVzZV9jbGllbnRfZ3VpZCA9IHRydWU7CiAKLQltdXRleF9sb2Nr
KCZzZXMtPnNlc3Npb25fbXV0ZXgpOworCS8qIEluZGljYXRlIHNlcy0+c2VydmVyIGFzIHRoZSBw
cmltYXJ5IHNlcnZlciAqLworCWNoYW5fc2VydmVyID0gY2lmc19nZXRfdGNwX3Nlc3Npb24oJmN0
eCwgc2VzLT5zZXJ2ZXIpOwogCisJbXV0ZXhfbG9jaygmc2VzLT5zZXNzaW9uX211dGV4KTsKIAlj
aGFuID0gc2VzLT5iaW5kaW5nX2NoYW4gPSAmc2VzLT5jaGFuc1tzZXMtPmNoYW5fY291bnRdOwot
CWNoYW4tPnNlcnZlciA9IGNpZnNfZ2V0X3RjcF9zZXNzaW9uKCZjdHgpOworCWNoYW4tPnNlcnZl
ciA9IGNoYW5fc2VydmVyOwogCWlmIChJU19FUlIoY2hhbi0+c2VydmVyKSkgewogCQlyYyA9IFBU
Ul9FUlIoY2hhbi0+c2VydmVyKTsKIAkJY2hhbi0+c2VydmVyID0gTlVMTDsKIAkJZ290byBvdXQ7
CiAJfQotCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwotCWNoYW4tPnNlcnZlci0+aXNf
Y2hhbm5lbCA9IHRydWU7Ci0Jc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKKworCXNl
cy0+Y2hhbl9jb3VudCsrOworCWF0b21pY19zZXQoJnNlcy0+Y2hhbl9zZXEsIDApOworCisJLyog
TWFyayB0aGlzIGNoYW5uZWwgYXMgbmVlZGluZyBjb25uZWN0L3NldHVwICovCisJY2lmc19jaGFu
X3NldF9uZWVkX3JlY29ubmVjdChzZXMsIGNoYW4tPnNlcnZlcik7CiAKIAkvKgogCSAqIFdlIG5l
ZWQgdG8gYWxsb2NhdGUgdGhlIHNlcnZlciBjcnlwdG8gbm93IGFzIHdlIHdpbGwgbmVlZApAQCAt
Mjg0LDExICszMzcsMTUgQEAgY2lmc19zZXNfYWRkX2NoYW5uZWwoc3RydWN0IGNpZnNfc2JfaW5m
byAqY2lmc19zYiwgc3RydWN0IGNpZnNfc2VzICpzZXMsCiAJICogc2VzIHRvIHRoZSBuZXcgc2Vy
dmVyLgogCSAqLwogCi0Jc2VzLT5jaGFuX2NvdW50Kys7Ci0JYXRvbWljX3NldCgmc2VzLT5jaGFu
X3NlcSwgMCk7CiBvdXQ6CiAJc2VzLT5iaW5kaW5nID0gZmFsc2U7CiAJc2VzLT5iaW5kaW5nX2No
YW4gPSBOVUxMOworCisJaWYgKHJjICYmIGNoYW4tPnNlcnZlcikgeworCQljaWZzX2NoYW5fY2xl
YXJfbmVlZF9yZWNvbm5lY3Qoc2VzLCBjaGFuLT5zZXJ2ZXIpOworCQlzZXMtPmNoYW5fY291bnQt
LTsKKwl9CisKIAltdXRleF91bmxvY2soJnNlcy0+c2Vzc2lvbl9tdXRleCk7CiAKIAlpZiAocmMg
JiYgY2hhbi0+c2VydmVyKQpAQCAtOTE3LDkgKzk3NCwxNCBAQCBzZXNzX2VzdGFibGlzaF9zZXNz
aW9uKHN0cnVjdCBzZXNzX2RhdGEgKnNlc3NfZGF0YSkKIAltdXRleF91bmxvY2soJnNlcy0+c2Vy
dmVyLT5zcnZfbXV0ZXgpOwogCiAJY2lmc19kYmcoRllJLCAiQ0lGUyBzZXNzaW9uIGVzdGFibGlz
aGVkIHN1Y2Nlc3NmdWxseVxuIik7CisJaWYgKHNlcy0+YmluZGluZykKKwkJY2lmc19jaGFuX2Ns
ZWFyX25lZWRfcmVjb25uZWN0KHNlcywgc2VzLT5iaW5kaW5nX2NoYW4tPnNlcnZlcik7CisJZWxz
ZQorCQljaWZzX2NoYW5fY2xlYXJfbmVlZF9yZWNvbm5lY3Qoc2VzLCBzZXMtPnNlcnZlcik7CisJ
Lyoga2VlcCBleGlzdGluZyBzZXMgc3RhdGUgaWYgYmluZGluZyAqLwogCXNwaW5fbG9jaygmR2xv
YmFsTWlkX0xvY2spOwotCXNlcy0+c3RhdHVzID0gQ2lmc0dvb2Q7Ci0Jc2VzLT5uZWVkX3JlY29u
bmVjdCA9IGZhbHNlOworCWlmICghc2VzLT5iaW5kaW5nKQorCQlzZXMtPnN0YXR1cyA9IENpZnNH
b29kOwogCXNwaW5fdW5sb2NrKCZHbG9iYWxNaWRfTG9jayk7CiAKIAlyZXR1cm4gMDsKZGlmZiAt
LWdpdCBhL2ZzL2NpZnMvc21iMnBkdS5jIGIvZnMvY2lmcy9zbWIycGR1LmMKaW5kZXggMjliNzI5
ZGUyYjI3Li44N2YxNzk1ZmZmZDQgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvc21iMnBkdS5jCisrKyBi
L2ZzL2NpZnMvc21iMnBkdS5jCkBAIC0yMzAsOSArMjMwLDEzIEBAIHNtYjJfcmVjb25uZWN0KF9f
bGUxNiBzbWIyX2NvbW1hbmQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sCiAJCXJldHJpZXMgPSBz
ZXJ2ZXItPm5yX3RhcmdldHM7CiAJfQogCi0JaWYgKCF0Y29uLT5zZXMtPm5lZWRfcmVjb25uZWN0
ICYmICF0Y29uLT5uZWVkX3JlY29ubmVjdCkKKwlpZiAoIWNpZnNfY2hhbl9uZWVkc19yZWNvbm5l
Y3Qoc2VzLCBzZXJ2ZXIpICYmICF0Y29uLT5uZWVkX3JlY29ubmVjdCkKIAkJcmV0dXJuIDA7CiAK
KwljaWZzX2RiZyhGWUksICJzZXNzIHJlY29ubmVjdCBtYXNrOiAweCVseCwgdGNvbiByZWNvbm5l
Y3Q6ICVkIiwKKwkJIHRjb24tPnNlcy0+Y2hhbnNfbmVlZF9yZWNvbm5lY3QsCisJCSB0Y29uLT5u
ZWVkX3JlY29ubmVjdCk7CisKIAlubHNfY29kZXBhZ2UgPSBsb2FkX25sc19kZWZhdWx0KCk7CiAK
IAkvKgpAQCAtMjU1LDEzICsyNTksMjQgQEAgc21iMl9yZWNvbm5lY3QoX19sZTE2IHNtYjJfY29t
bWFuZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKIAkvKgogCSAqIElmIHdlIGFyZSByZWNvbm5l
Y3RpbmcgYW4gZXh0cmEgY2hhbm5lbCwgYmluZAogCSAqLwotCWlmIChzZXJ2ZXItPmlzX2NoYW5u
ZWwpIHsKKwlpZiAoQ0lGU19TRVJWRVJfSVNfQ0hBTihzZXJ2ZXIpKSB7CiAJCXNlcy0+YmluZGlu
ZyA9IHRydWU7CiAJCXNlcy0+YmluZGluZ19jaGFuID0gY2lmc19zZXNfZmluZF9jaGFuKHNlcywg
c2VydmVyKTsKIAl9CiAKKwkvKiBSZWNoZWNrIGFmdGVyIGFjcXVpcmUgbXV0ZXggKi8KKwlpZiAo
IWNpZnNfY2hhbl9uZWVkc19yZWNvbm5lY3Qoc2VzLCBzZXJ2ZXIpKSB7CisJCS8qIHRoaXMganVz
dCBtZWFucyB0aGF0IHdlIG9ubHkgbmVlZCB0byB0Y29uICovCisJCWlmICh0Y29uLT5uZWVkX3Jl
Y29ubmVjdCkKKwkJCWdvdG8gc2tpcF9zZXNzX3NldHVwOworCisJCXJjID0gLUVIT1NURE9XTjsK
KwkJbXV0ZXhfdW5sb2NrKCZzZXMtPnNlc3Npb25fbXV0ZXgpOworCQlnb3RvIG91dDsKKwl9CisK
IAlyYyA9IGNpZnNfbmVnb3RpYXRlX3Byb3RvY29sKDAsIHRjb24tPnNlcyk7Ci0JaWYgKCFyYyAm
JiB0Y29uLT5zZXMtPm5lZWRfcmVjb25uZWN0KSB7CisJaWYgKCFyYyAmJiB0Y29uLT5zZXMtPmNo
YW5zX25lZWRfcmVjb25uZWN0KSB7CiAJCXJjID0gY2lmc19zZXR1cF9zZXNzaW9uKDAsIHRjb24t
PnNlcywgbmxzX2NvZGVwYWdlKTsKIAkJaWYgKChyYyA9PSAtRUFDQ0VTKSAmJiAhdGNvbi0+cmV0
cnkpIHsKIAkJCXJjID0gLUVIT1NURE9XTjsKQEAgLTI4Miw2ICsyOTcsNyBAQCBzbWIyX3JlY29u
bmVjdChfX2xlMTYgc21iMl9jb21tYW5kLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCQlnb3Rv
IG91dDsKIAl9CiAKK3NraXBfc2Vzc19zZXR1cDoKIAljaWZzX21hcmtfb3Blbl9maWxlc19pbnZh
bGlkKHRjb24pOwogCWlmICh0Y29uLT51c2VfcGVyc2lzdGVudCkKIAkJdGNvbi0+bmVlZF9yZW9w
ZW5fZmlsZXMgPSB0cnVlOwpAQCAtMTE5MCw2ICsxMjA2LDcgQEAgU01CMl9zZXNzX2FsbG9jX2J1
ZmZlcihzdHJ1Y3QgU01CMl9zZXNzX2RhdGEgKnNlc3NfZGF0YSkKIAkJcmVxLT5zeW5jX2hkci5G
bGFncyB8PSBTTUIyX0ZMQUdTX1NJR05FRDsKIAkJcmVxLT5QcmV2aW91c1Nlc3Npb25JZCA9IDA7
CiAJCXJlcS0+RmxhZ3MgPSBTTUIyX1NFU1NJT05fUkVRX0ZMQUdfQklORElORzsKKwkJY2lmc19k
YmcoRllJLCAiQmluZGluZyB0byBzZXNzIGlkOiAlbGx4XG4iLCBzZXNzX2RhdGEtPnNlcy0+U3Vp
ZCk7CiAJfSBlbHNlIHsKIAkJLyogRmlyc3Qgc2Vzc2lvbiwgbm90IGEgcmVhdXRoZW50aWNhdGUg
Ki8KIAkJcmVxLT5zeW5jX2hkci5TZXNzaW9uSWQgPSAwOwpAQCAtMTE5OSw2ICsxMjE2LDggQEAg
U01CMl9zZXNzX2FsbG9jX2J1ZmZlcihzdHJ1Y3QgU01CMl9zZXNzX2RhdGEgKnNlc3NfZGF0YSkK
IAkJICovCiAJCXJlcS0+UHJldmlvdXNTZXNzaW9uSWQgPSBzZXNzX2RhdGEtPnByZXZpb3VzX3Nl
c3Npb247CiAJCXJlcS0+RmxhZ3MgPSAwOyAvKiBNQlogKi8KKwkJY2lmc19kYmcoRllJLCAiRnJl
c2ggc2Vzc2lvbi4gUHJldmlvdXM6ICVsbHhcbiIsCisJCQkgc2Vzc19kYXRhLT5wcmV2aW91c19z
ZXNzaW9uKTsKIAl9CiAKIAkvKiBlbm91Z2ggdG8gZW5hYmxlIGVjaG9zIGFuZCBvcGxvY2tzIGFu
ZCBvbmUgbWF4IHNpemUgd3JpdGUgKi8KQEAgLTEyOTIsMTMgKzEzMTEsMTcgQEAgU01CMl9zZXNz
X2VzdGFibGlzaF9zZXNzaW9uKHN0cnVjdCBTTUIyX3Nlc3NfZGF0YSAqc2Vzc19kYXRhKQogCW11
dGV4X3VubG9jaygmc2VydmVyLT5zcnZfbXV0ZXgpOwogCiAJY2lmc19kYmcoRllJLCAiU01CMi8z
IHNlc3Npb24gZXN0YWJsaXNoZWQgc3VjY2Vzc2Z1bGx5XG4iKTsKKworCWlmIChzZXMtPmJpbmRp
bmcpCisJCWNpZnNfY2hhbl9jbGVhcl9uZWVkX3JlY29ubmVjdChzZXMsIHNlcy0+YmluZGluZ19j
aGFuLT5zZXJ2ZXIpOworCWVsc2UKKwkJY2lmc19jaGFuX2NsZWFyX25lZWRfcmVjb25uZWN0KHNl
cywgc2VzLT5zZXJ2ZXIpOworCiAJLyoga2VlcCBleGlzdGluZyBzZXMgc3RhdGUgaWYgYmluZGlu
ZyAqLwotCWlmICghc2VzLT5iaW5kaW5nKSB7Ci0JCXNwaW5fbG9jaygmR2xvYmFsTWlkX0xvY2sp
OworCXNwaW5fbG9jaygmR2xvYmFsTWlkX0xvY2spOworCWlmICghc2VzLT5iaW5kaW5nKQogCQlz
ZXMtPnN0YXR1cyA9IENpZnNHb29kOwotCQlzZXMtPm5lZWRfcmVjb25uZWN0ID0gZmFsc2U7Ci0J
CXNwaW5fdW5sb2NrKCZHbG9iYWxNaWRfTG9jayk7Ci0JfQorCXNwaW5fdW5sb2NrKCZHbG9iYWxN
aWRfTG9jayk7CiAKIAlyZXR1cm4gcmM7CiB9CkBAIC0xNjQyLDcgKzE2NjUsNyBAQCBTTUIyX2xv
Z29mZihjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcykKIAkJcmV0
dXJuIC1FSU87CiAKIAkvKiBubyBuZWVkIHRvIHNlbmQgU01CIGxvZ29mZiBpZiB1aWQgYWxyZWFk
eSBjbG9zZWQgZHVlIHRvIHJlY29ubmVjdCAqLwotCWlmIChzZXMtPm5lZWRfcmVjb25uZWN0KQor
CWlmIChDSUZTX0FMTF9DSEFOU19ORUVEX1JFQ09OTkVDVChzZXMpKQogCQlnb3RvIHNtYjJfc2Vz
c2lvbl9hbHJlYWR5X2RlYWQ7CiAKIAlyYyA9IHNtYjJfcGxhaW5fcmVxX2luaXQoU01CMl9MT0dP
RkYsIE5VTEwsIHNlcy0+c2VydmVyLApAQCAtMTg1NCw3ICsxODc3LDggQEAgU01CMl90ZGlzKGNv
bnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24pCiAJaWYgKCFzZXMg
fHwgIShzZXMtPnNlcnZlcikpCiAJCXJldHVybiAtRUlPOwogCi0JaWYgKCh0Y29uLT5uZWVkX3Jl
Y29ubmVjdCkgfHwgKHRjb24tPnNlcy0+bmVlZF9yZWNvbm5lY3QpKQorCWlmICgodGNvbi0+bmVl
ZF9yZWNvbm5lY3QpIHx8CisJICAgIChDSUZTX0FMTF9DSEFOU19ORUVEX1JFQ09OTkVDVCh0Y29u
LT5zZXMpKSkKIAkJcmV0dXJuIDA7CiAKIAljbG9zZV9jYWNoZWRfZGlyX2xlYXNlKCZ0Y29uLT5j
cmZpZCk7CmRpZmYgLS1naXQgYS9mcy9jaWZzL3NtYjJ0cmFuc3BvcnQuYyBiL2ZzL2NpZnMvc21i
MnRyYW5zcG9ydC5jCmluZGV4IDZmNzk1MmVhNDk0MS4uZDE1ZjBhYWExMzM4IDEwMDY0NAotLS0g
YS9mcy9jaWZzL3NtYjJ0cmFuc3BvcnQuYworKysgYi9mcy9jaWZzL3NtYjJ0cmFuc3BvcnQuYwpA
QCAtMTk1LDggKzE5NSw4IEBAIHNtYjJfZmluZF9zbWJfdGNvbihzdHJ1Y3QgVENQX1NlcnZlcl9J
bmZvICpzZXJ2ZXIsIF9fdTY0IHNlc19pZCwgX191MzIgIHRpZCkKIAl9CiAJdGNvbiA9IHNtYjJf
ZmluZF9zbWJfc2Vzc190Y29uX3VubG9ja2VkKHNlcywgdGlkKTsKIAlpZiAoIXRjb24pIHsKLQkJ
Y2lmc19wdXRfc21iX3NlcyhzZXMpOwogCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2sp
OworCQljaWZzX3B1dF9zbWJfc2VzKHNlcyk7CiAJCXJldHVybiBOVUxMOwogCX0KIAlzcGluX3Vu
bG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwpAQCAtMzk4LDYgKzM5OCw3IEBAIGdlbmVyYXRlX3Nt
YjNzaWduaW5na2V5KHN0cnVjdCBjaWZzX3NlcyAqc2VzLAogI2lmZGVmIENPTkZJR19DSUZTX0RF
QlVHX0RVTVBfS0VZUwogCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciA9IHNlcy0+c2Vy
dmVyOwogI2VuZGlmCisJdW5zaWduZWQgaW50IGNoYW5faW5kZXg7CiAKIAkvKgogCSAqIEFsbCBj
aGFubmVscyB1c2UgdGhlIHNhbWUgZW5jcnlwdGlvbi9kZWNyeXB0aW9uIGtleXMgYnV0CkBAIC00
MTQsNiArNDE1LDggQEAgZ2VuZXJhdGVfc21iM3NpZ25pbmdrZXkoc3RydWN0IGNpZnNfc2VzICpz
ZXMsCiAJCQkJICBwdHJpcGxldC0+c2lnbmluZy5jb250ZXh0LAogCQkJCSAgY2lmc19zZXNfYmlu
ZGluZ19jaGFubmVsKHNlcyktPnNpZ25rZXksCiAJCQkJICBTTUIzX1NJR05fS0VZX1NJWkUpOwor
CQljaWZzX2RiZyhGWUksICIlczogR2VuZXJhdGVkIGtleSBmb3IgY2hhbiAldVxuIiwKKwkJCSBf
X2Z1bmNfXywgY2hhbl9pbmRleCk7CiAJCWlmIChyYykKIAkJCXJldHVybiByYzsKIAl9IGVsc2Ug
ewotLSAKMi4zMC4yCgo=
--0000000000009a8a4005c50473db--
