Return-Path: <linux-cifs-owner@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 310A036158E
	for <lists+linux-cifs@lfdr.de>; Fri, 16 Apr 2021 00:35:43 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236247AbhDOWgF (ORCPT <rfc822;lists+linux-cifs@lfdr.de>);
        Thu, 15 Apr 2021 18:36:05 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:60360 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234764AbhDOWgF (ORCPT
        <rfc822;linux-cifs@vger.kernel.org>); Thu, 15 Apr 2021 18:36:05 -0400
Received: from mail-lf1-x129.google.com (mail-lf1-x129.google.com [IPv6:2a00:1450:4864:20::129])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 030FFC061574
        for <linux-cifs@vger.kernel.org>; Thu, 15 Apr 2021 15:35:40 -0700 (PDT)
Received: by mail-lf1-x129.google.com with SMTP id n8so41781289lfh.1
        for <linux-cifs@vger.kernel.org>; Thu, 15 Apr 2021 15:35:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=LCN3+ZUm7mmQDmq7s7/7o3R+nb2xn7B7CjxF1UsG66I=;
        b=hBQD/l9T7WSzVFtQ9yllLrZw2qOMg1ZtLtSA5619Pmyk7PhnT9gM8tOfhL/m3m562c
         IDXQQMdQjaZUl9bk6MUByyGJnRFg94q5lm8u6VUhcXHlzOtviFhavhbc05fLrXNcYTlr
         V7iPQi8L0Z4MfLh3W/+KkYaiIJgXPEkj1lcZ7ge4hAHUt2BvGp68LhOprso9wxmMkNny
         8a+3eQ28htE6DVTycqmri6OtxqMG7zouFRQQxQRZfVIkGNOgeFItpwuMlI+8V82NFSDG
         MZti0nGiC5yKC9D8LzWplcRjNLARh7Z7HH2yIvZctbp2gM7ayhieDVDkXUc4qyiUjKz6
         5zkw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=LCN3+ZUm7mmQDmq7s7/7o3R+nb2xn7B7CjxF1UsG66I=;
        b=h046/rLZYYujs51MT20JHjz77rzztFJ7PjY8u5N+8aZ02uzuHncznmv4isiKWe0jhY
         YPhcMkBG64hqXeqAFJdTznrS/9Nx1mDrB5B+uiWBLLWkiliK/pKXBzIcCZ/j8IJKjG7S
         sGQlblP4LuyOWtaQaz4hlh4lOjxZo8x5R53zgDy6aN2l2L/Y4EIaJGJHbCdwd0CB7z3M
         jpA7btPsUVVnp5LX3iDEhcOKvkM6sbjuv57mXsImWzRXdewkG4gmLw3TQEWk3RAv2Suv
         HWP3OoGAx3OkQrGYn/7Au8inXtwRhcSxt+9JMJUPmUv/UqRZ68N+ruyPOGjQXpdrgQ//
         ioxw==
X-Gm-Message-State: AOAM532K14vOOLIiIJMq/XHnSYTkAxqSXthwjjC5DW5EN2GZd3mCO+qZ
        jURtYswm1zggcuun4xiLj5m9mGxRaUHFRi3IQ6hE0pXk1OU=
X-Google-Smtp-Source: ABdhPJxGBE3YHzXj+D3mV+x1g0De8M3XJKhxiO+kaq2VCxSjD0/2cNIdFqIw7ujychDVL1BMC8+rQyv2zxlZ/wrTwHY=
X-Received: by 2002:ac2:5cab:: with SMTP id e11mr865568lfq.175.1618526139257;
 Thu, 15 Apr 2021 15:35:39 -0700 (PDT)
MIME-Version: 1.0
References: <YG+yK97KkSTkhwx7@zeniv-ca.linux.org.uk> <CAH2r5mvEF6RyQ2dCB7y9m_knDxFWw6q2+kBBT_+seA3Tcox4EA@mail.gmail.com>
 <CAH2r5muY4wQjqw9MhP0-NchXMSNQ+JfwNiDtmNcJMC3i0vPGxg@mail.gmail.com> <YHilI9yjUb3CtCAo@zeniv-ca.linux.org.uk>
In-Reply-To: <YHilI9yjUb3CtCAo@zeniv-ca.linux.org.uk>
From:   Steve French <smfrench@gmail.com>
Date:   Thu, 15 Apr 2021 17:35:27 -0500
Message-ID: <CAH2r5mtK20fZrpa4x2C-L7tGmhoq8qsji99_654c72Q2CChZsA@mail.gmail.com>
Subject: Re: [CFT] vfs.git #work.cifs
To:     Al Viro <viro@zeniv.linux.org.uk>
Cc:     CIFS <linux-cifs@vger.kernel.org>
Content-Type: multipart/mixed; boundary="000000000000972a6d05c00a7b66"
Precedence: bulk
List-ID: <linux-cifs.vger.kernel.org>
X-Mailing-List: linux-cifs@vger.kernel.org

--000000000000972a6d05c00a7b66
Content-Type: text/plain; charset="UTF-8"

Your series is currently in cifs-2.6.git for-next, and it is less
risky if we keep it there, in my tree (assuming your series is up to
date).  I have attached the version I have merged, which presumably is
still the latest unless you have changed it in the last week.  As
mentioned earlier, I may touch related code if I revisit the WIP patch
I had to move the conversion of "/" to "\" (depending on server type),
later ie when the conversion (e.g. to Unicode, the UCS-2 on the wire
format) is done, rather than earlier (when full path is build from the
dentries).   The seven from your branch also can be seen starting at
commit (in the cifs for-next branch that linux-next pulls from)
https://git.samba.org/?p=sfrench/cifs-2.6.git;a=commit;h=57704d22e55b9f49e797fe19bb6b5b5b429beb58

If you have updated versions let me know.

On Thu, Apr 15, 2021 at 3:42 PM Al Viro <viro@zeniv.linux.org.uk> wrote:
>
> On Fri, Apr 09, 2021 at 08:36:24PM -0500, Steve French wrote:
> > Your series passed an all Azure test group
> > http://smb3-test-rhel-75.southcentralus.cloudapp.azure.com/#/builders/11/builds/20
> > (with additional patches) and the main test group (with your 7 and
> > Ronnie's finsert/fcollapse)
> > http://smb3-test-rhel-75.southcentralus.cloudapp.azure.com/#/builders/11/builds/20
> > which tests to the wider variety of server and target server fs types.
>
> OK...  I can
>         * rebase it on top of your tree and repost the patches for applying
> to cifs.git
>         * rebase it and send you a pull request
>         * send you a pull request on the branch as-is
>         * keep it in vfs.git and send a pull request to Linus when window
> opens.
>
> Which variant would you prefer?



-- 
Thanks,

Steve

--000000000000972a6d05c00a7b66
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-don-t-cargo-cult-strndup.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-don-t-cargo-cult-strndup.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_knjghl1x0>
X-Attachment-Id: f_knjghl1x0

RnJvbSA1NzcwNGQyMmU1NWI5ZjQ5ZTc5N2ZlMTliYjZiNWI1YjQyOWJlYjU4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KRGF0
ZTogRnJpLCA1IE1hciAyMDIxIDE1OjAyOjM0IC0wNTAwClN1YmplY3Q6IFtQQVRDSCAxLzhdIGNp
ZnM6IGRvbid0IGNhcmdvLWN1bHQgc3RybmR1cCgpCgpzdHJuZHVwKHMsIHN0cmxlbihzKSkgaXMg
YSBoaWdobHkgdW5pZGlvbWF0aWMgd2F5IHRvIHNwZWxsIHN0cmR1cChzKTsKaXQncyAqTk9UKiBz
YWZlciBpbiBhbnkgd2F5LCBzaW5jZSBzdHJsZW4oKSBpcyBqdXN0IGFzIHNlbnNpdGl2ZSB0bwpO
VUwtdGVybWluYXRpb24gYXMgc3RyZHVwKCkgaXMuCgpzdHJuZHVwKCkgaXMgZm9yIHNpdHVhdGlv
bnMgd2hlbiB5b3UgbmVlZCBhIGNvcHkgb2YgYSBrbm93bi1zaXplZApzdWJzdHJpbmcsIG5vdCBh
IG1hZ2ljIHNlY3VyaXR5IGp1anUgdG8gZHJpdmUgdGhlIGJhZCBzcGlyaXRzIGF3YXkuCgpTaWdu
ZWQtb2ZmLWJ5OiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KU2lnbmVkLW9mZi1i
eTogU3RldmUgRnJlbmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL2NpZnMvY2lm
c19kZnNfcmVmLmMgfCAgMiArLQogZnMvY2lmcy9jb25uZWN0LmMgICAgICB8ICA5ICsrKy0tLS0t
LQogZnMvY2lmcy9kZnNfY2FjaGUuYyAgICB8IDE4ICsrKysrKysrKy0tLS0tLS0tLQogZnMvY2lm
cy9mc19jb250ZXh0LmMgICB8ICAyICstCiBmcy9jaWZzL21pc2MuYyAgICAgICAgIHwgIDIgKy0K
IGZzL2NpZnMvc21iMW9wcy5jICAgICAgfCAgNCArLS0tCiBmcy9jaWZzL3VuYy5jICAgICAgICAg
IHwgIDQgKy0tLQogNyBmaWxlcyBjaGFuZ2VkLCAxNyBpbnNlcnRpb25zKCspLCAyNCBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9mcy9jaWZzL2NpZnNfZGZzX3JlZi5jIGIvZnMvY2lmcy9jaWZz
X2Rmc19yZWYuYwppbmRleCA2YjFjZTRlZmI1OTEuLmVjZWUyODY0OTcyZCAxMDA2NDQKLS0tIGEv
ZnMvY2lmcy9jaWZzX2Rmc19yZWYuYworKysgYi9mcy9jaWZzL2NpZnNfZGZzX3JlZi5jCkBAIC0y
NzAsNyArMjcwLDcgQEAgc3RhdGljIHN0cnVjdCB2ZnNtb3VudCAqY2lmc19kZnNfZG9fbW91bnQo
c3RydWN0IGRlbnRyeSAqbW50cHQsCiAJY2hhciAqbW91bnRkYXRhOwogCWNoYXIgKmRldm5hbWU7
CiAKLQlkZXZuYW1lID0ga3N0cm5kdXAoZnVsbHBhdGgsIHN0cmxlbihmdWxscGF0aCksIEdGUF9L
RVJORUwpOworCWRldm5hbWUgPSBrc3RyZHVwKGZ1bGxwYXRoLCBHRlBfS0VSTkVMKTsKIAlpZiAo
IWRldm5hbWUpCiAJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwogCmRpZmYgLS1naXQgYS9mcy9j
aWZzL2Nvbm5lY3QuYyBiL2ZzL2NpZnMvY29ubmVjdC5jCmluZGV4IDM1ZGJiOWM4MzZlYS4uMTIx
ZDhiNDUzNWIwIDEwMDY0NAotLS0gYS9mcy9jaWZzL2Nvbm5lY3QuYworKysgYi9mcy9jaWZzL2Nv
bm5lY3QuYwpAQCAtMTc3OCw5ICsxNzc4LDcgQEAgY2lmc19zZXRfY2lmc2NyZWRzKHN0cnVjdCBz
bWIzX2ZzX2NvbnRleHQgKmN0eCwgc3RydWN0IGNpZnNfc2VzICpzZXMpCiAJICogZm9yIHRoZSBy
ZXF1ZXN0LgogCSAqLwogCWlmIChpc19kb21haW4gJiYgc2VzLT5kb21haW5OYW1lKSB7Ci0JCWN0
eC0+ZG9tYWlubmFtZSA9IGtzdHJuZHVwKHNlcy0+ZG9tYWluTmFtZSwKLQkJCQkJICAgc3RybGVu
KHNlcy0+ZG9tYWluTmFtZSksCi0JCQkJCSAgIEdGUF9LRVJORUwpOworCQljdHgtPmRvbWFpbm5h
bWUgPSBrc3RyZHVwKHNlcy0+ZG9tYWluTmFtZSwgR0ZQX0tFUk5FTCk7CiAJCWlmICghY3R4LT5k
b21haW5uYW1lKSB7CiAJCQljaWZzX2RiZyhGWUksICJVbmFibGUgdG8gYWxsb2NhdGUgJXpkIGJ5
dGVzIGZvciBkb21haW5cbiIsCiAJCQkJIGxlbik7CkBAIC0zNDExLDggKzM0MDksNyBAQCBpbnQg
Y2lmc19tb3VudChzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiLCBzdHJ1Y3Qgc21iM19mc19j
b250ZXh0ICpjdHgpCiAJCQlnb3RvIGVycm9yOwogCX0KIAkvKiBTYXZlIG1vdW50IG9wdGlvbnMg
Ki8KLQltbnRkYXRhID0ga3N0cm5kdXAoY2lmc19zYi0+Y3R4LT5tb3VudF9vcHRpb25zLAotCQkJ
ICAgc3RybGVuKGNpZnNfc2ItPmN0eC0+bW91bnRfb3B0aW9ucyksIEdGUF9LRVJORUwpOworCW1u
dGRhdGEgPSBrc3RyZHVwKGNpZnNfc2ItPmN0eC0+bW91bnRfb3B0aW9ucywgR0ZQX0tFUk5FTCk7
CiAJaWYgKCFtbnRkYXRhKSB7CiAJCXJjID0gLUVOT01FTTsKIAkJZ290byBlcnJvcjsKQEAgLTM0
ODUsNyArMzQ4Miw3IEBAIGludCBjaWZzX21vdW50KHN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNf
c2IsIHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCkKIAkgKiBsaW5rcywgdGhlIHByZWZpeCBw
YXRoIGlzIGluY2x1ZGVkIGluIGJvdGggYW5kIG1heSBiZSBjaGFuZ2VkIGR1cmluZyByZWNvbm5l
Y3QuICBTZWUKIAkgKiBjaWZzX3RyZWVfY29ubmVjdCgpLgogCSAqLwotCWNpZnNfc2ItPm9yaWdp
bl9mdWxscGF0aCA9IGtzdHJuZHVwKGZ1bGxfcGF0aCwgc3RybGVuKGZ1bGxfcGF0aCksIEdGUF9L
RVJORUwpOworCWNpZnNfc2ItPm9yaWdpbl9mdWxscGF0aCA9IGtzdHJkdXAoZnVsbF9wYXRoLCBH
RlBfS0VSTkVMKTsKIAlpZiAoIWNpZnNfc2ItPm9yaWdpbl9mdWxscGF0aCkgewogCQlyYyA9IC1F
Tk9NRU07CiAJCWdvdG8gZXJyb3I7CmRpZmYgLS1naXQgYS9mcy9jaWZzL2Rmc19jYWNoZS5jIGIv
ZnMvY2lmcy9kZnNfY2FjaGUuYwppbmRleCAwOThiNGJjOGRhNTkuLmU0NjE3Y2NmMGEyMyAxMDA2
NDQKLS0tIGEvZnMvY2lmcy9kZnNfY2FjaGUuYworKysgYi9mcy9jaWZzL2Rmc19jYWNoZS5jCkBA
IC04OSw3ICs4OSw3IEBAIHN0YXRpYyBpbnQgZ2V0X25vcm1hbGl6ZWRfcGF0aChjb25zdCBjaGFy
ICpwYXRoLCBjaGFyICoqbnBhdGgpCiAJaWYgKCpwYXRoID09ICdcXCcpIHsKIAkJKm5wYXRoID0g
KGNoYXIgKilwYXRoOwogCX0gZWxzZSB7Ci0JCSpucGF0aCA9IGtzdHJuZHVwKHBhdGgsIHN0cmxl
bihwYXRoKSwgR0ZQX0tFUk5FTCk7CisJCSpucGF0aCA9IGtzdHJkdXAocGF0aCwgR0ZQX0tFUk5F
TCk7CiAJCWlmICghKm5wYXRoKQogCQkJcmV0dXJuIC1FTk9NRU07CiAJCWNvbnZlcnRfZGVsaW1p
dGVyKCpucGF0aCwgJ1xcJyk7CkBAIC0zNTgsNyArMzU4LDcgQEAgc3RhdGljIHN0cnVjdCBjYWNo
ZV9kZnNfdGd0ICphbGxvY190YXJnZXQoY29uc3QgY2hhciAqbmFtZSwgaW50IHBhdGhfY29uc3Vt
ZWQpCiAJdCA9IGttYWxsb2Moc2l6ZW9mKCp0KSwgR0ZQX0FUT01JQyk7CiAJaWYgKCF0KQogCQly
ZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKLQl0LT5uYW1lID0ga3N0cm5kdXAobmFtZSwgc3RybGVu
KG5hbWUpLCBHRlBfQVRPTUlDKTsKKwl0LT5uYW1lID0ga3N0cmR1cChuYW1lLCBHRlBfQVRPTUlD
KTsKIAlpZiAoIXQtPm5hbWUpIHsKIAkJa2ZyZWUodCk7CiAJCXJldHVybiBFUlJfUFRSKC1FTk9N
RU0pOwpAQCAtNDE5LDcgKzQxOSw3IEBAIHN0YXRpYyBzdHJ1Y3QgY2FjaGVfZW50cnkgKmFsbG9j
X2NhY2hlX2VudHJ5KGNvbnN0IGNoYXIgKnBhdGgsCiAJaWYgKCFjZSkKIAkJcmV0dXJuIEVSUl9Q
VFIoLUVOT01FTSk7CiAKLQljZS0+cGF0aCA9IGtzdHJuZHVwKHBhdGgsIHN0cmxlbihwYXRoKSwg
R0ZQX0tFUk5FTCk7CisJY2UtPnBhdGggPSBrc3RyZHVwKHBhdGgsIEdGUF9LRVJORUwpOwogCWlm
ICghY2UtPnBhdGgpIHsKIAkJa21lbV9jYWNoZV9mcmVlKGNhY2hlX3NsYWIsIGNlKTsKIAkJcmV0
dXJuIEVSUl9QVFIoLUVOT01FTSk7CkBAIC01MzEsNyArNTMxLDcgQEAgc3RhdGljIHN0cnVjdCBj
YWNoZV9lbnRyeSAqbG9va3VwX2NhY2hlX2VudHJ5KGNvbnN0IGNoYXIgKnBhdGgsIHVuc2lnbmVk
IGludCAqaGEKIAljaGFyICpzLCAqZTsKIAljaGFyIHNlcDsKIAotCW5wYXRoID0ga3N0cm5kdXAo
cGF0aCwgc3RybGVuKHBhdGgpLCBHRlBfS0VSTkVMKTsKKwlucGF0aCA9IGtzdHJkdXAocGF0aCwg
R0ZQX0tFUk5FTCk7CiAJaWYgKCFucGF0aCkKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAK
QEAgLTY0MSw3ICs2NDEsNyBAQCBzdGF0aWMgaW50IF9fdXBkYXRlX2NhY2hlX2VudHJ5KGNvbnN0
IGNoYXIgKnBhdGgsCiAKIAlpZiAoY2UtPnRndGhpbnQpIHsKIAkJcyA9IGNlLT50Z3RoaW50LT5u
YW1lOwotCQl0aCA9IGtzdHJuZHVwKHMsIHN0cmxlbihzKSwgR0ZQX0FUT01JQyk7CisJCXRoID0g
a3N0cmR1cChzLCBHRlBfQVRPTUlDKTsKIAkJaWYgKCF0aCkKIAkJCXJldHVybiAtRU5PTUVNOwog
CX0KQEAgLTc4NiwxMSArNzg2LDExIEBAIHN0YXRpYyBpbnQgc2V0dXBfcmVmZXJyYWwoY29uc3Qg
Y2hhciAqcGF0aCwgc3RydWN0IGNhY2hlX2VudHJ5ICpjZSwKIAogCW1lbXNldChyZWYsIDAsIHNp
emVvZigqcmVmKSk7CiAKLQlyZWYtPnBhdGhfbmFtZSA9IGtzdHJuZHVwKHBhdGgsIHN0cmxlbihw
YXRoKSwgR0ZQX0FUT01JQyk7CisJcmVmLT5wYXRoX25hbWUgPSBrc3RyZHVwKHBhdGgsIEdGUF9B
VE9NSUMpOwogCWlmICghcmVmLT5wYXRoX25hbWUpCiAJCXJldHVybiAtRU5PTUVNOwogCi0JcmVm
LT5ub2RlX25hbWUgPSBrc3RybmR1cCh0YXJnZXQsIHN0cmxlbih0YXJnZXQpLCBHRlBfQVRPTUlD
KTsKKwlyZWYtPm5vZGVfbmFtZSA9IGtzdHJkdXAodGFyZ2V0LCBHRlBfQVRPTUlDKTsKIAlpZiAo
IXJlZi0+bm9kZV9uYW1lKSB7CiAJCXJjID0gLUVOT01FTTsKIAkJZ290byBlcnJfZnJlZV9wYXRo
OwpAQCAtODI4LDcgKzgyOCw3IEBAIHN0YXRpYyBpbnQgZ2V0X3RhcmdldHMoc3RydWN0IGNhY2hl
X2VudHJ5ICpjZSwgc3RydWN0IGRmc19jYWNoZV90Z3RfbGlzdCAqdGwpCiAJCQlnb3RvIGVycl9m
cmVlX2l0OwogCQl9CiAKLQkJaXQtPml0X25hbWUgPSBrc3RybmR1cCh0LT5uYW1lLCBzdHJsZW4o
dC0+bmFtZSksIEdGUF9BVE9NSUMpOworCQlpdC0+aXRfbmFtZSA9IGtzdHJkdXAodC0+bmFtZSwg
R0ZQX0FUT01JQyk7CiAJCWlmICghaXQtPml0X25hbWUpIHsKIAkJCWtmcmVlKGl0KTsKIAkJCXJj
ID0gLUVOT01FTTsKQEAgLTExNjYsNyArMTE2Niw3IEBAIGludCBkZnNfY2FjaGVfYWRkX3ZvbChj
aGFyICptbnRkYXRhLCBzdHJ1Y3Qgc21iM19mc19jb250ZXh0ICpjdHgsIGNvbnN0IGNoYXIgKmZ1
CiAJaWYgKCF2aSkKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQl2aS0+ZnVsbHBhdGggPSBrc3RybmR1
cChmdWxscGF0aCwgc3RybGVuKGZ1bGxwYXRoKSwgR0ZQX0tFUk5FTCk7CisJdmktPmZ1bGxwYXRo
ID0ga3N0cmR1cChmdWxscGF0aCwgR0ZQX0tFUk5FTCk7CiAJaWYgKCF2aS0+ZnVsbHBhdGgpIHsK
IAkJcmMgPSAtRU5PTUVNOwogCQlnb3RvIGVycl9mcmVlX3ZpOwpkaWZmIC0tZ2l0IGEvZnMvY2lm
cy9mc19jb250ZXh0LmMgYi9mcy9jaWZzL2ZzX2NvbnRleHQuYwppbmRleCA3ODg4OTAyNGE3ZWQu
Ljc2NTJmNzNlMWJjYyAxMDA2NDQKLS0tIGEvZnMvY2lmcy9mc19jb250ZXh0LmMKKysrIGIvZnMv
Y2lmcy9mc19jb250ZXh0LmMKQEAgLTQzMCw3ICs0MzAsNyBAQCBpbnQgc21iM19wYXJzZV9vcHQo
Y29uc3QgY2hhciAqb3B0aW9ucywgY29uc3QgY2hhciAqa2V5LCBjaGFyICoqdmFsKQogCQkJaWYg
KG52YWwgPT0gcCkKIAkJCQljb250aW51ZTsKIAkJCSpudmFsKysgPSAwOwotCQkJKnZhbCA9IGtz
dHJuZHVwKG52YWwsIHN0cmxlbihudmFsKSwgR0ZQX0tFUk5FTCk7CisJCQkqdmFsID0ga3N0cmR1
cChudmFsLCBHRlBfS0VSTkVMKTsKIAkJCXJjID0gISp2YWwgPyAtRU5PTUVNIDogMDsKIAkJCWdv
dG8gb3V0OwogCQl9CmRpZmYgLS1naXQgYS9mcy9jaWZzL21pc2MuYyBiL2ZzL2NpZnMvbWlzYy5j
CmluZGV4IDgyZTE3NjcyMGNhNi4uYzE1YTkwZTQyMmJlIDEwMDY0NAotLS0gYS9mcy9jaWZzL21p
c2MuYworKysgYi9mcy9jaWZzL21pc2MuYwpAQCAtMTE4MCw3ICsxMTgwLDcgQEAgaW50IHVwZGF0
ZV9zdXBlcl9wcmVwYXRoKHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sIGNoYXIgKnByZWZpeCkKIAlr
ZnJlZShjaWZzX3NiLT5wcmVwYXRoKTsKIAogCWlmIChwcmVmaXggJiYgKnByZWZpeCkgewotCQlj
aWZzX3NiLT5wcmVwYXRoID0ga3N0cm5kdXAocHJlZml4LCBzdHJsZW4ocHJlZml4KSwgR0ZQX0FU
T01JQyk7CisJCWNpZnNfc2ItPnByZXBhdGggPSBrc3RyZHVwKHByZWZpeCwgR0ZQX0FUT01JQyk7
CiAJCWlmICghY2lmc19zYi0+cHJlcGF0aCkgewogCQkJcmMgPSAtRU5PTUVNOwogCQkJZ290byBv
dXQ7CmRpZmYgLS1naXQgYS9mcy9jaWZzL3NtYjFvcHMuYyBiL2ZzL2NpZnMvc21iMW9wcy5jCmlu
ZGV4IGUzMWI5MzllNjI4Yy4uODVmYTI1NGM3YTZiIDEwMDY0NAotLS0gYS9mcy9jaWZzL3NtYjFv
cHMuYworKysgYi9mcy9jaWZzL3NtYjFvcHMuYwpAQCAtOTI2LDkgKzkyNiw3IEBAIGNpZnNfdW5p
eF9kZnNfcmVhZGxpbmsoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAq
dGNvbiwKIAkJCSAgMCk7CiAKIAlpZiAoIXJjKSB7Ci0JCSpzeW1saW5raW5mbyA9IGtzdHJuZHVw
KHJlZmVycmFsLm5vZGVfbmFtZSwKLQkJCQkJc3RybGVuKHJlZmVycmFsLm5vZGVfbmFtZSksCi0J
CQkJCUdGUF9LRVJORUwpOworCQkqc3ltbGlua2luZm8gPSBrc3RyZHVwKHJlZmVycmFsLm5vZGVf
bmFtZSwgR0ZQX0tFUk5FTCk7CiAJCWZyZWVfZGZzX2luZm9fcGFyYW0oJnJlZmVycmFsKTsKIAkJ
aWYgKCEqc3ltbGlua2luZm8pCiAJCQlyYyA9IC1FTk9NRU07CmRpZmYgLS1naXQgYS9mcy9jaWZz
L3VuYy5jIGIvZnMvY2lmcy91bmMuYwppbmRleCAzOTRhYTAwY2VhNDAuLmY2ZmM1ZTM0M2VhNCAx
MDA2NDQKLS0tIGEvZnMvY2lmcy91bmMuYworKysgYi9mcy9jaWZzL3VuYy5jCkBAIC01MCw3ICs1
MCw2IEBAIGNoYXIgKmV4dHJhY3Rfc2hhcmVuYW1lKGNvbnN0IGNoYXIgKnVuYykKIHsKIAljb25z
dCBjaGFyICpzcmM7CiAJY2hhciAqZGVsaW0sICpkc3Q7Ci0JaW50IGxlbjsKIAogCS8qIHNraXAg
ZG91YmxlIGNoYXJzIGF0IHRoZSBiZWdpbm5pbmcgKi8KIAlzcmMgPSB1bmMgKyAyOwpAQCAtNjAs
MTAgKzU5LDkgQEAgY2hhciAqZXh0cmFjdF9zaGFyZW5hbWUoY29uc3QgY2hhciAqdW5jKQogCWlm
ICghZGVsaW0pCiAJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOwogCWRlbGltKys7Ci0JbGVuID0g
c3RybGVuKGRlbGltKTsKIAogCS8qIGNhbGxlciBoYXMgdG8gZnJlZSB0aGUgbWVtb3J5ICovCi0J
ZHN0ID0ga3N0cm5kdXAoZGVsaW0sIGxlbiwgR0ZQX0tFUk5FTCk7CisJZHN0ID0ga3N0cmR1cChk
ZWxpbSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCFkc3QpCiAJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0p
OwogCi0tIAoyLjI3LjAKCg==
--000000000000972a6d05c00a7b66
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0004-cifs-constify-pathname-arguments-in-a-bunch-of-helpe.patch"
Content-Disposition: attachment; 
	filename="0004-cifs-constify-pathname-arguments-in-a-bunch-of-helpe.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_knjghl213>
X-Attachment-Id: f_knjghl213

RnJvbSAxZjlhZWIxNTU0YTcxOWVmNzJmODQ4NTNmOGFmNzgxMDMxY2Y2OGUxIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KRGF0
ZTogVGh1LCAxOCBNYXIgMjAyMSAxNTo0NDowNSAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggNC84XSBj
aWZzOiBjb25zdGlmeSBwYXRobmFtZSBhcmd1bWVudHMgaW4gYSBidW5jaCBvZiBoZWxwZXJzCgpT
aWduZWQtb2ZmLWJ5OiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KU2lnbmVkLW9m
Zi1ieTogU3RldmUgRnJlbmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL2NpZnMv
Y2lmc3Byb3RvLmggfCA0ICsrLS0KIGZzL2NpZnMvZmlsZS5jICAgICAgfCA0ICsrLS0KIGZzL2Np
ZnMvaW5vZGUuYyAgICAgfCA0ICsrLS0KIGZzL2NpZnMvcmVhZGRpci5jICAgfCA0ICsrLS0KIGZz
L2NpZnMveGF0dHIuYyAgICAgfCA0ICsrLS0KIDUgZmlsZXMgY2hhbmdlZCwgMTAgaW5zZXJ0aW9u
cygrKSwgMTAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9jaWZzcHJvdG8uaCBi
L2ZzL2NpZnMvY2lmc3Byb3RvLmgKaW5kZXggMTBjODRhODE1OWQ3Li5hNDY1OTRjNzllNzUgMTAw
NjQ0Ci0tLSBhL2ZzL2NpZnMvY2lmc3Byb3RvLmgKKysrIGIvZnMvY2lmcy9jaWZzcHJvdG8uaApA
QCAtMTg0LDcgKzE4NCw3IEBAIGV4dGVybiBzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpjaWZzX25ld19m
aWxlaW5mbyhzdHJ1Y3QgY2lmc19maWQgKmZpZCwKIAkJCQkJICAgICAgc3RydWN0IGZpbGUgKmZp
bGUsCiAJCQkJCSAgICAgIHN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rLAogCQkJCQkgICAgICBfX3Uz
MiBvcGxvY2spOwotZXh0ZXJuIGludCBjaWZzX3Bvc2l4X29wZW4oY2hhciAqZnVsbF9wYXRoLCBz
dHJ1Y3QgaW5vZGUgKippbm9kZSwKK2V4dGVybiBpbnQgY2lmc19wb3NpeF9vcGVuKGNvbnN0IGNo
YXIgKmZ1bGxfcGF0aCwgc3RydWN0IGlub2RlICoqaW5vZGUsCiAJCQkgICBzdHJ1Y3Qgc3VwZXJf
YmxvY2sgKnNiLCBpbnQgbW9kZSwKIAkJCSAgIHVuc2lnbmVkIGludCBmX2ZsYWdzLCBfX3UzMiAq
b3Bsb2NrLCBfX3UxNiAqbmV0ZmlkLAogCQkJICAgdW5zaWduZWQgaW50IHhpZCk7CkBAIC0yMDcs
NyArMjA3LDcgQEAgZXh0ZXJuIGludCBjaWZzX2dldF9pbm9kZV9pbmZvX3VuaXgoc3RydWN0IGlu
b2RlICoqcGlub2RlLAogCQkJY29uc3QgdW5zaWduZWQgY2hhciAqc2VhcmNoX3BhdGgsCiAJCQlz
dHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCB1bnNpZ25lZCBpbnQgeGlkKTsKIGV4dGVybiBpbnQgY2lm
c19zZXRfZmlsZV9pbmZvKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBpYXR0ciAqYXR0cnMs
Ci0JCQkgICAgICB1bnNpZ25lZCBpbnQgeGlkLCBjaGFyICpmdWxsX3BhdGgsIF9fdTMyIGRvc2F0
dHIpOworCQkJICAgICAgdW5zaWduZWQgaW50IHhpZCwgY29uc3QgY2hhciAqZnVsbF9wYXRoLCBf
X3UzMiBkb3NhdHRyKTsKIGV4dGVybiBpbnQgY2lmc19yZW5hbWVfcGVuZGluZ19kZWxldGUoY29u
c3QgY2hhciAqZnVsbF9wYXRoLAogCQkJCSAgICAgIHN0cnVjdCBkZW50cnkgKmRlbnRyeSwKIAkJ
CQkgICAgICBjb25zdCB1bnNpZ25lZCBpbnQgeGlkKTsKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvZmls
ZS5jIGIvZnMvY2lmcy9maWxlLmMKaW5kZXggMDQyZTI0YWFkNDEwLi5kOTAzNzA5ZDYxYmQgMTAw
NjQ0Ci0tLSBhL2ZzL2NpZnMvZmlsZS5jCisrKyBiL2ZzL2NpZnMvZmlsZS5jCkBAIC0xMTIsNyAr
MTEyLDcgQEAgc3RhdGljIGlubGluZSBpbnQgY2lmc19nZXRfZGlzcG9zaXRpb24odW5zaWduZWQg
aW50IGZsYWdzKQogCQlyZXR1cm4gRklMRV9PUEVOOwogfQogCi1pbnQgY2lmc19wb3NpeF9vcGVu
KGNoYXIgKmZ1bGxfcGF0aCwgc3RydWN0IGlub2RlICoqcGlub2RlLAoraW50IGNpZnNfcG9zaXhf
b3Blbihjb25zdCBjaGFyICpmdWxsX3BhdGgsIHN0cnVjdCBpbm9kZSAqKnBpbm9kZSwKIAkJCXN0
cnVjdCBzdXBlcl9ibG9jayAqc2IsIGludCBtb2RlLCB1bnNpZ25lZCBpbnQgZl9mbGFncywKIAkJ
CV9fdTMyICpwb3Bsb2NrLCBfX3UxNiAqcG5ldGZpZCwgdW5zaWduZWQgaW50IHhpZCkKIHsKQEAg
LTE3NSw3ICsxNzUsNyBAQCBpbnQgY2lmc19wb3NpeF9vcGVuKGNoYXIgKmZ1bGxfcGF0aCwgc3Ry
dWN0IGlub2RlICoqcGlub2RlLAogfQogCiBzdGF0aWMgaW50Ci1jaWZzX250X29wZW4oY2hhciAq
ZnVsbF9wYXRoLCBzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZz
X3NiLAorY2lmc19udF9vcGVuKGNvbnN0IGNoYXIgKmZ1bGxfcGF0aCwgc3RydWN0IGlub2RlICpp
bm9kZSwgc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiwKIAkgICAgIHN0cnVjdCBjaWZzX3Rj
b24gKnRjb24sIHVuc2lnbmVkIGludCBmX2ZsYWdzLCBfX3UzMiAqb3Bsb2NrLAogCSAgICAgc3Ry
dWN0IGNpZnNfZmlkICpmaWQsIHVuc2lnbmVkIGludCB4aWQpCiB7CmRpZmYgLS1naXQgYS9mcy9j
aWZzL2lub2RlLmMgYi9mcy9jaWZzL2lub2RlLmMKaW5kZXggMmE3M2FlMDRiNzQxLi5jNmU3YmI0
YTE4NzYgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvaW5vZGUuYworKysgYi9mcy9jaWZzL2lub2RlLmMK
QEAgLTE0MDgsNyArMTQwOCw3IEBAIHN0cnVjdCBpbm9kZSAqY2lmc19yb290X2lnZXQoc3RydWN0
IHN1cGVyX2Jsb2NrICpzYikKIAogaW50CiBjaWZzX3NldF9maWxlX2luZm8oc3RydWN0IGlub2Rl
ICppbm9kZSwgc3RydWN0IGlhdHRyICphdHRycywgdW5zaWduZWQgaW50IHhpZCwKLQkJICAgY2hh
ciAqZnVsbF9wYXRoLCBfX3UzMiBkb3NhdHRyKQorCQkgICBjb25zdCBjaGFyICpmdWxsX3BhdGgs
IF9fdTMyIGRvc2F0dHIpCiB7CiAJYm9vbCBzZXRfdGltZSA9IGZhbHNlOwogCXN0cnVjdCBjaWZz
X3NiX2luZm8gKmNpZnNfc2IgPSBDSUZTX1NCKGlub2RlLT5pX3NiKTsKQEAgLTI1MjIsNyArMjUy
Miw3IEBAIHZvaWQgY2lmc19zZXRzaXplKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBvZmZz
ZXQpCiAKIHN0YXRpYyBpbnQKIGNpZnNfc2V0X2ZpbGVfc2l6ZShzdHJ1Y3QgaW5vZGUgKmlub2Rl
LCBzdHJ1Y3QgaWF0dHIgKmF0dHJzLAotCQkgICB1bnNpZ25lZCBpbnQgeGlkLCBjaGFyICpmdWxs
X3BhdGgpCisJCSAgIHVuc2lnbmVkIGludCB4aWQsIGNvbnN0IGNoYXIgKmZ1bGxfcGF0aCkKIHsK
IAlpbnQgcmM7CiAJc3RydWN0IGNpZnNGaWxlSW5mbyAqb3Blbl9maWxlOwpkaWZmIC0tZ2l0IGEv
ZnMvY2lmcy9yZWFkZGlyLmMgYi9mcy9jaWZzL3JlYWRkaXIuYwppbmRleCA4MGJmNGM2ZjRjN2Iu
LjcyMjViMmNhZTNlNiAxMDA2NDQKLS0tIGEvZnMvY2lmcy9yZWFkZGlyLmMKKysrIGIvZnMvY2lm
cy9yZWFkZGlyLmMKQEAgLTM4NCw3ICszODQsNyBAQCBpbnQgZ2V0X3N5bWxpbmtfcmVwYXJzZV9w
YXRoKGNoYXIgKmZ1bGxfcGF0aCwgc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiwKIAogc3Rh
dGljIGludAogaW5pdGlhdGVfY2lmc19zZWFyY2goY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3Ry
dWN0IGZpbGUgKmZpbGUsCi0JCSAgICAgY2hhciAqZnVsbF9wYXRoKQorCQkgICAgIGNvbnN0IGNo
YXIgKmZ1bGxfcGF0aCkKIHsKIAlfX3UxNiBzZWFyY2hfZmxhZ3M7CiAJaW50IHJjID0gMDsKQEAg
LTcwNCw3ICs3MDQsNyBAQCBzdGF0aWMgaW50IGNpZnNfc2F2ZV9yZXN1bWVfa2V5KGNvbnN0IGNo
YXIgKmN1cnJlbnRfZW50cnksCiAgKi8KIHN0YXRpYyBpbnQKIGZpbmRfY2lmc19lbnRyeShjb25z
dCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLCBsb2ZmX3QgcG9zLAot
CQlzdHJ1Y3QgZmlsZSAqZmlsZSwgY2hhciAqZnVsbF9wYXRoLAorCQlzdHJ1Y3QgZmlsZSAqZmls
ZSwgY29uc3QgY2hhciAqZnVsbF9wYXRoLAogCQljaGFyICoqY3VycmVudF9lbnRyeSwgaW50ICpu
dW1fdG9fcmV0KQogewogCV9fdTE2IHNlYXJjaF9mbGFnczsKZGlmZiAtLWdpdCBhL2ZzL2NpZnMv
eGF0dHIuYyBiL2ZzL2NpZnMveGF0dHIuYwppbmRleCA0MWE2MTFlNzZiYjcuLmJhYzA1ZGQ2YzVi
MyAxMDA2NDQKLS0tIGEvZnMvY2lmcy94YXR0ci5jCisrKyBiL2ZzL2NpZnMveGF0dHIuYwpAQCAt
NTMsNyArNTMsNyBAQCBlbnVtIHsgWEFUVFJfVVNFUiwgWEFUVFJfQ0lGU19BQ0wsIFhBVFRSX0FD
TF9BQ0NFU1MsIFhBVFRSX0FDTF9ERUZBVUxULAogCVhBVFRSX0NJRlNfTlRTRCwgWEFUVFJfQ0lG
U19OVFNEX0ZVTEwgfTsKIAogc3RhdGljIGludCBjaWZzX2F0dHJpYl9zZXQodW5zaWduZWQgaW50
IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAqcFRjb24sCi0JCQkgICBzdHJ1Y3QgaW5vZGUgKmlub2Rl
LCBjaGFyICpmdWxsX3BhdGgsCisJCQkgICBzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjb25zdCBjaGFy
ICpmdWxsX3BhdGgsCiAJCQkgICBjb25zdCB2b2lkICp2YWx1ZSwgc2l6ZV90IHNpemUpCiB7CiAJ
c3NpemVfdCByYyA9IC1FT1BOT1RTVVBQOwpAQCAtNzcsNyArNzcsNyBAQCBzdGF0aWMgaW50IGNp
ZnNfYXR0cmliX3NldCh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICpwVGNvbiwK
IH0KIAogc3RhdGljIGludCBjaWZzX2NyZWF0aW9uX3RpbWVfc2V0KHVuc2lnbmVkIGludCB4aWQs
IHN0cnVjdCBjaWZzX3Rjb24gKnBUY29uLAotCQkJCSAgc3RydWN0IGlub2RlICppbm9kZSwgY2hh
ciAqZnVsbF9wYXRoLAorCQkJCSAgc3RydWN0IGlub2RlICppbm9kZSwgY29uc3QgY2hhciAqZnVs
bF9wYXRoLAogCQkJCSAgY29uc3Qgdm9pZCAqdmFsdWUsIHNpemVfdCBzaXplKQogewogCXNzaXpl
X3QgcmMgPSAtRU9QTk9UU1VQUDsKLS0gCjIuMjcuMAoK
--000000000000972a6d05c00a7b66
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0003-cifs-constify-path-argument-of-make_node.patch"
Content-Disposition: attachment; 
	filename="0003-cifs-constify-path-argument-of-make_node.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_knjghl212>
X-Attachment-Id: f_knjghl212

RnJvbSA4MzA1ZjA1YzMyOWYzZTgzYjgwYTc2YjA1NGMxYWI3ZTQ5YmM2Y2M0IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KRGF0
ZTogVGh1LCAxOCBNYXIgMjAyMSAwMTozODo1MyAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggMy84XSBj
aWZzOiBjb25zdGlmeSBwYXRoIGFyZ3VtZW50IG9mIC0+bWFrZV9ub2RlKCkKClNpZ25lZC1vZmYt
Ynk6IEFsIFZpcm8gPHZpcm9AemVuaXYubGludXgub3JnLnVrPgpTaWduZWQtb2ZmLWJ5OiBTdGV2
ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvY2lmcy9jaWZzZ2xvYi5o
IHwgMiArLQogZnMvY2lmcy9zbWIxb3BzLmMgIHwgMiArLQogZnMvY2lmcy9zbWIyb3BzLmMgIHwg
MiArLQogMyBmaWxlcyBjaGFuZ2VkLCAzIGluc2VydGlvbnMoKyksIDMgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvZnMvY2lmcy9jaWZzZ2xvYi5oIGIvZnMvY2lmcy9jaWZzZ2xvYi5oCmluZGV4
IDE4YTU1MDVhNTA2Yy4uMDM0YjkxOWYwOTFkIDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNnbG9i
LmgKKysrIGIvZnMvY2lmcy9jaWZzZ2xvYi5oCkBAIC00OTUsNyArNDk1LDcgQEAgc3RydWN0IHNt
Yl92ZXJzaW9uX29wZXJhdGlvbnMgewogCQkJIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJCQkgc3Ry
dWN0IGRlbnRyeSAqZGVudHJ5LAogCQkJIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sCi0JCQkgY2hh
ciAqZnVsbF9wYXRoLAorCQkJIGNvbnN0IGNoYXIgKmZ1bGxfcGF0aCwKIAkJCSB1bW9kZV90IG1v
ZGUsCiAJCQkgZGV2X3QgZGV2aWNlX251bWJlcik7CiAJLyogdmVyc2lvbiBzcGVjaWZpYyBmaWVt
YXAgaW1wbGVtZW50YXRpb24gKi8KZGlmZiAtLWdpdCBhL2ZzL2NpZnMvc21iMW9wcy5jIGIvZnMv
Y2lmcy9zbWIxb3BzLmMKaW5kZXggODVmYTI1NGM3YTZiLi4zYjgzODM5ZmMyYzIgMTAwNjQ0Ci0t
LSBhL2ZzL2NpZnMvc21iMW9wcy5jCisrKyBiL2ZzL2NpZnMvc21iMW9wcy5jCkBAIC0xMDI1LDcg
KzEwMjUsNyBAQCBjaWZzX2Nhbl9lY2hvKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcikK
IHN0YXRpYyBpbnQKIGNpZnNfbWFrZV9ub2RlKHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBpbm9k
ZSAqaW5vZGUsCiAJICAgICAgIHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgc3RydWN0IGNpZnNfdGNv
biAqdGNvbiwKLQkgICAgICAgY2hhciAqZnVsbF9wYXRoLCB1bW9kZV90IG1vZGUsIGRldl90IGRl
dikKKwkgICAgICAgY29uc3QgY2hhciAqZnVsbF9wYXRoLCB1bW9kZV90IG1vZGUsIGRldl90IGRl
dikKIHsKIAlzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihpbm9kZS0+aV9z
Yik7CiAJc3RydWN0IGlub2RlICpuZXdpbm9kZSA9IE5VTEw7CmRpZmYgLS1naXQgYS9mcy9jaWZz
L3NtYjJvcHMuYyBiL2ZzL2NpZnMvc21iMm9wcy5jCmluZGV4IGY3MDMyMDRmYjE4NS4uODFiMWUw
ZWNhOWI5IDEwMDY0NAotLS0gYS9mcy9jaWZzL3NtYjJvcHMuYworKysgYi9mcy9jaWZzL3NtYjJv
cHMuYwpAQCAtNDk2OCw3ICs0OTY4LDcgQEAgc21iMl9uZXh0X2hlYWRlcihjaGFyICpidWYpCiBz
dGF0aWMgaW50CiBzbWIyX21ha2Vfbm9kZSh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgaW5vZGUg
Kmlub2RlLAogCSAgICAgICBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksIHN0cnVjdCBjaWZzX3Rjb24g
KnRjb24sCi0JICAgICAgIGNoYXIgKmZ1bGxfcGF0aCwgdW1vZGVfdCBtb2RlLCBkZXZfdCBkZXYp
CisJICAgICAgIGNvbnN0IGNoYXIgKmZ1bGxfcGF0aCwgdW1vZGVfdCBtb2RlLCBkZXZfdCBkZXYp
CiB7CiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoaW5vZGUtPmlfc2Ip
OwogCWludCByYyA9IC1FUEVSTTsKLS0gCjIuMjcuMAoK
--000000000000972a6d05c00a7b66
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0002-cifs-constify-get_normalized_path-properly.patch"
Content-Disposition: attachment; 
	filename="0002-cifs-constify-get_normalized_path-properly.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_knjghl201>
X-Attachment-Id: f_knjghl201

RnJvbSBmNzEzYjcxMjJiZjMyMDYzMzkwNTMwODgwMzM3MWFmZDM1MjAwZmRjIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KRGF0
ZTogVGh1LCAxOCBNYXIgMjAyMSAwMTowMzozNCAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggMi84XSBj
aWZzOiBjb25zdGlmeSBnZXRfbm9ybWFsaXplZF9wYXRoKCkgcHJvcGVybHkKCkFzIGl0IGlzLCBp
dCB0YWtlcyBjb25zdCBjaGFyICogYW5kLCBpbiBzb21lIGNhc2VzLCBzdG9yZXMgaXQgaW4KY2Fs
bGVyJ3MgdmFyaWFibGUgdGhhdCBpcyBwbGFpbiBjaGFyICouICBGb3J0dW5hdGVseSwgbm9uZSBv
ZiB0aGUKY2FsbGVycyBhY3R1YWxseSBwcm9jZWVkZWQgdG8gbW9kaWZ5IHRoZSBzdHJpbmcgdmlh
IG5vdy1ub24tY29uc3QKYWxpYXMsIGJ1dCB0aGF0J3MgdHJvdWJsZSB3YWl0aW5nIHRvIGhhcHBl
bi4KCkl0J3MgZWFzeSB0byBkbyBwcm9wZXJseSwgYW55d2F5Li4uCgpTaWduZWQtb2ZmLWJ5OiBB
bCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KU2lnbmVkLW9mZi1ieTogU3RldmUgRnJl
bmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL2NpZnMvZGZzX2NhY2hlLmMgfCAy
NSArKysrKysrKysrKysrLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTMgaW5zZXJ0aW9u
cygrKSwgMTIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9kZnNfY2FjaGUuYyBi
L2ZzL2NpZnMvZGZzX2NhY2hlLmMKaW5kZXggZTQ2MTdjY2YwYTIzLi5iMWZhMzBmZWZlMWYgMTAw
NjQ0Ci0tLSBhL2ZzL2NpZnMvZGZzX2NhY2hlLmMKKysrIGIvZnMvY2lmcy9kZnNfY2FjaGUuYwpA
QCAtODEsMjMgKzgxLDI0IEBAIHN0YXRpYyB2b2lkIHJlZnJlc2hfY2FjaGVfd29ya2VyKHN0cnVj
dCB3b3JrX3N0cnVjdCAqd29yayk7CiAKIHN0YXRpYyBERUNMQVJFX0RFTEFZRURfV09SSyhyZWZy
ZXNoX3Rhc2ssIHJlZnJlc2hfY2FjaGVfd29ya2VyKTsKIAotc3RhdGljIGludCBnZXRfbm9ybWFs
aXplZF9wYXRoKGNvbnN0IGNoYXIgKnBhdGgsIGNoYXIgKipucGF0aCkKK3N0YXRpYyBpbnQgZ2V0
X25vcm1hbGl6ZWRfcGF0aChjb25zdCBjaGFyICpwYXRoLCBjb25zdCBjaGFyICoqbnBhdGgpCiB7
CiAJaWYgKCFwYXRoIHx8IHN0cmxlbihwYXRoKSA8IDMgfHwgKCpwYXRoICE9ICdcXCcgJiYgKnBh
dGggIT0gJy8nKSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKIAlpZiAoKnBhdGggPT0gJ1xcJykgewot
CQkqbnBhdGggPSAoY2hhciAqKXBhdGg7CisJCSpucGF0aCA9IHBhdGg7CiAJfSBlbHNlIHsKLQkJ
Km5wYXRoID0ga3N0cmR1cChwYXRoLCBHRlBfS0VSTkVMKTsKLQkJaWYgKCEqbnBhdGgpCisJCWNo
YXIgKnMgPSBrc3RyZHVwKHBhdGgsIEdGUF9LRVJORUwpOworCQlpZiAoIXMpCiAJCQlyZXR1cm4g
LUVOT01FTTsKLQkJY29udmVydF9kZWxpbWl0ZXIoKm5wYXRoLCAnXFwnKTsKKwkJY29udmVydF9k
ZWxpbWl0ZXIocywgJ1xcJyk7CisJCSpucGF0aCA9IHM7CiAJfQogCXJldHVybiAwOwogfQogCi1z
dGF0aWMgaW5saW5lIHZvaWQgZnJlZV9ub3JtYWxpemVkX3BhdGgoY29uc3QgY2hhciAqcGF0aCwg
Y2hhciAqbnBhdGgpCitzdGF0aWMgaW5saW5lIHZvaWQgZnJlZV9ub3JtYWxpemVkX3BhdGgoY29u
c3QgY2hhciAqcGF0aCwgY29uc3QgY2hhciAqbnBhdGgpCiB7CiAJaWYgKHBhdGggIT0gbnBhdGgp
CiAJCWtmcmVlKG5wYXRoKTsKQEAgLTg4Miw3ICs4ODMsNyBAQCBpbnQgZGZzX2NhY2hlX2ZpbmQo
Y29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfc2VzICpzZXMsCiAJCSAgIHN0cnVj
dCBkZnNfY2FjaGVfdGd0X2xpc3QgKnRndF9saXN0KQogewogCWludCByYzsKLQljaGFyICpucGF0
aDsKKwljb25zdCBjaGFyICpucGF0aDsKIAlzdHJ1Y3QgY2FjaGVfZW50cnkgKmNlOwogCiAJcmMg
PSBnZXRfbm9ybWFsaXplZF9wYXRoKHBhdGgsICZucGF0aCk7CkBAIC05MzYsNyArOTM3LDcgQEAg
aW50IGRmc19jYWNoZV9ub3JlcV9maW5kKGNvbnN0IGNoYXIgKnBhdGgsIHN0cnVjdCBkZnNfaW5m
bzNfcGFyYW0gKnJlZiwKIAkJCSBzdHJ1Y3QgZGZzX2NhY2hlX3RndF9saXN0ICp0Z3RfbGlzdCkK
IHsKIAlpbnQgcmM7Ci0JY2hhciAqbnBhdGg7CisJY29uc3QgY2hhciAqbnBhdGg7CiAJc3RydWN0
IGNhY2hlX2VudHJ5ICpjZTsKIAogCXJjID0gZ2V0X25vcm1hbGl6ZWRfcGF0aChwYXRoLCAmbnBh
dGgpOwpAQCAtOTkxLDcgKzk5Miw3IEBAIGludCBkZnNfY2FjaGVfdXBkYXRlX3RndGhpbnQoY29u
c3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfc2VzICpzZXMsCiAJCQkgICAgIGNvbnN0
IHN0cnVjdCBkZnNfY2FjaGVfdGd0X2l0ZXJhdG9yICppdCkKIHsKIAlpbnQgcmM7Ci0JY2hhciAq
bnBhdGg7CisJY29uc3QgY2hhciAqbnBhdGg7CiAJc3RydWN0IGNhY2hlX2VudHJ5ICpjZTsKIAlz
dHJ1Y3QgY2FjaGVfZGZzX3RndCAqdDsKIApAQCAtMTA1Myw3ICsxMDU0LDcgQEAgaW50IGRmc19j
YWNoZV9ub3JlcV91cGRhdGVfdGd0aGludChjb25zdCBjaGFyICpwYXRoLAogCQkJCSAgIGNvbnN0
IHN0cnVjdCBkZnNfY2FjaGVfdGd0X2l0ZXJhdG9yICppdCkKIHsKIAlpbnQgcmM7Ci0JY2hhciAq
bnBhdGg7CisJY29uc3QgY2hhciAqbnBhdGg7CiAJc3RydWN0IGNhY2hlX2VudHJ5ICpjZTsKIAlz
dHJ1Y3QgY2FjaGVfZGZzX3RndCAqdDsKIApAQCAtMTExMSw3ICsxMTEyLDcgQEAgaW50IGRmc19j
YWNoZV9nZXRfdGd0X3JlZmVycmFsKGNvbnN0IGNoYXIgKnBhdGgsCiAJCQkgICAgICAgc3RydWN0
IGRmc19pbmZvM19wYXJhbSAqcmVmKQogewogCWludCByYzsKLQljaGFyICpucGF0aDsKKwljb25z
dCBjaGFyICpucGF0aDsKIAlzdHJ1Y3QgY2FjaGVfZW50cnkgKmNlOwogCiAJaWYgKCFpdCB8fCAh
cmVmKQpAQCAtMTQ4NCw3ICsxNDg1LDcgQEAgc3RhdGljIGludCByZWZyZXNoX3Rjb24oc3RydWN0
IHZvbF9pbmZvICp2aSwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbikKIHsKIAlpbnQgcmMgPSAwOwog
CXVuc2lnbmVkIGludCB4aWQ7Ci0JY2hhciAqcGF0aCwgKm5wYXRoOworCWNvbnN0IGNoYXIgKnBh
dGgsICpucGF0aDsKIAlzdHJ1Y3QgY2FjaGVfZW50cnkgKmNlOwogCXN0cnVjdCBjaWZzX3NlcyAq
cm9vdF9zZXMgPSBOVUxMLCAqc2VzOwogCXN0cnVjdCBkZnNfaW5mbzNfcGFyYW0gKnJlZnMgPSBO
VUxMOwotLSAKMi4yNy4wCgo=
--000000000000972a6d05c00a7b66
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0007-cifs-switch-build_path_from_dentry-to-using-dentry_p.patch"
Content-Disposition: attachment; 
	filename="0007-cifs-switch-build_path_from_dentry-to-using-dentry_p.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_knjghl224>
X-Attachment-Id: f_knjghl224

RnJvbSBlNTVmNTc0ZGM3NDkyMDA2NzA1Y2FiZjgxZGFmOWMxZTQwZWNlYTI1IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KRGF0
ZTogRnJpLCA1IE1hciAyMDIxIDIxOjUzOjQ4IC0wNTAwClN1YmplY3Q6IFtQQVRDSCA3LzhdIGNp
ZnM6IHN3aXRjaCBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KCkgdG8gdXNpbmcKIGRlbnRyeV9wYXRo
X3JhdygpCgpUaGUgY29zdCBpcyB0aGF0IHdlIG1pZ2h0IG5lZWQgdG8gZmxpcCAnLycgdG8gJ1xc
JyBpbiBtb3JlIHRoYW4KanVzdCB0aGUgcHJlZml4LiAgTmVlZHMgcHJvZmlsaW5nLCBidXQgSSBz
dXNwZWN0IHRoYXQgd2Ugd29uJ3QKZ2V0IHNsb3dkb3duIG9uIHRoYXQuCgpTaWduZWQtb2ZmLWJ5
OiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KU2lnbmVkLW9mZi1ieTogU3RldmUg
RnJlbmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL2NpZnMvZGlyLmMgfCA4NSAr
KysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDEgZmls
ZSBjaGFuZ2VkLCAyMyBpbnNlcnRpb25zKCspLCA2MiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9mcy9jaWZzL2Rpci5jIGIvZnMvY2lmcy9kaXIuYwppbmRleCA2ZTg1NWYwMDRmNTAuLjAzYWZh
ZDhiMjRhZiAxMDA2NDQKLS0tIGEvZnMvY2lmcy9kaXIuYworKysgYi9mcy9jaWZzL2Rpci5jCkBA
IC05MywyMCArOTMsMTYgQEAgY2hhciAqCiBidWlsZF9wYXRoX2Zyb21fZGVudHJ5X29wdGlvbmFs
X3ByZWZpeChzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgdm9pZCAqcGFnZSwKIAkJCQkgICAgICAg
Ym9vbCBwcmVmaXgpCiB7Ci0Jc3RydWN0IGRlbnRyeSAqdGVtcDsKLQlpbnQgbmFtZWxlbjsKIAlp
bnQgZGZzcGxlbjsKIAlpbnQgcHBsZW4gPSAwOwotCWNoYXIgKmZ1bGxfcGF0aCA9IHBhZ2U7Ci0J
Y2hhciBkaXJzZXA7CiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoZGly
ZW50cnktPmRfc2IpOwogCXN0cnVjdCBjaWZzX3Rjb24gKnRjb24gPSBjaWZzX3NiX21hc3Rlcl90
Y29uKGNpZnNfc2IpOwotCXVuc2lnbmVkIHNlcTsKKwljaGFyIGRpcnNlcCA9IENJRlNfRElSX1NF
UChjaWZzX3NiKTsKKwljaGFyICpzOwogCiAJaWYgKHVubGlrZWx5KCFwYWdlKSkKIAkJcmV0dXJu
IEVSUl9QVFIoLUVOT01FTSk7CiAKLQlkaXJzZXAgPSBDSUZTX0RJUl9TRVAoY2lmc19zYik7CiAJ
aWYgKHByZWZpeCkKIAkJZGZzcGxlbiA9IHN0cm5sZW4odGNvbi0+dHJlZU5hbWUsIE1BWF9UUkVF
X1NJWkUgKyAxKTsKIAllbHNlCkBAIC0xMTUsNzQgKzExMSwzOSBAQCBidWlsZF9wYXRoX2Zyb21f
ZGVudHJ5X29wdGlvbmFsX3ByZWZpeChzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgdm9pZCAqcGFn
ZSwKIAlpZiAoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX1VTRV9QUkVGSVhf
UEFUSCkKIAkJcHBsZW4gPSBjaWZzX3NiLT5wcmVwYXRoID8gc3RybGVuKGNpZnNfc2ItPnByZXBh
dGgpICsgMSA6IDA7CiAKLWNpZnNfYnBfcmVuYW1lX3JldHJ5OgotCW5hbWVsZW4gPSBkZnNwbGVu
ICsgcHBsZW47Ci0Jc2VxID0gcmVhZF9zZXFiZWdpbigmcmVuYW1lX2xvY2spOwotCXJjdV9yZWFk
X2xvY2soKTsKLQlmb3IgKHRlbXAgPSBkaXJlbnRyeTsgIUlTX1JPT1QodGVtcCk7KSB7Ci0JCW5h
bWVsZW4gKz0gKDEgKyB0ZW1wLT5kX25hbWUubGVuKTsKLQkJdGVtcCA9IHRlbXAtPmRfcGFyZW50
OwotCX0KLQlyY3VfcmVhZF91bmxvY2soKTsKLQotCWlmIChuYW1lbGVuID49IFBBR0VfU0laRSkK
KwlzID0gZGVudHJ5X3BhdGhfcmF3KGRpcmVudHJ5LCBwYWdlLCBQQUdFX1NJWkUpOworCWlmIChJ
U19FUlIocykpCisJCXJldHVybiBzOworCWlmICghc1sxXSkJLy8gZm9yIHJvb3Qgd2Ugd2FudCAi
Iiwgbm90ICIvIgorCQlzKys7CisJaWYgKHMgPCAoY2hhciAqKXBhZ2UgKyBwcGxlbiArIGRmc3Bs
ZW4pCiAJCXJldHVybiBFUlJfUFRSKC1FTkFNRVRPT0xPTkcpOwotCi0JZnVsbF9wYXRoW25hbWVs
ZW5dID0gMDsJLyogdHJhaWxpbmcgbnVsbCAqLwotCXJjdV9yZWFkX2xvY2soKTsKLQlmb3IgKHRl
bXAgPSBkaXJlbnRyeTsgIUlTX1JPT1QodGVtcCk7KSB7Ci0JCXNwaW5fbG9jaygmdGVtcC0+ZF9s
b2NrKTsKLQkJbmFtZWxlbiAtPSAxICsgdGVtcC0+ZF9uYW1lLmxlbjsKLQkJaWYgKG5hbWVsZW4g
PCAwKSB7Ci0JCQlzcGluX3VubG9jaygmdGVtcC0+ZF9sb2NrKTsKLQkJCWJyZWFrOwotCQl9IGVs
c2UgewotCQkJZnVsbF9wYXRoW25hbWVsZW5dID0gZGlyc2VwOwotCQkJc3RybmNweShmdWxsX3Bh
dGggKyBuYW1lbGVuICsgMSwgdGVtcC0+ZF9uYW1lLm5hbWUsCi0JCQkJdGVtcC0+ZF9uYW1lLmxl
bik7Ci0JCQljaWZzX2RiZyhGWUksICJuYW1lOiAlc1xuIiwgZnVsbF9wYXRoICsgbmFtZWxlbik7
Ci0JCX0KLQkJc3Bpbl91bmxvY2soJnRlbXAtPmRfbG9jayk7Ci0JCXRlbXAgPSB0ZW1wLT5kX3Bh
cmVudDsKLQl9Ci0JcmN1X3JlYWRfdW5sb2NrKCk7Ci0JaWYgKG5hbWVsZW4gIT0gZGZzcGxlbiAr
IHBwbGVuIHx8IHJlYWRfc2VxcmV0cnkoJnJlbmFtZV9sb2NrLCBzZXEpKSB7Ci0JCWNpZnNfZGJn
KEZZSSwgImRpZCBub3QgZW5kIHBhdGggbG9va3VwIHdoZXJlIGV4cGVjdGVkLiBuYW1lbGVuPSVk
ZGZzcGxlbj0lZFxuIiwKLQkJCSBuYW1lbGVuLCBkZnNwbGVuKTsKLQkJLyogcHJlc3VtYWJseSB0
aGlzIGlzIG9ubHkgcG9zc2libGUgaWYgcmFjaW5nIHdpdGggYSByZW5hbWUKLQkJb2Ygb25lIG9m
IHRoZSBwYXJlbnQgZGlyZWN0b3JpZXMgICh3ZSBjYW4gbm90IGxvY2sgdGhlIGRlbnRyaWVzCi0J
CWFib3ZlIHVzIHRvIHByZXZlbnQgdGhpcywgYnV0IHJldHJ5aW5nIHNob3VsZCBiZSBoYXJtbGVz
cykgKi8KLQkJZ290byBjaWZzX2JwX3JlbmFtZV9yZXRyeTsKLQl9Ci0JLyogRElSX1NFUCBhbHJl
YWR5IHNldCBmb3IgYnl0ZSAgMCAvIHZzIFwgYnV0IG5vdCBmb3IKLQkgICBzdWJzZXF1ZW50IHNs
YXNoZXMgaW4gcHJlcGF0aCB3aGljaCBjdXJyZW50bHkgbXVzdAotCSAgIGJlIGVudGVyZWQgdGhl
IHJpZ2h0IHdheSAtIG5vdCBzdXJlIGlmIHRoZXJlIGlzIGFuIGFsdGVybmF0aXZlCi0JICAgc2lu
Y2UgdGhlICdcJyBpcyBhIHZhbGlkIHBvc2l4IGNoYXJhY3RlciBzbyB3ZSBjYW4gbm90IHN3aXRj
aAotCSAgIHRob3NlIHNhZmVseSB0byAnLycgaWYgYW55IGFyZSBmb3VuZCBpbiB0aGUgbWlkZGxl
IG9mIHRoZSBwcmVwYXRoICovCi0JLyogQkIgdGVzdCBwYXRocyB0byBXaW5kb3dzIHdpdGggJy8n
IGluIHRoZSBtaWRzdCBvZiBwcmVwYXRoICovCi0KIAlpZiAocHBsZW4pIHsKLQkJaW50IGk7Ci0K
IAkJY2lmc19kYmcoRllJLCAidXNpbmcgY2lmc19zYiBwcmVwYXRoIDwlcz5cbiIsIGNpZnNfc2It
PnByZXBhdGgpOwotCQltZW1jcHkoZnVsbF9wYXRoK2Rmc3BsZW4rMSwgY2lmc19zYi0+cHJlcGF0
aCwgcHBsZW4tMSk7Ci0JCWZ1bGxfcGF0aFtkZnNwbGVuXSA9IGRpcnNlcDsKLQkJZm9yIChpID0g
MDsgaSA8IHBwbGVuLTE7IGkrKykKLQkJCWlmIChmdWxsX3BhdGhbZGZzcGxlbisxK2ldID09ICcv
JykKLQkJCQlmdWxsX3BhdGhbZGZzcGxlbisxK2ldID0gQ0lGU19ESVJfU0VQKGNpZnNfc2IpOwor
CQlzIC09IHBwbGVuOworCQltZW1jcHkocyArIDEsIGNpZnNfc2ItPnByZXBhdGgsIHBwbGVuIC0g
MSk7CisJCSpzID0gJy8nOwogCX0KKwlpZiAoZGlyc2VwICE9ICcvJykgeworCQkvKiBCQiB0ZXN0
IHBhdGhzIHRvIFdpbmRvd3Mgd2l0aCAnLycgaW4gdGhlIG1pZHN0IG9mIHByZXBhdGggKi8KKwkJ
Y2hhciAqcDsKIAorCQlmb3IgKHAgPSBzOyAqcDsgcCsrKQorCQkJaWYgKCpwID09ICcvJykKKwkJ
CQkqcCA9IGRpcnNlcDsKKwl9CiAJaWYgKGRmc3BsZW4pIHsKLQkJc3RybmNweShmdWxsX3BhdGgs
IHRjb24tPnRyZWVOYW1lLCBkZnNwbGVuKTsKKwkJcyAtPSBkZnNwbGVuOworCQltZW1jcHkocywg
dGNvbi0+dHJlZU5hbWUsIGRmc3BsZW4pOwogCQlpZiAoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3Mg
JiBDSUZTX01PVU5UX1BPU0lYX1BBVEhTKSB7CiAJCQlpbnQgaTsKIAkJCWZvciAoaSA9IDA7IGkg
PCBkZnNwbGVuOyBpKyspIHsKLQkJCQlpZiAoZnVsbF9wYXRoW2ldID09ICdcXCcpCi0JCQkJCWZ1
bGxfcGF0aFtpXSA9ICcvJzsKKwkJCQlpZiAoc1tpXSA9PSAnXFwnKQorCQkJCQlzW2ldID0gJy8n
OwogCQkJfQogCQl9CiAJfQotCXJldHVybiBmdWxsX3BhdGg7CisJcmV0dXJuIHM7CiB9CiAKIC8q
Ci0tIAoyLjI3LjAKCg==
--000000000000972a6d05c00a7b66
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0005-cifs-make-build_path_from_dentry-return-const-char.patch"
Content-Disposition: attachment; 
	filename="0005-cifs-make-build_path_from_dentry-return-const-char.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_knjghl225>
X-Attachment-Id: f_knjghl225

RnJvbSAxNDJkOGJhODIwYWVkNDY4ZDIzMTAxMjY3OWFkZTMxN2I3MzI2YzhiIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KRGF0
ZTogVGh1LCAxOCBNYXIgMjAyMSAxNTo0NzozNSAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggNS84XSBj
aWZzOiBtYWtlIGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoKSByZXR1cm4gY29uc3QgY2hhciAqCgou
Li4gYW5kIGFkanVzdCB0aGUgY2FsbGVycy4KClNpZ25lZC1vZmYtYnk6IEFsIFZpcm8gPHZpcm9A
emVuaXYubGludXgub3JnLnVrPgpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNo
QG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvY2lmcy9jaWZzcHJvdG8uaCB8ICAyICstCiBmcy9jaWZz
L2Rpci5jICAgICAgIHwgIDggKysrKy0tLS0KIGZzL2NpZnMvZmlsZS5jICAgICAgfCAgOCArKysr
LS0tLQogZnMvY2lmcy9pbm9kZS5jICAgICB8IDE2ICsrKysrKysrLS0tLS0tLS0KIGZzL2NpZnMv
aW9jdGwuYyAgICAgfCAgMiArLQogZnMvY2lmcy9saW5rLmMgICAgICB8ICA4ICsrKystLS0tCiBm
cy9jaWZzL3JlYWRkaXIuYyAgIHwgIDIgKy0KIGZzL2NpZnMvc21iMm9wcy5jICAgfCAgMiArLQog
ZnMvY2lmcy94YXR0ci5jICAgICB8ICA2ICsrKy0tLQogOSBmaWxlcyBjaGFuZ2VkLCAyNyBpbnNl
cnRpb25zKCspLCAyNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9jaWZzL2NpZnNwcm90
by5oIGIvZnMvY2lmcy9jaWZzcHJvdG8uaAppbmRleCBhNDY1OTRjNzllNzUuLmVkNmVhMGM1OWNi
OSAxMDA2NDQKLS0tIGEvZnMvY2lmcy9jaWZzcHJvdG8uaAorKysgYi9mcy9jaWZzL2NpZnNwcm90
by5oCkBAIC02OSw3ICs2OSw3IEBAIGV4dGVybiBpbnQgaW5pdF9jaWZzX2lkbWFwKHZvaWQpOwog
ZXh0ZXJuIHZvaWQgZXhpdF9jaWZzX2lkbWFwKHZvaWQpOwogZXh0ZXJuIGludCBpbml0X2NpZnNf
c3BuZWdvKHZvaWQpOwogZXh0ZXJuIHZvaWQgZXhpdF9jaWZzX3NwbmVnbyh2b2lkKTsKLWV4dGVy
biBjaGFyICpidWlsZF9wYXRoX2Zyb21fZGVudHJ5KHN0cnVjdCBkZW50cnkgKik7CitleHRlcm4g
Y29uc3QgY2hhciAqYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShzdHJ1Y3QgZGVudHJ5ICopOwogZXh0
ZXJuIGNoYXIgKmJ1aWxkX3BhdGhfZnJvbV9kZW50cnlfb3B0aW9uYWxfcHJlZml4KHN0cnVjdCBk
ZW50cnkgKmRpcmVudHJ5LAogCQkJCQkJICAgIGJvb2wgcHJlZml4KTsKIGV4dGVybiBjaGFyICpj
aWZzX2J1aWxkX3BhdGhfdG9fcm9vdChzdHJ1Y3Qgc21iM19mc19jb250ZXh0ICpjdHgsCmRpZmYg
LS1naXQgYS9mcy9jaWZzL2Rpci5jIGIvZnMvY2lmcy9kaXIuYwppbmRleCBhM2ZiODFlMGJhMTcu
LjAxZTI2ZjgxMTg4NSAxMDA2NDQKLS0tIGEvZnMvY2lmcy9kaXIuYworKysgYi9mcy9jaWZzL2Rp
ci5jCkBAIC03OCw3ICs3OCw3IEBAIGNpZnNfYnVpbGRfcGF0aF90b19yb290KHN0cnVjdCBzbWIz
X2ZzX2NvbnRleHQgKmN0eCwgc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zCiB9CiAKIC8qIE5v
dGU6IGNhbGxlciBtdXN0IGZyZWUgcmV0dXJuIGJ1ZmZlciAqLwotY2hhciAqCitjb25zdCBjaGFy
ICoKIGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoc3RydWN0IGRlbnRyeSAqZGlyZW50cnkpCiB7CiAJ
c3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoZGlyZW50cnktPmRfc2IpOwpA
QCAtMjMzLDcgKzIzMyw3IEBAIGNpZnNfZG9fY3JlYXRlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0
cnVjdCBkZW50cnkgKmRpcmVudHJ5LCB1bnNpZ25lZCBpbnQgeGlkLAogCWludCBkZXNpcmVkX2Fj
Y2VzczsKIAlzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihpbm9kZS0+aV9z
Yik7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbiA9IHRsaW5rX3Rjb24odGxpbmspOwotCWNoYXIg
KmZ1bGxfcGF0aCA9IE5VTEw7CisJY29uc3QgY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKIAlGSUxF
X0FMTF9JTkZPICpidWYgPSBOVUxMOwogCXN0cnVjdCBpbm9kZSAqbmV3aW5vZGUgPSBOVUxMOwog
CWludCBkaXNwb3NpdGlvbjsKQEAgLTYxOSw3ICs2MTksNyBAQCBpbnQgY2lmc19ta25vZChzdHJ1
Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJc3Ry
dWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYjsKIAlzdHJ1Y3QgdGNvbl9saW5rICp0bGluazsKIAlz
dHJ1Y3QgY2lmc190Y29uICp0Y29uOwotCWNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7CisJY29uc3Qg
Y2hhciAqZnVsbF9wYXRoID0gTlVMTDsKIAogCWlmICghb2xkX3ZhbGlkX2RldihkZXZpY2VfbnVt
YmVyKSkKIAkJcmV0dXJuIC1FSU5WQUw7CkBAIC02NjAsNyArNjYwLDcgQEAgY2lmc19sb29rdXAo
c3RydWN0IGlub2RlICpwYXJlbnRfZGlyX2lub2RlLCBzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwK
IAlzdHJ1Y3QgdGNvbl9saW5rICp0bGluazsKIAlzdHJ1Y3QgY2lmc190Y29uICpwVGNvbjsKIAlz
dHJ1Y3QgaW5vZGUgKm5ld0lub2RlID0gTlVMTDsKLQljaGFyICpmdWxsX3BhdGggPSBOVUxMOwor
CWNvbnN0IGNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7CiAKIAl4aWQgPSBnZXRfeGlkKCk7CiAKZGlm
ZiAtLWdpdCBhL2ZzL2NpZnMvZmlsZS5jIGIvZnMvY2lmcy9maWxlLmMKaW5kZXggZDkwMzcwOWQ2
MWJkLi5hZjQ5YjM5MzdlMTUgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvZmlsZS5jCisrKyBiL2ZzL2Np
ZnMvZmlsZS5jCkBAIC01MzAsNyArNTMwLDcgQEAgaW50IGNpZnNfb3BlbihzdHJ1Y3QgaW5vZGUg
Kmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKIAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uOwogCXN0
cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlID0gTlVM
TDsKLQljaGFyICpmdWxsX3BhdGggPSBOVUxMOworCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aCA9IE5V
TEw7CiAJYm9vbCBwb3NpeF9vcGVuX29rID0gZmFsc2U7CiAJc3RydWN0IGNpZnNfZmlkIGZpZDsK
IAlzdHJ1Y3QgY2lmc19wZW5kaW5nX29wZW4gb3BlbjsKQEAgLTY4OSw3ICs2ODksNyBAQCBjaWZz
X3Jlb3Blbl9maWxlKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlLCBib29sIGNhbl9mbHVzaCkK
IAlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXI7CiAJc3RydWN0IGNpZnNJbm9kZUluZm8g
KmNpbm9kZTsKIAlzdHJ1Y3QgaW5vZGUgKmlub2RlOwotCWNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7
CisJY29uc3QgY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKIAlpbnQgZGVzaXJlZF9hY2Nlc3M7CiAJ
aW50IGRpc3Bvc2l0aW9uID0gRklMRV9PUEVOOwogCWludCBjcmVhdGVfb3B0aW9ucyA9IENSRUFU
RV9OT1RfRElSOwpAQCAtMjA3Miw3ICsyMDcyLDcgQEAgY2lmc19nZXRfd3JpdGFibGVfcGF0aChz
dHJ1Y3QgY2lmc190Y29uICp0Y29uLCBjb25zdCBjaGFyICpuYW1lLAogCXN0cnVjdCBsaXN0X2hl
YWQgKnRtcDsKIAlzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpjZmlsZTsKIAlzdHJ1Y3QgY2lmc0lub2Rl
SW5mbyAqY2lub2RlOwotCWNoYXIgKmZ1bGxfcGF0aDsKKwljb25zdCBjaGFyICpmdWxsX3BhdGg7
CiAKIAkqcmV0X2ZpbGUgPSBOVUxMOwogCkBAIC0yMTA3LDcgKzIxMDcsNyBAQCBjaWZzX2dldF9y
ZWFkYWJsZV9wYXRoKHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sIGNvbnN0IGNoYXIgKm5hbWUsCiAJ
c3RydWN0IGxpc3RfaGVhZCAqdG1wOwogCXN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlOwogCXN0
cnVjdCBjaWZzSW5vZGVJbmZvICpjaW5vZGU7Ci0JY2hhciAqZnVsbF9wYXRoOworCWNvbnN0IGNo
YXIgKmZ1bGxfcGF0aDsKIAogCSpyZXRfZmlsZSA9IE5VTEw7CiAKZGlmZiAtLWdpdCBhL2ZzL2Np
ZnMvaW5vZGUuYyBiL2ZzL2NpZnMvaW5vZGUuYwppbmRleCBjNmU3YmI0YTE4NzYuLjBiMjk4OTNm
NDBiNyAxMDA2NDQKLS0tIGEvZnMvY2lmcy9pbm9kZS5jCisrKyBiL2ZzL2NpZnMvaW5vZGUuYwpA
QCAtMTYwOSw3ICsxNjA5LDcgQEAgaW50IGNpZnNfdW5saW5rKHN0cnVjdCBpbm9kZSAqZGlyLCBz
dHJ1Y3QgZGVudHJ5ICpkZW50cnkpCiB7CiAJaW50IHJjID0gMDsKIAl1bnNpZ25lZCBpbnQgeGlk
OwotCWNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7CisJY29uc3QgY2hhciAqZnVsbF9wYXRoID0gTlVM
TDsKIAlzdHJ1Y3QgaW5vZGUgKmlub2RlID0gZF9pbm9kZShkZW50cnkpOwogCXN0cnVjdCBjaWZz
SW5vZGVJbmZvICpjaWZzX2lub2RlOwogCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSBkaXItPmlf
c2I7CkBAIC0xODY2LDcgKzE4NjYsNyBAQCBpbnQgY2lmc19ta2RpcihzdHJ1Y3QgdXNlcl9uYW1l
c3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJc3RydWN0IHRjb25fbGlu
ayAqdGxpbms7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbjsKIAlzdHJ1Y3QgVENQX1NlcnZlcl9J
bmZvICpzZXJ2ZXI7Ci0JY2hhciAqZnVsbF9wYXRoOworCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsK
IAogCWNpZnNfZGJnKEZZSSwgIkluIGNpZnNfbWtkaXIsIG1vZGUgPSAlMDRobyBpbm9kZSA9IDB4
JXBcbiIsCiAJCSBtb2RlLCBpbm9kZSk7CkBAIC0xOTM4LDcgKzE5MzgsNyBAQCBpbnQgY2lmc19y
bWRpcihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSkKIAlzdHJ1
Y3QgdGNvbl9saW5rICp0bGluazsKIAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uOwogCXN0cnVjdCBU
Q1BfU2VydmVyX0luZm8gKnNlcnZlcjsKLQljaGFyICpmdWxsX3BhdGggPSBOVUxMOworCWNvbnN0
IGNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7CiAJc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNJbm9k
ZTsKIAogCWNpZnNfZGJnKEZZSSwgImNpZnNfcm1kaXIsIGlub2RlID0gMHglcFxuIiwgaW5vZGUp
OwpAQCAtMjA3Miw4ICsyMDcyLDggQEAgY2lmc19yZW5hbWUyKHN0cnVjdCB1c2VyX25hbWVzcGFj
ZSAqbW50X3VzZXJucywgc3RydWN0IGlub2RlICpzb3VyY2VfZGlyLAogCSAgICAgc3RydWN0IGRl
bnRyeSAqc291cmNlX2RlbnRyeSwgc3RydWN0IGlub2RlICp0YXJnZXRfZGlyLAogCSAgICAgc3Ry
dWN0IGRlbnRyeSAqdGFyZ2V0X2RlbnRyeSwgdW5zaWduZWQgaW50IGZsYWdzKQogewotCWNoYXIg
KmZyb21fbmFtZSA9IE5VTEw7Ci0JY2hhciAqdG9fbmFtZSA9IE5VTEw7CisJY29uc3QgY2hhciAq
ZnJvbV9uYW1lID0gTlVMTDsKKwljb25zdCBjaGFyICp0b19uYW1lID0gTlVMTDsKIAlzdHJ1Y3Qg
Y2lmc19zYl9pbmZvICpjaWZzX3NiOwogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVj
dCBjaWZzX3Rjb24gKnRjb247CkBAIC0yMzE3LDcgKzIzMTcsNyBAQCBpbnQgY2lmc19yZXZhbGlk
YXRlX2RlbnRyeV9hdHRyKHN0cnVjdCBkZW50cnkgKmRlbnRyeSkKIAlpbnQgcmMgPSAwOwogCXN0
cnVjdCBpbm9kZSAqaW5vZGUgPSBkX2lub2RlKGRlbnRyeSk7CiAJc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzYiA9IGRlbnRyeS0+ZF9zYjsKLQljaGFyICpmdWxsX3BhdGggPSBOVUxMOworCWNvbnN0IGNo
YXIgKmZ1bGxfcGF0aCA9IE5VTEw7CiAJaW50IGNvdW50ID0gMDsKIAogCWlmIChpbm9kZSA9PSBO
VUxMKQpAQCAtMjYxMyw3ICsyNjEzLDcgQEAgY2lmc19zZXRhdHRyX3VuaXgoc3RydWN0IGRlbnRy
eSAqZGlyZW50cnksIHN0cnVjdCBpYXR0ciAqYXR0cnMpCiB7CiAJaW50IHJjOwogCXVuc2lnbmVk
IGludCB4aWQ7Ci0JY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKKwljb25zdCBjaGFyICpmdWxsX3Bh
dGggPSBOVUxMOwogCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBkX2lub2RlKGRpcmVudHJ5KTsKIAlz
dHJ1Y3QgY2lmc0lub2RlSW5mbyAqY2lmc0lub2RlID0gQ0lGU19JKGlub2RlKTsKIAlzdHJ1Y3Qg
Y2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihpbm9kZS0+aV9zYik7CkBAIC0yNzY0LDcg
KzI3NjQsNyBAQCBjaWZzX3NldGF0dHJfbm91bml4KHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LCBz
dHJ1Y3QgaWF0dHIgKmF0dHJzKQogCXN0cnVjdCBjaWZzSW5vZGVJbmZvICpjaWZzSW5vZGUgPSBD
SUZTX0koaW5vZGUpOwogCXN0cnVjdCBjaWZzRmlsZUluZm8gKndmaWxlOwogCXN0cnVjdCBjaWZz
X3Rjb24gKnRjb247Ci0JY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKKwljb25zdCBjaGFyICpmdWxs
X3BhdGggPSBOVUxMOwogCWludCByYyA9IC1FQUNDRVM7CiAJX191MzIgZG9zYXR0ciA9IDA7CiAJ
X191NjQgbW9kZSA9IE5PX0NIQU5HRV82NDsKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvaW9jdGwuYyBi
L2ZzL2NpZnMvaW9jdGwuYwppbmRleCBkY2RlNDRmZjZjZjkuLmFiYTU3M2RkODZhYyAxMDA2NDQK
LS0tIGEvZnMvY2lmcy9pb2N0bC5jCisrKyBiL2ZzL2NpZnMvaW9jdGwuYwpAQCAtNDIsNyArNDIs
NyBAQCBzdGF0aWMgbG9uZyBjaWZzX2lvY3RsX3F1ZXJ5X2luZm8odW5zaWduZWQgaW50IHhpZCwg
c3RydWN0IGZpbGUgKmZpbGVwLAogCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IgPSBDSUZT
X1NCKGlub2RlLT5pX3NiKTsKIAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uID0gY2lmc19zYl9tYXN0
ZXJfdGNvbihjaWZzX3NiKTsKIAlzdHJ1Y3QgZGVudHJ5ICpkZW50cnkgPSBmaWxlcC0+Zl9wYXRo
LmRlbnRyeTsKLQl1bnNpZ25lZCBjaGFyICpwYXRoOworCWNvbnN0IHVuc2lnbmVkIGNoYXIgKnBh
dGg7CiAJX19sZTE2ICp1dGYxNl9wYXRoID0gTlVMTCwgcm9vdF9wYXRoOwogCWludCByYyA9IDA7
CiAKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvbGluay5jIGIvZnMvY2lmcy9saW5rLmMKaW5kZXggN2M1
ODc4YTY0NWQ5Li4xOGUwZTMxYTZkMzkgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvbGluay5jCisrKyBi
L2ZzL2NpZnMvbGluay5jCkBAIC01MTAsOCArNTEwLDggQEAgY2lmc19oYXJkbGluayhzdHJ1Y3Qg
ZGVudHJ5ICpvbGRfZmlsZSwgc3RydWN0IGlub2RlICppbm9kZSwKIHsKIAlpbnQgcmMgPSAtRUFD
Q0VTOwogCXVuc2lnbmVkIGludCB4aWQ7Ci0JY2hhciAqZnJvbV9uYW1lID0gTlVMTDsKLQljaGFy
ICp0b19uYW1lID0gTlVMTDsKKwljb25zdCBjaGFyICpmcm9tX25hbWUgPSBOVUxMOworCWNvbnN0
IGNoYXIgKnRvX25hbWUgPSBOVUxMOwogCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IgPSBD
SUZTX1NCKGlub2RlLT5pX3NiKTsKIAlzdHJ1Y3QgdGNvbl9saW5rICp0bGluazsKIAlzdHJ1Y3Qg
Y2lmc190Y29uICp0Y29uOwpAQCAtNjAwLDcgKzYwMCw3IEBAIGNpZnNfZ2V0X2xpbmsoc3RydWN0
IGRlbnRyeSAqZGlyZW50cnksIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiB7CiAJaW50IHJjID0gLUVO
T01FTTsKIAl1bnNpZ25lZCBpbnQgeGlkOwotCWNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7CisJY29u
c3QgY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKIAljaGFyICp0YXJnZXRfcGF0aCA9IE5VTEw7CiAJ
c3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoaW5vZGUtPmlfc2IpOwogCXN0
cnVjdCB0Y29uX2xpbmsgKnRsaW5rID0gTlVMTDsKQEAgLTY2OSw3ICs2NjksNyBAQCBjaWZzX3N5
bWxpbmsoc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1Y3QgaW5vZGUgKmlu
b2RlLAogCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IgPSBDSUZTX1NCKGlub2RlLT5pX3Ni
KTsKIAlzdHJ1Y3QgdGNvbl9saW5rICp0bGluazsKIAlzdHJ1Y3QgY2lmc190Y29uICpwVGNvbjsK
LQljaGFyICpmdWxsX3BhdGggPSBOVUxMOworCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7
CiAJc3RydWN0IGlub2RlICpuZXdpbm9kZSA9IE5VTEw7CiAKIAl4aWQgPSBnZXRfeGlkKCk7CmRp
ZmYgLS1naXQgYS9mcy9jaWZzL3JlYWRkaXIuYyBiL2ZzL2NpZnMvcmVhZGRpci5jCmluZGV4IDcy
MjViMmNhZTNlNi4uNjdjMzE3N2ExZmRhIDEwMDY0NAotLS0gYS9mcy9jaWZzL3JlYWRkaXIuYwor
KysgYi9mcy9jaWZzL3JlYWRkaXIuYwpAQCAtOTQyLDcgKzk0Miw3IEBAIGludCBjaWZzX3JlYWRk
aXIoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBkaXJfY29udGV4dCAqY3R4KQogCWNoYXIgKnRt
cF9idWYgPSBOVUxMOwogCWNoYXIgKmVuZF9vZl9zbWI7CiAJdW5zaWduZWQgaW50IG1heF9sZW47
Ci0JY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKKwljb25zdCBjaGFyICpmdWxsX3BhdGggPSBOVUxM
OwogCiAJeGlkID0gZ2V0X3hpZCgpOwogCmRpZmYgLS1naXQgYS9mcy9jaWZzL3NtYjJvcHMuYyBi
L2ZzL2NpZnMvc21iMm9wcy5jCmluZGV4IDgxYjFlMGVjYTliOS4uMzBjZmJlYmRkOGI0IDEwMDY0
NAotLS0gYS9mcy9jaWZzL3NtYjJvcHMuYworKysgYi9mcy9jaWZzL3NtYjJvcHMuYwpAQCAtMjIy
MSw3ICsyMjIxLDcgQEAgc21iM19ub3RpZnkoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0
IGZpbGUgKnBmaWxlLAogCXN0cnVjdCBjaWZzX29wZW5fcGFybXMgb3Bhcm1zOwogCXN0cnVjdCBj
aWZzX2ZpZCBmaWQ7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbjsKLQl1bnNpZ25lZCBjaGFyICpw
YXRoID0gTlVMTDsKKwljb25zdCB1bnNpZ25lZCBjaGFyICpwYXRoID0gTlVMTDsKIAlfX2xlMTYg
KnV0ZjE2X3BhdGggPSBOVUxMOwogCXU4IG9wbG9jayA9IFNNQjJfT1BMT0NLX0xFVkVMX05PTkU7
CiAJaW50IHJjID0gMDsKZGlmZiAtLWdpdCBhL2ZzL2NpZnMveGF0dHIuYyBiL2ZzL2NpZnMveGF0
dHIuYwppbmRleCBiYWMwNWRkNmM1YjMuLjAxOTVhOWJlM2QyOCAxMDA2NDQKLS0tIGEvZnMvY2lm
cy94YXR0ci5jCisrKyBiL2ZzL2NpZnMveGF0dHIuYwpAQCAtMTEyLDcgKzExMiw3IEBAIHN0YXRp
YyBpbnQgY2lmc194YXR0cl9zZXQoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIs
CiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0Ioc2IpOwogCXN0cnVjdCB0
Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZzX3Rjb24gKnBUY29uOwotCWNoYXIgKmZ1bGxf
cGF0aDsKKwljb25zdCBjaGFyICpmdWxsX3BhdGg7CiAKIAl0bGluayA9IGNpZnNfc2JfdGxpbmso
Y2lmc19zYik7CiAJaWYgKElTX0VSUih0bGluaykpCkBAIC0yOTcsNyArMjk3LDcgQEAgc3RhdGlj
IGludCBjaWZzX3hhdHRyX2dldChjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxlciAqaGFuZGxlciwK
IAlzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihzYik7CiAJc3RydWN0IHRj
b25fbGluayAqdGxpbms7CiAJc3RydWN0IGNpZnNfdGNvbiAqcFRjb247Ci0JY2hhciAqZnVsbF9w
YXRoOworCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKIAogCXRsaW5rID0gY2lmc19zYl90bGluayhj
aWZzX3NiKTsKIAlpZiAoSVNfRVJSKHRsaW5rKSkKQEAgLTQxNCw3ICs0MTQsNyBAQCBzc2l6ZV90
IGNpZnNfbGlzdHhhdHRyKHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LCBjaGFyICpkYXRhLCBzaXpl
X3QgYnVmX3NpemUpCiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoZGly
ZW50cnktPmRfc2IpOwogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZzX3Rj
b24gKnBUY29uOwotCWNoYXIgKmZ1bGxfcGF0aDsKKwljb25zdCBjaGFyICpmdWxsX3BhdGg7CiAK
IAlpZiAoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX05PX1hBVFRSKQogCQly
ZXR1cm4gLUVPUE5PVFNVUFA7Ci0tIAoyLjI3LjAKCg==
--000000000000972a6d05c00a7b66
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0006-cifs-allocate-buffer-in-the-caller-of-build_path_fro.patch"
Content-Disposition: attachment; 
	filename="0006-cifs-allocate-buffer-in-the-caller-of-build_path_fro.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_knjghl236>
X-Attachment-Id: f_knjghl236

RnJvbSBlNTk0YjAzNjRmMmY4N2I4NGNiNjRiMWViZTZkZTQzM2Q3YTE1NmNjIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4KRGF0
ZTogRnJpLCA1IE1hciAyMDIxIDE3OjM2OjA0IC0wNTAwClN1YmplY3Q6IFtQQVRDSCA2LzhdIGNp
ZnM6IGFsbG9jYXRlIGJ1ZmZlciBpbiB0aGUgY2FsbGVyIG9mCiBidWlsZF9wYXRoX2Zyb21fZGVu
dHJ5KCkKCmJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoKSBvcGVuLWNvZGVzIGRlbnRyeV9wYXRoX3Jh
dygpLiAgVGhlIHJlYXNvbgp3ZSBjYW4ndCB1c2UgZGVudHJ5X3BhdGhfcmF3KCkgaW4gdGhlcmUg
KGFuZCBwb3N0cHJvY2VzcyB0aGUKcmVzdWx0IGFzIG5lZWRlZCkgaXMgdGhhdCB0aGUgY2FsbGVy
cyBvZiBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KCkKZXhwZWN0IHRoYXQgdGhlIG9iamVjdCB0byBi
ZSBmcmVlZCBvbiBjbGVhbnVwIGFuZCB0aGUgc3RyaW5nIHRvCmJlIHVzZWQgYXJlIGF0IHRoZSBz
YW1lIGFkZHJlc3MuICBUaGF0J3MgcGFpbmZ1bCwgc2luY2UgdGhlIHBhdGgKaXMgbmF0dXJhbGx5
IGJ1aWx0IGVuZC10by1iZWdpbm5pbmcgLSB3ZSBzdGFydCBhdCB0aGUgbGVhZiBhbmQKZ28gdGhy
b3VnaCB0aGUgYW5jZXN0b3JzLCBhY2N1bXVsYXRpbmcgdGhlIHBhdGhuYW1lLgoKTGlmZSB3b3Vs
ZCBiZSBlYXNpZXIgaWYgd2UgbGVmdCB0aGUgYnVmZmVyIGFsbG9jYXRpb24gdG8gY2FsbGVycy4K
SXQgd291bGRuJ3QgYmUgZXhhY3Qtc2l6ZWQgYnVmZmVyLCBidXQgbm9uZSBvZiB0aGUgY2FsbGVy
cyBrZWVwCnRoZSByZXN1bHQgZm9yIGxvbmcgLSBpdCdzIGFsd2F5cyBmcmVlZCBiZWZvcmUgdGhl
IGNhbGxlciByZXR1cm5zLgpTbyB0aGVyZSdzIG5vIG5lZWQgdG8gZG8gZXhhY3Qtc2l6ZWQgYWxs
b2NhdGlvbjsgYmV0dGVyIHVzZQpfX2dldG5hbWUoKS9fX3B1dG5hbWUoKSwgc2FtZSBhcyB3ZSBk
byBmb3IgcGF0aG5hbWUgYXJndW1lbnRzCm9mIHN5c2NhbGxzLiAgV2hhdCdzIG1vcmUsIHRoZXJl
J3Mgbm8gbmVlZCB0byBkbyBhbGxvY2F0aW9uIHVuZGVyCnNwaW5sb2Nrcywgc28gR0ZQX0FUT01J
QyBpcyBub3QgbmVlZGVkLgoKTmV4dCBwYXRjaCB3aWxsIHJlcGxhY2UgdGhlIG9wZW4tY29kZWQg
ZGVudHJ5X3BhdGhfcmF3KCkgKGluCmJ1aWxkX3BhdGhfZnJvbV9kZW50cnlfb3B0aW9uYWxfcHJl
Zml4KCkpIHdpdGggY2FsbGluZyB0aGUgcmVhbAp0aGluZy4gIFRoaXMgcGF0Y2ggb25seSBpbnRy
b2R1Y2VzIHdyYXBwZXJzIGZvciBhbGxvY2F0aW5nL2ZyZWVpbmcKdGhlIGJ1ZmZlcnMgYW5kIHN3
aXRjaGVzIHRvIG5ldyBjYWxsaW5nIGNvbnZlbnRpb25zOgoJYnVpbGRfcGF0aF9mcm9tX2RlbnRy
eShkZW50cnksIGJ1ZikKZXhwZWN0cyBidWYgdG8gYmUgYWRkcmVzcyBvZiBhIHBhZ2Utc2l6ZWQg
b2JqZWN0IG9yIE5VTEwsCnJldHVybiB2YWx1ZSBpcyBhIHBhdGhuYW1lIGJ1aWx0IGluc2lkZSB0
aGF0IGJ1ZmZlciBvbiBzdWNjZXNzLApFUlJfUFRSKC1FTk9NRU0pIGlmIGJ1ZiBpcyBOVUxMIGFu
ZCBFUlJfUFRSKC1FTkFNRVRPT0xPTkcpIGlmCnRoZSBwYXRobmFtZSB3b24ndCBmaXQgaW50byBw
YWdlLiAgTm90ZSB0aGF0IHdlIGRvbid0IG5lZWQgdG8KY2hlY2sgZm9yIGZhaWx1cmUgd2hlbiBh
bGxvY2F0aW5nIHRoZSBidWZmZXIgaW4gdGhlIGNhbGxlciAtCmJ1aWxkX3BhdGhfZnJvbV9kZW50
cnkoKSB3aWxsIGRvIHRoZSByaWdodCB0aGluZy4KClNpZ25lZC1vZmYtYnk6IEFsIFZpcm8gPHZp
cm9AemVuaXYubGludXgub3JnLnVrPgpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0ZnJl
bmNoQG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvY2lmcy9jaWZzX2Rmc19yZWYuYyB8ICAxMiArKyst
LQogZnMvY2lmcy9jaWZzcHJvdG8uaCAgICB8ICAxNSArKysrKy0KIGZzL2NpZnMvZGlyLmMgICAg
ICAgICAgfCAgNjkgKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tCiBmcy9jaWZzL2ZpbGUuYyAg
ICAgICAgIHwgIDc1ICsrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tCiBmcy9jaWZzL2lub2Rl
LmMgICAgICAgIHwgMTA0ICsrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0t
CiBmcy9jaWZzL2lvY3RsLmMgICAgICAgIHwgIDExICsrKy0tCiBmcy9jaWZzL2xpbmsuYyAgICAg
ICAgIHwgIDQ2ICsrKysrKysrKysrLS0tLS0tLQogZnMvY2lmcy9yZWFkZGlyLmMgICAgICB8ICAx
MSArKystLQogZnMvY2lmcy9zbWIyb3BzLmMgICAgICB8ICAxNyArKystLS0tCiBmcy9jaWZzL3hh
dHRyLmMgICAgICAgIHwgIDMwICsrKysrKystLS0tLQogMTAgZmlsZXMgY2hhbmdlZCwgMjEyIGlu
c2VydGlvbnMoKyksIDE3OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9jaWZzL2NpZnNf
ZGZzX3JlZi5jIGIvZnMvY2lmcy9jaWZzX2Rmc19yZWYuYwppbmRleCBlY2VlMjg2NDk3MmQuLmM4
N2MzN2NmMjkxNCAxMDA2NDQKLS0tIGEvZnMvY2lmcy9jaWZzX2Rmc19yZWYuYworKysgYi9mcy9j
aWZzL2NpZnNfZGZzX3JlZi5jCkBAIC0zMDIsNiArMzAyLDcgQEAgc3RhdGljIHN0cnVjdCB2ZnNt
b3VudCAqY2lmc19kZnNfZG9fYXV0b21vdW50KHN0cnVjdCBkZW50cnkgKm1udHB0KQogCXN0cnVj
dCBjaWZzX3NiX2luZm8gKmNpZnNfc2I7CiAJc3RydWN0IGNpZnNfc2VzICpzZXM7CiAJc3RydWN0
IGNpZnNfdGNvbiAqdGNvbjsKKwl2b2lkICpwYWdlOwogCWNoYXIgKmZ1bGxfcGF0aCwgKnJvb3Rf
cGF0aDsKIAl1bnNpZ25lZCBpbnQgeGlkOwogCWludCByYzsKQEAgLTMyNCwxMCArMzI1LDEzIEBA
IHN0YXRpYyBzdHJ1Y3QgdmZzbW91bnQgKmNpZnNfZGZzX2RvX2F1dG9tb3VudChzdHJ1Y3QgZGVu
dHJ5ICptbnRwdCkKIAkJZ290byBjZGRhX2V4aXQ7CiAJfQogCisJcGFnZSA9IGFsbG9jX2RlbnRy
eV9wYXRoKCk7CiAJLyogYWx3YXlzIHVzZSB0cmVlIG5hbWUgcHJlZml4ICovCi0JZnVsbF9wYXRo
ID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeV9vcHRpb25hbF9wcmVmaXgobW50cHQsIHRydWUpOwot
CWlmIChmdWxsX3BhdGggPT0gTlVMTCkKLQkJZ290byBjZGRhX2V4aXQ7CisJZnVsbF9wYXRoID0g
YnVpbGRfcGF0aF9mcm9tX2RlbnRyeV9vcHRpb25hbF9wcmVmaXgobW50cHQsIHBhZ2UsIHRydWUp
OworCWlmIChJU19FUlIoZnVsbF9wYXRoKSkgeworCQltbnQgPSBFUlJfQ0FTVChmdWxsX3BhdGgp
OworCQlnb3RvIGZyZWVfZnVsbF9wYXRoOworCX0KIAogCWNvbnZlcnRfZGVsaW1pdGVyKGZ1bGxf
cGF0aCwgJ1xcJyk7CiAKQEAgLTM4NSw3ICszODksNyBAQCBzdGF0aWMgc3RydWN0IHZmc21vdW50
ICpjaWZzX2Rmc19kb19hdXRvbW91bnQoc3RydWN0IGRlbnRyeSAqbW50cHQpCiBmcmVlX3Jvb3Rf
cGF0aDoKIAlrZnJlZShyb290X3BhdGgpOwogZnJlZV9mdWxsX3BhdGg6Ci0Ja2ZyZWUoZnVsbF9w
YXRoKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogY2RkYV9leGl0OgogCWNpZnNfZGJnKEZZ
SSwgImxlYXZpbmcgJXNcbiIgLCBfX2Z1bmNfXyk7CiAJcmV0dXJuIG1udDsKZGlmZiAtLWdpdCBh
L2ZzL2NpZnMvY2lmc3Byb3RvLmggYi9mcy9jaWZzL2NpZnNwcm90by5oCmluZGV4IGVkNmVhMGM1
OWNiOS4uYzhmYWEzZTgyZmU3IDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNwcm90by5oCisrKyBi
L2ZzL2NpZnMvY2lmc3Byb3RvLmgKQEAgLTY5LDkgKzY5LDIwIEBAIGV4dGVybiBpbnQgaW5pdF9j
aWZzX2lkbWFwKHZvaWQpOwogZXh0ZXJuIHZvaWQgZXhpdF9jaWZzX2lkbWFwKHZvaWQpOwogZXh0
ZXJuIGludCBpbml0X2NpZnNfc3BuZWdvKHZvaWQpOwogZXh0ZXJuIHZvaWQgZXhpdF9jaWZzX3Nw
bmVnbyh2b2lkKTsKLWV4dGVybiBjb25zdCBjaGFyICpidWlsZF9wYXRoX2Zyb21fZGVudHJ5KHN0
cnVjdCBkZW50cnkgKik7CitleHRlcm4gY29uc3QgY2hhciAqYnVpbGRfcGF0aF9mcm9tX2RlbnRy
eShzdHJ1Y3QgZGVudHJ5ICosIHZvaWQgKik7CiBleHRlcm4gY2hhciAqYnVpbGRfcGF0aF9mcm9t
X2RlbnRyeV9vcHRpb25hbF9wcmVmaXgoc3RydWN0IGRlbnRyeSAqZGlyZW50cnksCi0JCQkJCQkg
ICAgYm9vbCBwcmVmaXgpOworCQkJCQkJICAgIHZvaWQgKnBhZ2UsIGJvb2wgcHJlZml4KTsKK3N0
YXRpYyBpbmxpbmUgdm9pZCAqYWxsb2NfZGVudHJ5X3BhdGgodm9pZCkKK3sKKwlyZXR1cm4gX19n
ZXRuYW1lKCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBmcmVlX2RlbnRyeV9wYXRoKHZvaWQg
KnBhZ2UpCit7CisJaWYgKHBhZ2UpCisJCV9fcHV0bmFtZShwYWdlKTsKK30KKwogZXh0ZXJuIGNo
YXIgKmNpZnNfYnVpbGRfcGF0aF90b19yb290KHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCwK
IAkJCQkgICAgIHN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IsCiAJCQkJICAgICBzdHJ1Y3Qg
Y2lmc190Y29uICp0Y29uLApkaWZmIC0tZ2l0IGEvZnMvY2lmcy9kaXIuYyBiL2ZzL2NpZnMvZGly
LmMKaW5kZXggMDFlMjZmODExODg1Li42ZTg1NWYwMDRmNTAgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMv
ZGlyLmMKKysrIGIvZnMvY2lmcy9kaXIuYwpAQCAtNzksMjkgKzc5LDMzIEBAIGNpZnNfYnVpbGRf
cGF0aF90b19yb290KHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCwgc3RydWN0IGNpZnNfc2Jf
aW5mbyAqY2lmc19zCiAKIC8qIE5vdGU6IGNhbGxlciBtdXN0IGZyZWUgcmV0dXJuIGJ1ZmZlciAq
LwogY29uc3QgY2hhciAqCi1idWlsZF9wYXRoX2Zyb21fZGVudHJ5KHN0cnVjdCBkZW50cnkgKmRp
cmVudHJ5KQorYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwg
dm9pZCAqcGFnZSkKIHsKIAlzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihk
aXJlbnRyeS0+ZF9zYik7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbiA9IGNpZnNfc2JfbWFzdGVy
X3Rjb24oY2lmc19zYik7CiAJYm9vbCBwcmVmaXggPSB0Y29uLT5GbGFncyAmIFNNQl9TSEFSRV9J
U19JTl9ERlM7CiAKLQlyZXR1cm4gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeV9vcHRpb25hbF9wcmVm
aXgoZGlyZW50cnksCisJcmV0dXJuIGJ1aWxkX3BhdGhfZnJvbV9kZW50cnlfb3B0aW9uYWxfcHJl
Zml4KGRpcmVudHJ5LCBwYWdlLAogCQkJCQkJICAgICAgcHJlZml4KTsKIH0KIAogY2hhciAqCi1i
dWlsZF9wYXRoX2Zyb21fZGVudHJ5X29wdGlvbmFsX3ByZWZpeChzdHJ1Y3QgZGVudHJ5ICpkaXJl
bnRyeSwgYm9vbCBwcmVmaXgpCitidWlsZF9wYXRoX2Zyb21fZGVudHJ5X29wdGlvbmFsX3ByZWZp
eChzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgdm9pZCAqcGFnZSwKKwkJCQkgICAgICAgYm9vbCBw
cmVmaXgpCiB7CiAJc3RydWN0IGRlbnRyeSAqdGVtcDsKIAlpbnQgbmFtZWxlbjsKIAlpbnQgZGZz
cGxlbjsKIAlpbnQgcHBsZW4gPSAwOwotCWNoYXIgKmZ1bGxfcGF0aDsKKwljaGFyICpmdWxsX3Bh
dGggPSBwYWdlOwogCWNoYXIgZGlyc2VwOwogCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2Ig
PSBDSUZTX1NCKGRpcmVudHJ5LT5kX3NiKTsKIAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uID0gY2lm
c19zYl9tYXN0ZXJfdGNvbihjaWZzX3NiKTsKIAl1bnNpZ25lZCBzZXE7CiAKKwlpZiAodW5saWtl
bHkoIXBhZ2UpKQorCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKKwogCWRpcnNlcCA9IENJRlNf
RElSX1NFUChjaWZzX3NiKTsKIAlpZiAocHJlZml4KQogCQlkZnNwbGVuID0gc3Rybmxlbih0Y29u
LT50cmVlTmFtZSwgTUFYX1RSRUVfU0laRSArIDEpOwpAQCAtMTE4LDE3ICsxMjIsMTIgQEAgYnVp
bGRfcGF0aF9mcm9tX2RlbnRyeV9vcHRpb25hbF9wcmVmaXgoc3RydWN0IGRlbnRyeSAqZGlyZW50
cnksIGJvb2wgcHJlZml4KQogCWZvciAodGVtcCA9IGRpcmVudHJ5OyAhSVNfUk9PVCh0ZW1wKTsp
IHsKIAkJbmFtZWxlbiArPSAoMSArIHRlbXAtPmRfbmFtZS5sZW4pOwogCQl0ZW1wID0gdGVtcC0+
ZF9wYXJlbnQ7Ci0JCWlmICh0ZW1wID09IE5VTEwpIHsKLQkJCWNpZnNfZGJnKFZGUywgImNvcnJ1
cHQgZGVudHJ5XG4iKTsKLQkJCXJjdV9yZWFkX3VubG9jaygpOwotCQkJcmV0dXJuIE5VTEw7Ci0J
CX0KIAl9CiAJcmN1X3JlYWRfdW5sb2NrKCk7CiAKLQlmdWxsX3BhdGggPSBrbWFsbG9jKG5hbWVs
ZW4rMSwgR0ZQX0FUT01JQyk7Ci0JaWYgKGZ1bGxfcGF0aCA9PSBOVUxMKQotCQlyZXR1cm4gZnVs
bF9wYXRoOworCWlmIChuYW1lbGVuID49IFBBR0VfU0laRSkKKwkJcmV0dXJuIEVSUl9QVFIoLUVO
QU1FVE9PTE9ORyk7CisKIAlmdWxsX3BhdGhbbmFtZWxlbl0gPSAwOwkvKiB0cmFpbGluZyBudWxs
ICovCiAJcmN1X3JlYWRfbG9jaygpOwogCWZvciAodGVtcCA9IGRpcmVudHJ5OyAhSVNfUk9PVCh0
ZW1wKTspIHsKQEAgLTE0NSwxMiArMTQ0LDYgQEAgYnVpbGRfcGF0aF9mcm9tX2RlbnRyeV9vcHRp
b25hbF9wcmVmaXgoc3RydWN0IGRlbnRyeSAqZGlyZW50cnksIGJvb2wgcHJlZml4KQogCQl9CiAJ
CXNwaW5fdW5sb2NrKCZ0ZW1wLT5kX2xvY2spOwogCQl0ZW1wID0gdGVtcC0+ZF9wYXJlbnQ7Ci0J
CWlmICh0ZW1wID09IE5VTEwpIHsKLQkJCWNpZnNfZGJnKFZGUywgImNvcnJ1cHQgZGVudHJ5XG4i
KTsKLQkJCXJjdV9yZWFkX3VubG9jaygpOwotCQkJa2ZyZWUoZnVsbF9wYXRoKTsKLQkJCXJldHVy
biBOVUxMOwotCQl9CiAJfQogCXJjdV9yZWFkX3VubG9jaygpOwogCWlmIChuYW1lbGVuICE9IGRm
c3BsZW4gKyBwcGxlbiB8fCByZWFkX3NlcXJldHJ5KCZyZW5hbWVfbG9jaywgc2VxKSkgewpAQCAt
MTU5LDcgKzE1Miw2IEBAIGJ1aWxkX3BhdGhfZnJvbV9kZW50cnlfb3B0aW9uYWxfcHJlZml4KHN0
cnVjdCBkZW50cnkgKmRpcmVudHJ5LCBib29sIHByZWZpeCkKIAkJLyogcHJlc3VtYWJseSB0aGlz
IGlzIG9ubHkgcG9zc2libGUgaWYgcmFjaW5nIHdpdGggYSByZW5hbWUKIAkJb2Ygb25lIG9mIHRo
ZSBwYXJlbnQgZGlyZWN0b3JpZXMgICh3ZSBjYW4gbm90IGxvY2sgdGhlIGRlbnRyaWVzCiAJCWFi
b3ZlIHVzIHRvIHByZXZlbnQgdGhpcywgYnV0IHJldHJ5aW5nIHNob3VsZCBiZSBoYXJtbGVzcykg
Ki8KLQkJa2ZyZWUoZnVsbF9wYXRoKTsKIAkJZ290byBjaWZzX2JwX3JlbmFtZV9yZXRyeTsKIAl9
CiAJLyogRElSX1NFUCBhbHJlYWR5IHNldCBmb3IgYnl0ZSAgMCAvIHZzIFwgYnV0IG5vdCBmb3IK
QEAgLTIzMyw3ICsyMjUsOCBAQCBjaWZzX2RvX2NyZWF0ZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBz
dHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgdW5zaWduZWQgaW50IHhpZCwKIAlpbnQgZGVzaXJlZF9h
Y2Nlc3M7CiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoaW5vZGUtPmlf
c2IpOwogCXN0cnVjdCBjaWZzX3Rjb24gKnRjb24gPSB0bGlua190Y29uKHRsaW5rKTsKLQljb25z
dCBjaGFyICpmdWxsX3BhdGggPSBOVUxMOworCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKKwl2b2lk
ICpwYWdlID0gYWxsb2NfZGVudHJ5X3BhdGgoKTsKIAlGSUxFX0FMTF9JTkZPICpidWYgPSBOVUxM
OwogCXN0cnVjdCBpbm9kZSAqbmV3aW5vZGUgPSBOVUxMOwogCWludCBkaXNwb3NpdGlvbjsKQEAg
LTI0NCw5ICsyMzcsMTEgQEAgY2lmc19kb19jcmVhdGUoc3RydWN0IGlub2RlICppbm9kZSwgc3Ry
dWN0IGRlbnRyeSAqZGlyZW50cnksIHVuc2lnbmVkIGludCB4aWQsCiAJaWYgKHRjb24tPnNlcy0+
c2VydmVyLT5vcGxvY2tzKQogCQkqb3Bsb2NrID0gUkVRX09QTE9DSzsKIAotCWZ1bGxfcGF0aCA9
IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoZGlyZW50cnkpOwotCWlmICghZnVsbF9wYXRoKQotCQly
ZXR1cm4gLUVOT01FTTsKKwlmdWxsX3BhdGggPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRpcmVu
dHJ5LCBwYWdlKTsKKwlpZiAoSVNfRVJSKGZ1bGxfcGF0aCkpIHsKKwkJZnJlZV9kZW50cnlfcGF0
aChwYWdlKTsKKwkJcmV0dXJuIFBUUl9FUlIoZnVsbF9wYXRoKTsKKwl9CiAKIAlpZiAodGNvbi0+
dW5peF9leHQgJiYgY2FwX3VuaXgodGNvbi0+c2VzKSAmJiAhdGNvbi0+YnJva2VuX3Bvc2l4X29w
ZW4gJiYKIAkgICAgKENJRlNfVU5JWF9QT1NJWF9QQVRIX09QU19DQVAgJgpAQCAtNDQ4LDcgKzQ0
Myw3IEBAIGNpZnNfZG9fY3JlYXRlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBkZW50cnkg
KmRpcmVudHJ5LCB1bnNpZ25lZCBpbnQgeGlkLAogCiBvdXQ6CiAJa2ZyZWUoYnVmKTsKLQlrZnJl
ZShmdWxsX3BhdGgpOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7CiAJcmV0dXJuIHJjOwogCiBv
dXRfZXJyOgpAQCAtNjE5LDcgKzYxNCw4IEBAIGludCBjaWZzX21rbm9kKHN0cnVjdCB1c2VyX25h
bWVzcGFjZSAqbW50X3VzZXJucywgc3RydWN0IGlub2RlICppbm9kZSwKIAlzdHJ1Y3QgY2lmc19z
Yl9pbmZvICpjaWZzX3NiOwogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZz
X3Rjb24gKnRjb247Ci0JY29uc3QgY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKKwljb25zdCBjaGFy
ICpmdWxsX3BhdGg7CisJdm9pZCAqcGFnZTsKIAogCWlmICghb2xkX3ZhbGlkX2RldihkZXZpY2Vf
bnVtYmVyKSkKIAkJcmV0dXJuIC1FSU5WQUw7CkBAIC02MjksMTMgKzYyNSwxMyBAQCBpbnQgY2lm
c19ta25vZChzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAq
aW5vZGUsCiAJaWYgKElTX0VSUih0bGluaykpCiAJCXJldHVybiBQVFJfRVJSKHRsaW5rKTsKIAor
CXBhZ2UgPSBhbGxvY19kZW50cnlfcGF0aCgpOwogCXRjb24gPSB0bGlua190Y29uKHRsaW5rKTsK
LQogCXhpZCA9IGdldF94aWQoKTsKIAotCWZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50
cnkoZGlyZW50cnkpOwotCWlmIChmdWxsX3BhdGggPT0gTlVMTCkgewotCQlyYyA9IC1FTk9NRU07
CisJZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShkaXJlbnRyeSwgcGFnZSk7CisJ
aWYgKElTX0VSUihmdWxsX3BhdGgpKSB7CisJCXJjID0gUFRSX0VSUihmdWxsX3BhdGgpOwogCQln
b3RvIG1rbm9kX291dDsKIAl9CiAKQEAgLTY0NCw3ICs2NDAsNyBAQCBpbnQgY2lmc19ta25vZChz
dHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJ
CQkJCSAgICAgICBkZXZpY2VfbnVtYmVyKTsKIAogbWtub2Rfb3V0OgotCWtmcmVlKGZ1bGxfcGF0
aCk7CisJZnJlZV9kZW50cnlfcGF0aChwYWdlKTsKIAlmcmVlX3hpZCh4aWQpOwogCWNpZnNfcHV0
X3RsaW5rKHRsaW5rKTsKIAlyZXR1cm4gcmM7CkBAIC02NjAsNyArNjU2LDggQEAgY2lmc19sb29r
dXAoc3RydWN0IGlub2RlICpwYXJlbnRfZGlyX2lub2RlLCBzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRy
eSwKIAlzdHJ1Y3QgdGNvbl9saW5rICp0bGluazsKIAlzdHJ1Y3QgY2lmc190Y29uICpwVGNvbjsK
IAlzdHJ1Y3QgaW5vZGUgKm5ld0lub2RlID0gTlVMTDsKLQljb25zdCBjaGFyICpmdWxsX3BhdGgg
PSBOVUxMOworCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKKwl2b2lkICpwYWdlOwogCiAJeGlkID0g
Z2V0X3hpZCgpOwogCkBAIC02ODcsMTEgKzY4NCwxMyBAQCBjaWZzX2xvb2t1cChzdHJ1Y3QgaW5v
ZGUgKnBhcmVudF9kaXJfaW5vZGUsIHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LAogCS8qIGNhbiBu
b3QgZ3JhYiB0aGUgcmVuYW1lIHNlbSBoZXJlIHNpbmNlIGl0IHdvdWxkCiAJZGVhZGxvY2sgaW4g
dGhlIGNhc2VzIChiZWdpbm5pbmcgb2Ygc3lzX3JlbmFtZSBpdHNlbGYpCiAJaW4gd2hpY2ggd2Ug
YWxyZWFkeSBoYXZlIHRoZSBzYiByZW5hbWUgc2VtICovCi0JZnVsbF9wYXRoID0gYnVpbGRfcGF0
aF9mcm9tX2RlbnRyeShkaXJlbnRyeSk7Ci0JaWYgKGZ1bGxfcGF0aCA9PSBOVUxMKSB7CisJcGFn
ZSA9IGFsbG9jX2RlbnRyeV9wYXRoKCk7CisJZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2Rl
bnRyeShkaXJlbnRyeSwgcGFnZSk7CisJaWYgKElTX0VSUihmdWxsX3BhdGgpKSB7CiAJCWNpZnNf
cHV0X3RsaW5rKHRsaW5rKTsKIAkJZnJlZV94aWQoeGlkKTsKLQkJcmV0dXJuIEVSUl9QVFIoLUVO
T01FTSk7CisJCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7CisJCXJldHVybiBFUlJfQ0FTVChmdWxs
X3BhdGgpOwogCX0KIAogCWlmIChkX3JlYWxseV9pc19wb3NpdGl2ZShkaXJlbnRyeSkpIHsKQEAg
LTcyNyw3ICs3MjYsNyBAQCBjaWZzX2xvb2t1cChzdHJ1Y3QgaW5vZGUgKnBhcmVudF9kaXJfaW5v
ZGUsIHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LAogCQl9CiAJCW5ld0lub2RlID0gRVJSX1BUUihy
Yyk7CiAJfQotCWtmcmVlKGZ1bGxfcGF0aCk7CisJZnJlZV9kZW50cnlfcGF0aChwYWdlKTsKIAlj
aWZzX3B1dF90bGluayh0bGluayk7CiAJZnJlZV94aWQoeGlkKTsKIAlyZXR1cm4gZF9zcGxpY2Vf
YWxpYXMobmV3SW5vZGUsIGRpcmVudHJ5KTsKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvZmlsZS5jIGIv
ZnMvY2lmcy9maWxlLmMKaW5kZXggYWY0OWIzOTM3ZTE1Li4zZDRlNmU3ZGFjMWQgMTAwNjQ0Ci0t
LSBhL2ZzL2NpZnMvZmlsZS5jCisrKyBiL2ZzL2NpZnMvZmlsZS5jCkBAIC01MzAsNyArNTMwLDgg
QEAgaW50IGNpZnNfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkK
IAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uOwogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0
cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlID0gTlVMTDsKLQljb25zdCBjaGFyICpmdWxsX3BhdGgg
PSBOVUxMOworCXZvaWQgKnBhZ2U7CisJY29uc3QgY2hhciAqZnVsbF9wYXRoOwogCWJvb2wgcG9z
aXhfb3Blbl9vayA9IGZhbHNlOwogCXN0cnVjdCBjaWZzX2ZpZCBmaWQ7CiAJc3RydWN0IGNpZnNf
cGVuZGluZ19vcGVuIG9wZW47CkBAIC01NDYsOSArNTQ3LDEwIEBAIGludCBjaWZzX29wZW4oc3Ry
dWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCiAJdGNvbiA9IHRsaW5rX3Rjb24o
dGxpbmspOwogCXNlcnZlciA9IHRjb24tPnNlcy0+c2VydmVyOwogCi0JZnVsbF9wYXRoID0gYnVp
bGRfcGF0aF9mcm9tX2RlbnRyeShmaWxlX2RlbnRyeShmaWxlKSk7Ci0JaWYgKGZ1bGxfcGF0aCA9
PSBOVUxMKSB7Ci0JCXJjID0gLUVOT01FTTsKKwlwYWdlID0gYWxsb2NfZGVudHJ5X3BhdGgoKTsK
KwlmdWxsX3BhdGggPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGZpbGVfZGVudHJ5KGZpbGUpLCBw
YWdlKTsKKwlpZiAoSVNfRVJSKGZ1bGxfcGF0aCkpIHsKKwkJcmMgPSBQVFJfRVJSKGZ1bGxfcGF0
aCk7CiAJCWdvdG8gb3V0OwogCX0KIApAQCAtNjQwLDcgKzY0Miw3IEBAIGludCBjaWZzX29wZW4o
c3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCiAJfQogCiBvdXQ6Ci0Ja2Zy
ZWUoZnVsbF9wYXRoKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCWZyZWVfeGlkKHhpZCk7
CiAJY2lmc19wdXRfdGxpbmsodGxpbmspOwogCXJldHVybiByYzsKQEAgLTY4OSw3ICs2OTEsOCBA
QCBjaWZzX3Jlb3Blbl9maWxlKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlLCBib29sIGNhbl9m
bHVzaCkKIAlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXI7CiAJc3RydWN0IGNpZnNJbm9k
ZUluZm8gKmNpbm9kZTsKIAlzdHJ1Y3QgaW5vZGUgKmlub2RlOwotCWNvbnN0IGNoYXIgKmZ1bGxf
cGF0aCA9IE5VTEw7CisJdm9pZCAqcGFnZTsKKwljb25zdCBjaGFyICpmdWxsX3BhdGg7CiAJaW50
IGRlc2lyZWRfYWNjZXNzOwogCWludCBkaXNwb3NpdGlvbiA9IEZJTEVfT1BFTjsKIAlpbnQgY3Jl
YXRlX29wdGlvbnMgPSBDUkVBVEVfTk9UX0RJUjsKQEAgLTY5OSw5ICs3MDIsOCBAQCBjaWZzX3Jl
b3Blbl9maWxlKHN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlLCBib29sIGNhbl9mbHVzaCkKIAlt
dXRleF9sb2NrKCZjZmlsZS0+ZmhfbXV0ZXgpOwogCWlmICghY2ZpbGUtPmludmFsaWRIYW5kbGUp
IHsKIAkJbXV0ZXhfdW5sb2NrKCZjZmlsZS0+ZmhfbXV0ZXgpOwotCQlyYyA9IDA7CiAJCWZyZWVf
eGlkKHhpZCk7Ci0JCXJldHVybiByYzsKKwkJcmV0dXJuIDA7CiAJfQogCiAJaW5vZGUgPSBkX2lu
b2RlKGNmaWxlLT5kZW50cnkpOwpAQCAtNzE1LDEyICs3MTcsMTMgQEAgY2lmc19yZW9wZW5fZmls
ZShzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpjZmlsZSwgYm9vbCBjYW5fZmx1c2gpCiAJICogY2FsbGVk
IGFuZCBpZiB0aGUgc2VydmVyIHdhcyBkb3duIHRoYXQgbWVhbnMgd2UgZW5kIHVwIGhlcmUsIGFu
ZCB3ZQogCSAqIGNhbiBuZXZlciB0ZWxsIGlmIHRoZSBjYWxsZXIgYWxyZWFkeSBoYXMgdGhlIHJl
bmFtZV9zZW0uCiAJICovCi0JZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShjZmls
ZS0+ZGVudHJ5KTsKLQlpZiAoZnVsbF9wYXRoID09IE5VTEwpIHsKLQkJcmMgPSAtRU5PTUVNOwor
CXBhZ2UgPSBhbGxvY19kZW50cnlfcGF0aCgpOworCWZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhfZnJv
bV9kZW50cnkoY2ZpbGUtPmRlbnRyeSwgcGFnZSk7CisJaWYgKElTX0VSUihmdWxsX3BhdGgpKSB7
CiAJCW11dGV4X3VubG9jaygmY2ZpbGUtPmZoX211dGV4KTsKKwkJZnJlZV9kZW50cnlfcGF0aChw
YWdlKTsKIAkJZnJlZV94aWQoeGlkKTsKLQkJcmV0dXJuIHJjOworCQlyZXR1cm4gUFRSX0VSUihm
dWxsX3BhdGgpOwogCX0KIAogCWNpZnNfZGJnKEZZSSwgImlub2RlID0gMHglcCBmaWxlIGZsYWdz
IDB4JXggZm9yICVzXG4iLApAQCAtODM4LDcgKzg0MSw3IEBAIGNpZnNfcmVvcGVuX2ZpbGUoc3Ry
dWN0IGNpZnNGaWxlSW5mbyAqY2ZpbGUsIGJvb2wgY2FuX2ZsdXNoKQogCQljaWZzX3JlbG9ja19m
aWxlKGNmaWxlKTsKIAogcmVvcGVuX2Vycm9yX2V4aXQ6Ci0Ja2ZyZWUoZnVsbF9wYXRoKTsKKwlm
cmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCWZyZWVfeGlkKHhpZCk7CiAJcmV0dXJuIHJjOwogfQpA
QCAtMjA2OSwzNCArMjA3MiwzMSBAQCBjaWZzX2dldF93cml0YWJsZV9wYXRoKHN0cnVjdCBjaWZz
X3Rjb24gKnRjb24sIGNvbnN0IGNoYXIgKm5hbWUsCiAJCSAgICAgICBpbnQgZmxhZ3MsCiAJCSAg
ICAgICBzdHJ1Y3QgY2lmc0ZpbGVJbmZvICoqcmV0X2ZpbGUpCiB7Ci0Jc3RydWN0IGxpc3RfaGVh
ZCAqdG1wOwogCXN0cnVjdCBjaWZzRmlsZUluZm8gKmNmaWxlOwotCXN0cnVjdCBjaWZzSW5vZGVJ
bmZvICpjaW5vZGU7Ci0JY29uc3QgY2hhciAqZnVsbF9wYXRoOworCXZvaWQgKnBhZ2UgPSBhbGxv
Y19kZW50cnlfcGF0aCgpOwogCiAJKnJldF9maWxlID0gTlVMTDsKIAogCXNwaW5fbG9jaygmdGNv
bi0+b3Blbl9maWxlX2xvY2spOwotCWxpc3RfZm9yX2VhY2godG1wLCAmdGNvbi0+b3BlbkZpbGVM
aXN0KSB7Ci0JCWNmaWxlID0gbGlzdF9lbnRyeSh0bXAsIHN0cnVjdCBjaWZzRmlsZUluZm8sCi0J
CQkgICAgIHRsaXN0KTsKLQkJZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShjZmls
ZS0+ZGVudHJ5KTsKLQkJaWYgKGZ1bGxfcGF0aCA9PSBOVUxMKSB7CisJbGlzdF9mb3JfZWFjaF9l
bnRyeShjZmlsZSwgJnRjb24tPm9wZW5GaWxlTGlzdCwgdGxpc3QpIHsKKwkJc3RydWN0IGNpZnNJ
bm9kZUluZm8gKmNpbm9kZTsKKwkJY29uc3QgY2hhciAqZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9m
cm9tX2RlbnRyeShjZmlsZS0+ZGVudHJ5LCBwYWdlKTsKKwkJaWYgKElTX0VSUihmdWxsX3BhdGgp
KSB7CiAJCQlzcGluX3VubG9jaygmdGNvbi0+b3Blbl9maWxlX2xvY2spOwotCQkJcmV0dXJuIC1F
Tk9NRU07CisJCQlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOworCQkJcmV0dXJuIFBUUl9FUlIoZnVs
bF9wYXRoKTsKIAkJfQotCQlpZiAoc3RyY21wKGZ1bGxfcGF0aCwgbmFtZSkpIHsKLQkJCWtmcmVl
KGZ1bGxfcGF0aCk7CisJCWlmIChzdHJjbXAoZnVsbF9wYXRoLCBuYW1lKSkKIAkJCWNvbnRpbnVl
OwotCQl9CiAKLQkJa2ZyZWUoZnVsbF9wYXRoKTsKIAkJY2lub2RlID0gQ0lGU19JKGRfaW5vZGUo
Y2ZpbGUtPmRlbnRyeSkpOwogCQlzcGluX3VubG9jaygmdGNvbi0+b3Blbl9maWxlX2xvY2spOwor
CQlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCQlyZXR1cm4gY2lmc19nZXRfd3JpdGFibGVfZmls
ZShjaW5vZGUsIGZsYWdzLCByZXRfZmlsZSk7CiAJfQogCiAJc3Bpbl91bmxvY2soJnRjb24tPm9w
ZW5fZmlsZV9sb2NrKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCXJldHVybiAtRU5PRU5U
OwogfQogCkBAIC0yMTA0LDM1ICsyMTA0LDMyIEBAIGludAogY2lmc19nZXRfcmVhZGFibGVfcGF0
aChzdHJ1Y3QgY2lmc190Y29uICp0Y29uLCBjb25zdCBjaGFyICpuYW1lLAogCQkgICAgICAgc3Ry
dWN0IGNpZnNGaWxlSW5mbyAqKnJldF9maWxlKQogewotCXN0cnVjdCBsaXN0X2hlYWQgKnRtcDsK
IAlzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpjZmlsZTsKLQlzdHJ1Y3QgY2lmc0lub2RlSW5mbyAqY2lu
b2RlOwotCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKKwl2b2lkICpwYWdlID0gYWxsb2NfZGVudHJ5
X3BhdGgoKTsKIAogCSpyZXRfZmlsZSA9IE5VTEw7CiAKIAlzcGluX2xvY2soJnRjb24tPm9wZW5f
ZmlsZV9sb2NrKTsKLQlsaXN0X2Zvcl9lYWNoKHRtcCwgJnRjb24tPm9wZW5GaWxlTGlzdCkgewot
CQljZmlsZSA9IGxpc3RfZW50cnkodG1wLCBzdHJ1Y3QgY2lmc0ZpbGVJbmZvLAotCQkJICAgICB0
bGlzdCk7Ci0JCWZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoY2ZpbGUtPmRlbnRy
eSk7Ci0JCWlmIChmdWxsX3BhdGggPT0gTlVMTCkgeworCWxpc3RfZm9yX2VhY2hfZW50cnkoY2Zp
bGUsICZ0Y29uLT5vcGVuRmlsZUxpc3QsIHRsaXN0KSB7CisJCXN0cnVjdCBjaWZzSW5vZGVJbmZv
ICpjaW5vZGU7CisJCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50
cnkoY2ZpbGUtPmRlbnRyeSwgcGFnZSk7CisJCWlmIChJU19FUlIoZnVsbF9wYXRoKSkgewogCQkJ
c3Bpbl91bmxvY2soJnRjb24tPm9wZW5fZmlsZV9sb2NrKTsKLQkJCXJldHVybiAtRU5PTUVNOwor
CQkJZnJlZV9kZW50cnlfcGF0aChwYWdlKTsKKwkJCXJldHVybiBQVFJfRVJSKGZ1bGxfcGF0aCk7
CiAJCX0KLQkJaWYgKHN0cmNtcChmdWxsX3BhdGgsIG5hbWUpKSB7Ci0JCQlrZnJlZShmdWxsX3Bh
dGgpOworCQlpZiAoc3RyY21wKGZ1bGxfcGF0aCwgbmFtZSkpCiAJCQljb250aW51ZTsKLQkJfQog
Ci0JCWtmcmVlKGZ1bGxfcGF0aCk7CiAJCWNpbm9kZSA9IENJRlNfSShkX2lub2RlKGNmaWxlLT5k
ZW50cnkpKTsKIAkJc3Bpbl91bmxvY2soJnRjb24tPm9wZW5fZmlsZV9sb2NrKTsKKwkJZnJlZV9k
ZW50cnlfcGF0aChwYWdlKTsKIAkJKnJldF9maWxlID0gZmluZF9yZWFkYWJsZV9maWxlKGNpbm9k
ZSwgMCk7CiAJCXJldHVybiAqcmV0X2ZpbGUgPyAwIDogLUVOT0VOVDsKIAl9CiAKIAlzcGluX3Vu
bG9jaygmdGNvbi0+b3Blbl9maWxlX2xvY2spOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7CiAJ
cmV0dXJuIC1FTk9FTlQ7CiB9CiAKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvaW5vZGUuYyBiL2ZzL2Np
ZnMvaW5vZGUuYwppbmRleCAwYjI5ODkzZjQwYjcuLmZlM2E1MGEzOWY0MSAxMDA2NDQKLS0tIGEv
ZnMvY2lmcy9pbm9kZS5jCisrKyBiL2ZzL2NpZnMvaW5vZGUuYwpAQCAtMTYwOSw3ICsxNjA5LDgg
QEAgaW50IGNpZnNfdW5saW5rKHN0cnVjdCBpbm9kZSAqZGlyLCBzdHJ1Y3QgZGVudHJ5ICpkZW50
cnkpCiB7CiAJaW50IHJjID0gMDsKIAl1bnNpZ25lZCBpbnQgeGlkOwotCWNvbnN0IGNoYXIgKmZ1
bGxfcGF0aCA9IE5VTEw7CisJY29uc3QgY2hhciAqZnVsbF9wYXRoOworCXZvaWQgKnBhZ2U7CiAJ
c3RydWN0IGlub2RlICppbm9kZSA9IGRfaW5vZGUoZGVudHJ5KTsKIAlzdHJ1Y3QgY2lmc0lub2Rl
SW5mbyAqY2lmc19pbm9kZTsKIAlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gZGlyLT5pX3NiOwpA
QCAtMTYyOSw2ICsxNjMwLDcgQEAgaW50IGNpZnNfdW5saW5rKHN0cnVjdCBpbm9kZSAqZGlyLCBz
dHJ1Y3QgZGVudHJ5ICpkZW50cnkpCiAJc2VydmVyID0gdGNvbi0+c2VzLT5zZXJ2ZXI7CiAKIAl4
aWQgPSBnZXRfeGlkKCk7CisJcGFnZSA9IGFsbG9jX2RlbnRyeV9wYXRoKCk7CiAKIAlpZiAodGNv
bi0+bm9kZWxldGUpIHsKIAkJcmMgPSAtRUFDQ0VTOwpAQCAtMTYzNyw5ICsxNjM5LDkgQEAgaW50
IGNpZnNfdW5saW5rKHN0cnVjdCBpbm9kZSAqZGlyLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnkpCiAK
IAkvKiBVbmxpbmsgY2FuIGJlIGNhbGxlZCBmcm9tIHJlbmFtZSBzbyB3ZSBjYW4gbm90IHRha2Ug
dGhlCiAJICogc2ItPnNfdmZzX3JlbmFtZV9tdXRleCBoZXJlICovCi0JZnVsbF9wYXRoID0gYnVp
bGRfcGF0aF9mcm9tX2RlbnRyeShkZW50cnkpOwotCWlmIChmdWxsX3BhdGggPT0gTlVMTCkgewot
CQlyYyA9IC1FTk9NRU07CisJZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShkZW50
cnksIHBhZ2UpOworCWlmIChJU19FUlIoZnVsbF9wYXRoKSkgeworCQlyYyA9IFBUUl9FUlIoZnVs
bF9wYXRoKTsKIAkJZ290byB1bmxpbmtfb3V0OwogCX0KIApAQCAtMTcxMyw3ICsxNzE1LDcgQEAg
aW50IGNpZnNfdW5saW5rKHN0cnVjdCBpbm9kZSAqZGlyLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnkp
CiAJY2lmc19pbm9kZSA9IENJRlNfSShkaXIpOwogCUNJRlNfSShkaXIpLT50aW1lID0gMDsJLyog
Zm9yY2UgcmV2YWxpZGF0ZSBvZiBkaXIgYXMgd2VsbCAqLwogdW5saW5rX291dDoKLQlrZnJlZShm
dWxsX3BhdGgpOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7CiAJa2ZyZWUoYXR0cnMpOwogCWZy
ZWVfeGlkKHhpZCk7CiAJY2lmc19wdXRfdGxpbmsodGxpbmspOwpAQCAtMTg2Nyw2ICsxODY5LDcg
QEAgaW50IGNpZnNfbWtkaXIoc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNlcm5zLCBzdHJ1
Y3QgaW5vZGUgKmlub2RlLAogCXN0cnVjdCBjaWZzX3Rjb24gKnRjb247CiAJc3RydWN0IFRDUF9T
ZXJ2ZXJfSW5mbyAqc2VydmVyOwogCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKKwl2b2lkICpwYWdl
OwogCiAJY2lmc19kYmcoRllJLCAiSW4gY2lmc19ta2RpciwgbW9kZSA9ICUwNGhvIGlub2RlID0g
MHglcFxuIiwKIAkJIG1vZGUsIGlub2RlKTsKQEAgLTE4NzksOSArMTg4MiwxMCBAQCBpbnQgY2lm
c19ta2RpcihzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAq
aW5vZGUsCiAKIAl4aWQgPSBnZXRfeGlkKCk7CiAKLQlmdWxsX3BhdGggPSBidWlsZF9wYXRoX2Zy
b21fZGVudHJ5KGRpcmVudHJ5KTsKLQlpZiAoZnVsbF9wYXRoID09IE5VTEwpIHsKLQkJcmMgPSAt
RU5PTUVNOworCXBhZ2UgPSBhbGxvY19kZW50cnlfcGF0aCgpOworCWZ1bGxfcGF0aCA9IGJ1aWxk
X3BhdGhfZnJvbV9kZW50cnkoZGlyZW50cnksIHBhZ2UpOworCWlmIChJU19FUlIoZnVsbF9wYXRo
KSkgeworCQlyYyA9IFBUUl9FUlIoZnVsbF9wYXRoKTsKIAkJZ290byBta2Rpcl9vdXQ7CiAJfQog
CkBAIC0xOTI0LDcgKzE5MjgsNyBAQCBpbnQgY2lmc19ta2RpcihzdHJ1Y3QgdXNlcl9uYW1lc3Bh
Y2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJICogYXR0cmlidXRlcyBhcmUg
aW52YWxpZCBub3cuCiAJICovCiAJQ0lGU19JKGlub2RlKS0+dGltZSA9IDA7Ci0Ja2ZyZWUoZnVs
bF9wYXRoKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCWZyZWVfeGlkKHhpZCk7CiAJY2lm
c19wdXRfdGxpbmsodGxpbmspOwogCXJldHVybiByYzsKQEAgLTE5MzgsMTYgKzE5NDIsMTcgQEAg
aW50IGNpZnNfcm1kaXIoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGRlbnRyeSAqZGlyZW50
cnkpCiAJc3RydWN0IHRjb25fbGluayAqdGxpbms7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbjsK
IAlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXI7Ci0JY29uc3QgY2hhciAqZnVsbF9wYXRo
ID0gTlVMTDsKKwljb25zdCBjaGFyICpmdWxsX3BhdGg7CisJdm9pZCAqcGFnZSA9IGFsbG9jX2Rl
bnRyeV9wYXRoKCk7CiAJc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNJbm9kZTsKIAogCWNpZnNf
ZGJnKEZZSSwgImNpZnNfcm1kaXIsIGlub2RlID0gMHglcFxuIiwgaW5vZGUpOwogCiAJeGlkID0g
Z2V0X3hpZCgpOwogCi0JZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShkaXJlbnRy
eSk7Ci0JaWYgKGZ1bGxfcGF0aCA9PSBOVUxMKSB7Ci0JCXJjID0gLUVOT01FTTsKKwlmdWxsX3Bh
dGggPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRpcmVudHJ5LCBwYWdlKTsKKwlpZiAoSVNfRVJS
KGZ1bGxfcGF0aCkpIHsKKwkJcmMgPSBQVFJfRVJSKGZ1bGxfcGF0aCk7CiAJCWdvdG8gcm1kaXJf
ZXhpdDsKIAl9CiAKQEAgLTE5OTcsNyArMjAwMiw3IEBAIGludCBjaWZzX3JtZGlyKHN0cnVjdCBp
bm9kZSAqaW5vZGUsIHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5KQogCQljdXJyZW50X3RpbWUoaW5v
ZGUpOwogCiBybWRpcl9leGl0OgotCWtmcmVlKGZ1bGxfcGF0aCk7CisJZnJlZV9kZW50cnlfcGF0
aChwYWdlKTsKIAlmcmVlX3hpZCh4aWQpOwogCXJldHVybiByYzsKIH0KQEAgLTIwNzIsOCArMjA3
Nyw4IEBAIGNpZnNfcmVuYW1lMihzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0
cnVjdCBpbm9kZSAqc291cmNlX2RpciwKIAkgICAgIHN0cnVjdCBkZW50cnkgKnNvdXJjZV9kZW50
cnksIHN0cnVjdCBpbm9kZSAqdGFyZ2V0X2RpciwKIAkgICAgIHN0cnVjdCBkZW50cnkgKnRhcmdl
dF9kZW50cnksIHVuc2lnbmVkIGludCBmbGFncykKIHsKLQljb25zdCBjaGFyICpmcm9tX25hbWUg
PSBOVUxMOwotCWNvbnN0IGNoYXIgKnRvX25hbWUgPSBOVUxMOworCWNvbnN0IGNoYXIgKmZyb21f
bmFtZSwgKnRvX25hbWU7CisJdm9pZCAqcGFnZTEsICpwYWdlMjsKIAlzdHJ1Y3QgY2lmc19zYl9p
bmZvICpjaWZzX3NiOwogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZzX3Rj
b24gKnRjb247CkBAIC0yMDkxLDIxICsyMDk2LDE5IEBAIGNpZnNfcmVuYW1lMihzdHJ1Y3QgdXNl
cl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBpbm9kZSAqc291cmNlX2RpciwKIAkJcmV0
dXJuIFBUUl9FUlIodGxpbmspOwogCXRjb24gPSB0bGlua190Y29uKHRsaW5rKTsKIAorCXBhZ2Ux
ID0gYWxsb2NfZGVudHJ5X3BhdGgoKTsKKwlwYWdlMiA9IGFsbG9jX2RlbnRyeV9wYXRoKCk7CiAJ
eGlkID0gZ2V0X3hpZCgpOwogCi0JLyoKLQkgKiB3ZSBhbHJlYWR5IGhhdmUgdGhlIHJlbmFtZSBz
ZW0gc28gd2UgZG8gbm90IG5lZWQgdG8KLQkgKiBncmFiIGl0IGFnYWluIGhlcmUgdG8gcHJvdGVj
dCB0aGUgcGF0aCBpbnRlZ3JpdHkKLQkgKi8KLQlmcm9tX25hbWUgPSBidWlsZF9wYXRoX2Zyb21f
ZGVudHJ5KHNvdXJjZV9kZW50cnkpOwotCWlmIChmcm9tX25hbWUgPT0gTlVMTCkgewotCQlyYyA9
IC1FTk9NRU07CisJZnJvbV9uYW1lID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShzb3VyY2VfZGVu
dHJ5LCBwYWdlMSk7CisJaWYgKElTX0VSUihmcm9tX25hbWUpKSB7CisJCXJjID0gUFRSX0VSUihm
cm9tX25hbWUpOwogCQlnb3RvIGNpZnNfcmVuYW1lX2V4aXQ7CiAJfQogCi0JdG9fbmFtZSA9IGJ1
aWxkX3BhdGhfZnJvbV9kZW50cnkodGFyZ2V0X2RlbnRyeSk7Ci0JaWYgKHRvX25hbWUgPT0gTlVM
TCkgewotCQlyYyA9IC1FTk9NRU07CisJdG9fbmFtZSA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnko
dGFyZ2V0X2RlbnRyeSwgcGFnZTIpOworCWlmIChJU19FUlIodG9fbmFtZSkpIHsKKwkJcmMgPSBQ
VFJfRVJSKHRvX25hbWUpOwogCQlnb3RvIGNpZnNfcmVuYW1lX2V4aXQ7CiAJfQogCkBAIC0yMTc3
LDggKzIxODAsOCBAQCBjaWZzX3JlbmFtZTIoc3RydWN0IHVzZXJfbmFtZXNwYWNlICptbnRfdXNl
cm5zLCBzdHJ1Y3QgaW5vZGUgKnNvdXJjZV9kaXIsCiAKIGNpZnNfcmVuYW1lX2V4aXQ6CiAJa2Zy
ZWUoaW5mb19idWZfc291cmNlKTsKLQlrZnJlZShmcm9tX25hbWUpOwotCWtmcmVlKHRvX25hbWUp
OworCWZyZWVfZGVudHJ5X3BhdGgocGFnZTIpOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZTEpOwog
CWZyZWVfeGlkKHhpZCk7CiAJY2lmc19wdXRfdGxpbmsodGxpbmspOwogCXJldHVybiByYzsKQEAg
LTIzMTcsNyArMjMyMCw4IEBAIGludCBjaWZzX3JldmFsaWRhdGVfZGVudHJ5X2F0dHIoc3RydWN0
IGRlbnRyeSAqZGVudHJ5KQogCWludCByYyA9IDA7CiAJc3RydWN0IGlub2RlICppbm9kZSA9IGRf
aW5vZGUoZGVudHJ5KTsKIAlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gZGVudHJ5LT5kX3NiOwot
CWNvbnN0IGNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7CisJY29uc3QgY2hhciAqZnVsbF9wYXRoOwor
CXZvaWQgKnBhZ2U7CiAJaW50IGNvdW50ID0gMDsKIAogCWlmIChpbm9kZSA9PSBOVUxMKQpAQCAt
MjMyOCwxMSArMjMzMiwxMCBAQCBpbnQgY2lmc19yZXZhbGlkYXRlX2RlbnRyeV9hdHRyKHN0cnVj
dCBkZW50cnkgKmRlbnRyeSkKIAogCXhpZCA9IGdldF94aWQoKTsKIAotCS8qIGNhbiBub3Qgc2Fm
ZWx5IGdyYWIgdGhlIHJlbmFtZSBzZW0gaGVyZSBpZiByZW5hbWUgY2FsbHMgcmV2YWxpZGF0ZQot
CSAgIHNpbmNlIHRoYXQgd291bGQgZGVhZGxvY2sgKi8KLQlmdWxsX3BhdGggPSBidWlsZF9wYXRo
X2Zyb21fZGVudHJ5KGRlbnRyeSk7Ci0JaWYgKGZ1bGxfcGF0aCA9PSBOVUxMKSB7Ci0JCXJjID0g
LUVOT01FTTsKKwlwYWdlID0gYWxsb2NfZGVudHJ5X3BhdGgoKTsKKwlmdWxsX3BhdGggPSBidWls
ZF9wYXRoX2Zyb21fZGVudHJ5KGRlbnRyeSwgcGFnZSk7CisJaWYgKElTX0VSUihmdWxsX3BhdGgp
KSB7CisJCXJjID0gUFRSX0VSUihmdWxsX3BhdGgpOwogCQlnb3RvIG91dDsKIAl9CiAKQEAgLTIz
NTEsNyArMjM1NCw3IEBAIGludCBjaWZzX3JldmFsaWRhdGVfZGVudHJ5X2F0dHIoc3RydWN0IGRl
bnRyeSAqZGVudHJ5KQogCWlmIChyYyA9PSAtRUFHQUlOICYmIGNvdW50KysgPCAxMCkKIAkJZ290
byBhZ2FpbjsKIG91dDoKLQlrZnJlZShmdWxsX3BhdGgpOworCWZyZWVfZGVudHJ5X3BhdGgocGFn
ZSk7CiAJZnJlZV94aWQoeGlkKTsKIAogCXJldHVybiByYzsKQEAgLTI2MTMsNyArMjYxNiw4IEBA
IGNpZnNfc2V0YXR0cl91bml4KHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LCBzdHJ1Y3QgaWF0dHIg
KmF0dHJzKQogewogCWludCByYzsKIAl1bnNpZ25lZCBpbnQgeGlkOwotCWNvbnN0IGNoYXIgKmZ1
bGxfcGF0aCA9IE5VTEw7CisJY29uc3QgY2hhciAqZnVsbF9wYXRoOworCXZvaWQgKnBhZ2UgPSBh
bGxvY19kZW50cnlfcGF0aCgpOwogCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBkX2lub2RlKGRpcmVu
dHJ5KTsKIAlzdHJ1Y3QgY2lmc0lub2RlSW5mbyAqY2lmc0lub2RlID0gQ0lGU19JKGlub2RlKTsK
IAlzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihpbm9kZS0+aV9zYik7CkBA
IC0yNjM0LDkgKzI2MzgsOSBAQCBjaWZzX3NldGF0dHJfdW5peChzdHJ1Y3QgZGVudHJ5ICpkaXJl
bnRyeSwgc3RydWN0IGlhdHRyICphdHRycykKIAlpZiAocmMgPCAwKQogCQlnb3RvIG91dDsKIAot
CWZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoZGlyZW50cnkpOwotCWlmIChmdWxs
X3BhdGggPT0gTlVMTCkgewotCQlyYyA9IC1FTk9NRU07CisJZnVsbF9wYXRoID0gYnVpbGRfcGF0
aF9mcm9tX2RlbnRyeShkaXJlbnRyeSwgcGFnZSk7CisJaWYgKElTX0VSUihmdWxsX3BhdGgpKSB7
CisJCXJjID0gUFRSX0VSUihmdWxsX3BhdGgpOwogCQlnb3RvIG91dDsKIAl9CiAKQEAgLTI3NDgs
NyArMjc1Miw3IEBAIGNpZnNfc2V0YXR0cl91bml4KHN0cnVjdCBkZW50cnkgKmRpcmVudHJ5LCBz
dHJ1Y3QgaWF0dHIgKmF0dHJzKQogCQljaWZzSW5vZGUtPnRpbWUgPSAwOwogb3V0OgogCWtmcmVl
KGFyZ3MpOwotCWtmcmVlKGZ1bGxfcGF0aCk7CisJZnJlZV9kZW50cnlfcGF0aChwYWdlKTsKIAlm
cmVlX3hpZCh4aWQpOwogCXJldHVybiByYzsKIH0KQEAgLTI3NjQsNyArMjc2OCw4IEBAIGNpZnNf
c2V0YXR0cl9ub3VuaXgoc3RydWN0IGRlbnRyeSAqZGlyZW50cnksIHN0cnVjdCBpYXR0ciAqYXR0
cnMpCiAJc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNJbm9kZSA9IENJRlNfSShpbm9kZSk7CiAJ
c3RydWN0IGNpZnNGaWxlSW5mbyAqd2ZpbGU7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbjsKLQlj
b25zdCBjaGFyICpmdWxsX3BhdGggPSBOVUxMOworCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKKwl2
b2lkICpwYWdlID0gYWxsb2NfZGVudHJ5X3BhdGgoKTsKIAlpbnQgcmMgPSAtRUFDQ0VTOwogCV9f
dTMyIGRvc2F0dHIgPSAwOwogCV9fdTY0IG1vZGUgPSBOT19DSEFOR0VfNjQ7CkBAIC0yNzc4LDE2
ICsyNzgzLDEzIEBAIGNpZnNfc2V0YXR0cl9ub3VuaXgoc3RydWN0IGRlbnRyeSAqZGlyZW50cnks
IHN0cnVjdCBpYXR0ciAqYXR0cnMpCiAJCWF0dHJzLT5pYV92YWxpZCB8PSBBVFRSX0ZPUkNFOwog
CiAJcmMgPSBzZXRhdHRyX3ByZXBhcmUoJmluaXRfdXNlcl9ucywgZGlyZW50cnksIGF0dHJzKTsK
LQlpZiAocmMgPCAwKSB7Ci0JCWZyZWVfeGlkKHhpZCk7Ci0JCXJldHVybiByYzsKLQl9CisJaWYg
KHJjIDwgMCkKKwkJZ290byBjaWZzX3NldGF0dHJfZXhpdDsKIAotCWZ1bGxfcGF0aCA9IGJ1aWxk
X3BhdGhfZnJvbV9kZW50cnkoZGlyZW50cnkpOwotCWlmIChmdWxsX3BhdGggPT0gTlVMTCkgewot
CQlyYyA9IC1FTk9NRU07Ci0JCWZyZWVfeGlkKHhpZCk7Ci0JCXJldHVybiByYzsKKwlmdWxsX3Bh
dGggPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRpcmVudHJ5LCBwYWdlKTsKKwlpZiAoSVNfRVJS
KGZ1bGxfcGF0aCkpIHsKKwkJcmMgPSBQVFJfRVJSKGZ1bGxfcGF0aCk7CisJCWdvdG8gY2lmc19z
ZXRhdHRyX2V4aXQ7CiAJfQogCiAJLyoKQEAgLTI5MzcsOCArMjkzOSw4IEBAIGNpZnNfc2V0YXR0
cl9ub3VuaXgoc3RydWN0IGRlbnRyeSAqZGlyZW50cnksIHN0cnVjdCBpYXR0ciAqYXR0cnMpCiAJ
bWFya19pbm9kZV9kaXJ0eShpbm9kZSk7CiAKIGNpZnNfc2V0YXR0cl9leGl0OgotCWtmcmVlKGZ1
bGxfcGF0aCk7CiAJZnJlZV94aWQoeGlkKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCXJl
dHVybiByYzsKIH0KIApkaWZmIC0tZ2l0IGEvZnMvY2lmcy9pb2N0bC5jIGIvZnMvY2lmcy9pb2N0
bC5jCmluZGV4IGFiYTU3M2RkODZhYy4uMDhkOTlmZWM1OTNlIDEwMDY0NAotLS0gYS9mcy9jaWZz
L2lvY3RsLmMKKysrIGIvZnMvY2lmcy9pb2N0bC5jCkBAIC00MywxMiArNDMsMTUgQEAgc3RhdGlj
IGxvbmcgY2lmc19pb2N0bF9xdWVyeV9pbmZvKHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBmaWxl
ICpmaWxlcCwKIAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uID0gY2lmc19zYl9tYXN0ZXJfdGNvbihj
aWZzX3NiKTsKIAlzdHJ1Y3QgZGVudHJ5ICpkZW50cnkgPSBmaWxlcC0+Zl9wYXRoLmRlbnRyeTsK
IAljb25zdCB1bnNpZ25lZCBjaGFyICpwYXRoOworCXZvaWQgKnBhZ2UgPSBhbGxvY19kZW50cnlf
cGF0aCgpOwogCV9fbGUxNiAqdXRmMTZfcGF0aCA9IE5VTEwsIHJvb3RfcGF0aDsKIAlpbnQgcmMg
PSAwOwogCi0JcGF0aCA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoZGVudHJ5KTsKLQlpZiAocGF0
aCA9PSBOVUxMKQotCQlyZXR1cm4gLUVOT01FTTsKKwlwYXRoID0gYnVpbGRfcGF0aF9mcm9tX2Rl
bnRyeShkZW50cnksIHBhZ2UpOworCWlmIChJU19FUlIocGF0aCkpIHsKKwkJZnJlZV9kZW50cnlf
cGF0aChwYWdlKTsKKwkJcmV0dXJuIFBUUl9FUlIocGF0aCk7CisJfQogCiAJY2lmc19kYmcoRllJ
LCAiJXMgJXNcbiIsIF9fZnVuY19fLCBwYXRoKTsKIApAQCAtNzMsNyArNzYsNyBAQCBzdGF0aWMg
bG9uZyBjaWZzX2lvY3RsX3F1ZXJ5X2luZm8odW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGZpbGUg
KmZpbGVwLAogIGljaV9leGl0OgogCWlmICh1dGYxNl9wYXRoICE9ICZyb290X3BhdGgpCiAJCWtm
cmVlKHV0ZjE2X3BhdGgpOwotCWtmcmVlKHBhdGgpOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7
CiAJcmV0dXJuIHJjOwogfQogCmRpZmYgLS1naXQgYS9mcy9jaWZzL2xpbmsuYyBiL2ZzL2NpZnMv
bGluay5jCmluZGV4IDE4ZTBlMzFhNmQzOS4uNjE2ZTFiYzBjYzBhIDEwMDY0NAotLS0gYS9mcy9j
aWZzL2xpbmsuYworKysgYi9mcy9jaWZzL2xpbmsuYwpAQCAtNTEwLDggKzUxMCw4IEBAIGNpZnNf
aGFyZGxpbmsoc3RydWN0IGRlbnRyeSAqb2xkX2ZpbGUsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiB7
CiAJaW50IHJjID0gLUVBQ0NFUzsKIAl1bnNpZ25lZCBpbnQgeGlkOwotCWNvbnN0IGNoYXIgKmZy
b21fbmFtZSA9IE5VTEw7Ci0JY29uc3QgY2hhciAqdG9fbmFtZSA9IE5VTEw7CisJY29uc3QgY2hh
ciAqZnJvbV9uYW1lLCAqdG9fbmFtZTsKKwl2b2lkICpwYWdlMSwgKnBhZ2UyOwogCXN0cnVjdCBj
aWZzX3NiX2luZm8gKmNpZnNfc2IgPSBDSUZTX1NCKGlub2RlLT5pX3NiKTsKIAlzdHJ1Y3QgdGNv
bl9saW5rICp0bGluazsKIAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uOwpAQCAtNTI0LDExICs1MjQs
MTcgQEAgY2lmc19oYXJkbGluayhzdHJ1Y3QgZGVudHJ5ICpvbGRfZmlsZSwgc3RydWN0IGlub2Rl
ICppbm9kZSwKIAl0Y29uID0gdGxpbmtfdGNvbih0bGluayk7CiAKIAl4aWQgPSBnZXRfeGlkKCk7
CisJcGFnZTEgPSBhbGxvY19kZW50cnlfcGF0aCgpOworCXBhZ2UyID0gYWxsb2NfZGVudHJ5X3Bh
dGgoKTsKIAotCWZyb21fbmFtZSA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkob2xkX2ZpbGUpOwot
CXRvX25hbWUgPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRpcmVudHJ5KTsKLQlpZiAoKGZyb21f
bmFtZSA9PSBOVUxMKSB8fCAodG9fbmFtZSA9PSBOVUxMKSkgewotCQlyYyA9IC1FTk9NRU07CisJ
ZnJvbV9uYW1lID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShvbGRfZmlsZSwgcGFnZTEpOworCWlm
IChJU19FUlIoZnJvbV9uYW1lKSkgeworCQlyYyA9IFBUUl9FUlIoZnJvbV9uYW1lKTsKKwkJZ290
byBjaWZzX2hsX2V4aXQ7CisJfQorCXRvX25hbWUgPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRp
cmVudHJ5LCBwYWdlMik7CisJaWYgKElTX0VSUih0b19uYW1lKSkgeworCQlyYyA9IFBUUl9FUlIo
dG9fbmFtZSk7CiAJCWdvdG8gY2lmc19obF9leGl0OwogCX0KIApAQCAtNTg3LDggKzU5Myw4IEBA
IGNpZnNfaGFyZGxpbmsoc3RydWN0IGRlbnRyeSAqb2xkX2ZpbGUsIHN0cnVjdCBpbm9kZSAqaW5v
ZGUsCiAJfQogCiBjaWZzX2hsX2V4aXQ6Ci0Ja2ZyZWUoZnJvbV9uYW1lKTsKLQlrZnJlZSh0b19u
YW1lKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UxKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2Uy
KTsKIAlmcmVlX3hpZCh4aWQpOwogCWNpZnNfcHV0X3RsaW5rKHRsaW5rKTsKIAlyZXR1cm4gcmM7
CkBAIC02MDAsNyArNjA2LDggQEAgY2lmc19nZXRfbGluayhzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRy
eSwgc3RydWN0IGlub2RlICppbm9kZSwKIHsKIAlpbnQgcmMgPSAtRU5PTUVNOwogCXVuc2lnbmVk
IGludCB4aWQ7Ci0JY29uc3QgY2hhciAqZnVsbF9wYXRoID0gTlVMTDsKKwljb25zdCBjaGFyICpm
dWxsX3BhdGg7CisJdm9pZCAqcGFnZTsKIAljaGFyICp0YXJnZXRfcGF0aCA9IE5VTEw7CiAJc3Ry
dWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoaW5vZGUtPmlfc2IpOwogCXN0cnVj
dCB0Y29uX2xpbmsgKnRsaW5rID0gTlVMTDsKQEAgLTYyMCwxMSArNjI3LDEzIEBAIGNpZnNfZ2V0
X2xpbmsoc3RydWN0IGRlbnRyeSAqZGlyZW50cnksIHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJdGNv
biA9IHRsaW5rX3Rjb24odGxpbmspOwogCXNlcnZlciA9IHRjb24tPnNlcy0+c2VydmVyOwogCi0J
ZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShkaXJlbnRyeSk7Ci0JaWYgKCFmdWxs
X3BhdGgpIHsKKwlwYWdlID0gYWxsb2NfZGVudHJ5X3BhdGgoKTsKKwlmdWxsX3BhdGggPSBidWls
ZF9wYXRoX2Zyb21fZGVudHJ5KGRpcmVudHJ5LCBwYWdlKTsKKwlpZiAoSVNfRVJSKGZ1bGxfcGF0
aCkpIHsKIAkJZnJlZV94aWQoeGlkKTsKIAkJY2lmc19wdXRfdGxpbmsodGxpbmspOwotCQlyZXR1
cm4gRVJSX1BUUigtRU5PTUVNKTsKKwkJZnJlZV9kZW50cnlfcGF0aChwYWdlKTsKKwkJcmV0dXJu
IEVSUl9DQVNUKGZ1bGxfcGF0aCk7CiAJfQogCiAJY2lmc19kYmcoRllJLCAiRnVsbCBwYXRoOiAl
cyBpbm9kZSA9IDB4JXBcbiIsIGZ1bGxfcGF0aCwgaW5vZGUpOwpAQCAtNjQ5LDcgKzY1OCw3IEBA
IGNpZnNfZ2V0X2xpbmsoc3RydWN0IGRlbnRyeSAqZGlyZW50cnksIHN0cnVjdCBpbm9kZSAqaW5v
ZGUsCiAJCQkJCQkmdGFyZ2V0X3BhdGgsIHJlcGFyc2VfcG9pbnQpOwogCX0KIAotCWtmcmVlKGZ1
bGxfcGF0aCk7CisJZnJlZV9kZW50cnlfcGF0aChwYWdlKTsKIAlmcmVlX3hpZCh4aWQpOwogCWNp
ZnNfcHV0X3RsaW5rKHRsaW5rKTsKIAlpZiAocmMgIT0gMCkgewpAQCAtNjY5LDcgKzY3OCw4IEBA
IGNpZnNfc3ltbGluayhzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVjdCBp
bm9kZSAqaW5vZGUsCiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoaW5v
ZGUtPmlfc2IpOwogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZzX3Rjb24g
KnBUY29uOwotCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aCA9IE5VTEw7CisJY29uc3QgY2hhciAqZnVs
bF9wYXRoOworCXZvaWQgKnBhZ2UgPSBhbGxvY19kZW50cnlfcGF0aCgpOwogCXN0cnVjdCBpbm9k
ZSAqbmV3aW5vZGUgPSBOVUxMOwogCiAJeGlkID0gZ2V0X3hpZCgpOwpAQCAtNjgxLDkgKzY5MSw5
IEBAIGNpZnNfc3ltbGluayhzdHJ1Y3QgdXNlcl9uYW1lc3BhY2UgKm1udF91c2VybnMsIHN0cnVj
dCBpbm9kZSAqaW5vZGUsCiAJfQogCXBUY29uID0gdGxpbmtfdGNvbih0bGluayk7CiAKLQlmdWxs
X3BhdGggPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRpcmVudHJ5KTsKLQlpZiAoZnVsbF9wYXRo
ID09IE5VTEwpIHsKLQkJcmMgPSAtRU5PTUVNOworCWZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhfZnJv
bV9kZW50cnkoZGlyZW50cnksIHBhZ2UpOworCWlmIChJU19FUlIoZnVsbF9wYXRoKSkgeworCQly
YyA9IFBUUl9FUlIoZnVsbF9wYXRoKTsKIAkJZ290byBzeW1saW5rX2V4aXQ7CiAJfQogCkBAIC03
MTksNyArNzI5LDcgQEAgY2lmc19zeW1saW5rKHN0cnVjdCB1c2VyX25hbWVzcGFjZSAqbW50X3Vz
ZXJucywgc3RydWN0IGlub2RlICppbm9kZSwKIAkJfQogCX0KIHN5bWxpbmtfZXhpdDoKLQlrZnJl
ZShmdWxsX3BhdGgpOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7CiAJY2lmc19wdXRfdGxpbmso
dGxpbmspOwogCWZyZWVfeGlkKHhpZCk7CiAJcmV0dXJuIHJjOwpkaWZmIC0tZ2l0IGEvZnMvY2lm
cy9yZWFkZGlyLmMgYi9mcy9jaWZzL3JlYWRkaXIuYwppbmRleCA2N2MzMTc3YTFmZGEuLjc1MzFl
ODkwNTg4MSAxMDA2NDQKLS0tIGEvZnMvY2lmcy9yZWFkZGlyLmMKKysrIGIvZnMvY2lmcy9yZWFk
ZGlyLmMKQEAgLTk0MiwxMyArOTQyLDE0IEBAIGludCBjaWZzX3JlYWRkaXIoc3RydWN0IGZpbGUg
KmZpbGUsIHN0cnVjdCBkaXJfY29udGV4dCAqY3R4KQogCWNoYXIgKnRtcF9idWYgPSBOVUxMOwog
CWNoYXIgKmVuZF9vZl9zbWI7CiAJdW5zaWduZWQgaW50IG1heF9sZW47Ci0JY29uc3QgY2hhciAq
ZnVsbF9wYXRoID0gTlVMTDsKKwljb25zdCBjaGFyICpmdWxsX3BhdGg7CisJdm9pZCAqcGFnZSA9
IGFsbG9jX2RlbnRyeV9wYXRoKCk7CiAKIAl4aWQgPSBnZXRfeGlkKCk7CiAKLQlmdWxsX3BhdGgg
PSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGZpbGVfZGVudHJ5KGZpbGUpKTsKLQlpZiAoZnVsbF9w
YXRoID09IE5VTEwpIHsKLQkJcmMgPSAtRU5PTUVNOworCWZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhf
ZnJvbV9kZW50cnkoZmlsZV9kZW50cnkoZmlsZSksIHBhZ2UpOworCWlmIChJU19FUlIoZnVsbF9w
YXRoKSkgeworCQlyYyA9IFBUUl9FUlIoZnVsbF9wYXRoKTsKIAkJZ290byByZGRpcjJfZXhpdDsK
IAl9CiAKQEAgLTEwNDMsNyArMTA0NCw3IEBAIGludCBjaWZzX3JlYWRkaXIoc3RydWN0IGZpbGUg
KmZpbGUsIHN0cnVjdCBkaXJfY29udGV4dCAqY3R4KQogCWtmcmVlKHRtcF9idWYpOwogCiByZGRp
cjJfZXhpdDoKLQlrZnJlZShmdWxsX3BhdGgpOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7CiAJ
ZnJlZV94aWQoeGlkKTsKIAlyZXR1cm4gcmM7CiB9CmRpZmYgLS1naXQgYS9mcy9jaWZzL3NtYjJv
cHMuYyBiL2ZzL2NpZnMvc21iMm9wcy5jCmluZGV4IDMwY2ZiZWJkZDhiNC4uNjVmYzY1YjI2ZDg0
IDEwMDY0NAotLS0gYS9mcy9jaWZzL3NtYjJvcHMuYworKysgYi9mcy9jaWZzL3NtYjJvcHMuYwpA
QCAtMjIxNywyMCArMjIxNywyMSBAQCBzbWIzX25vdGlmeShjb25zdCB1bnNpZ25lZCBpbnQgeGlk
LCBzdHJ1Y3QgZmlsZSAqcGZpbGUsCiAJc3RydWN0IHNtYjNfbm90aWZ5IG5vdGlmeTsKIAlzdHJ1
Y3QgZGVudHJ5ICpkZW50cnkgPSBwZmlsZS0+Zl9wYXRoLmRlbnRyeTsKIAlzdHJ1Y3QgaW5vZGUg
Kmlub2RlID0gZmlsZV9pbm9kZShwZmlsZSk7Ci0Jc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19z
YjsKKwlzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihpbm9kZS0+aV9zYik7
CiAJc3RydWN0IGNpZnNfb3Blbl9wYXJtcyBvcGFybXM7CiAJc3RydWN0IGNpZnNfZmlkIGZpZDsK
IAlzdHJ1Y3QgY2lmc190Y29uICp0Y29uOwotCWNvbnN0IHVuc2lnbmVkIGNoYXIgKnBhdGggPSBO
VUxMOworCWNvbnN0IHVuc2lnbmVkIGNoYXIgKnBhdGg7CisJdm9pZCAqcGFnZSA9IGFsbG9jX2Rl
bnRyeV9wYXRoKCk7CiAJX19sZTE2ICp1dGYxNl9wYXRoID0gTlVMTDsKIAl1OCBvcGxvY2sgPSBT
TUIyX09QTE9DS19MRVZFTF9OT05FOwogCWludCByYyA9IDA7CiAKLQlwYXRoID0gYnVpbGRfcGF0
aF9mcm9tX2RlbnRyeShkZW50cnkpOwotCWlmIChwYXRoID09IE5VTEwpCi0JCXJldHVybiAtRU5P
TUVNOwotCi0JY2lmc19zYiA9IENJRlNfU0IoaW5vZGUtPmlfc2IpOworCXBhdGggPSBidWlsZF9w
YXRoX2Zyb21fZGVudHJ5KGRlbnRyeSwgcGFnZSk7CisJaWYgKElTX0VSUihwYXRoKSkgeworCQly
YyA9IFBUUl9FUlIocGF0aCk7CisJCWdvdG8gbm90aWZ5X2V4aXQ7CisJfQogCiAJdXRmMTZfcGF0
aCA9IGNpZnNfY29udmVydF9wYXRoX3RvX3V0ZjE2KHBhdGggKyAxLCBjaWZzX3NiKTsKIAlpZiAo
dXRmMTZfcGF0aCA9PSBOVUxMKSB7CkBAIC0yMjY0LDcgKzIyNjUsNyBAQCBzbWIzX25vdGlmeShj
b25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgZmlsZSAqcGZpbGUsCiAJY2lmc19kYmcoRllJ
LCAiY2hhbmdlIG5vdGlmeSBmb3IgcGF0aCAlcyByYyAlZFxuIiwgcGF0aCwgcmMpOwogCiBub3Rp
ZnlfZXhpdDoKLQlrZnJlZShwYXRoKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCWtmcmVl
KHV0ZjE2X3BhdGgpOwogCXJldHVybiByYzsKIH0KZGlmZiAtLWdpdCBhL2ZzL2NpZnMveGF0dHIu
YyBiL2ZzL2NpZnMveGF0dHIuYwppbmRleCAwMTk1YTliZTNkMjguLmUzNTFiOTQ1MTM1YiAxMDA2
NDQKLS0tIGEvZnMvY2lmcy94YXR0ci5jCisrKyBiL2ZzL2NpZnMveGF0dHIuYwpAQCAtMTEzLDYg
KzExMyw3IEBAIHN0YXRpYyBpbnQgY2lmc194YXR0cl9zZXQoY29uc3Qgc3RydWN0IHhhdHRyX2hh
bmRsZXIgKmhhbmRsZXIsCiAJc3RydWN0IHRjb25fbGluayAqdGxpbms7CiAJc3RydWN0IGNpZnNf
dGNvbiAqcFRjb247CiAJY29uc3QgY2hhciAqZnVsbF9wYXRoOworCXZvaWQgKnBhZ2U7CiAKIAl0
bGluayA9IGNpZnNfc2JfdGxpbmsoY2lmc19zYik7CiAJaWYgKElTX0VSUih0bGluaykpCkBAIC0x
MjAsMTAgKzEyMSwxMSBAQCBzdGF0aWMgaW50IGNpZnNfeGF0dHJfc2V0KGNvbnN0IHN0cnVjdCB4
YXR0cl9oYW5kbGVyICpoYW5kbGVyLAogCXBUY29uID0gdGxpbmtfdGNvbih0bGluayk7CiAKIAl4
aWQgPSBnZXRfeGlkKCk7CisJcGFnZSA9IGFsbG9jX2RlbnRyeV9wYXRoKCk7CiAKLQlmdWxsX3Bh
dGggPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRlbnRyeSk7Ci0JaWYgKGZ1bGxfcGF0aCA9PSBO
VUxMKSB7Ci0JCXJjID0gLUVOT01FTTsKKwlmdWxsX3BhdGggPSBidWlsZF9wYXRoX2Zyb21fZGVu
dHJ5KGRlbnRyeSwgcGFnZSk7CisJaWYgKElTX0VSUihmdWxsX3BhdGgpKSB7CisJCXJjID0gUFRS
X0VSUihmdWxsX3BhdGgpOwogCQlnb3RvIG91dDsKIAl9CiAJLyogcmV0dXJuIGRvcyBhdHRyaWJ1
dGVzIGFzIHBzZXVkbyB4YXR0ciAqLwpAQCAtMjM1LDcgKzIzNyw3IEBAIHN0YXRpYyBpbnQgY2lm
c194YXR0cl9zZXQoY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIsCiAJfQogCiBv
dXQ6Ci0Ja2ZyZWUoZnVsbF9wYXRoKTsKKwlmcmVlX2RlbnRyeV9wYXRoKHBhZ2UpOwogCWZyZWVf
eGlkKHhpZCk7CiAJY2lmc19wdXRfdGxpbmsodGxpbmspOwogCXJldHVybiByYzsKQEAgLTI5OCw2
ICszMDAsNyBAQCBzdGF0aWMgaW50IGNpZnNfeGF0dHJfZ2V0KGNvbnN0IHN0cnVjdCB4YXR0cl9o
YW5kbGVyICpoYW5kbGVyLAogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZz
X3Rjb24gKnBUY29uOwogCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKKwl2b2lkICpwYWdlOwogCiAJ
dGxpbmsgPSBjaWZzX3NiX3RsaW5rKGNpZnNfc2IpOwogCWlmIChJU19FUlIodGxpbmspKQpAQCAt
MzA1LDEwICszMDgsMTEgQEAgc3RhdGljIGludCBjaWZzX3hhdHRyX2dldChjb25zdCBzdHJ1Y3Qg
eGF0dHJfaGFuZGxlciAqaGFuZGxlciwKIAlwVGNvbiA9IHRsaW5rX3Rjb24odGxpbmspOwogCiAJ
eGlkID0gZ2V0X3hpZCgpOworCXBhZ2UgPSBhbGxvY19kZW50cnlfcGF0aCgpOwogCi0JZnVsbF9w
YXRoID0gYnVpbGRfcGF0aF9mcm9tX2RlbnRyeShkZW50cnkpOwotCWlmIChmdWxsX3BhdGggPT0g
TlVMTCkgewotCQlyYyA9IC1FTk9NRU07CisJZnVsbF9wYXRoID0gYnVpbGRfcGF0aF9mcm9tX2Rl
bnRyeShkZW50cnksIHBhZ2UpOworCWlmIChJU19FUlIoZnVsbF9wYXRoKSkgeworCQlyYyA9IFBU
Ul9FUlIoZnVsbF9wYXRoKTsKIAkJZ290byBvdXQ7CiAJfQogCkBAIC00MDEsNyArNDA1LDcgQEAg
c3RhdGljIGludCBjaWZzX3hhdHRyX2dldChjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxlciAqaGFu
ZGxlciwKIAkJcmMgPSAtRU9QTk9UU1VQUDsKIAogb3V0OgotCWtmcmVlKGZ1bGxfcGF0aCk7CisJ
ZnJlZV9kZW50cnlfcGF0aChwYWdlKTsKIAlmcmVlX3hpZCh4aWQpOwogCWNpZnNfcHV0X3RsaW5r
KHRsaW5rKTsKIAlyZXR1cm4gcmM7CkBAIC00MTUsNiArNDE5LDcgQEAgc3NpemVfdCBjaWZzX2xp
c3R4YXR0cihzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgY2hhciAqZGF0YSwgc2l6ZV90IGJ1Zl9z
aXplKQogCXN0cnVjdCB0Y29uX2xpbmsgKnRsaW5rOwogCXN0cnVjdCBjaWZzX3Rjb24gKnBUY29u
OwogCWNvbnN0IGNoYXIgKmZ1bGxfcGF0aDsKKwl2b2lkICpwYWdlOwogCiAJaWYgKGNpZnNfc2It
Pm1udF9jaWZzX2ZsYWdzICYgQ0lGU19NT1VOVF9OT19YQVRUUikKIAkJcmV0dXJuIC1FT1BOT1RT
VVBQOwpAQCAtNDI1LDEwICs0MzAsMTEgQEAgc3NpemVfdCBjaWZzX2xpc3R4YXR0cihzdHJ1Y3Qg
ZGVudHJ5ICpkaXJlbnRyeSwgY2hhciAqZGF0YSwgc2l6ZV90IGJ1Zl9zaXplKQogCXBUY29uID0g
dGxpbmtfdGNvbih0bGluayk7CiAKIAl4aWQgPSBnZXRfeGlkKCk7CisJcGFnZSA9IGFsbG9jX2Rl
bnRyeV9wYXRoKCk7CiAKLQlmdWxsX3BhdGggPSBidWlsZF9wYXRoX2Zyb21fZGVudHJ5KGRpcmVu
dHJ5KTsKLQlpZiAoZnVsbF9wYXRoID09IE5VTEwpIHsKLQkJcmMgPSAtRU5PTUVNOworCWZ1bGxf
cGF0aCA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnkoZGlyZW50cnksIHBhZ2UpOworCWlmIChJU19F
UlIoZnVsbF9wYXRoKSkgeworCQlyYyA9IFBUUl9FUlIoZnVsbF9wYXRoKTsKIAkJZ290byBsaXN0
X2VhX2V4aXQ7CiAJfQogCS8qIHJldHVybiBkb3MgYXR0cmlidXRlcyBhcyBwc2V1ZG8geGF0dHIg
Ki8KQEAgLTQ0Miw3ICs0NDgsNyBAQCBzc2l6ZV90IGNpZnNfbGlzdHhhdHRyKHN0cnVjdCBkZW50
cnkgKmRpcmVudHJ5LCBjaGFyICpkYXRhLCBzaXplX3QgYnVmX3NpemUpCiAJCXJjID0gcFRjb24t
PnNlcy0+c2VydmVyLT5vcHMtPnF1ZXJ5X2FsbF9FQXMoeGlkLCBwVGNvbiwKIAkJCQlmdWxsX3Bh
dGgsIE5VTEwsIGRhdGEsIGJ1Zl9zaXplLCBjaWZzX3NiKTsKIGxpc3RfZWFfZXhpdDoKLQlrZnJl
ZShmdWxsX3BhdGgpOworCWZyZWVfZGVudHJ5X3BhdGgocGFnZSk7CiAJZnJlZV94aWQoeGlkKTsK
IAljaWZzX3B1dF90bGluayh0bGluayk7CiAJcmV0dXJuIHJjOwotLSAKMi4yNy4wCgo=
--000000000000972a6d05c00a7b66--
