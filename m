Return-Path: <linux-cifs-owner@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id C98DE2D4B51
	for <lists+linux-cifs@lfdr.de>; Wed,  9 Dec 2020 21:12:35 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388142AbgLIULz (ORCPT <rfc822;lists+linux-cifs@lfdr.de>);
        Wed, 9 Dec 2020 15:11:55 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:32948 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727211AbgLIULz (ORCPT
        <rfc822;linux-cifs@vger.kernel.org>); Wed, 9 Dec 2020 15:11:55 -0500
Received: from mail-lj1-x232.google.com (mail-lj1-x232.google.com [IPv6:2a00:1450:4864:20::232])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 82932C0613CF
        for <linux-cifs@vger.kernel.org>; Wed,  9 Dec 2020 12:11:14 -0800 (PST)
Received: by mail-lj1-x232.google.com with SMTP id m13so3907515ljo.11
        for <linux-cifs@vger.kernel.org>; Wed, 09 Dec 2020 12:11:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:from:date:message-id:subject:to:cc;
        bh=IV8WgH+5N5VgVyykkRMOwAhhqW4whxVr9Pe8Hu2+H4U=;
        b=f0LDxIqF5ULUAc1nAJcxjWzJ0KrK5xvmJ3sJ4aDMp4ZcUugou58IxjoyUvxvcHep4d
         C46R8vPQ4+Q62MFMEFh0BHmFKzxX813o7JTV6GnkDksFifU4LarZCQSZwD789qzwjKWk
         VBfizZJbX618SiK2ZV/ycHdEcMPHrAl6crP7vL1Je6YMu77jlOpdgJe3qeqwJypSbcGt
         vrM6wtBznqFxtXMwxlm0yjiQOgI1JAEML/P73K3MvAwkZRLZLu1sjFkC7UOhdlPo4+Qn
         n0poqR6eyhqY/bcugHqWyzHnm1ab0UwDiIzpR95vOWegzDCDmyKZLRCfJDNwPx3IQavB
         I2Hg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to:cc;
        bh=IV8WgH+5N5VgVyykkRMOwAhhqW4whxVr9Pe8Hu2+H4U=;
        b=ac+FunFYukizWejBFX5+ePJWy7bsyqYVF/EOh3AM/j/PwTqd/hMk4NMh7hAESg759B
         vOv8O5V/jH9fvb3F3rPSsTeLxH4pBdA9AACBTIcnTqn4vyBKES8ys7qGRwipwOZhdVP9
         B5UdqtEHCQaR2bfreXdjx/PSA+BKCNDg7kSsQvPvWOd5Qn6RKnepJoJNZbtIqcNJxTlo
         Fitn+13LfGev+FNIg2vciMT7TfiyWWTQeysO8bfMX9G8V8cVjxshBnWcYccH7fCtxlpr
         W0IZ8EDFt5ArQZUU8Hc0+KZFkV4d18O7sOkIImoXbYc/SS1fjan5cQthVKMXEwxgj+Bh
         VzgQ==
X-Gm-Message-State: AOAM531eVHH2HEHDBmBX9P0FK4SkASS/SeOIK4G8t/19MNcq/Livphwk
        zwxB/ByGQcKREm3/uEbuGjQXwigzveNkK8ELlyObclVZJ15HZw==
X-Google-Smtp-Source: ABdhPJxjEtFYLB/0u/uDnlPMlkoSAnrtipbS2TAHLoRsEYrob6NL4L7a+x95iCznHE9anxjyAgeyYtzl8+RFO+lPzTs=
X-Received: by 2002:a2e:88c8:: with SMTP id a8mr1683590ljk.148.1607544672409;
 Wed, 09 Dec 2020 12:11:12 -0800 (PST)
MIME-Version: 1.0
From:   Steve French <smfrench@gmail.com>
Date:   Wed, 9 Dec 2020 14:11:01 -0600
Message-ID: <CAH2r5mufg02Y=xpDSzBZLLDPB3CBzW8yak2tUVWO7cTqU6=6Vg@mail.gmail.com>
Subject: Two cifsacl related patches to more accurately emulate mode bits
To:     CIFS <linux-cifs@vger.kernel.org>
Cc:     Shyam Prasad N <nspmangalore@gmail.com>
Content-Type: multipart/mixed; boundary="0000000000002977f805b60da945"
Precedence: bulk
List-ID: <linux-cifs.vger.kernel.org>
X-Mailing-List: linux-cifs@vger.kernel.org

--0000000000002977f805b60da945
Content-Type: text/plain; charset="UTF-8"

Any thoughts on Shyam's two cifsacl related improvements?

First does:
"With the "cifsacl" mount option, the mode bits set on the file/dir
is converted to corresponding ACEs in DACL. However, only the
ALLOWED ACEs were being set for "owner" and "group" SIDs. Since
owner is a subset of group, and group is a subset of
everyone/world SID, in order to properly emulate unix perm groups,
we need to add DENIED ACEs. If we don't do that, "owner" and "group"
SIDs could get more access rights than they should. Which is what
was happening. This fixes it.
We try to keep the "preferred" order of ACEs, i.e. DENYs followed
by ALLOWs. However, for a small subset of cases we cannot
maintain the preferred order. In that case, we'll end up with the
DENY ACE for group after the ALLOW for the owner.
If owner SID == group SID, use the more restrictive
among the two perm bits and convert them to ACEs.
Also, for reverse mapping, i.e. to convert ACL to unix perm bits,
for the "others" bits, we needed to add the masked bits of the
owner and group masks to others mask."

Second is:
"For the cifsacl mount option, we did not support sticky bits.
With this patch, we do support it, by setting the DELETE_CHILD perm
on the directory only for the owner user. When sticky bit is not
enabled, allow DELETE_CHILD perm for everyone."


-- 
Thanks,

Steve

--0000000000002977f805b60da945
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-Fix-unix-perm-bits-to-cifsacl-conversion-for-ot.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-Fix-unix-perm-bits-to-cifsacl-conversion-for-ot.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_kihujoyk0>
X-Attachment-Id: f_kihujoyk0

RnJvbSA0YmNmYjUxZjgyZjBjN2E3Y2E2NjU5NGYzYmU2NDQ5NDNhZTFjYWZhIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTaHlhbSBQcmFzYWQgTiA8c3ByYXNhZEBtaWNyb3NvZnQuY29t
PgpEYXRlOiBNb24sIDE3IEF1ZyAyMDIwIDAzOjIzOjEyIC0wNzAwClN1YmplY3Q6IFtQQVRDSCAx
LzJdIGNpZnM6IEZpeCB1bml4IHBlcm0gYml0cyB0byBjaWZzYWNsIGNvbnZlcnNpb24gZm9yCiAi
b3RoZXIiIGJpdHMuCgpXaXRoIHRoZSAiY2lmc2FjbCIgbW91bnQgb3B0aW9uLCB0aGUgbW9kZSBi
aXRzIHNldCBvbiB0aGUgZmlsZS9kaXIKaXMgY29udmVydGVkIHRvIGNvcnJlc3BvbmRpbmcgQUNF
cyBpbiBEQUNMLiBIb3dldmVyLCBvbmx5IHRoZQpBTExPV0VEIEFDRXMgd2VyZSBiZWluZyBzZXQg
Zm9yICJvd25lciIgYW5kICJncm91cCIgU0lEcy4gU2luY2UKb3duZXIgaXMgYSBzdWJzZXQgb2Yg
Z3JvdXAsIGFuZCBncm91cCBpcyBhIHN1YnNldCBvZgpldmVyeW9uZS93b3JsZCBTSUQsIGluIG9y
ZGVyIHRvIHByb3Blcmx5IGVtdWxhdGUgdW5peCBwZXJtIGdyb3VwcywKd2UgbmVlZCB0byBhZGQg
REVOSUVEIEFDRXMuIElmIHdlIGRvbid0IGRvIHRoYXQsICJvd25lciIgYW5kICJncm91cCIKU0lE
cyBjb3VsZCBnZXQgbW9yZSBhY2Nlc3MgcmlnaHRzIHRoYW4gdGhleSBzaG91bGQuIFdoaWNoIGlz
IHdoYXQKd2FzIGhhcHBlbmluZy4gVGhpcyBmaXhlcyBpdC4KCldlIHRyeSB0byBrZWVwIHRoZSAi
cHJlZmVycmVkIiBvcmRlciBvZiBBQ0VzLCBpLmUuIERFTllzIGZvbGxvd2VkCmJ5IEFMTE9Xcy4g
SG93ZXZlciwgZm9yIGEgc21hbGwgc3Vic2V0IG9mIGNhc2VzIHdlIGNhbm5vdAptYWludGFpbiB0
aGUgcHJlZmVycmVkIG9yZGVyLiBJbiB0aGF0IGNhc2UsIHdlJ2xsIGVuZCB1cCB3aXRoIHRoZQpE
RU5ZIEFDRSBmb3IgZ3JvdXAgYWZ0ZXIgdGhlIEFMTE9XIGZvciB0aGUgb3duZXIuCgpJZiBvd25l
ciBTSUQgPT0gZ3JvdXAgU0lELCB1c2UgdGhlIG1vcmUgcmVzdHJpY3RpdmUKYW1vbmcgdGhlIHR3
byBwZXJtIGJpdHMgYW5kIGNvbnZlcnQgdGhlbSB0byBBQ0VzLgoKQWxzbywgZm9yIHJldmVyc2Ug
bWFwcGluZywgaS5lLiB0byBjb252ZXJ0IEFDTCB0byB1bml4IHBlcm0gYml0cywKZm9yIHRoZSAi
b3RoZXJzIiBiaXRzLCB3ZSBuZWVkZWQgdG8gYWRkIHRoZSBtYXNrZWQgYml0cyBvZiB0aGUKb3du
ZXIgYW5kIGdyb3VwIG1hc2tzIHRvIG90aGVycyBtYXNrLgoKU2lnbmVkLW9mZi1ieTogU2h5YW0g
UHJhc2FkIE4gPHNwcmFzYWRAbWljcm9zb2Z0LmNvbT4KLS0tCiBmcy9jaWZzL2NpZnNhY2wuYyAg
IHwgMjExICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tCiBmcy9j
aWZzL2NpZnNwcm90by5oIHwgICA0ICstCiBmcy9jaWZzL2lub2RlLmMgICAgIHwgIDEyICsrLQog
MyBmaWxlcyBjaGFuZ2VkLCAxNTQgaW5zZXJ0aW9ucygrKSwgNzMgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZnMvY2lmcy9jaWZzYWNsLmMgYi9mcy9jaWZzL2NpZnNhY2wuYwppbmRleCBlZjQ3
ODRlNzJiMWQuLmM4NjA0ZDliOTk1OCAxMDA2NDQKLS0tIGEvZnMvY2lmcy9jaWZzYWNsLmMKKysr
IGIvZnMvY2lmcy9jaWZzYWNsLmMKQEAgLTU1NywzMCArNTU3LDM3IEBAIHN0YXRpYyB2b2lkIGNv
cHlfc2VjX2Rlc2MoY29uc3Qgc3RydWN0IGNpZnNfbnRzZCAqcG50c2QsCiAgICBiaXRzIHRvIHNl
dCBjYW4gYmU6IFNfSVJXWFUsIFNfSVJXWEcgb3IgU19JUldYTyBpZSAwMDcwMCBvciAwMDA3MCBv
ciAwMDAwNwogKi8KIHN0YXRpYyB2b2lkIGFjY2Vzc19mbGFnc190b19tb2RlKF9fbGUzMiBhY2Vf
ZmxhZ3MsIGludCB0eXBlLCB1bW9kZV90ICpwbW9kZSwKLQkJCQkgdW1vZGVfdCAqcGJpdHNfdG9f
c2V0KQorCQkJCSB1bW9kZV90ICpwZGVuaWVkLCB1bW9kZV90IG1hc2spCiB7CiAJX191MzIgZmxh
Z3MgPSBsZTMyX3RvX2NwdShhY2VfZmxhZ3MpOwotCS8qIHRoZSBvcmRlciBvZiBBQ0VzIGlzIGlt
cG9ydGFudC4gIFRoZSBjYW5vbmljYWwgb3JkZXIgaXMgdG8gYmVnaW4gd2l0aAotCSAgIERFTlkg
ZW50cmllcyBmb2xsb3dlZCBieSBBTExPVywgb3RoZXJ3aXNlIGFuIGFsbG93IGVudHJ5IGNvdWxk
IGJlCi0JICAgZW5jb3VudGVyZWQgZmlyc3QsIG1ha2luZyB0aGUgc3Vic2VxdWVudCBkZW55IGVu
dHJ5IGxpa2UgImRlYWQgY29kZSIKLQkgICB3aGljaCB3b3VsZCBiZSBzdXBlcmZsb3VzIHNpbmNl
IFdpbmRvd3Mgc3RvcHMgd2hlbiBhIG1hdGNoIGlzIG1hZGUKLQkgICBmb3IgdGhlIG9wZXJhdGlv
biB5b3UgYXJlIHRyeWluZyB0byBwZXJmb3JtIGZvciB5b3VyIHVzZXIgKi8KLQotCS8qIEZvciBk
ZW55IEFDRXMgd2UgY2hhbmdlIHRoZSBtYXNrIHNvIHRoYXQgc3Vic2VxdWVudCBhbGxvdyBhY2Nl
c3MKLQkgICBjb250cm9sIGVudHJpZXMgZG8gbm90IHR1cm4gb24gdGhlIGJpdHMgd2UgYXJlIGRl
bnlpbmcgKi8KKwkvKgorCSAqIERvIG5vdCBhc3N1bWUgInByZWZlcnJlZCIgb3IgImNhbm9uaWNh
bCIgb3JkZXIuCisJICogVGhlIGZpcnN0IERFTlkgb3IgQUxMT1cgQUNFIHdoaWNoIG1hdGNoZXMg
cGVyZmVjdGx5IGlzCisJICogdGhlIHBlcm1pc3Npb24gdG8gYmUgdXNlZC4gT25jZSBhbGxvd2Vk
IG9yIGRlbmllZCwgc2FtZQorCSAqIHBlcm1pc3Npb24gaW4gbGF0ZXIgQUNFcyBkbyBub3QgbWF0
dGVyLgorCSAqLworCisJLyogSWYgbm90IGFscmVhZHkgYWxsb3dlZCwgZGVueSB0aGVzZSBiaXRz
ICovCiAJaWYgKHR5cGUgPT0gQUNDRVNTX0RFTklFRCkgewotCQlpZiAoZmxhZ3MgJiBHRU5FUklD
X0FMTCkKLQkJCSpwYml0c190b19zZXQgJj0gflNfSVJXWFVHTzsKLQotCQlpZiAoKGZsYWdzICYg
R0VORVJJQ19XUklURSkgfHwKLQkJCSgoZmxhZ3MgJiBGSUxFX1dSSVRFX1JJR0hUUykgPT0gRklM
RV9XUklURV9SSUdIVFMpKQotCQkJKnBiaXRzX3RvX3NldCAmPSB+U19JV1VHTzsKLQkJaWYgKChm
bGFncyAmIEdFTkVSSUNfUkVBRCkgfHwKLQkJCSgoZmxhZ3MgJiBGSUxFX1JFQURfUklHSFRTKSA9
PSBGSUxFX1JFQURfUklHSFRTKSkKLQkJCSpwYml0c190b19zZXQgJj0gflNfSVJVR087Ci0JCWlm
ICgoZmxhZ3MgJiBHRU5FUklDX0VYRUNVVEUpIHx8Ci0JCQkoKGZsYWdzICYgRklMRV9FWEVDX1JJ
R0hUUykgPT0gRklMRV9FWEVDX1JJR0hUUykpCi0JCQkqcGJpdHNfdG9fc2V0ICY9IH5TX0lYVUdP
OworCQlpZiAoZmxhZ3MgJiBHRU5FUklDX0FMTCAmJgorCQkJCSEoKnBtb2RlICYgbWFzayAmIDA3
NzcpKQorCQkJKnBkZW5pZWQgfD0gbWFzayAmIDA3Nzc7CisKKwkJaWYgKCgoZmxhZ3MgJiBHRU5F
UklDX1dSSVRFKSB8fAorCQkJCSgoZmxhZ3MgJiBGSUxFX1dSSVRFX1JJR0hUUykgPT0gRklMRV9X
UklURV9SSUdIVFMpKSAmJgorCQkJCSEoKnBtb2RlICYgbWFzayAmIDAyMjIpKQorCQkJKnBkZW5p
ZWQgfD0gbWFzayAmIDAyMjI7CisKKwkJaWYgKCgoZmxhZ3MgJiBHRU5FUklDX1JFQUQpIHx8CisJ
CQkJKChmbGFncyAmIEZJTEVfUkVBRF9SSUdIVFMpID09IEZJTEVfUkVBRF9SSUdIVFMpKSAmJgor
CQkJCSEoKnBtb2RlICYgbWFzayAmIDA0NDQpKQorCQkJKnBkZW5pZWQgfD0gbWFzayAmIDA0NDQ7
CisKKwkJaWYgKCgoZmxhZ3MgJiBHRU5FUklDX0VYRUNVVEUpIHx8CisJCQkJKChmbGFncyAmIEZJ
TEVfRVhFQ19SSUdIVFMpID09IEZJTEVfRVhFQ19SSUdIVFMpKSAmJgorCQkJCSEoKnBtb2RlICYg
bWFzayAmIDAxMTEpKQorCQkJKnBkZW5pZWQgfD0gbWFzayAmIDAxMTE7CisKIAkJcmV0dXJuOwog
CX0gZWxzZSBpZiAodHlwZSAhPSBBQ0NFU1NfQUxMT1dFRCkgewogCQljaWZzX2RiZyhWRlMsICJ1
bmtub3duIGFjY2VzcyBjb250cm9sIHR5cGUgJWRcbiIsIHR5cGUpOwpAQCAtNTg4LDIwICs1OTUs
MjcgQEAgc3RhdGljIHZvaWQgYWNjZXNzX2ZsYWdzX3RvX21vZGUoX19sZTMyIGFjZV9mbGFncywg
aW50IHR5cGUsIHVtb2RlX3QgKnBtb2RlLAogCX0KIAkvKiBlbHNlIEFDQ0VTU19BTExPV0VEIHR5
cGUgKi8KIAotCWlmIChmbGFncyAmIEdFTkVSSUNfQUxMKSB7Ci0JCSpwbW9kZSB8PSAoU19JUldY
VUdPICYgKCpwYml0c190b19zZXQpKTsKKwlpZiAoKGZsYWdzICYgR0VORVJJQ19BTEwpICYmCisJ
CQkhKCpwZGVuaWVkICYgbWFzayAmIDA3NzcpKSB7CisJCSpwbW9kZSB8PSBtYXNrICYgMDc3NzsK
IAkJY2lmc19kYmcoTk9JU1ksICJhbGwgcGVybXNcbiIpOwogCQlyZXR1cm47CiAJfQotCWlmICgo
ZmxhZ3MgJiBHRU5FUklDX1dSSVRFKSB8fAotCQkJKChmbGFncyAmIEZJTEVfV1JJVEVfUklHSFRT
KSA9PSBGSUxFX1dSSVRFX1JJR0hUUykpCi0JCSpwbW9kZSB8PSAoU19JV1VHTyAmICgqcGJpdHNf
dG9fc2V0KSk7Ci0JaWYgKChmbGFncyAmIEdFTkVSSUNfUkVBRCkgfHwKLQkJCSgoZmxhZ3MgJiBG
SUxFX1JFQURfUklHSFRTKSA9PSBGSUxFX1JFQURfUklHSFRTKSkKLQkJKnBtb2RlIHw9IChTX0lS
VUdPICYgKCpwYml0c190b19zZXQpKTsKLQlpZiAoKGZsYWdzICYgR0VORVJJQ19FWEVDVVRFKSB8
fAotCQkJKChmbGFncyAmIEZJTEVfRVhFQ19SSUdIVFMpID09IEZJTEVfRVhFQ19SSUdIVFMpKQot
CQkqcG1vZGUgfD0gKFNfSVhVR08gJiAoKnBiaXRzX3RvX3NldCkpOworCisJaWYgKCgoZmxhZ3Mg
JiBHRU5FUklDX1dSSVRFKSB8fAorCQkJKChmbGFncyAmIEZJTEVfV1JJVEVfUklHSFRTKSA9PSBG
SUxFX1dSSVRFX1JJR0hUUykpICYmCisJCQkhKCpwZGVuaWVkICYgbWFzayAmIDAyMjIpKQorCQkq
cG1vZGUgfD0gbWFzayAmIDAyMjI7CisKKwlpZiAoKChmbGFncyAmIEdFTkVSSUNfUkVBRCkgfHwK
KwkJCSgoZmxhZ3MgJiBGSUxFX1JFQURfUklHSFRTKSA9PSBGSUxFX1JFQURfUklHSFRTKSkgJiYK
KwkJCSEoKnBkZW5pZWQgJiBtYXNrICYgMDQ0NCkpCisJCSpwbW9kZSB8PSBtYXNrICYgMDQ0NDsK
KworCWlmICgoKGZsYWdzICYgR0VORVJJQ19FWEVDVVRFKSB8fAorCQkJKChmbGFncyAmIEZJTEVf
RVhFQ19SSUdIVFMpID09IEZJTEVfRVhFQ19SSUdIVFMpKSAmJgorCQkJISgqcGRlbmllZCAmIG1h
c2sgJiAwMTExKSkKKwkJKnBtb2RlIHw9IG1hc2sgJiAwMTExOwogCiAJY2lmc19kYmcoTk9JU1ks
ICJhY2Nlc3MgZmxhZ3MgMHgleCBtb2RlIG5vdyAlMDRvXG4iLCBmbGFncywgKnBtb2RlKTsKIAly
ZXR1cm47CkBAIC02MzgsMTcgKzY1MiwxOSBAQCBzdGF0aWMgdm9pZCBtb2RlX3RvX2FjY2Vzc19m
bGFncyh1bW9kZV90IG1vZGUsIHVtb2RlX3QgYml0c190b191c2UsCiB9CiAKIHN0YXRpYyBfX3Ux
NiBmaWxsX2FjZV9mb3Jfc2lkKHN0cnVjdCBjaWZzX2FjZSAqcG50YWNlLAotCQkJY29uc3Qgc3Ry
dWN0IGNpZnNfc2lkICpwc2lkLCBfX3U2NCBubW9kZSwgdW1vZGVfdCBiaXRzKQorCQkJY29uc3Qg
c3RydWN0IGNpZnNfc2lkICpwc2lkLCBfX3U2NCBubW9kZSwgdW1vZGVfdCBiaXRzLCBfX3U4IGFj
Y2Vzc190eXBlKQogewogCWludCBpOwogCV9fdTE2IHNpemUgPSAwOwogCV9fdTMyIGFjY2Vzc19y
ZXEgPSAwOwogCi0JcG50YWNlLT50eXBlID0gQUNDRVNTX0FMTE9XRUQ7CisJcG50YWNlLT50eXBl
ID0gYWNjZXNzX3R5cGU7CiAJcG50YWNlLT5mbGFncyA9IDB4MDsKIAltb2RlX3RvX2FjY2Vzc19m
bGFncyhubW9kZSwgYml0cywgJmFjY2Vzc19yZXEpOwotCWlmICghYWNjZXNzX3JlcSkKKwlpZiAo
YWNjZXNzX3R5cGUgPT0gQUNDRVNTX0FMTE9XRUQgJiYgIWFjY2Vzc19yZXEpCiAJCWFjY2Vzc19y
ZXEgPSBTRVRfTUlOSU1VTV9SSUdIVFM7CisJZWxzZSBpZiAoYWNjZXNzX3R5cGUgPT0gQUNDRVNT
X0RFTklFRCkKKwkJYWNjZXNzX3JlcSAmPSB+U0VUX01JTklNVU1fUklHSFRTOwogCXBudGFjZS0+
YWNjZXNzX3JlcSA9IGNwdV90b19sZTMyKGFjY2Vzc19yZXEpOwogCiAJcG50YWNlLT5zaWQucmV2
aXNpb24gPSBwc2lkLT5yZXZpc2lvbjsKQEAgLTcwMSw2ICs3MTcsMTAgQEAgc3RhdGljIHZvaWQg
ZHVtcF9hY2Uoc3RydWN0IGNpZnNfYWNlICpwYWNlLCBjaGFyICplbmRfb2ZfYWNsKQogfQogI2Vu
ZGlmCiAKKyNkZWZpbmUgQUNMX09XTkVSX01BU0sgMDcwMAorI2RlZmluZSBBQ0xfR1JPVVBfTUFT
SyAwNzcwCisjZGVmaW5lIEFDTF9FVkVSWU9ORV9NQVNLIDA3NzcKKwogc3RhdGljIHZvaWQgcGFy
c2VfZGFjbChzdHJ1Y3QgY2lmc19hY2wgKnBkYWNsLCBjaGFyICplbmRfb2ZfYWNsLAogCQkgICAg
ICAgc3RydWN0IGNpZnNfc2lkICpwb3duZXJzaWQsIHN0cnVjdCBjaWZzX3NpZCAqcGdycHNpZCwK
IAkJICAgICAgIHN0cnVjdCBjaWZzX2ZhdHRyICpmYXR0ciwgYm9vbCBtb2RlX2Zyb21fc3BlY2lh
bF9zaWQpCkBAIC03MTYsNyArNzM2LDcgQEAgc3RhdGljIHZvaWQgcGFyc2VfZGFjbChzdHJ1Y3Qg
Y2lmc19hY2wgKnBkYWNsLCBjaGFyICplbmRfb2ZfYWNsLAogCWlmICghcGRhY2wpIHsKIAkJLyog
bm8gREFDTCBpbiB0aGUgc2VjdXJpdHkgZGVzY3JpcHRvciwgc2V0CiAJCSAgIGFsbCB0aGUgcGVy
bWlzc2lvbnMgZm9yIHVzZXIvZ3JvdXAvb3RoZXIgKi8KLQkJZmF0dHItPmNmX21vZGUgfD0gU19J
UldYVUdPOworCQlmYXR0ci0+Y2ZfbW9kZSB8PSAwNzc3OwogCQlyZXR1cm47CiAJfQogCkBAIC03
MzMsMTYgKzc1MywxNCBAQCBzdGF0aWMgdm9pZCBwYXJzZV9kYWNsKHN0cnVjdCBjaWZzX2FjbCAq
cGRhY2wsIGNoYXIgKmVuZF9vZl9hY2wsCiAJLyogcmVzZXQgcnd4IHBlcm1pc3Npb25zIGZvciB1
c2VyL2dyb3VwL290aGVyLgogCSAgIEFsc28sIGlmIG51bV9hY2VzIGlzIDAgaS5lLiBEQUNMIGhh
cyBubyBBQ0VzLAogCSAgIHVzZXIvZ3JvdXAvb3RoZXIgaGF2ZSBubyBwZXJtaXNzaW9ucyAqLwot
CWZhdHRyLT5jZl9tb2RlICY9IH4oU19JUldYVUdPKTsKKwlmYXR0ci0+Y2ZfbW9kZSAmPSB+KDA3
NzcpOwogCiAJYWNsX2Jhc2UgPSAoY2hhciAqKXBkYWNsOwogCWFjbF9zaXplID0gc2l6ZW9mKHN0
cnVjdCBjaWZzX2FjbCk7CiAKIAludW1fYWNlcyA9IGxlMzJfdG9fY3B1KHBkYWNsLT5udW1fYWNl
cyk7CiAJaWYgKG51bV9hY2VzID4gMCkgewotCQl1bW9kZV90IHVzZXJfbWFzayA9IFNfSVJXWFU7
Ci0JCXVtb2RlX3QgZ3JvdXBfbWFzayA9IFNfSVJXWEc7Ci0JCXVtb2RlX3Qgb3RoZXJfbWFzayA9
IFNfSVJXWFUgfCBTX0lSV1hHIHwgU19JUldYTzsKKwkJdW1vZGVfdCBkZW5pZWRfbW9kZSA9IDA7
CiAKIAkJaWYgKG51bV9hY2VzID4gVUxPTkdfTUFYIC8gc2l6ZW9mKHN0cnVjdCBjaWZzX2FjZSAq
KSkKIAkJCXJldHVybjsKQEAgLTc2OCwyNiArNzg2LDI4IEBAIHN0YXRpYyB2b2lkIHBhcnNlX2Rh
Y2woc3RydWN0IGNpZnNfYWNsICpwZGFjbCwgY2hhciAqZW5kX29mX2FjbCwKIAkJCQlmYXR0ci0+
Y2ZfbW9kZSB8PQogCQkJCQlsZTMyX3RvX2NwdShwcGFjZVtpXS0+c2lkLnN1Yl9hdXRoWzJdKTsK
IAkJCQlicmVhazsKLQkJCX0gZWxzZSBpZiAoY29tcGFyZV9zaWRzKCYocHBhY2VbaV0tPnNpZCks
IHBvd25lcnNpZCkgPT0gMCkKLQkJCQlhY2Nlc3NfZmxhZ3NfdG9fbW9kZShwcGFjZVtpXS0+YWNj
ZXNzX3JlcSwKLQkJCQkJCSAgICAgcHBhY2VbaV0tPnR5cGUsCi0JCQkJCQkgICAgICZmYXR0ci0+
Y2ZfbW9kZSwKLQkJCQkJCSAgICAgJnVzZXJfbWFzayk7Ci0JCQllbHNlIGlmIChjb21wYXJlX3Np
ZHMoJihwcGFjZVtpXS0+c2lkKSwgcGdycHNpZCkgPT0gMCkKLQkJCQlhY2Nlc3NfZmxhZ3NfdG9f
bW9kZShwcGFjZVtpXS0+YWNjZXNzX3JlcSwKLQkJCQkJCSAgICAgcHBhY2VbaV0tPnR5cGUsCi0J
CQkJCQkgICAgICZmYXR0ci0+Y2ZfbW9kZSwKLQkJCQkJCSAgICAgJmdyb3VwX21hc2spOwotCQkJ
ZWxzZSBpZiAoY29tcGFyZV9zaWRzKCYocHBhY2VbaV0tPnNpZCksICZzaWRfZXZlcnlvbmUpID09
IDApCi0JCQkJYWNjZXNzX2ZsYWdzX3RvX21vZGUocHBhY2VbaV0tPmFjY2Vzc19yZXEsCi0JCQkJ
CQkgICAgIHBwYWNlW2ldLT50eXBlLAotCQkJCQkJICAgICAmZmF0dHItPmNmX21vZGUsCi0JCQkJ
CQkgICAgICZvdGhlcl9tYXNrKTsKLQkJCWVsc2UgaWYgKGNvbXBhcmVfc2lkcygmKHBwYWNlW2ld
LT5zaWQpLCAmc2lkX2F1dGh1c2VycykgPT0gMCkKLQkJCQlhY2Nlc3NfZmxhZ3NfdG9fbW9kZShw
cGFjZVtpXS0+YWNjZXNzX3JlcSwKLQkJCQkJCSAgICAgcHBhY2VbaV0tPnR5cGUsCi0JCQkJCQkg
ICAgICZmYXR0ci0+Y2ZfbW9kZSwKLQkJCQkJCSAgICAgJm90aGVyX21hc2spOworCQkJfSBlbHNl
IHsKKwkJCQlpZiAoY29tcGFyZV9zaWRzKCYocHBhY2VbaV0tPnNpZCksIHBvd25lcnNpZCkgPT0g
MCkgeworCQkJCQlhY2Nlc3NfZmxhZ3NfdG9fbW9kZShwcGFjZVtpXS0+YWNjZXNzX3JlcSwKKwkJ
CQkJCQlwcGFjZVtpXS0+dHlwZSwKKwkJCQkJCQkmZmF0dHItPmNmX21vZGUsCisJCQkJCQkJJmRl
bmllZF9tb2RlLAorCQkJCQkJCUFDTF9PV05FUl9NQVNLKTsKKwkJCQl9IGVsc2UgaWYgKGNvbXBh
cmVfc2lkcygmKHBwYWNlW2ldLT5zaWQpLCBwZ3Jwc2lkKSA9PSAwKSB7CisJCQkJCWFjY2Vzc19m
bGFnc190b19tb2RlKHBwYWNlW2ldLT5hY2Nlc3NfcmVxLAorCQkJCQkJCXBwYWNlW2ldLT50eXBl
LAorCQkJCQkJCSZmYXR0ci0+Y2ZfbW9kZSwKKwkJCQkJCQkmZGVuaWVkX21vZGUsCisJCQkJCQkJ
QUNMX0dST1VQX01BU0spOworCQkJCX0gZWxzZSBpZiAoKGNvbXBhcmVfc2lkcygmKHBwYWNlW2ld
LT5zaWQpLCAmc2lkX2V2ZXJ5b25lKSA9PSAwKSB8fAorCQkJCQkJKGNvbXBhcmVfc2lkcygmKHBw
YWNlW2ldLT5zaWQpLCAmc2lkX2F1dGh1c2VycykgPT0gMCkpIHsKKwkJCQkJYWNjZXNzX2ZsYWdz
X3RvX21vZGUocHBhY2VbaV0tPmFjY2Vzc19yZXEsCisJCQkJCQkJcHBhY2VbaV0tPnR5cGUsCisJ
CQkJCQkJJmZhdHRyLT5jZl9tb2RlLAorCQkJCQkJCSZkZW5pZWRfbW9kZSwKKwkJCQkJCQlBQ0xf
RVZFUllPTkVfTUFTSyk7CisJCQkJfQorCQkJfQogCiAKIC8qCQkJbWVtY3B5KCh2b2lkICopKCYo
Y2lmc2NyZWQtPmFjZXNbaV0pKSwKQEAgLTg3MywxMSArODkzLDE3IEBAIHVuc2lnbmVkIGludCBz
ZXR1cF9zcGVjaWFsX3VzZXJfb3duZXJfQUNFKHN0cnVjdCBjaWZzX2FjZSAqcG50YWNlKQogfQog
CiBzdGF0aWMgaW50IHNldF9jaG1vZF9kYWNsKHN0cnVjdCBjaWZzX2FjbCAqcG5kYWNsLCBzdHJ1
Y3QgY2lmc19zaWQgKnBvd25lcnNpZCwKLQkJCXN0cnVjdCBjaWZzX3NpZCAqcGdycHNpZCwgX191
NjQgbm1vZGUsIGJvb2wgbW9kZWZyb21zaWQpCisJCQlzdHJ1Y3QgY2lmc19zaWQgKnBncnBzaWQs
IF9fdTY0ICpwbm1vZGUsIGJvb2wgbW9kZWZyb21zaWQpCiB7CiAJdTE2IHNpemUgPSAwOwogCXUz
MiBudW1fYWNlcyA9IDA7CiAJc3RydWN0IGNpZnNfYWNsICpwbm5kYWNsOworCV9fdTY0IG5tb2Rl
OworCV9fdTY0IHVzZXJfbW9kZTsKKwlfX3U2NCBncm91cF9tb2RlOworCV9fdTY0IG90aGVyX21v
ZGU7CisJX191NjQgZGVueV91c2VyX21vZGUgPSAwOworCV9fdTY0IGRlbnlfZ3JvdXBfbW9kZSA9
IDA7CiAKIAlwbm5kYWNsID0gKHN0cnVjdCBjaWZzX2FjbCAqKSgoY2hhciAqKXBuZGFjbCArIHNp
emVvZihzdHJ1Y3QgY2lmc19hY2wpKTsKIApAQCAtODg3LDE4ICs5MTMsNjUgQEAgc3RhdGljIGlu
dCBzZXRfY2htb2RfZGFjbChzdHJ1Y3QgY2lmc19hY2wgKnBuZGFjbCwgc3RydWN0IGNpZnNfc2lk
ICpwb3duZXJzaWQsCiAKIAkJc2l6ZSArPSBzZXR1cF9zcGVjaWFsX21vZGVfQUNFKHBudGFjZSwg
bm1vZGUpOwogCQludW1fYWNlcysrOworCQlnb3RvIHNldF9zaXplOwogCX0KIAorCS8qCisJICog
V2UnbGwgdHJ5IHRvIGtlZXAgdGhlIG1vZGUgYXMgcmVxdWVzdGVkIGJ5IHRoZSB1c2VyLgorCSAq
IEJ1dCBpbiBjYXNlcyB3aGVyZSB3ZSBjYW5ub3QgbWVhbmluZ2Z1bGx5IGNvbnZlcnQgdGhhdAor
CSAqIGludG8gQUNMLCByZXR1cm4gYmFjayB0aGUgdXBkYXRlZCBtb2RlLCBzbyB0aGF0IGl0IGlz
CisJICogdXBkYXRlZCBpbiB0aGUgaW5vZGUuCisJICovCisJbm1vZGUgPSAqcG5tb2RlOworCisJ
aWYgKCFtZW1jbXAocG93bmVyc2lkLCBwZ3Jwc2lkLCBzaXplb2Yoc3RydWN0IGNpZnNfc2lkKSkp
IHsKKwkJLyoKKwkJICogQ2FzZSB3aGVuIG93bmVyIGFuZCBncm91cCBTSURzIGFyZSB0aGUgc2Ft
ZS4KKwkJICogU2V0IHRoZSBtb3JlIHJlc3RyaWN0aXZlIG9mIHRoZSB0d28gbW9kZXMuCisJCSAq
LworCQl1c2VyX21vZGUgPSBubW9kZSAmIChubW9kZSA8PCAzKSAmIDA3MDA7CisJCWdyb3VwX21v
ZGUgPSBubW9kZSAmIChubW9kZSA+PiAzKSAmIDAwNzA7CisJfSBlbHNlIHsKKwkJdXNlcl9tb2Rl
ID0gbm1vZGUgJiAwNzAwOworCQlncm91cF9tb2RlID0gbm1vZGUgJiAwMDcwOworCX0KKworCW90
aGVyX21vZGUgPSBubW9kZSAmIDAwMDc7CisKKwkvKiBXZSBuZWVkIERFTlkgQUNFIHdoZW4gdGhl
IHBlcm0gaXMgbW9yZSByZXN0cmljdGl2ZSB0aGFuIHRoZSBuZXh0IHNldHMuICovCisJZGVueV91
c2VyX21vZGUgPSB+KHVzZXJfbW9kZSkgJiAoKGdyb3VwX21vZGUgPDwgMykgfCAob3RoZXJfbW9k
ZSA8PCA2KSkgJiAwNzAwOworCWRlbnlfZ3JvdXBfbW9kZSA9IH4oZ3JvdXBfbW9kZSkgJiAob3Ro
ZXJfbW9kZSA8PCAzKSAmIDAwNzA7CisKKwkqcG5tb2RlID0gdXNlcl9tb2RlIHwgZ3JvdXBfbW9k
ZSB8IG90aGVyX21vZGUgfCAobm1vZGUgJiB+MDc3Nyk7CisKKwlpZiAoZGVueV91c2VyX21vZGUp
IHsKKwkJc2l6ZSArPSBmaWxsX2FjZV9mb3Jfc2lkKChzdHJ1Y3QgY2lmc19hY2UgKikoKGNoYXIg
Kilwbm5kYWNsICsgc2l6ZSksCisJCQkJcG93bmVyc2lkLCBkZW55X3VzZXJfbW9kZSwgMDcwMCwg
QUNDRVNTX0RFTklFRCk7CisJCW51bV9hY2VzKys7CisJfQorCS8qIEdyb3VwIERFTlkgQUNFIGRv
ZXMgbm90IGNvbmZsaWN0IHdpdGggb3duZXIgQUxMT1cgQUNFLiBLZWVwIGluIHByZWZlcnJlZCBv
cmRlciovCisJaWYgKGRlbnlfZ3JvdXBfbW9kZSAmJiAhKGRlbnlfZ3JvdXBfbW9kZSAmICh1c2Vy
X21vZGUgPj4gMykpKSB7CisJCXNpemUgKz0gZmlsbF9hY2VfZm9yX3NpZCgoc3RydWN0IGNpZnNf
YWNlICopKChjaGFyICopcG5uZGFjbCArIHNpemUpLAorCQkJCXBncnBzaWQsIGRlbnlfZ3JvdXBf
bW9kZSwgMDA3MCwgQUNDRVNTX0RFTklFRCk7CisJCW51bV9hY2VzKys7CisJfQogCXNpemUgKz0g
ZmlsbF9hY2VfZm9yX3NpZCgoc3RydWN0IGNpZnNfYWNlICopICgoY2hhciAqKXBubmRhY2wgKyBz
aXplKSwKLQkJCQkJcG93bmVyc2lkLCBubW9kZSwgU19JUldYVSk7CisJCQlwb3duZXJzaWQsIHVz
ZXJfbW9kZSwgMDcwMCwgQUNDRVNTX0FMTE9XRUQpOwogCW51bV9hY2VzKys7CisJLyogR3JvdXAg
REVOWSBBQ0UgY29uZmxpY3RzIHdpdGggb3duZXIgQUxMT1cgQUNFLiBTbyBrZWVwIGl0IGFmdGVy
LiAqLworCWlmIChkZW55X2dyb3VwX21vZGUgJiYgKGRlbnlfZ3JvdXBfbW9kZSAmICh1c2VyX21v
ZGUgPj4gMykpKSB7CisJCXNpemUgKz0gZmlsbF9hY2VfZm9yX3NpZCgoc3RydWN0IGNpZnNfYWNl
ICopKChjaGFyICopcG5uZGFjbCArIHNpemUpLAorCQkJCXBncnBzaWQsIGRlbnlfZ3JvdXBfbW9k
ZSwgMDA3MCwgQUNDRVNTX0RFTklFRCk7CisJCW51bV9hY2VzKys7CisJfQogCXNpemUgKz0gZmls
bF9hY2VfZm9yX3NpZCgoc3RydWN0IGNpZnNfYWNlICopKChjaGFyICopcG5uZGFjbCArIHNpemUp
LAotCQkJCQlwZ3Jwc2lkLCBubW9kZSwgU19JUldYRyk7CisJCQlwZ3Jwc2lkLCBncm91cF9tb2Rl
LCAwMDcwLCBBQ0NFU1NfQUxMT1dFRCk7CiAJbnVtX2FjZXMrKzsKIAlzaXplICs9IGZpbGxfYWNl
X2Zvcl9zaWQoKHN0cnVjdCBjaWZzX2FjZSAqKSgoY2hhciAqKXBubmRhY2wgKyBzaXplKSwKLQkJ
CQkJICZzaWRfZXZlcnlvbmUsIG5tb2RlLCBTX0lSV1hPKTsKKwkJCSZzaWRfZXZlcnlvbmUsIG90
aGVyX21vZGUsIDAwMDcsIEFDQ0VTU19BTExPV0VEKTsKIAludW1fYWNlcysrOwogCitzZXRfc2l6
ZToKIAlwbmRhY2wtPm51bV9hY2VzID0gY3B1X3RvX2xlMzIobnVtX2FjZXMpOwogCXBuZGFjbC0+
c2l6ZSA9IGNwdV90b19sZTE2KHNpemUgKyBzaXplb2Yoc3RydWN0IGNpZnNfYWNsKSk7CiAKQEAg
LTEwMDAsNyArMTA3Myw3IEBAIHN0YXRpYyBpbnQgcGFyc2Vfc2VjX2Rlc2Moc3RydWN0IGNpZnNf
c2JfaW5mbyAqY2lmc19zYiwKIAogLyogQ29udmVydCBwZXJtaXNzaW9uIGJpdHMgZnJvbSBtb2Rl
IHRvIGVxdWl2YWxlbnQgQ0lGUyBBQ0wgKi8KIHN0YXRpYyBpbnQgYnVpbGRfc2VjX2Rlc2Moc3Ry
dWN0IGNpZnNfbnRzZCAqcG50c2QsIHN0cnVjdCBjaWZzX250c2QgKnBubnRzZCwKLQlfX3UzMiBz
ZWNkZXNjbGVuLCBfX3U2NCBubW9kZSwga3VpZF90IHVpZCwga2dpZF90IGdpZCwKKwlfX3UzMiBz
ZWNkZXNjbGVuLCBfX3U2NCAqcG5tb2RlLCBrdWlkX3QgdWlkLCBrZ2lkX3QgZ2lkLAogCWJvb2wg
bW9kZV9mcm9tX3NpZCwgYm9vbCBpZF9mcm9tX3NpZCwgaW50ICphY2xmbGFnKQogewogCWludCBy
YyA9IDA7CkBAIC0xMDEyLDcgKzEwODUsNyBAQCBzdGF0aWMgaW50IGJ1aWxkX3NlY19kZXNjKHN0
cnVjdCBjaWZzX250c2QgKnBudHNkLCBzdHJ1Y3QgY2lmc19udHNkICpwbm50c2QsCiAJc3RydWN0
IGNpZnNfYWNsICpkYWNsX3B0ciA9IE5VTEw7ICAvKiBubyBuZWVkIGZvciBTQUNMIHB0ciAqLwog
CXN0cnVjdCBjaWZzX2FjbCAqbmRhY2xfcHRyID0gTlVMTDsgLyogbm8gbmVlZCBmb3IgU0FDTCBw
dHIgKi8KIAotCWlmIChubW9kZSAhPSBOT19DSEFOR0VfNjQpIHsgLyogY2htb2QgKi8KKwlpZiAo
cG5tb2RlICYmICpwbm1vZGUgIT0gTk9fQ0hBTkdFXzY0KSB7IC8qIGNobW9kICovCiAJCW93bmVy
X3NpZF9wdHIgPSAoc3RydWN0IGNpZnNfc2lkICopKChjaGFyICopcG50c2QgKwogCQkJCWxlMzJf
dG9fY3B1KHBudHNkLT5vc2lkb2Zmc2V0KSk7CiAJCWdyb3VwX3NpZF9wdHIgPSAoc3RydWN0IGNp
ZnNfc2lkICopKChjaGFyICopcG50c2QgKwpAQCAtMTAyNiw3ICsxMDk5LDcgQEAgc3RhdGljIGlu
dCBidWlsZF9zZWNfZGVzYyhzdHJ1Y3QgY2lmc19udHNkICpwbnRzZCwgc3RydWN0IGNpZnNfbnRz
ZCAqcG5udHNkLAogCQluZGFjbF9wdHItPm51bV9hY2VzID0gMDsKIAogCQlyYyA9IHNldF9jaG1v
ZF9kYWNsKG5kYWNsX3B0ciwgb3duZXJfc2lkX3B0ciwgZ3JvdXBfc2lkX3B0ciwKLQkJCQkgICAg
bm1vZGUsIG1vZGVfZnJvbV9zaWQpOworCQkJCSAgICBwbm1vZGUsIG1vZGVfZnJvbV9zaWQpOwog
CQlzaWRzb2Zmc2V0ID0gbmRhY2xvZmZzZXQgKyBsZTE2X3RvX2NwdShuZGFjbF9wdHItPnNpemUp
OwogCQkvKiBjb3B5IHNlYyBkZXNjIGNvbnRyb2wgcG9ydGlvbiAmIG93bmVyIGFuZCBncm91cCBz
aWRzICovCiAJCWNvcHlfc2VjX2Rlc2MocG50c2QsIHBubnRzZCwgc2lkc29mZnNldCk7CkBAIC0x
MjgyLDcgKzEzNTUsNyBAQCBjaWZzX2FjbF90b19mYXR0cihzdHJ1Y3QgY2lmc19zYl9pbmZvICpj
aWZzX3NiLCBzdHJ1Y3QgY2lmc19mYXR0ciAqZmF0dHIsCiAKIC8qIENvbnZlcnQgbW9kZSBiaXRz
IHRvIGFuIEFDTCBzbyB3ZSBjYW4gdXBkYXRlIHRoZSBBQ0wgb24gdGhlIHNlcnZlciAqLwogaW50
Ci1pZF9tb2RlX3RvX2NpZnNfYWNsKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNvbnN0IGNoYXIgKnBh
dGgsIF9fdTY0IG5tb2RlLAoraWRfbW9kZV90b19jaWZzX2FjbChzdHJ1Y3QgaW5vZGUgKmlub2Rl
LCBjb25zdCBjaGFyICpwYXRoLCBfX3U2NCAqcG5tb2RlLAogCQkJa3VpZF90IHVpZCwga2dpZF90
IGdpZCkKIHsKIAlpbnQgcmMgPSAwOwpAQCAtMTM0MSw3ICsxNDE0LDcgQEAgaWRfbW9kZV90b19j
aWZzX2FjbChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjb25zdCBjaGFyICpwYXRoLCBfX3U2NCBubW9k
ZSwKIAllbHNlCiAJCWlkX2Zyb21fc2lkID0gZmFsc2U7CiAKLQlyYyA9IGJ1aWxkX3NlY19kZXNj
KHBudHNkLCBwbm50c2QsIHNlY2Rlc2NsZW4sIG5tb2RlLCB1aWQsIGdpZCwKKwlyYyA9IGJ1aWxk
X3NlY19kZXNjKHBudHNkLCBwbm50c2QsIHNlY2Rlc2NsZW4sIHBubW9kZSwgdWlkLCBnaWQsCiAJ
CQkgICAgbW9kZV9mcm9tX3NpZCwgaWRfZnJvbV9zaWQsICZhY2xmbGFnKTsKIAogCWNpZnNfZGJn
KE5PSVNZLCAiYnVpbGRfc2VjX2Rlc2MgcmM6ICVkXG4iLCByYyk7CmRpZmYgLS1naXQgYS9mcy9j
aWZzL2NpZnNwcm90by5oIGIvZnMvY2lmcy9jaWZzcHJvdG8uaAppbmRleCAyNGM2ZjM2MTc3YmEu
LjJlZDk4ZDRhMzBjMSAxMDA2NDQKLS0tIGEvZnMvY2lmcy9jaWZzcHJvdG8uaAorKysgYi9mcy9j
aWZzL2NpZnNwcm90by5oCkBAIC0yMTUsOCArMjE1LDggQEAgZXh0ZXJuIGludCBjaWZzX2FjbF90
b19mYXR0cihzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiLAogCQkJICAgICAgc3RydWN0IGNp
ZnNfZmF0dHIgKmZhdHRyLCBzdHJ1Y3QgaW5vZGUgKmlub2RlLAogCQkJICAgICAgYm9vbCBnZXRf
bW9kZV9mcm9tX3NwZWNpYWxfc2lkLAogCQkJICAgICAgY29uc3QgY2hhciAqcGF0aCwgY29uc3Qg
c3RydWN0IGNpZnNfZmlkICpwZmlkKTsKLWV4dGVybiBpbnQgaWRfbW9kZV90b19jaWZzX2FjbChz
dHJ1Y3QgaW5vZGUgKmlub2RlLCBjb25zdCBjaGFyICpwYXRoLCBfX3U2NCwKLQkJCQkJa3VpZF90
LCBrZ2lkX3QpOworZXh0ZXJuIGludCBpZF9tb2RlX3RvX2NpZnNfYWNsKHN0cnVjdCBpbm9kZSAq
aW5vZGUsIGNvbnN0IGNoYXIgKnBhdGgsIF9fdTY0ICpwbm1vZGUsCisJCQkJCWt1aWRfdCB1aWQs
IGtnaWRfdCBnaWQpOwogZXh0ZXJuIHN0cnVjdCBjaWZzX250c2QgKmdldF9jaWZzX2FjbChzdHJ1
Y3QgY2lmc19zYl9pbmZvICosIHN0cnVjdCBpbm9kZSAqLAogCQkJCQljb25zdCBjaGFyICosIHUz
MiAqKTsKIGV4dGVybiBzdHJ1Y3QgY2lmc19udHNkICpnZXRfY2lmc19hY2xfYnlfZmlkKHN0cnVj
dCBjaWZzX3NiX2luZm8gKiwKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvaW5vZGUuYyBiL2ZzL2NpZnMv
aW5vZGUuYwppbmRleCBhYzAxZjk2ODRiMzkuLjhkZWJkNGMxOGZhZiAxMDA2NDQKLS0tIGEvZnMv
Y2lmcy9pbm9kZS5jCisrKyBiL2ZzL2NpZnMvaW5vZGUuYwpAQCAtMjgxMyw3ICsyODEzLDggQEAg
Y2lmc19zZXRhdHRyX25vdW5peChzdHJ1Y3QgZGVudHJ5ICpkaXJlbnRyeSwgc3RydWN0IGlhdHRy
ICphdHRycykKIAlpZiAoKGNpZnNfc2ItPm1udF9jaWZzX2ZsYWdzICYgQ0lGU19NT1VOVF9DSUZT
X0FDTCkgfHwKIAkgICAgKGNpZnNfc2ItPm1udF9jaWZzX2ZsYWdzICYgQ0lGU19NT1VOVF9NT0RF
X0ZST01fU0lEKSkgewogCQlpZiAodWlkX3ZhbGlkKHVpZCkgfHwgZ2lkX3ZhbGlkKGdpZCkpIHsK
LQkJCXJjID0gaWRfbW9kZV90b19jaWZzX2FjbChpbm9kZSwgZnVsbF9wYXRoLCBOT19DSEFOR0Vf
NjQsCisJCQltb2RlID0gTk9fQ0hBTkdFXzY0OworCQkJcmMgPSBpZF9tb2RlX3RvX2NpZnNfYWNs
KGlub2RlLCBmdWxsX3BhdGgsICZtb2RlLAogCQkJCQkJCXVpZCwgZ2lkKTsKIAkJCWlmIChyYykg
ewogCQkJCWNpZnNfZGJnKEZZSSwgIiVzOiBTZXR0aW5nIGlkIGZhaWxlZCB3aXRoIGVycm9yOiAl
ZFxuIiwKQEAgLTI4MzQsMTMgKzI4MzUsMjAgQEAgY2lmc19zZXRhdHRyX25vdW5peChzdHJ1Y3Qg
ZGVudHJ5ICpkaXJlbnRyeSwgc3RydWN0IGlhdHRyICphdHRycykKIAkJcmMgPSAwOwogCQlpZiAo
KGNpZnNfc2ItPm1udF9jaWZzX2ZsYWdzICYgQ0lGU19NT1VOVF9DSUZTX0FDTCkgfHwKIAkJICAg
IChjaWZzX3NiLT5tbnRfY2lmc19mbGFncyAmIENJRlNfTU9VTlRfTU9ERV9GUk9NX1NJRCkpIHsK
LQkJCXJjID0gaWRfbW9kZV90b19jaWZzX2FjbChpbm9kZSwgZnVsbF9wYXRoLCBtb2RlLAorCQkJ
cmMgPSBpZF9tb2RlX3RvX2NpZnNfYWNsKGlub2RlLCBmdWxsX3BhdGgsICZtb2RlLAogCQkJCQkJ
SU5WQUxJRF9VSUQsIElOVkFMSURfR0lEKTsKIAkJCWlmIChyYykgewogCQkJCWNpZnNfZGJnKEZZ
SSwgIiVzOiBTZXR0aW5nIEFDTCBmYWlsZWQgd2l0aCBlcnJvcjogJWRcbiIsCiAJCQkJCSBfX2Z1
bmNfXywgcmMpOwogCQkJCWdvdG8gY2lmc19zZXRhdHRyX2V4aXQ7CiAJCQl9CisKKwkJCS8qCisJ
CQkgKiBJbiBjYXNlIG9mIENJRlNfTU9VTlRfQ0lGU19BQ0wsIHdlIGNhbm5vdCBzdXBwb3J0IGFs
bCBtb2Rlcy4KKwkJCSAqIFBpY2sgdXAgdGhlIGFjdHVhbCBtb2RlIGJpdHMgdGhhdCB3ZXJlIHNl
dC4KKwkJCSAqLworCQkJaWYgKG1vZGUgIT0gYXR0cnMtPmlhX21vZGUpCisJCQkJYXR0cnMtPmlh
X21vZGUgPSBtb2RlOwogCQl9IGVsc2UKIAkJaWYgKCgobW9kZSAmIFNfSVdVR08pID09IDApICYm
CiAJCSAgICAoY2lmc0lub2RlLT5jaWZzQXR0cnMgJiBBVFRSX1JFQURPTkxZKSA9PSAwKSB7Ci0t
IAoyLjI3LjAKCg==
--0000000000002977f805b60da945
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0002-cifs-Enable-sticky-bit-with-cifsacl-mount-option.patch"
Content-Disposition: attachment; 
	filename="0002-cifs-Enable-sticky-bit-with-cifsacl-mount-option.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_kihujoyt1>
X-Attachment-Id: f_kihujoyt1

RnJvbSBkMjRlNjYxOTIwY2JkOGMwNmI1NTJhODVhMzViNzJmZGIyMDA5YTc4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTaHlhbSBQcmFzYWQgTiA8c3ByYXNhZEBtaWNyb3NvZnQuY29t
PgpEYXRlOiBNb24sIDkgTm92IDIwMjAgMDY6MTI6NDkgLTA4MDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gY2lmczogRW5hYmxlIHN0aWNreSBiaXQgd2l0aCBjaWZzYWNsIG1vdW50IG9wdGlvbi4KCkZv
ciB0aGUgY2lmc2FjbCBtb3VudCBvcHRpb24sIHdlIGRpZCBub3Qgc3VwcG9ydCBzdGlja3kgYml0
cy4KV2l0aCB0aGlzIHBhdGNoLCB3ZSBkbyBzdXBwb3J0IGl0LCBieSBzZXR0aW5nIHRoZSBERUxF
VEVfQ0hJTEQgcGVybQpvbiB0aGUgZGlyZWN0b3J5IG9ubHkgZm9yIHRoZSBvd25lciB1c2VyLiBX
aGVuIHN0aWNreSBiaXQgaXMgbm90CmVuYWJsZWQsIGFsbG93IERFTEVURV9DSElMRCBwZXJtIGZv
ciBldmVyeW9uZS4KClNpZ25lZC1vZmYtYnk6IFNoeWFtIFByYXNhZCBOIDxzcHJhc2FkQG1pY3Jv
c29mdC5jb20+Ci0tLQogZnMvY2lmcy9jaWZzYWNsLmMgfCA0MSArKysrKysrKysrKysrKysrKysr
KysrKysrKysrKystLS0tLS0tLS0tLQogZnMvY2lmcy9jaWZzYWNsLmggfCAgNCArKysrCiBmcy9j
aWZzL2NpZnNwZHUuaCB8ICAyICstCiAzIGZpbGVzIGNoYW5nZWQsIDM1IGluc2VydGlvbnMoKyks
IDEyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc2FjbC5jIGIvZnMvY2lm
cy9jaWZzYWNsLmMKaW5kZXggYzg2MDRkOWI5OTU4Li5kN2E2ZDBmNTMzYmYgMTAwNjQ0Ci0tLSBh
L2ZzL2NpZnMvY2lmc2FjbC5jCisrKyBiL2ZzL2NpZnMvY2lmc2FjbC5jCkBAIC02MTcsNiArNjE3
LDE3IEBAIHN0YXRpYyB2b2lkIGFjY2Vzc19mbGFnc190b19tb2RlKF9fbGUzMiBhY2VfZmxhZ3Ms
IGludCB0eXBlLCB1bW9kZV90ICpwbW9kZSwKIAkJCSEoKnBkZW5pZWQgJiBtYXNrICYgMDExMSkp
CiAJCSpwbW9kZSB8PSBtYXNrICYgMDExMTsKIAorCS8qIElmIERFTEVURV9DSElMRCBpcyBzZXQg
b25seSBvbiBhbiBvd25lciBBQ0UsIHNldCBzdGlja3kgYml0ICovCisJaWYgKGZsYWdzICYgRklM
RV9ERUxFVEVfQ0hJTEQpIHsKKwkJaWYgKG1hc2sgPT0gQUNMX09XTkVSX01BU0spIHsKKwkJCWlm
ICghKCpwZGVuaWVkICYgMDEwMDApKQorCQkJCSpwbW9kZSB8PSAwMTAwMDsKKwkJfSBlbHNlIGlm
ICghKCpwZGVuaWVkICYgMDEwMDApKSB7CisJCQkqcG1vZGUgJj0gfjAxMDAwOworCQkJKnBkZW5p
ZWQgfD0gMDEwMDA7CisJCX0KKwl9CisKIAljaWZzX2RiZyhOT0lTWSwgImFjY2VzcyBmbGFncyAw
eCV4IG1vZGUgbm93ICUwNG9cbiIsIGZsYWdzLCAqcG1vZGUpOwogCXJldHVybjsKIH0KQEAgLTY1
Miw3ICs2NjMsOSBAQCBzdGF0aWMgdm9pZCBtb2RlX3RvX2FjY2Vzc19mbGFncyh1bW9kZV90IG1v
ZGUsIHVtb2RlX3QgYml0c190b191c2UsCiB9CiAKIHN0YXRpYyBfX3UxNiBmaWxsX2FjZV9mb3Jf
c2lkKHN0cnVjdCBjaWZzX2FjZSAqcG50YWNlLAotCQkJY29uc3Qgc3RydWN0IGNpZnNfc2lkICpw
c2lkLCBfX3U2NCBubW9kZSwgdW1vZGVfdCBiaXRzLCBfX3U4IGFjY2Vzc190eXBlKQorCQkJY29u
c3Qgc3RydWN0IGNpZnNfc2lkICpwc2lkLCBfX3U2NCBubW9kZSwKKwkJCXVtb2RlX3QgYml0cywg
X191OCBhY2Nlc3NfdHlwZSwKKwkJCWJvb2wgYWxsb3dfZGVsZXRlX2NoaWxkKQogewogCWludCBp
OwogCV9fdTE2IHNpemUgPSAwOwpAQCAtNjYxLDEwICs2NzQsMTUgQEAgc3RhdGljIF9fdTE2IGZp
bGxfYWNlX2Zvcl9zaWQoc3RydWN0IGNpZnNfYWNlICpwbnRhY2UsCiAJcG50YWNlLT50eXBlID0g
YWNjZXNzX3R5cGU7CiAJcG50YWNlLT5mbGFncyA9IDB4MDsKIAltb2RlX3RvX2FjY2Vzc19mbGFn
cyhubW9kZSwgYml0cywgJmFjY2Vzc19yZXEpOworCisJaWYgKGFjY2Vzc190eXBlID09IEFDQ0VT
U19BTExPV0VEICYmIGFsbG93X2RlbGV0ZV9jaGlsZCkKKwkJYWNjZXNzX3JlcSB8PSBGSUxFX0RF
TEVURV9DSElMRDsKKwogCWlmIChhY2Nlc3NfdHlwZSA9PSBBQ0NFU1NfQUxMT1dFRCAmJiAhYWNj
ZXNzX3JlcSkKIAkJYWNjZXNzX3JlcSA9IFNFVF9NSU5JTVVNX1JJR0hUUzsKIAllbHNlIGlmIChh
Y2Nlc3NfdHlwZSA9PSBBQ0NFU1NfREVOSUVEKQogCQlhY2Nlc3NfcmVxICY9IH5TRVRfTUlOSU1V
TV9SSUdIVFM7CisKIAlwbnRhY2UtPmFjY2Vzc19yZXEgPSBjcHVfdG9fbGUzMihhY2Nlc3NfcmVx
KTsKIAogCXBudGFjZS0+c2lkLnJldmlzaW9uID0gcHNpZC0+cmV2aXNpb247CkBAIC03MTcsMTAg
KzczNSw2IEBAIHN0YXRpYyB2b2lkIGR1bXBfYWNlKHN0cnVjdCBjaWZzX2FjZSAqcGFjZSwgY2hh
ciAqZW5kX29mX2FjbCkKIH0KICNlbmRpZgogCi0jZGVmaW5lIEFDTF9PV05FUl9NQVNLIDA3MDAK
LSNkZWZpbmUgQUNMX0dST1VQX01BU0sgMDc3MAotI2RlZmluZSBBQ0xfRVZFUllPTkVfTUFTSyAw
Nzc3Ci0KIHN0YXRpYyB2b2lkIHBhcnNlX2RhY2woc3RydWN0IGNpZnNfYWNsICpwZGFjbCwgY2hh
ciAqZW5kX29mX2FjbCwKIAkJICAgICAgIHN0cnVjdCBjaWZzX3NpZCAqcG93bmVyc2lkLCBzdHJ1
Y3QgY2lmc19zaWQgKnBncnBzaWQsCiAJCSAgICAgICBzdHJ1Y3QgY2lmc19mYXR0ciAqZmF0dHIs
IGJvb2wgbW9kZV9mcm9tX3NwZWNpYWxfc2lkKQpAQCAtOTA0LDYgKzkxOCw3IEBAIHN0YXRpYyBp
bnQgc2V0X2NobW9kX2RhY2woc3RydWN0IGNpZnNfYWNsICpwbmRhY2wsIHN0cnVjdCBjaWZzX3Np
ZCAqcG93bmVyc2lkLAogCV9fdTY0IG90aGVyX21vZGU7CiAJX191NjQgZGVueV91c2VyX21vZGUg
PSAwOwogCV9fdTY0IGRlbnlfZ3JvdXBfbW9kZSA9IDA7CisJYm9vbCBzdGlja3lfc2V0ID0gZmFs
c2U7CiAKIAlwbm5kYWNsID0gKHN0cnVjdCBjaWZzX2FjbCAqKSgoY2hhciAqKXBuZGFjbCArIHNp
emVvZihzdHJ1Y3QgY2lmc19hY2wpKTsKIApAQCAtOTQ0LDMxICs5NTksMzUgQEAgc3RhdGljIGlu
dCBzZXRfY2htb2RfZGFjbChzdHJ1Y3QgY2lmc19hY2wgKnBuZGFjbCwgc3RydWN0IGNpZnNfc2lk
ICpwb3duZXJzaWQsCiAKIAkqcG5tb2RlID0gdXNlcl9tb2RlIHwgZ3JvdXBfbW9kZSB8IG90aGVy
X21vZGUgfCAobm1vZGUgJiB+MDc3Nyk7CiAKKwkvKiBUaGlzIHRlbGxzIGlmIHdlIHNob3VsZCBh
bGxvdyBkZWxldGUgY2hpbGQgZm9yIGdyb3VwIGFuZCBldmVyeW9uZS4gKi8KKwlpZiAobm1vZGUg
JiAwMTAwMCkKKwkJc3RpY2t5X3NldCA9IHRydWU7CisKIAlpZiAoZGVueV91c2VyX21vZGUpIHsK
IAkJc2l6ZSArPSBmaWxsX2FjZV9mb3Jfc2lkKChzdHJ1Y3QgY2lmc19hY2UgKikoKGNoYXIgKilw
bm5kYWNsICsgc2l6ZSksCi0JCQkJcG93bmVyc2lkLCBkZW55X3VzZXJfbW9kZSwgMDcwMCwgQUND
RVNTX0RFTklFRCk7CisJCQkJcG93bmVyc2lkLCBkZW55X3VzZXJfbW9kZSwgMDcwMCwgQUNDRVNT
X0RFTklFRCwgZmFsc2UpOwogCQludW1fYWNlcysrOwogCX0KIAkvKiBHcm91cCBERU5ZIEFDRSBk
b2VzIG5vdCBjb25mbGljdCB3aXRoIG93bmVyIEFMTE9XIEFDRS4gS2VlcCBpbiBwcmVmZXJyZWQg
b3JkZXIqLwogCWlmIChkZW55X2dyb3VwX21vZGUgJiYgIShkZW55X2dyb3VwX21vZGUgJiAodXNl
cl9tb2RlID4+IDMpKSkgewogCQlzaXplICs9IGZpbGxfYWNlX2Zvcl9zaWQoKHN0cnVjdCBjaWZz
X2FjZSAqKSgoY2hhciAqKXBubmRhY2wgKyBzaXplKSwKLQkJCQlwZ3Jwc2lkLCBkZW55X2dyb3Vw
X21vZGUsIDAwNzAsIEFDQ0VTU19ERU5JRUQpOworCQkJCXBncnBzaWQsIGRlbnlfZ3JvdXBfbW9k
ZSwgMDA3MCwgQUNDRVNTX0RFTklFRCwgZmFsc2UpOwogCQludW1fYWNlcysrOwogCX0KIAlzaXpl
ICs9IGZpbGxfYWNlX2Zvcl9zaWQoKHN0cnVjdCBjaWZzX2FjZSAqKSAoKGNoYXIgKilwbm5kYWNs
ICsgc2l6ZSksCi0JCQlwb3duZXJzaWQsIHVzZXJfbW9kZSwgMDcwMCwgQUNDRVNTX0FMTE9XRUQp
OworCQkJcG93bmVyc2lkLCB1c2VyX21vZGUsIDA3MDAsIEFDQ0VTU19BTExPV0VELCB0cnVlKTsK
IAludW1fYWNlcysrOwogCS8qIEdyb3VwIERFTlkgQUNFIGNvbmZsaWN0cyB3aXRoIG93bmVyIEFM
TE9XIEFDRS4gU28ga2VlcCBpdCBhZnRlci4gKi8KIAlpZiAoZGVueV9ncm91cF9tb2RlICYmIChk
ZW55X2dyb3VwX21vZGUgJiAodXNlcl9tb2RlID4+IDMpKSkgewogCQlzaXplICs9IGZpbGxfYWNl
X2Zvcl9zaWQoKHN0cnVjdCBjaWZzX2FjZSAqKSgoY2hhciAqKXBubmRhY2wgKyBzaXplKSwKLQkJ
CQlwZ3Jwc2lkLCBkZW55X2dyb3VwX21vZGUsIDAwNzAsIEFDQ0VTU19ERU5JRUQpOworCQkJCXBn
cnBzaWQsIGRlbnlfZ3JvdXBfbW9kZSwgMDA3MCwgQUNDRVNTX0RFTklFRCwgZmFsc2UpOwogCQlu
dW1fYWNlcysrOwogCX0KIAlzaXplICs9IGZpbGxfYWNlX2Zvcl9zaWQoKHN0cnVjdCBjaWZzX2Fj
ZSAqKSgoY2hhciAqKXBubmRhY2wgKyBzaXplKSwKLQkJCXBncnBzaWQsIGdyb3VwX21vZGUsIDAw
NzAsIEFDQ0VTU19BTExPV0VEKTsKKwkJCXBncnBzaWQsIGdyb3VwX21vZGUsIDAwNzAsIEFDQ0VT
U19BTExPV0VELCAhc3RpY2t5X3NldCk7CiAJbnVtX2FjZXMrKzsKIAlzaXplICs9IGZpbGxfYWNl
X2Zvcl9zaWQoKHN0cnVjdCBjaWZzX2FjZSAqKSgoY2hhciAqKXBubmRhY2wgKyBzaXplKSwKLQkJ
CSZzaWRfZXZlcnlvbmUsIG90aGVyX21vZGUsIDAwMDcsIEFDQ0VTU19BTExPV0VEKTsKKwkJCSZz
aWRfZXZlcnlvbmUsIG90aGVyX21vZGUsIDAwMDcsIEFDQ0VTU19BTExPV0VELCAhc3RpY2t5X3Nl
dCk7CiAJbnVtX2FjZXMrKzsKIAogc2V0X3NpemU6CmRpZmYgLS1naXQgYS9mcy9jaWZzL2NpZnNh
Y2wuaCBiL2ZzL2NpZnMvY2lmc2FjbC5oCmluZGV4IDQ1NjY1ZmY4N2I2NC4uZmY3ZmQwODYyZTI4
IDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNhY2wuaAorKysgYi9mcy9jaWZzL2NpZnNhY2wuaApA
QCAtMzAsNiArMzAsMTAgQEAKICNkZWZpbmUgV1JJVEVfQklUICAgICAgIDB4MgogI2RlZmluZSBF
WEVDX0JJVCAgICAgICAgMHgxCiAKKyNkZWZpbmUgQUNMX09XTkVSX01BU0sgMDcwMAorI2RlZmlu
ZSBBQ0xfR1JPVVBfTUFTSyAwNzcwCisjZGVmaW5lIEFDTF9FVkVSWU9ORV9NQVNLIDA3NzcKKwog
I2RlZmluZSBVQklUU0hJRlQJNgogI2RlZmluZSBHQklUU0hJRlQJMwogCmRpZmYgLS1naXQgYS9m
cy9jaWZzL2NpZnNwZHUuaCBiL2ZzL2NpZnMvY2lmc3BkdS5oCmluZGV4IDU5M2Q4MjY4MjBjMy4u
Y2U1MTE4M2VjYWY0IDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNwZHUuaAorKysgYi9mcy9jaWZz
L2NpZnNwZHUuaApAQCAtMjYyLDcgKzI2Miw3IEBACiAJCQkJfCBXUklURV9PV05FUiB8IFNZTkNI
Uk9OSVpFKQogI2RlZmluZSBTRVRfRklMRV9XUklURV9SSUdIVFMgKEZJTEVfV1JJVEVfREFUQSB8
IEZJTEVfQVBQRU5EX0RBVEEgXAogCQkJCXwgRklMRV9SRUFEX0VBIHwgRklMRV9XUklURV9FQSBc
Ci0JCQkJfCBGSUxFX0RFTEVURV9DSElMRCB8IEZJTEVfUkVBRF9BVFRSSUJVVEVTIFwKKwkJCQl8
IEZJTEVfUkVBRF9BVFRSSUJVVEVTIFwKIAkJCQl8IEZJTEVfV1JJVEVfQVRUUklCVVRFUyBcCiAJ
CQkJfCBERUxFVEUgfCBSRUFEX0NPTlRST0wgfCBXUklURV9EQUMgXAogCQkJCXwgV1JJVEVfT1dO
RVIgfCBTWU5DSFJPTklaRSkKLS0gCjIuMjcuMAoK
--0000000000002977f805b60da945--
