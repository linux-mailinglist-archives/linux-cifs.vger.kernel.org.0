Return-Path: <linux-cifs+bounces-4348-lists+linux-cifs=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from sy.mirrors.kernel.org (sy.mirrors.kernel.org [147.75.48.161])
	by mail.lfdr.de (Postfix) with ESMTPS id 836D5A774ED
	for <lists+linux-cifs@lfdr.de>; Tue,  1 Apr 2025 09:12:16 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sy.mirrors.kernel.org (Postfix) with ESMTPS id 2BEAF7A2E08
	for <lists+linux-cifs@lfdr.de>; Tue,  1 Apr 2025 07:11:09 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id CD4331DF73B;
	Tue,  1 Apr 2025 07:12:09 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="h+QN9+Ps"
X-Original-To: linux-cifs@vger.kernel.org
Received: from mail-lj1-f182.google.com (mail-lj1-f182.google.com [209.85.208.182])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9CB672111
	for <linux-cifs@vger.kernel.org>; Tue,  1 Apr 2025 07:12:06 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.208.182
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1743491529; cv=none; b=ZJiT3Gh9toTLhXx71fCLYzzJRt6pH8mO9jcwhEsH6WJqg4J0Mk9ukRFaEVDon/rEBnIT7QH/vjnPbgyC8+LZBOYKsX+eIVo5t1xmpZNRePshDePJlpoShzcaN9s1mDtZI+4v8eI+E2jCCtmCKNaQjdmhyPsBThiwIVvawSFy0gI=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1743491529; c=relaxed/simple;
	bh=hyG0nG55NFhcU6jOgRYDqNdDLVAgMtwP2aIe/p65Zhs=;
	h=MIME-Version:From:Date:Message-ID:Subject:To:Cc:Content-Type; b=Tm1v5XINoXEyNwDjXIU5xJoo4F66+Fr2XnPjzSoX8vZy5HejGI+H8OPRVYZnXFj3ecOlUVZA4AWQvX04kc1G/zOfEZgrNVXxKi4tufwt5Fq1lfkVCRYKvxNNgVnQtBpWIdWOjT2JqZ7iovmTijx8vC3juKVi3+nDlhdX3SPXLGQ=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=h+QN9+Ps; arc=none smtp.client-ip=209.85.208.182
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Received: by mail-lj1-f182.google.com with SMTP id 38308e7fff4ca-307c13298eeso59213701fa.0
        for <linux-cifs@vger.kernel.org>; Tue, 01 Apr 2025 00:12:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1743491524; x=1744096324; darn=vger.kernel.org;
        h=cc:to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=LQdJWN7CR/WICZhuayiwVMRgtOvWvR7jC+G3y5BbeEU=;
        b=h+QN9+PsqnGMCGbL32Dx5C45Lhh1GhG0xVgnOGmYR9EESxcN5BqKePElrYzv0Q1cHp
         clQ1EVZQ7aY3NZZavs2WYWp5l5NdJO7V2ZCuOiIM8J3xbU06gBtikcg1AwPHeHoEMHjp
         zb8JXgTrA69IpICYtckw22GikBgoR4SU9NDOlYM3J31do08HV5T1jUUuVVPUw8ge8gHy
         AKaPiN+dz8YhJT4/g3XapVTqt8J/s0bks9agaGyCURwfP6fSnOZznGVeb+B4qCh8Mtak
         NuJXL7rYs7Tl8ACIVuDTANn8bTQTfs+z06psq9QZKjFxe+ru0fn50FtRXvCXGsVOj04n
         2HDQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1743491524; x=1744096324;
        h=cc:to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=LQdJWN7CR/WICZhuayiwVMRgtOvWvR7jC+G3y5BbeEU=;
        b=hiz6I/qqZFjHwX8GMKcbwP18HcQ4nDCp5IcGFJwswZLZgF7ETaONL8NhTF+ys4O/74
         QdD0cRuqTYos0FR/Awi2pwUs9zqgg2CsA+5ubujCSF1buG9baCos08L1lf2yg6y3xX7P
         eCVaTnUg3OsYI7ko5p6JxBkaN97kdnANIALz7D8F1Qafq01hSGQWdBGYVK3Qk/LGn+5f
         n4GvOx1SuG/RYL+d3i4M5PoA8mqAN+xTrmeLbxOHyWGFDmA3d/Q7oTO6yWh8pi8APiJe
         CWwTdqUAa7SoqC48fex5+nd80hd6C0Pk43s2lq+23zuPTWsNTIWMyHqZpzSmNjMkq6UF
         HgXg==
X-Gm-Message-State: AOJu0YwJ09jMUvTrB1T0CdjLsR+QC3fMs6DyGfXtni1MWOjkgLRG4v1w
	8n0gkupIUKJ5N8ZqlkdsClOTB3PmG3tUqQx04lu7VzRo6YFgk3PoQnnmAsECwf+oihcixYr1xKD
	XDpgsiWlGCqmjZTWdfsXQZwn4vgPXK/sq
X-Gm-Gg: ASbGncu9nb72lY5NjTDtbZsNI92Vh/5GtXXB54ETUCWKokNLjO34qMgVHxT4hpRZdKZ
	46UH4e/rZBXJ53Kplsz5spU3ddPKEattYADYmL5rmweCfXTMRStJ9/DCRE9E55KiA8H5Xkwrbv7
	pQHiAltl9hUFHXhD1HPltzRzlHjQfdCMFhXb0RDCLQgKfVftIHgRnWdMwttXg9
X-Google-Smtp-Source: AGHT+IHGfldiLJ406PIJ32xUjO+qeCsB0uQ4RPX62IWRxra0mrhwt3X+jWJBe5WLCLjt+M9cpOiW3Q7Ydx2KVziLklk=
X-Received: by 2002:a05:651c:1590:b0:30b:eb0a:ed63 with SMTP id
 38308e7fff4ca-30ddfa01d9dmr32794381fa.18.1743491523736; Tue, 01 Apr 2025
 00:12:03 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-cifs@vger.kernel.org
List-Id: <linux-cifs.vger.kernel.org>
List-Subscribe: <mailto:linux-cifs+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cifs+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
From: Steve French <smfrench@gmail.com>
Date: Tue, 1 Apr 2025 02:11:51 -0500
X-Gm-Features: AQ5f1Jqccd52zkTkB-TuaUm0L3ZG2JhIb87hGzCRzyKLXIXxJnU2KF7EHS7YPLw
Message-ID: <CAH2r5murjsjwoFBs0okQq=if0mbXK_nnChkF==3x781zJjVhOA@mail.gmail.com>
Subject: Additional patches added to for-next
To: CIFS <linux-cifs@vger.kernel.org>
Cc: =?UTF-8?Q?Pali_Roh=C3=A1r?= <pali@kernel.org>
Content-Type: multipart/mixed; boundary="000000000000f126210631b2402a"

--000000000000f126210631b2402a
Content-Type: text/plain; charset="UTF-8"

Added seven additional patches from Pali's cifs branch to cifs-2.6.git
for-next (six others from that branch have already been merged to
mainline)

His branch with all 41 patches is
https://git.kernel.org/pub/scm/linux/kernel/git/pali/linux.git

The seven that I have tentatively added to for-next are:
4236ac9fe5b8 cifs: Fix querying and creating MF symlinks over SMB1
6aa9f1c9cd09 cifs: Fix access_flags_to_smbopen_mode
e94e882a6d69 cifs: Fix negotiate retry functionality
665e18794804 cifs: Improve handling of NetBIOS packets
7d14dd683b1b cifs: Allow to disable or force initialization of NetBIOS session
b1a37df6ba2f cifs: Add a new xattr system.smb3_ntsd_owner for getting
or setting owner
bf782ada459e cifs: Add a new xattr system.smb3_ntsd_sacl for getting
or setting SACLs

See attached.  If any objections, or if additional RB or Tested-By let me know.

The other 28 in that branch are trickier to review/test since many
require older SMB1 servers, and many of those are lower priority, but
review feedback on those would still be appreciated especially if any

-- 
Thanks,

Steve

--000000000000f126210631b2402a
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0020-cifs-Improve-handling-of-NetBIOS-packets.patch"
Content-Disposition: attachment; 
	filename="0020-cifs-Improve-handling-of-NetBIOS-packets.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m8y5lyil3>
X-Attachment-Id: f_m8y5lyil3

RnJvbSA1MjUzYWI4NzZhYTc0ZWMyZjg3MzFlNjZiM2IxYmYwOGU0N2NkZmFiIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBNb24sIDI4IE9jdCAyMDI0IDE4OjQ2OjQwICswMTAwClN1YmplY3Q6
IFtQQVRDSCAyMC80MV0gY2lmczogSW1wcm92ZSBoYW5kbGluZyBvZiBOZXRCSU9TIHBhY2tldHMK
TUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PVVURi04
CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKCk5vdyBhbGwgTmV0QklPUyBzZXNzaW9u
IGxvZ2ljIGlzIGhhbmRsZWQgaW4gaXBfcmZjMTAwMV9jb25uZWN0KCkgZnVuY3Rpb24sCnNvIGNs
ZWFudXAgaXNfc21iX3Jlc3BvbnNlKCkgZnVuY3Rpb24gd2hpY2ggY29udGFpbnMgZ2VuZXJpYyBo
YW5kbGluZyBvZgppbmNvbWluZyBTTUIgcGFja2V0cy4gTm90ZSB0aGF0IGZ1bmN0aW9uIGlzX3Nt
Yl9yZXNwb25zZSgpIGlzIG5vdCB1c2VkCmRpcmVjdGx5IG9yIGluZGlyZWN0bHkgKGUuZy4gb3Zl
ciBjaWZzX2RlbXVsdGlwbGV4X3RocmVhZCgpIGJ5CmlwX3JmYzEwMDFfY29ubmVjdCgpIGZ1bmN0
aW9uLgoKRXhjZXB0IHRoZSBOZWdhdGl2ZSBTZXNzaW9uIFJlc3BvbnNlIGFuZCB0aGUgU2Vzc2lv
biBLZWVwIEFsaXZlIHBhY2tldCwgdGhlCmNpZnNfZGVtdWx0aXBsZXhfdGhyZWFkKCkgc2hvdWxk
IG5vdCByZWNlaXZlIGFueSBOZXRCSU9TIHNlc3Npb24gcGFja2V0cy4KQW5kIFNlc3Npb24gS2Vl
cCBBbGl2ZSBwYWNrZXQgbWF5IGJlIHJlY2VpdmVkIG9ubHkgd2hlbiB0aGUgTmV0QklPUyBzZXNz
aW9uCndhcyBlc3RhYmxpc2hlZCBieSBpcF9yZmMxMDAxX2Nvbm5lY3QoKSBmdW5jdGlvbi4gU28g
dHJlYXQgYW55IHN1Y2ggcGFja2V0CmFzIGVycm9yIGFuZCBzY2hlZHVsZSByZWNvbm5lY3QuCgpO
ZWdhdGl2ZSBTZXNzaW9uIFJlc3BvbnNlIHBhY2tldCBpcyByZXR1cm5lZCBmcm9tIFdpbmRvd3Mg
U01CIHNlcnZlciAoZnJvbQpXaW5kb3dzIDk4IGFuZCBhbHNvIGZyb20gV2luZG93cyBTZXJ2ZXIg
MjAyMikgaWYgY2xpZW50IHNlbnQgb3ZlciBwb3J0IDEzOQpTTUIgbmVnb3RpYXRlIHJlcXVlc3Qg
d2l0aG91dCBwcmV2aW91c2x5IGVzdGFibGlzaGluZyBhIE5ldEJJT1Mgc2Vzc2lvbi4KVGhlIGNv
bW1vbiBzY2VuYXJpbyBpcyB0aGF0IE5lZ2F0aXZlIFNlc3Npb24gUmVzcG9uc2UgcGFja2V0IGlz
IHJldHVybmVkCmZvciB0aGUgU01CIG5lZ290aWF0ZSBwYWNrZXQsIHdoaWNoIGlzIHRoZSBmaXJz
dCBvbmUgd2hpY2ggU01CIGNsaWVudApzZW5kcyAoaWYgaXQgaXMgbm90IGVzdGFibGlzaGluZyBh
IE5ldEJJT1Mgc2Vzc2lvbikuCgpOb3RlIHRoYXQgc2VydmVyIHBvcnQgMTM5IG1heSBiZSBmb3J3
YXJkZWQgYW5kIG1hcHBlZCBiZXR3ZWVuIHZpcnR1YWwKbWFjaGluZXMgdG8gZGlmZmVyZW50IG51
bWJlci4gQW5kIExpbnV4IFNNQiBjbGllbnQgZG8gbm90IGNhbGwgZnVuY3Rpb24KaXBfcmZjMTAw
MV9jb25uZWN0KCkgd2hlbiBwcm90IGlzIG5vdCAxMzkuIFNvIG5vd2FkYXlzIHdoZW4gdXNpbmcg
cG9ydAptYXBwaW5nIG9yIHBvcnQgZm9yd2FyZGluZyBiZXR3ZWVuIFZNcywgaXQgaXMgbm90IHNv
IHVuY29tbW9uIHRvIHNlZSB0aGlzCmVycm9yLgoKQ3VycmVudGx5IHRoZSBsb2dpYyBvbiBOZWdh
dGl2ZSBTZXNzaW9uIFJlc3BvbnNlIHBhY2tldCBjaGFuZ2VzIHNlcnZlciBwb3J0CnRvIDQ0NSBh
bmQgZm9yY2UgcmVjb25uZWN0aW9uLiBCdXQgdGhpcyBsb2dpYyBkb2VzIG5vdCB3b3JrIHdoZW4g
dXNpbmcKbm9uLXN0YW5kYXJkIHBvcnQgbnVtYmVycyBhbmQgYWxzbyBkb2VzIG5vdCBoZWxwIGlm
IHRoZSBzZXJ2ZXIgb24gc3BlY2lmaWVkCnBvcnQgaXMgcmVxdWlyaW5nIGVzdGFibGlzaGluZyBh
IE5ldEJJT1Mgc2Vzc2lvbi4KCkZpeCB0aGlzIE5lZ2F0aXZlIFNlc3Npb24gUmVzcG9uc2UgbG9n
aWMgYW5kIGluc3RlYWQgb2YgY2hhbmdpbmcgc2VydmVyCnBvcnQgKG9uIHdoaWNoIHNlcnZlciBk
b2VzIG5vdCBoYXZlIHRvIGxpc3RlbiksIGZvcmNlIHJlY29ubmVjdGlvbiB3aXRoCmVzdGFibGlz
aGluZyBhIE5ldEJJT1Mgc2Vzc2lvbi4KClNpZ25lZC1vZmYtYnk6IFBhbGkgUm9ow6FyIDxwYWxp
QGtlcm5lbC5vcmc+Ci0tLQogZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oICB8ICAgMyArCiBmcy9z
bWIvY2xpZW50L2Nvbm5lY3QuYyAgIHwgMTQwICsrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKy0tLS0tCiBmcy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jIHwgICAzICsKIDMgZmlsZXMgY2hh
bmdlZCwgMTI4IGluc2VydGlvbnMoKyksIDE4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Zz
L3NtYi9jbGllbnQvY2lmc2dsb2IuaCBiL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaAppbmRleCA4
MTgzZGJhMTk3ZGQuLmRkMjA5N2U0YjU4NiAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9jaWZz
Z2xvYi5oCisrKyBiL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaApAQCAtNzEzLDYgKzcxMyw3IEBA
IHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gewogCV9fdTY0IGNvbm5faWQ7IC8qIGNvbm5lY3Rpb24g
aWRlbnRpZmllciAodXNlZnVsIGZvciBkZWJ1Z2dpbmcpICovCiAJaW50IHNydl9jb3VudDsgLyog
cmVmZXJlbmNlIGNvdW50ZXIgKi8KIAlpbnQgcmZjMTAwMV9zZXNzaW5pdDsgLyogd2hldGhlciB0
byBlc3Rhc2JsaXNoIG5ldGJpb3Mgc2Vzc2lvbiAqLworCWJvb2wgd2l0aF9yZmMxMDAxOyAvKiBp
ZiBuZXRiaW9zIHNlc3Npb24gaXMgdXNlZCAqLwogCS8qIDE1IGNoYXJhY3RlciBzZXJ2ZXIgbmFt
ZSArIDB4MjAgMTZ0aCBieXRlIGluZGljYXRpbmcgdHlwZSA9IHNydiAqLwogCWNoYXIgc2VydmVy
X1JGQzEwMDFfbmFtZVtSRkMxMDAxX05BTUVfTEVOX1dJVEhfTlVMTF07CiAJc3RydWN0IHNtYl92
ZXJzaW9uX29wZXJhdGlvbnMJKm9wczsKQEAgLTE3MTcsNiArMTcxOCw3IEBAIHN0cnVjdCBtaWRf
cV9lbnRyeSB7CiAJdm9pZCAqcmVzcF9idWY7CQkvKiBwb2ludGVyIHRvIHJlY2VpdmVkIFNNQiBo
ZWFkZXIgKi8KIAl1bnNpZ25lZCBpbnQgcmVzcF9idWZfc2l6ZTsKIAlpbnQgbWlkX3N0YXRlOwkv
KiB3aXNoIHRoaXMgd2VyZSBlbnVtIGJ1dCBjYW4gbm90IHBhc3MgdG8gd2FpdF9ldmVudCAqLwor
CWludCBtaWRfcmM7CQkvKiByYyBmb3IgTUlEX1JDICovCiAJdW5zaWduZWQgaW50IG1pZF9mbGFn
czsKIAlfX2xlMTYgY29tbWFuZDsJCS8qIHNtYiBjb21tYW5kIGNvZGUgKi8KIAl1bnNpZ25lZCBp
bnQgb3B0eXBlOwkvKiBvcGVyYXRpb24gdHlwZSAqLwpAQCAtMTg3OSw2ICsxODgxLDcgQEAgc3Rh
dGljIGlubGluZSBib29sIGlzX3JlcGxheWFibGVfZXJyb3IoaW50IGVycm9yKQogI2RlZmluZSAg
IE1JRF9SRVNQT05TRV9NQUxGT1JNRUQgMHgxMAogI2RlZmluZSAgIE1JRF9TSFVURE9XTgkJIDB4
MjAKICNkZWZpbmUgICBNSURfUkVTUE9OU0VfUkVBRFkgMHg0MCAvKiByZWFkeSBmb3Igb3RoZXIg
cHJvY2VzcyBoYW5kbGUgdGhlIHJzcCAqLworI2RlZmluZSAgIE1JRF9SQyAgICAgICAgICAgICAw
eDgwIC8qIG1pZF9yYyBjb250YWlucyBjdXN0b20gcmMgKi8KIAogLyogRmxhZ3MgKi8KICNkZWZp
bmUgICBNSURfV0FJVF9DQU5DRUxMRUQJIDEgLyogQ2FuY2VsbGVkIHdoaWxlIHdhaXRpbmcgZm9y
IHJlc3BvbnNlICovCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2Nvbm5lY3QuYyBiL2ZzL3Nt
Yi9jbGllbnQvY29ubmVjdC5jCmluZGV4IGMwODVkMzdhNjAzMi4uNWUzMDQ2ZDJjMzZlIDEwMDY0
NAotLS0gYS9mcy9zbWIvY2xpZW50L2Nvbm5lY3QuYworKysgYi9mcy9zbWIvY2xpZW50L2Nvbm5l
Y3QuYwpAQCAtMzcxLDcgKzM3MSw3IEBAIHN0YXRpYyBib29sIGNpZnNfdGNwX3Nlc19uZWVkc19y
ZWNvbm5lY3Qoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBpbnQgbnVtCiAgKgogICov
CiBzdGF0aWMgaW50IF9fY2lmc19yZWNvbm5lY3Qoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2Vy
dmVyLAotCQkJICAgIGJvb2wgbWFya19zbWJfc2Vzc2lvbikKKwkJCSAgICBib29sIG1hcmtfc21i
X3Nlc3Npb24sIGJvb2wgb25jZSkKIHsKIAlpbnQgcmMgPSAwOwogCkBAIC0zOTksNiArMzk5LDkg
QEAgc3RhdGljIGludCBfX2NpZnNfcmVjb25uZWN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNl
cnZlciwKIAkJaWYgKHJjKSB7CiAJCQljaWZzX3NlcnZlcl91bmxvY2soc2VydmVyKTsKIAkJCWNp
ZnNfZGJnKEZZSSwgIiVzOiByZWNvbm5lY3QgZXJyb3IgJWRcbiIsIF9fZnVuY19fLCByYyk7CisJ
CQkvKiBJZiB3YXMgYXNrZWQgdG8gcmVjb25uZWN0IG9ubHkgb25jZSwgZG8gbm90IHRyeSBpdCBt
b3JlIHRpbWVzICovCisJCQlpZiAob25jZSkKKwkJCQlicmVhazsKIAkJCW1zbGVlcCgzMDAwKTsK
IAkJfSBlbHNlIHsKIAkJCWF0b21pY19pbmMoJnRjcFNlc1JlY29ubmVjdENvdW50KTsKQEAgLTU2
NCwxOSArNTY3LDMzIEBAIHN0YXRpYyBpbnQgcmVjb25uZWN0X2Rmc19zZXJ2ZXIoc3RydWN0IFRD
UF9TZXJ2ZXJfSW5mbyAqc2VydmVyKQogCXJldHVybiByYzsKIH0KIAotaW50IGNpZnNfcmVjb25u
ZWN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgYm9vbCBtYXJrX3NtYl9zZXNzaW9u
KQorc3RhdGljIGludAorX2NpZnNfcmVjb25uZWN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNl
cnZlciwgYm9vbCBtYXJrX3NtYl9zZXNzaW9uLCBib29sIG9uY2UpCiB7CiAJaWYgKCFzZXJ2ZXIt
PmxlYWZfZnVsbHBhdGgpCi0JCXJldHVybiBfX2NpZnNfcmVjb25uZWN0KHNlcnZlciwgbWFya19z
bWJfc2Vzc2lvbik7CisJCXJldHVybiBfX2NpZnNfcmVjb25uZWN0KHNlcnZlciwgbWFya19zbWJf
c2Vzc2lvbiwgb25jZSk7CiAJcmV0dXJuIHJlY29ubmVjdF9kZnNfc2VydmVyKHNlcnZlcik7CiB9
CiAjZWxzZQotaW50IGNpZnNfcmVjb25uZWN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZl
ciwgYm9vbCBtYXJrX3NtYl9zZXNzaW9uKQorc3RhdGljIGludAorX2NpZnNfcmVjb25uZWN0KHN0
cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgYm9vbCBtYXJrX3NtYl9zZXNzaW9uLCBib29s
IG9uY2UpCiB7Ci0JcmV0dXJuIF9fY2lmc19yZWNvbm5lY3Qoc2VydmVyLCBtYXJrX3NtYl9zZXNz
aW9uKTsKKwlyZXR1cm4gX19jaWZzX3JlY29ubmVjdChzZXJ2ZXIsIG1hcmtfc21iX3Nlc3Npb24s
IG9uY2UpOwogfQogI2VuZGlmCiAKK2ludAorY2lmc19yZWNvbm5lY3Qoc3RydWN0IFRDUF9TZXJ2
ZXJfSW5mbyAqc2VydmVyLCBib29sIG1hcmtfc21iX3Nlc3Npb24pCit7CisJcmV0dXJuIF9jaWZz
X3JlY29ubmVjdChzZXJ2ZXIsIG1hcmtfc21iX3Nlc3Npb24sIGZhbHNlKTsKK30KKworc3RhdGlj
IGludAorY2lmc19yZWNvbm5lY3Rfb25jZShzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIp
Cit7CisJcmV0dXJuIF9jaWZzX3JlY29ubmVjdChzZXJ2ZXIsIHRydWUsIHRydWUpOworfQorCiBz
dGF0aWMgdm9pZAogY2lmc19lY2hvX3JlcXVlc3Qoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQog
ewpAQCAtODAzLDI2ICs4MjAsMTEwIEBAIGlzX3NtYl9yZXNwb25zZShzdHJ1Y3QgVENQX1NlcnZl
cl9JbmZvICpzZXJ2ZXIsIHVuc2lnbmVkIGNoYXIgdHlwZSkKIAkJLyogUmVndWxhciBTTUIgcmVz
cG9uc2UgKi8KIAkJcmV0dXJuIHRydWU7CiAJY2FzZSBSRkMxMDAyX1NFU1NJT05fS0VFUF9BTElW
RToKKwkJLyoKKwkJICogUkZDIDEwMDIgc2Vzc2lvbiBrZWVwIGFsaXZlIGNhbiBzZW50IGJ5IHRo
ZSBzZXJ2ZXIgb25seSB3aGVuCisJCSAqIHdlIGVzdGFibGlzaGVkIGEgUkZDIDEwMDIgc2Vzc2lv
bi4gQnV0IFNhbWJhIHNlcnZlcnMgc2VuZAorCQkgKiBSRkMgMTAwMiBzZXNzaW9uIGtlZXAgYWxp
dmUgYWxzbyBvdmVyIHBvcnQgNDQ1IG9uIHdoaWNoCisJCSAqIFJGQyAxMDAyIHNlc3Npb24gaXMg
bm90IGVzdGFibGlzaGVkLgorCQkgKi8KIAkJY2lmc19kYmcoRllJLCAiUkZDIDEwMDIgc2Vzc2lv
biBrZWVwIGFsaXZlXG4iKTsKIAkJYnJlYWs7CiAJY2FzZSBSRkMxMDAyX1BPU0lUSVZFX1NFU1NJ
T05fUkVTUE9OU0U6Ci0JCWNpZnNfZGJnKEZZSSwgIlJGQyAxMDAyIHBvc2l0aXZlIHNlc3Npb24g
cmVzcG9uc2VcbiIpOworCQkvKgorCQkgKiBSRkMgMTAwMiBwb3NpdGl2ZSBzZXNzaW9uIHJlc3Bv
bnNlIGNhbm5vdCBiZSByZXR1cm5lZAorCQkgKiBmb3IgU01CIHJlcXVlc3QuIFJGQyAxMDAyIHNl
c3Npb24gcmVzcG9uc2UgaXMgaGFuZGxlZAorCQkgKiBleGNsdXNpdmVseSBpbiBpcF9yZmMxMDAx
X2Nvbm5lY3QoKSBmdW5jdGlvbi4KKwkJICovCisJCWNpZnNfc2VydmVyX2RiZyhWRlMsICJSRkMg
MTAwMiBwb3NpdGl2ZSBzZXNzaW9uIHJlc3BvbnNlICh1bmV4cGVjdGVkKVxuIik7CisJCWNpZnNf
cmVjb25uZWN0KHNlcnZlciwgdHJ1ZSk7CiAJCWJyZWFrOwogCWNhc2UgUkZDMTAwMl9ORUdBVElW
RV9TRVNTSU9OX1JFU1BPTlNFOgogCQkvKgogCQkgKiBXZSBnZXQgdGhpcyBmcm9tIFdpbmRvd3Mg
OTggaW5zdGVhZCBvZiBhbiBlcnJvciBvbgotCQkgKiBTTUIgbmVncHJvdCByZXNwb25zZS4KLQkJ
ICovCi0JCWNpZnNfZGJnKEZZSSwgIlJGQyAxMDAyIG5lZ2F0aXZlIHNlc3Npb24gcmVzcG9uc2Vc
biIpOwotCQkvKiBnaXZlIHNlcnZlciBhIHNlY29uZCB0byBjbGVhbiB1cCAqLwotCQltc2xlZXAo
MTAwMCk7Ci0JCS8qCi0JCSAqIEFsd2F5cyB0cnkgNDQ1IGZpcnN0IG9uIHJlY29ubmVjdCBzaW5j
ZSB3ZSBnZXQgTkFDSwotCQkgKiBvbiBzb21lIGlmIHdlIGV2ZXIgY29ubmVjdGVkIHRvIHBvcnQg
MTM5ICh0aGUgTkFDSwotCQkgKiBpcyBzaW5jZSB3ZSBkbyBub3QgYmVnaW4gd2l0aCBSRkMxMDAx
IHNlc3Npb24KLQkJICogaW5pdGlhbGl6ZSBmcmFtZSkuCisJCSAqIFNNQiBuZWdwcm90IHJlc3Bv
bnNlLCB3aGVuIHdlIGhhdmUgbm90IGVzdGFibGlzaGVkCisJCSAqIFJGQyAxMDAyIHNlc3Npb24g
KHdoaWNoIG1lYW5zIGlwX3JmYzEwMDFfY29ubmVjdCgpCisJCSAqIHdhcyBza2lwcGVkKS4gTm90
ZSB0aGF0IHNhbWUgc3RpbGwgaGFwcGVucyB3aXRoCisJCSAqIFdpbmRvd3MgU2VydmVyIDIwMjIg
d2hlbiBjb25uZWN0aW5nIHZpYSBwb3J0IDEzOS4KKwkJICogU28gZm9yIHRoaXMgY2FzZSB3aGVu
IG1vdW50IG9wdGlvbiAtbyBub25ic2Vzc2luaXQKKwkJICogd2FzIG5vdCBzcGVjaWZpZWQsIHRy
eSB0byByZWNvbm5lY3Qgd2l0aCBlc3RhYmxpc2hpbmcKKwkJICogUkZDIDEwMDIgc2Vzc2lvbi4g
SWYgbmV3IHNvY2tldCBlc3RhYmxpc2htZW50IHdpdGgKKwkJICogUkZDIDEwMDIgc2Vzc2lvbiB3
YXMgc3VjY2Vzc2Z1bCB0aGVuIHJldHVybiB0byB0aGUKKwkJICogbWlkJ3MgY2FsbGVyIC1FQUdB
SU4sIHNvIGl0IGNhbiByZXRyeSB0aGUgcmVxdWVzdC4KIAkJICovCi0JCWNpZnNfc2V0X3BvcnQo
KHN0cnVjdCBzb2NrYWRkciAqKSZzZXJ2ZXItPmRzdGFkZHIsIENJRlNfUE9SVCk7CisJCWlmICgh
Y2lmc19yZG1hX2VuYWJsZWQoc2VydmVyKSAmJgorCQkgICAgc2VydmVyLT50Y3BTdGF0dXMgPT0g
Q2lmc0luTmVnb3RpYXRlICYmCisJCSAgICAhc2VydmVyLT53aXRoX3JmYzEwMDEgJiYKKwkJICAg
IHNlcnZlci0+cmZjMTAwMV9zZXNzaW5pdCAhPSAwKSB7CisJCQlpbnQgcmMsIG1pZF9yYzsKKwkJ
CXN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkLCAqbm1pZDsKKwkJCUxJU1RfSEVBRChkaXNwb3NlX2xp
c3QpOworCisJCQljaWZzX2RiZyhGWUksICJSRkMgMTAwMiBuZWdhdGl2ZSBzZXNzaW9uIHJlc3Bv
bnNlIGR1cmluZyBTTUIgTmVnb3RpYXRlLCByZXRyeWluZyB3aXRoIE5ldEJJT1Mgc2Vzc2lvblxu
Iik7CisKKwkJCS8qCisJCQkgKiBCZWZvcmUgcmVjb25uZWN0LCBkZWxldGUgYWxsIHBlbmRpbmcg
bWlkcyBmb3IgdGhpcworCQkJICogc2VydmVyLCBzbyByZWNvbm5lY3Qgd291bGQgbm90IHNpZ25h
bCBjb25uZWN0aW9uCisJCQkgKiBhYm9ydGVkIGVycm9yIHRvIG1pZCdzIGNhbGxiYWNrcy4gTm90
ZSB0aGF0IGZvciB0aGlzCisJCQkgKiBzZXJ2ZXIgdGhlcmUgc2hvdWxkIGJlIGV4YWN0bHkgb25l
IHBlbmRpbmcgbWlkCisJCQkgKiBjb3JyZXNwb25kaW5nIHRvIFNNQjEvU01CMiBOZWdvdGlhdGUg
cGFja2V0LgorCQkJICovCisJCQlzcGluX2xvY2soJnNlcnZlci0+bWlkX2xvY2spOworCQkJbGlz
dF9mb3JfZWFjaF9lbnRyeV9zYWZlKG1pZCwgbm1pZCwgJnNlcnZlci0+cGVuZGluZ19taWRfcSwg
cWhlYWQpIHsKKwkJCQlrcmVmX2dldCgmbWlkLT5yZWZjb3VudCk7CisJCQkJbGlzdF9tb3ZlKCZt
aWQtPnFoZWFkLCAmZGlzcG9zZV9saXN0KTsKKwkJCQltaWQtPm1pZF9mbGFncyB8PSBNSURfREVM
RVRFRDsKKwkJCX0KKwkJCXNwaW5fdW5sb2NrKCZzZXJ2ZXItPm1pZF9sb2NrKTsKKworCQkJLyog
Tm93IHRyeSB0byByZWNvbm5lY3Qgb25jZSB3aXRoIE5ldEJJT1Mgc2Vzc2lvbi4gKi8KKwkJCXNl
cnZlci0+d2l0aF9yZmMxMDAxID0gdHJ1ZTsKKwkJCXJjID0gY2lmc19yZWNvbm5lY3Rfb25jZShz
ZXJ2ZXIpOworCisJCQkvKgorCQkJICogSWYgcmVjb25uZWN0IHdhcyBzdWNjZXNzZnVsIHRoZW4g
aW5kaWNhdGUgLUVBR0FJTgorCQkJICogdG8gbWlkJ3MgY2FsbGVyLiBJZiByZWNvbm5lY3QgZmFp
bGVkIHdpdGggLUVBR0FJTgorCQkJICogdGhlbiBtYXNrIGl0IGFzIC1FSE9TVERPV04sIHNvIG1p
ZCdzIGNhbGxlciB3b3VsZAorCQkJICoga25vdyB0aGF0IGl0IGZhaWxlZC4KKwkJCSAqLworCQkJ
aWYgKHJjID09IDApCisJCQkJbWlkX3JjID0gLUVBR0FJTjsKKwkJCWVsc2UgaWYgKHJjID09IC1F
QUdBSU4pCisJCQkJbWlkX3JjID0gLUVIT1NURE9XTjsKKwkJCWVsc2UKKwkJCQltaWRfcmMgPSBy
YzsKKworCQkJLyoKKwkJCSAqIEFmdGVyIHJlY29ubmVjdCAoZWl0aGVyIHN1Y2Nlc3NmdWwgb3Ig
dW5zdWNjZXNzZnVsKQorCQkJICogZGVsaXZlciByZWNvbm5lY3Qgc3RhdHVzIHRvIG1pZCdzIGNh
bGxlciB2aWEgbWlkJ3MKKwkJCSAqIGNhbGxiYWNrLiBVc2UgTUlEX1JDIHN0YXRlIHdoaWNoIGlu
ZGljYXRlcyB0aGF0IHRoZQorCQkJICogcmV0dXJuIGNvZGUgc2hvdWxkIGJlIHJlYWQgZnJvbSBt
aWRfcmMgbWVtYmVyLgorCQkJICovCisJCQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUobWlkLCBu
bWlkLCAmZGlzcG9zZV9saXN0LCBxaGVhZCkgeworCQkJCWxpc3RfZGVsX2luaXQoJm1pZC0+cWhl
YWQpOworCQkJCW1pZC0+bWlkX3JjID0gbWlkX3JjOworCQkJCW1pZC0+bWlkX3N0YXRlID0gTUlE
X1JDOworCQkJCW1pZC0+Y2FsbGJhY2sobWlkKTsKKwkJCQlyZWxlYXNlX21pZChtaWQpOworCQkJ
fQorCisJCQkvKgorCQkJICogSWYgcmVjb25uZWN0IGZhaWxlZCB0aGVuIHdhaXQgdHdvIHNlY29u
ZHMuIEluIG1vc3QKKwkJCSAqIGNhc2VzIHdlIHdlcmUgYmVlbiBjYWxsZWQgZnJvbSB0aGUgbW91
bnQgY29udGV4dCBhbmQKKwkJCSAqIGRlbGl2ZXJlZCBmYWlsdXJlIHRvIG1pZCdzIGNhbGxiYWNr
IHdpbGwgc3RvcCB0aGlzCisJCQkgKiByZWNlaXZlciB0YXNrIHRocmVhZCBhbmQgZmFpbHMgdGhl
IG1vdW50IHByb2Nlc3MuCisJCQkgKiBTbyB3YWl0IHR3byBzZWNvbmRzIHRvIHByZXZlbnQgYW5v
dGhlciByZWNvbm5lY3QKKwkJCSAqIGluIHRoaXMgdGFzayB0aHJlYWQsIHdoaWNoIHdvdWxkIGJl
IHVzZWxlc3MgYXMgdGhlCisJCQkgKiBtb3VudCBjb250ZXh0IHdpbGwgZmFpbCBhdCBhbGwuCisJ
CQkgKi8KKwkJCWlmIChyYyAhPSAwKQorCQkJCW1zbGVlcCgyMDAwKTsKKwkJfSBlbHNlIHsKKwkJ
CWNpZnNfc2VydmVyX2RiZyhWRlMsICJSRkMgMTAwMiBuZWdhdGl2ZSBzZXNzaW9uIHJlc3BvbnNl
ICh1bmV4cGVjdGVkKVxuIik7CisJCQljaWZzX3JlY29ubmVjdChzZXJ2ZXIsIHRydWUpOworCQl9
CisJCWJyZWFrOworCWNhc2UgUkZDMTAwMl9SRVRBUkdFVF9TRVNTSU9OX1JFU1BPTlNFOgorCQlj
aWZzX3NlcnZlcl9kYmcoVkZTLCAiUkZDIDEwMDIgcmV0YXJnZXQgc2Vzc2lvbiByZXNwb25zZSAo
dW5leHBlY3RlZClcbiIpOwogCQljaWZzX3JlY29ubmVjdChzZXJ2ZXIsIHRydWUpOwogCQlicmVh
azsKIAlkZWZhdWx0OgpAQCAtMTcwMSw2ICsxODAyLDcgQEAgY2lmc19nZXRfdGNwX3Nlc3Npb24o
c3RydWN0IHNtYjNfZnNfY29udGV4dCAqY3R4LAogCW1lbWNweSh0Y3Bfc2VzLT5zZXJ2ZXJfUkZD
MTAwMV9uYW1lLAogCQljdHgtPnRhcmdldF9yZmMxMDAxX25hbWUsIFJGQzEwMDFfTkFNRV9MRU5f
V0lUSF9OVUxMKTsKIAl0Y3Bfc2VzLT5yZmMxMDAxX3Nlc3Npbml0ID0gY3R4LT5yZmMxMDAxX3Nl
c3Npbml0OworCXRjcF9zZXMtPndpdGhfcmZjMTAwMSA9IGZhbHNlOwogCXRjcF9zZXMtPnNlc3Np
b25fZXN0YWIgPSBmYWxzZTsKIAl0Y3Bfc2VzLT5zZXF1ZW5jZV9udW1iZXIgPSAwOwogCXRjcF9z
ZXMtPmNoYW5uZWxfc2VxdWVuY2VfbnVtID0gMDsgLyogb25seSB0cmFja2VkIGZvciBwcmltYXJ5
IGNoYW5uZWwgKi8KQEAgLTMyMjEsNiArMzMyMyw3IEBAIGlwX3JmYzEwMDFfY29ubmVjdChzdHJ1
Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpCiAJCXJldHVybiAtRUlPOwogCX0KIAorCXNlcnZl
ci0+d2l0aF9yZmMxMDAxID0gdHJ1ZTsKIAlyZXR1cm4gMDsKIH0KIApAQCAtMzMzOSw3ICszNDQy
LDggQEAgZ2VuZXJpY19pcF9jb25uZWN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcikK
IAkgKiBzZXJ2ZXIgcG9ydCAoMTM5KSBhbmQgaXQgd2FzIG5vdCBleHBsaWNpdGx5IGRpc2FibGVk
IGJ5IG1vdW50IG9wdGlvbgogCSAqIC1vIG5vbmJzZXNzaW5pdC4KIAkgKi8KLQlpZiAoc2VydmVy
LT5yZmMxMDAxX3Nlc3Npbml0ID09IDEgfHwKKwlpZiAoc2VydmVyLT53aXRoX3JmYzEwMDEgfHwK
KwkgICAgc2VydmVyLT5yZmMxMDAxX3Nlc3Npbml0ID09IDEgfHwKIAkgICAgKHNlcnZlci0+cmZj
MTAwMV9zZXNzaW5pdCA9PSAtMSAmJiBzcG9ydCA9PSBodG9ucyhSRkMxMDAxX1BPUlQpKSkKIAkJ
cmMgPSBpcF9yZmMxMDAxX2Nvbm5lY3Qoc2VydmVyKTsKIApkaWZmIC0tZ2l0IGEvZnMvc21iL2Ns
aWVudC90cmFuc3BvcnQuYyBiL2ZzL3NtYi9jbGllbnQvdHJhbnNwb3J0LmMKaW5kZXggMDM0MzRk
YmU5Mzc0Li4yNjZhZjE3YWE3ZDkgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvdHJhbnNwb3J0
LmMKKysrIGIvZnMvc21iL2NsaWVudC90cmFuc3BvcnQuYwpAQCAtODk0LDYgKzg5NCw5IEBAIGNp
ZnNfc3luY19taWRfcmVzdWx0KHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkLCBzdHJ1Y3QgVENQX1Nl
cnZlcl9JbmZvICpzZXJ2ZXIpCiAJY2FzZSBNSURfU0hVVERPV046CiAJCXJjID0gLUVIT1NURE9X
TjsKIAkJYnJlYWs7CisJY2FzZSBNSURfUkM6CisJCXJjID0gbWlkLT5taWRfcmM7CisJCWJyZWFr
OwogCWRlZmF1bHQ6CiAJCWlmICghKG1pZC0+bWlkX2ZsYWdzICYgTUlEX0RFTEVURUQpKSB7CiAJ
CQlsaXN0X2RlbF9pbml0KCZtaWQtPnFoZWFkKTsKLS0gCjIuNDMuMAoK
--000000000000f126210631b2402a
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0017-cifs-Allow-to-disable-or-force-initialization-of-Net.patch"
Content-Disposition: attachment; 
	filename="0017-cifs-Allow-to-disable-or-force-initialization-of-Net.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m8y5lyiq4>
X-Attachment-Id: f_m8y5lyiq4

RnJvbSA2ZmRjNGIxMGUwNjczMDE0ZjhlZjBmNTUyZmRmMzZmOGEwMjE5OWQ0IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBTdW4sIDI3IE9jdCAyMDI0IDEyOjEzOjEyICswMTAwClN1YmplY3Q6
IFtQQVRDSCAxNy80MV0gY2lmczogQWxsb3cgdG8gZGlzYWJsZSBvciBmb3JjZSBpbml0aWFsaXph
dGlvbiBvZgogTmV0QklPUyBzZXNzaW9uCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTog
dGV4dC9wbGFpbjsgY2hhcnNldD1VVEYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA4Yml0
CgpDdXJyZW50bHkgU01CIGNsaWVudCBhbHdheXMgdHJpZXMgdG8gaW5pdGlhbGl6ZSBOZXRCSU9T
IHNlc3Npb24gd2hlbiB0aGUKc2VydmVyIHBvcnQgaXMgMTM5LiBUaGlzIGlzIHVzZWZ1bCBmb3Ig
ZGVmYXVsdCBjYXNlcywgYnV0IG5vd2FkYXlzIHdoZW4KdXNpbmcgbm9uLXN0YW5kYXJkIHJvdXRp
bmcgb3IgdGVzdGluZyBiZXR3ZWVuIFZNcywgaXQgaXMgY29tbW9uIHRoYXQKc2VydmVycyBhcmUg
bGlzdGVuaW5nIG9uIG5vbi1zdGFuZGFyZCBwb3J0cy4KClNvIGFkZCBhIG5ldyBtb3VudCBvcHRp
b24gLW8gbmJzZXNzaW5pdCBhbmQgLW8gbm9uYnNlc3Npbml0IHdoaWNoIGVpdGhlcgpmb3JjZXMg
aW5pdGlhbGl6YXRpb24gb3IgZGlzYWJsZXMgaW5pdGlhbGl6YXRpb24gcmVnYXJkbGVzcyBvZiBz
ZXJ2ZXIgcG9ydApudW1iZXIuCgpUaGlzIGFsbG93cyBMaW51eCBTTUIgY2xpZW50IHRvIGNvbm5l
Y3QgdG8gb2xkZXIgU01CMSBzZXJ2ZXIgbGlzdGVuaW5nIG9uCm5vbi1zdGFuZGFyZCBwb3J0LCB3
aGljaCByZXF1aXJlcyBpbml0aWFsaXphdGlvbiBvZiBOZXRCSU9TIHNlc3Npb24sIGJ5CnVzaW5n
IGFkZGl0aW9uYWwgbW91bnQgb3B0aW9ucyAtbyBwb3J0PSBhbmQgLW8gbmJzZXNzaW5pdC4KClNp
Z25lZC1vZmYtYnk6IFBhbGkgUm9ow6FyIDxwYWxpQGtlcm5lbC5vcmc+Ci0tLQogZnMvc21iL2Ns
aWVudC9jaWZzZ2xvYi5oICAgfCAgMSArCiBmcy9zbWIvY2xpZW50L2Nvbm5lY3QuYyAgICB8IDEx
ICsrKysrKysrKystCiBmcy9zbWIvY2xpZW50L2ZzX2NvbnRleHQuYyB8IDE0ICsrKysrKysrKysr
KystCiBmcy9zbWIvY2xpZW50L2ZzX2NvbnRleHQuaCB8ICAyICsrCiA0IGZpbGVzIGNoYW5nZWQs
IDI2IGluc2VydGlvbnMoKyksIDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvc21iL2Ns
aWVudC9jaWZzZ2xvYi5oIGIvZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oCmluZGV4IDk3MDhhYzky
NzJjZS4uODE4M2RiYTE5N2RkIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmgK
KysrIGIvZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oCkBAIC03MTIsNiArNzEyLDcgQEAgc3RydWN0
IFRDUF9TZXJ2ZXJfSW5mbyB7CiAJc3BpbmxvY2tfdCBzcnZfbG9jazsgIC8qIHByb3RlY3QgYW55
dGhpbmcgaGVyZSB0aGF0IGlzIG5vdCBwcm90ZWN0ZWQgKi8KIAlfX3U2NCBjb25uX2lkOyAvKiBj
b25uZWN0aW9uIGlkZW50aWZpZXIgKHVzZWZ1bCBmb3IgZGVidWdnaW5nKSAqLwogCWludCBzcnZf
Y291bnQ7IC8qIHJlZmVyZW5jZSBjb3VudGVyICovCisJaW50IHJmYzEwMDFfc2Vzc2luaXQ7IC8q
IHdoZXRoZXIgdG8gZXN0YXNibGlzaCBuZXRiaW9zIHNlc3Npb24gKi8KIAkvKiAxNSBjaGFyYWN0
ZXIgc2VydmVyIG5hbWUgKyAweDIwIDE2dGggYnl0ZSBpbmRpY2F0aW5nIHR5cGUgPSBzcnYgKi8K
IAljaGFyIHNlcnZlcl9SRkMxMDAxX25hbWVbUkZDMTAwMV9OQU1FX0xFTl9XSVRIX05VTExdOwog
CXN0cnVjdCBzbWJfdmVyc2lvbl9vcGVyYXRpb25zCSpvcHM7CmRpZmYgLS1naXQgYS9mcy9zbWIv
Y2xpZW50L2Nvbm5lY3QuYyBiL2ZzL3NtYi9jbGllbnQvY29ubmVjdC5jCmluZGV4IGUyYjU2MDg4
YjA3ZC4uMmU0ZWM3ZTY1NTI5IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2Nvbm5lY3QuYwor
KysgYi9mcy9zbWIvY2xpZW50L2Nvbm5lY3QuYwpAQCAtMTcwMCw2ICsxNzAwLDcgQEAgY2lmc19n
ZXRfdGNwX3Nlc3Npb24oc3RydWN0IHNtYjNfZnNfY29udGV4dCAqY3R4LAogCQljdHgtPnNvdXJj
ZV9yZmMxMDAxX25hbWUsIFJGQzEwMDFfTkFNRV9MRU5fV0lUSF9OVUxMKTsKIAltZW1jcHkodGNw
X3Nlcy0+c2VydmVyX1JGQzEwMDFfbmFtZSwKIAkJY3R4LT50YXJnZXRfcmZjMTAwMV9uYW1lLCBS
RkMxMDAxX05BTUVfTEVOX1dJVEhfTlVMTCk7CisJdGNwX3Nlcy0+cmZjMTAwMV9zZXNzaW5pdCA9
IGN0eC0+cmZjMTAwMV9zZXNzaW5pdDsKIAl0Y3Bfc2VzLT5zZXNzaW9uX2VzdGFiID0gZmFsc2U7
CiAJdGNwX3Nlcy0+c2VxdWVuY2VfbnVtYmVyID0gMDsKIAl0Y3Bfc2VzLT5jaGFubmVsX3NlcXVl
bmNlX251bSA9IDA7IC8qIG9ubHkgdHJhY2tlZCBmb3IgcHJpbWFyeSBjaGFubmVsICovCkBAIC0z
MTkwLDcgKzMxOTEsMTUgQEAgZ2VuZXJpY19pcF9jb25uZWN0KHN0cnVjdCBUQ1BfU2VydmVyX0lu
Zm8gKnNlcnZlcikKIAkJcmV0dXJuIHJjOwogCX0KIAl0cmFjZV9zbWIzX2Nvbm5lY3RfZG9uZShz
ZXJ2ZXItPmhvc3RuYW1lLCBzZXJ2ZXItPmNvbm5faWQsICZzZXJ2ZXItPmRzdGFkZHIpOwotCWlm
IChzcG9ydCA9PSBodG9ucyhSRkMxMDAxX1BPUlQpKQorCisJLyoKKwkgKiBFc3RhYmxpc2ggUkZD
MTAwMSBOZXRCSU9TIHNlc3Npb24gd2hlbiBpdCB3YXMgZXhwbGljaXRseSByZXF1ZXN0ZWQKKwkg
KiBieSBtb3VudCBvcHRpb24gLW8gbmJzZXNzaW5pdCwgb3Igd2hlbiBjb25uZWN0aW5nIHRvIGRl
ZmF1bHQgUkZDMTAwMQorCSAqIHNlcnZlciBwb3J0ICgxMzkpIGFuZCBpdCB3YXMgbm90IGV4cGxp
Y2l0bHkgZGlzYWJsZWQgYnkgbW91bnQgb3B0aW9uCisJICogLW8gbm9uYnNlc3Npbml0LgorCSAq
LworCWlmIChzZXJ2ZXItPnJmYzEwMDFfc2Vzc2luaXQgPT0gMSB8fAorCSAgICAoc2VydmVyLT5y
ZmMxMDAxX3Nlc3Npbml0ID09IC0xICYmIHNwb3J0ID09IGh0b25zKFJGQzEwMDFfUE9SVCkpKQog
CQlyYyA9IGlwX3JmYzEwMDFfY29ubmVjdChzZXJ2ZXIpOwogCiAJcmV0dXJuIHJjOwpkaWZmIC0t
Z2l0IGEvZnMvc21iL2NsaWVudC9mc19jb250ZXh0LmMgYi9mcy9zbWIvY2xpZW50L2ZzX2NvbnRl
eHQuYwppbmRleCA3OTU0ZDIyODc0MWYuLmZkMzFkYzhmODdkMCAxMDA2NDQKLS0tIGEvZnMvc21i
L2NsaWVudC9mc19jb250ZXh0LmMKKysrIGIvZnMvc21iL2NsaWVudC9mc19jb250ZXh0LmMKQEAg
LTEzNSw2ICsxMzUsNyBAQCBjb25zdCBzdHJ1Y3QgZnNfcGFyYW1ldGVyX3NwZWMgc21iM19mc19w
YXJhbWV0ZXJzW10gPSB7CiAJZnNwYXJhbV9mbGFnKCJ3aXRuZXNzIiwgT3B0X3dpdG5lc3MpLAog
CWZzcGFyYW1fZmxhZ19ubygibmF0aXZlc29ja2V0IiwgT3B0X25hdGl2ZXNvY2tldCksCiAJZnNw
YXJhbV9mbGFnX25vKCJ1bmljb2RlIiwgT3B0X3VuaWNvZGUpLAorCWZzcGFyYW1fZmxhZ19ubygi
bmJzZXNzaW5pdCIsIE9wdF9uYnNlc3Npbml0KSwKIAogCS8qIE1vdW50IG9wdGlvbnMgd2hpY2gg
dGFrZSB1aWQgb3IgZ2lkICovCiAJZnNwYXJhbV91aWQoImJhY2t1cHVpZCIsIE9wdF9iYWNrdXB1
aWQpLApAQCAtOTY4LDYgKzk2OSwxMCBAQCBzdGF0aWMgaW50IHNtYjNfdmVyaWZ5X3JlY29uZmln
dXJlX2N0eChzdHJ1Y3QgZnNfY29udGV4dCAqZmMsCiAJCWNpZnNfZXJyb3JmKGZjLCAiY2FuIG5v
dCBjaGFuZ2UgdW5pY29kZSBkdXJpbmcgcmVtb3VudFxuIik7CiAJCXJldHVybiAtRUlOVkFMOwog
CX0KKwlpZiAobmV3X2N0eC0+cmZjMTAwMV9zZXNzaW5pdCAhPSBvbGRfY3R4LT5yZmMxMDAxX3Nl
c3Npbml0KSB7CisJCWNpZnNfZXJyb3JmKGZjLCAiY2FuIG5vdCBjaGFuZ2UgbmJzZXNzaW5pdCBk
dXJpbmcgcmVtb3VudFxuIik7CisJCXJldHVybiAtRUlOVkFMOworCX0KIAogCXJldHVybiAwOwog
fQpAQCAtMTU5MSw2ICsxNTk2LDEwIEBAIHN0YXRpYyBpbnQgc21iM19mc19jb250ZXh0X3BhcnNl
X3BhcmFtKHN0cnVjdCBmc19jb250ZXh0ICpmYywKIAkJaWYgKGkgPT0gUkZDMTAwMV9OQU1FX0xF
TiAmJiBwYXJhbS0+c3RyaW5nW2ldICE9IDApCiAJCQlwcl93YXJuKCJzZXJ2ZXIgbmV0Ymlvc25h
bWUgbG9uZ2VyIHRoYW4gMTUgdHJ1bmNhdGVkXG4iKTsKIAkJYnJlYWs7CisJY2FzZSBPcHRfbmJz
ZXNzaW5pdDoKKwkJY3R4LT5yZmMxMDAxX3Nlc3Npbml0ID0gIXJlc3VsdC5uZWdhdGVkOworCQlj
aWZzX2RiZyhGWUksICJyZmMxMDAxX3Nlc3Npbml0IHNldCB0byAlZFxuIiwgY3R4LT5yZmMxMDAx
X3Nlc3Npbml0KTsKKwkJYnJlYWs7CiAJY2FzZSBPcHRfdmVyOgogCQkvKiB2ZXJzaW9uIG9mIG1v
dW50IHVzZXJzcGFjZSB0b29scywgbm90IGRpYWxlY3QgKi8KIAkJLyogSWYgaW50ZXJmYWNlIGNo
YW5nZXMgaW4gbW91bnQuY2lmcyBidW1wIHRvIG5ldyB2ZXIgKi8KQEAgLTE4NzgsMTMgKzE4ODcs
MTYgQEAgaW50IHNtYjNfaW5pdF9mc19jb250ZXh0KHN0cnVjdCBmc19jb250ZXh0ICpmYykKIAlt
ZW1zZXQoY3R4LT5zb3VyY2VfcmZjMTAwMV9uYW1lLCAweDIwLCBSRkMxMDAxX05BTUVfTEVOKTsK
IAlmb3IgKGkgPSAwOyBpIDwgc3Rybmxlbihub2RlbmFtZSwgUkZDMTAwMV9OQU1FX0xFTik7IGkr
KykKIAkJY3R4LT5zb3VyY2VfcmZjMTAwMV9uYW1lW2ldID0gdG91cHBlcihub2RlbmFtZVtpXSk7
Ci0KIAljdHgtPnNvdXJjZV9yZmMxMDAxX25hbWVbUkZDMTAwMV9OQU1FX0xFTl0gPSAwOworCiAJ
LyoKIAkgKiBudWxsIHRhcmdldCBuYW1lIGluZGljYXRlcyB0byB1c2UgKlNNQlNFUlZSIGRlZmF1
bHQgY2FsbGVkIG5hbWUKIAkgKiAgaWYgd2UgZW5kIHVwIHNlbmRpbmcgUkZDMTAwMSBzZXNzaW9u
IGluaXRpYWxpemUKIAkgKi8KIAljdHgtPnRhcmdldF9yZmMxMDAxX25hbWVbMF0gPSAwOworCisJ
Y3R4LT5yZmMxMDAxX3Nlc3Npbml0ID0gLTE7IC8qIGF1dG9kZXRlY3QgYmFzZWQgb24gcG9ydCBu
dW1iZXIgKi8KKwogCWN0eC0+Y3JlZF91aWQgPSBjdXJyZW50X3VpZCgpOwogCWN0eC0+bGludXhf
dWlkID0gY3VycmVudF91aWQoKTsKIAljdHgtPmxpbnV4X2dpZCA9IGN1cnJlbnRfZ2lkKCk7CmRp
ZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2ZzX2NvbnRleHQuaCBiL2ZzL3NtYi9jbGllbnQvZnNf
Y29udGV4dC5oCmluZGV4IDQyYzZiNjZjMmMxYS4uMjYzYzAzMGIwNDAzIDEwMDY0NAotLS0gYS9m
cy9zbWIvY2xpZW50L2ZzX2NvbnRleHQuaAorKysgYi9mcy9zbWIvY2xpZW50L2ZzX2NvbnRleHQu
aApAQCAtMTc0LDYgKzE3NCw3IEBAIGVudW0gY2lmc19wYXJhbSB7CiAJT3B0X2lvY2hhcnNldCwK
IAlPcHRfbmV0Ymlvc25hbWUsCiAJT3B0X3NlcnZlcm4sCisJT3B0X25ic2Vzc2luaXQsCiAJT3B0
X3ZlciwKIAlPcHRfdmVycywKIAlPcHRfc2VjLApAQCAtMjE2LDYgKzIxNyw3IEBAIHN0cnVjdCBz
bWIzX2ZzX2NvbnRleHQgewogCWNoYXIgKmlvY2hhcnNldDsgIC8qIGxvY2FsIGNvZGUgcGFnZSBm
b3IgbWFwcGluZyB0byBhbmQgZnJvbSBVbmljb2RlICovCiAJY2hhciBzb3VyY2VfcmZjMTAwMV9u
YW1lW1JGQzEwMDFfTkFNRV9MRU5fV0lUSF9OVUxMXTsgLyogY2xudCBuYiBuYW1lICovCiAJY2hh
ciB0YXJnZXRfcmZjMTAwMV9uYW1lW1JGQzEwMDFfTkFNRV9MRU5fV0lUSF9OVUxMXTsgLyogc3J2
ciBuYiBuYW1lICovCisJaW50IHJmYzEwMDFfc2Vzc2luaXQ7CiAJa3VpZF90IGNyZWRfdWlkOwog
CWt1aWRfdCBsaW51eF91aWQ7CiAJa2dpZF90IGxpbnV4X2dpZDsKLS0gCjIuNDMuMAoK
--000000000000f126210631b2402a
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0027-cifs-Fix-access_flags_to_smbopen_mode.patch"
Content-Disposition: attachment; 
	filename="0027-cifs-Fix-access_flags_to_smbopen_mode.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m8y5lyi61>
X-Attachment-Id: f_m8y5lyi61

RnJvbSAwZjdjZmEzNzU1NGRhYzM0OWM1YWI1NDgwY2ViYjcxMjAwNmU0MDNlIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBTdW4sIDE3IE5vdiAyMDI0IDExOjUwOjE4ICswMTAwClN1YmplY3Q6
IFtQQVRDSCAyNy80MV0gY2lmczogRml4IGFjY2Vzc19mbGFnc190b19zbWJvcGVuX21vZGUKTUlN
RS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PVVURi04CkNv
bnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKCldoZW4gY29udmVydGluZyBhY2Nlc3NfZmxh
Z3MgdG8gU01CT1BFTiBtb2RlLCBjaGVjayBmb3IgYWxsIHBvc3NpYmxlIGFjY2VzcwpmbGFncywg
bm90IG9ubHkgR0VORVJJQ19SRUFEIGFuZCBHRU5FUklDX1dSSVRFIGZsYWdzLgoKU2lnbmVkLW9m
Zi1ieTogUGFsaSBSb2jDoXIgPHBhbGlAa2VybmVsLm9yZz4KLS0tCiBmcy9zbWIvY2xpZW50L2Np
ZnNzbWIuYyB8IDMyICsrKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tCiAxIGZpbGUgY2hh
bmdlZCwgMjQgaW5zZXJ0aW9ucygrKSwgOCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9z
bWIvY2xpZW50L2NpZnNzbWIuYyBiL2ZzL3NtYi9jbGllbnQvY2lmc3NtYi5jCmluZGV4IGExZTBj
ODUwMWU0NS4uNmZhZTBlOTA3YzAyIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2NpZnNzbWIu
YworKysgYi9mcy9zbWIvY2xpZW50L2NpZnNzbWIuYwpAQCAtMTA0MSwxNSArMTA0MSwzMSBAQCBz
dGF0aWMgX191MTYgY29udmVydF9kaXNwb3NpdGlvbihpbnQgZGlzcG9zaXRpb24pCiBzdGF0aWMg
aW50CiBhY2Nlc3NfZmxhZ3NfdG9fc21ib3Blbl9tb2RlKGNvbnN0IGludCBhY2Nlc3NfZmxhZ3Mp
CiB7Ci0JaW50IG1hc2tlZF9mbGFncyA9IGFjY2Vzc19mbGFncyAmIChHRU5FUklDX1JFQUQgfCBH
RU5FUklDX1dSSVRFKTsKLQotCWlmIChtYXNrZWRfZmxhZ3MgPT0gR0VORVJJQ19SRUFEKQotCQly
ZXR1cm4gU01CT1BFTl9SRUFEOwotCWVsc2UgaWYgKG1hc2tlZF9mbGFncyA9PSBHRU5FUklDX1dS
SVRFKQorCS8qCisJICogU1lTVEVNX1NFQ1VSSVRZIGdyYW50cyBib3RoIHJlYWQgYW5kIHdyaXRl
IGFjY2VzcyB0byBTQUNMLCB0cmVhdCBpcyBhcyByZWFkL3dyaXRlLgorCSAqIE1BWElNVU1fQUxM
T1dFRCBncmFudHMgYXMgbWFueSBhY2Nlc3MgYXMgcG9zc2libGUsIHNvIHRyZWF0IGl0IGFzIHJl
YWQvd3JpdGUgdG9vLgorCSAqIFNZTkNIUk9OSVpFIGFzIGlzIGRvZXMgbm90IGdyYW50IGFueSBz
cGVjaWZpYyBhY2Nlc3MsIHNvIGRvIG5vdCBjaGVjayBpdHMgbWFzay4KKwkgKiBJZiBvbmx5IFNZ
TkNIUk9OSVpFIGJpdCBpcyBzcGVjaWZpZWQgdGhlbiBmYWxsYmFjayB0byByZWFkIGFjY2Vzcy4K
KwkgKi8KKwlib29sIHdpdGhfd3JpdGVfZmxhZ3MgPSBhY2Nlc3NfZmxhZ3MgJiAoRklMRV9XUklU
RV9EQVRBIHwgRklMRV9BUFBFTkRfREFUQSB8IEZJTEVfV1JJVEVfRUEgfAorCQkJCQkJRklMRV9E
RUxFVEVfQ0hJTEQgfCBGSUxFX1dSSVRFX0FUVFJJQlVURVMgfCBERUxFVEUgfAorCQkJCQkJV1JJ
VEVfREFDIHwgV1JJVEVfT1dORVIgfCBTWVNURU1fU0VDVVJJVFkgfAorCQkJCQkJTUFYSU1VTV9B
TExPV0VEIHwgR0VORVJJQ19XUklURSB8IEdFTkVSSUNfQUxMKTsKKwlib29sIHdpdGhfcmVhZF9m
bGFncyA9IGFjY2Vzc19mbGFncyAmIChGSUxFX1JFQURfREFUQSB8IEZJTEVfUkVBRF9FQSB8IEZJ
TEVfRVhFQ1VURSB8CisJCQkJCQlGSUxFX1JFQURfQVRUUklCVVRFUyB8IFJFQURfQ09OVFJPTCB8
CisJCQkJCQlTWVNURU1fU0VDVVJJVFkgfCBNQVhJTVVNX0FMTE9XRUQgfCBHRU5FUklDX0FMTCB8
CisJCQkJCQlHRU5FUklDX0VYRUNVVEUgfCBHRU5FUklDX1JFQUQpOworCWJvb2wgd2l0aF9leGVj
dXRlX2ZsYWdzID0gYWNjZXNzX2ZsYWdzICYgKEZJTEVfRVhFQ1VURSB8IE1BWElNVU1fQUxMT1dF
RCB8IEdFTkVSSUNfQUxMIHwKKwkJCQkJCUdFTkVSSUNfRVhFQ1VURSk7CisKKwlpZiAod2l0aF93
cml0ZV9mbGFncyAmJiB3aXRoX3JlYWRfZmxhZ3MpCisJCXJldHVybiBTTUJPUEVOX1JFQURXUklU
RTsKKwllbHNlIGlmICh3aXRoX3dyaXRlX2ZsYWdzKQogCQlyZXR1cm4gU01CT1BFTl9XUklURTsK
LQotCS8qIGp1c3QgZ28gZm9yIHJlYWQvd3JpdGUgKi8KLQlyZXR1cm4gU01CT1BFTl9SRUFEV1JJ
VEU7CisJZWxzZSBpZiAod2l0aF9leGVjdXRlX2ZsYWdzKQorCQlyZXR1cm4gU01CT1BFTl9FWEVD
VVRFOworCWVsc2UKKwkJcmV0dXJuIFNNQk9QRU5fUkVBRDsKIH0KIAogaW50Ci0tIAoyLjQzLjAK
Cg==
--000000000000f126210631b2402a
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0028-cifs-Fix-querying-and-creating-MF-symlinks-over-SMB1.patch"
Content-Disposition: attachment; 
	filename="0028-cifs-Fix-querying-and-creating-MF-symlinks-over-SMB1.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m8y5lyht0>
X-Attachment-Id: f_m8y5lyht0

RnJvbSA3YzQ4MzYyZmEwNGMxMWJhZWJmYjk0OGNhYjQyZGY4ZWRjM2E4MDdkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBTYXQsIDI4IERlYyAyMDI0IDIxOjA5OjU0ICswMTAwClN1YmplY3Q6
IFtQQVRDSCAyOC80MV0gY2lmczogRml4IHF1ZXJ5aW5nIGFuZCBjcmVhdGluZyBNRiBzeW1saW5r
cyBvdmVyIFNNQjEKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBj
aGFyc2V0PVVURi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKCk9sZCBTTUIxIHNl
cnZlcnMgd2l0aG91dCBDQVBfTlRfU01CUyBkbyBub3Qgc3VwcG9ydCBDSUZTX29wZW4oKSBmdW5j
dGlvbgphbmQgaW5zdGVhZCBTTUJMZWdhY3lPcGVuKCkgbmVlZHMgdG8gYmUgdXNlZC4gVGhpcyBs
b2dpYyBpcyBhbHJlYWR5IGhhbmRsZWQKaW4gY2lmc19vcGVuX2ZpbGUoKSBmdW5jdGlvbiwgd2hp
Y2ggaXMgc2VydmVyLT5vcHMtPm9wZW4gY2FsbGJhY2sgZnVuY3Rpb24uCgpTbyBmb3IgcXVlcnlp
bmcgYW5kIGNyZWF0aW5nIE1GIHN5bWxpbmtzIHVzZSBvcGVuIGNhbGxiYWNrIGZ1bmN0aW9uIGlu
c3RlYWQKb2YgQ0lGU19vcGVuKCkgZnVuY3Rpb24gZGlyZWN0bHkuCgpUaGlzIGNoYW5nZSBmaXhl
cyBxdWVyeWluZyBhbmQgY3JlYXRpbmcgbmV3IE1GIHN5bWxpbmtzIG9uIFdpbmRvd3MgOTguCkN1
cnJlbnRseSBjaWZzX3F1ZXJ5X21mX3N5bWxpbmsoKSBpcyBub3QgYWJsZSB0byBkZXRlY3QgTUYg
c3ltbGluayBhbmQKY2lmc19jcmVhdGVfbWZfc3ltbGluaygpIGlzIGZhaWxpbmcgd2l0aCBFSU8g
ZXJyb3IuCgpTaWduZWQtb2ZmLWJ5OiBQYWxpIFJvaMOhciA8cGFsaUBrZXJuZWwub3JnPgotLS0K
IGZzL3NtYi9jbGllbnQvbGluay5jIHwgOCArKysrLS0tLQogMSBmaWxlIGNoYW5nZWQsIDQgaW5z
ZXJ0aW9ucygrKSwgNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2xp
bmsuYyBiL2ZzL3NtYi9jbGllbnQvbGluay5jCmluZGV4IGIxYTM0NmUyMGIwNy4uMmVjZDcwNWU5
ZThjIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2xpbmsuYworKysgYi9mcy9zbWIvY2xpZW50
L2xpbmsuYwpAQCAtMjU5LDcgKzI1OSw3IEBAIGNpZnNfcXVlcnlfbWZfc3ltbGluayh1bnNpZ25l
ZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCXN0cnVjdCBjaWZzX29wZW5fcGFy
bXMgb3Bhcm1zOwogCXN0cnVjdCBjaWZzX2lvX3Bhcm1zIGlvX3Bhcm1zID0gezB9OwogCWludCBi
dWZfdHlwZSA9IENJRlNfTk9fQlVGRkVSOwotCUZJTEVfQUxMX0lORk8gZmlsZV9pbmZvOworCXN0
cnVjdCBjaWZzX29wZW5faW5mb19kYXRhIHF1ZXJ5X2RhdGE7CiAKIAlvcGFybXMgPSAoc3RydWN0
IGNpZnNfb3Blbl9wYXJtcykgewogCQkudGNvbiA9IHRjb24sCkBAIC0yNzEsMTEgKzI3MSwxMSBA
QCBjaWZzX3F1ZXJ5X21mX3N5bWxpbmsodW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNv
biAqdGNvbiwKIAkJLmZpZCA9ICZmaWQsCiAJfTsKIAotCXJjID0gQ0lGU19vcGVuKHhpZCwgJm9w
YXJtcywgJm9wbG9jaywgJmZpbGVfaW5mbyk7CisJcmMgPSB0Y29uLT5zZXMtPnNlcnZlci0+b3Bz
LT5vcGVuKHhpZCwgJm9wYXJtcywgJm9wbG9jaywgJnF1ZXJ5X2RhdGEpOwogCWlmIChyYykKIAkJ
cmV0dXJuIHJjOwogCi0JaWYgKGZpbGVfaW5mby5FbmRPZkZpbGUgIT0gY3B1X3RvX2xlNjQoQ0lG
U19NRl9TWU1MSU5LX0ZJTEVfU0laRSkpIHsKKwlpZiAocXVlcnlfZGF0YS5maS5FbmRPZkZpbGUg
IT0gY3B1X3RvX2xlNjQoQ0lGU19NRl9TWU1MSU5LX0ZJTEVfU0laRSkpIHsKIAkJcmMgPSAtRU5P
RU5UOwogCQkvKiBpdCdzIG5vdCBhIHN5bWxpbmsgKi8KIAkJZ290byBvdXQ7CkBAIC0zMTQsNyAr
MzE0LDcgQEAgY2lmc19jcmVhdGVfbWZfc3ltbGluayh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3Qg
Y2lmc190Y29uICp0Y29uLAogCQkuZmlkID0gJmZpZCwKIAl9OwogCi0JcmMgPSBDSUZTX29wZW4o
eGlkLCAmb3Bhcm1zLCAmb3Bsb2NrLCBOVUxMKTsKKwlyYyA9IHRjb24tPnNlcy0+c2VydmVyLT5v
cHMtPm9wZW4oeGlkLCAmb3Bhcm1zLCAmb3Bsb2NrLCBOVUxMKTsKIAlpZiAocmMpCiAJCXJldHVy
biByYzsKIAotLSAKMi40My4wCgo=
--000000000000f126210631b2402a
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0021-cifs-Fix-negotiate-retry-functionality.patch"
Content-Disposition: attachment; 
	filename="0021-cifs-Fix-negotiate-retry-functionality.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m8y5lyie2>
X-Attachment-Id: f_m8y5lyie2

RnJvbSAyZjgxYmIzMjkzY2U1YWEzOTJjMDYzMjIxZTk2MGQ5MGY2YjRhZDUxIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBTYXQsIDIgTm92IDIwMjQgMjA6MDY6NTAgKzAxMDAKU3ViamVjdDog
W1BBVENIIDIxLzQxXSBjaWZzOiBGaXggbmVnb3RpYXRlIHJldHJ5IGZ1bmN0aW9uYWxpdHkKTUlN
RS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PVVURi04CkNv
bnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKClNNQiBuZWdvdGlhdGUgcmV0cnkgZnVuY3Rp
b25hbGl0eSBpbiBjaWZzX25lZ290aWF0ZSgpIGlzIGN1cnJlbnRseSBicm9rZW4KYW5kIGRvZXMg
bm90IHdvcmsgd2hlbiBkb2luZyBzb2NrZXQgcmVjb25uZWN0LiBDYWxsZXIgb2YgdGhpcyBmdW5j
dGlvbiwKd2hpY2ggaXMgY2lmc19uZWdvdGlhdGVfcHJvdG9jb2woKSByZXF1aXJlcyB0aGF0IHRj
cFN0YXR1cyBhZnRlciBzdWNjZXNzZnVsCmV4ZWN1dGlvbiBvZiBuZWdvdGlhdGUgY2FsbGJhY2sg
c3RheSBpbiBDaWZzSW5OZWdvdGlhdGUuIEJ1dCBpZiB0aGUKQ0lGU1NNQk5lZ290aWF0ZSgpIGNh
bGxlZCBmcm9tIGNpZnNfbmVnb3RpYXRlKCkgZmFpbHMgZHVlIHRvIGNvbm5lY3Rpb24KaXNzdWVz
IHRoZW4gdGNwU3RhdHVzIGlzIGNoYW5nZWQgYXMgc28gcmVwZWF0ZWQgQ0lGU1NNQk5lZ290aWF0
ZSgpIGNhbGwKZG9lcyBub3QgaGVscC4KCkZpeCB0aGlzIHByb2JsZW0gYnkgbW92aW5nIHJldHJ5
aW5nIGNvZGUgZnJvbSBuZWdvdGlhdGUgY2FsbGJhY2sgKHdoaWNoIGlzCmVpdGhlciBjaWZzX25l
Z290aWF0ZSgpIG9yIHNtYjJfbmVnb3RpYXRlKCkpIHRvIGNpZnNfbmVnb3RpYXRlX3Byb3RvY29s
KCkKd2hpY2ggaXMgY2FsbGVyIG9mIHRob3NlIGNhbGxiYWNrcy4gVGhpcyBhbGxvd3MgdG8gcHJv
cGVybHkgaGFuZGxlIGFuZAppbXBsZW1lbnQgY29ycmVjdCB0cmFuc2lzdGlvbnMgYmV0d2VlbiB0
Y3BTdGF0dXMgc3RhdGVzIGFzIGZ1bmN0aW9uCmNpZnNfbmVnb3RpYXRlX3Byb3RvY29sKCkgYWxy
ZWFkeSBoYW5kbGVzIGl0LgoKV2l0aCB0aGlzIGNoYW5nZSwgY2lmc19uZWdvdGlhdGVfcHJvdG9j
b2woKSBub3cgaGFuZGxlcyBhbHNvIC1FQUdBSU4gZXJyb3IKc2V0IGJ5IHRoZSBSRkMxMDAyX05F
R0FUSVZFX1NFU1NJT05fUkVTUE9OU0UgcHJvY2Vzc2luZyBhZnRlciByZWNvbm5lY3RpbmcKd2l0
aCBOZXRCSU9TIHNlc3Npb24uCgpTaWduZWQtb2ZmLWJ5OiBQYWxpIFJvaMOhciA8cGFsaUBrZXJu
ZWwub3JnPgotLS0KIGZzL3NtYi9jbGllbnQvY29ubmVjdC5jIHwgMTAgKysrKysrKysrKwogZnMv
c21iL2NsaWVudC9zbWIxb3BzLmMgfCAgNyAtLS0tLS0tCiBmcy9zbWIvY2xpZW50L3NtYjJvcHMu
YyB8ICAzIC0tLQogMyBmaWxlcyBjaGFuZ2VkLCAxMCBpbnNlcnRpb25zKCspLCAxMCBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2Nvbm5lY3QuYyBiL2ZzL3NtYi9jbGll
bnQvY29ubmVjdC5jCmluZGV4IDVlMzA0NmQyYzM2ZS4uMmNiZDYyZjIyYWUyIDEwMDY0NAotLS0g
YS9mcy9zbWIvY2xpZW50L2Nvbm5lY3QuYworKysgYi9mcy9zbWIvY2xpZW50L2Nvbm5lY3QuYwpA
QCAtNDE5MCwxMSArNDE5MCwxMyBAQCBpbnQKIGNpZnNfbmVnb3RpYXRlX3Byb3RvY29sKGNvbnN0
IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3NlcyAqc2VzLAogCQkJc3RydWN0IFRDUF9T
ZXJ2ZXJfSW5mbyAqc2VydmVyKQogeworCWJvb2wgaW5fcmV0cnkgPSBmYWxzZTsKIAlpbnQgcmMg
PSAwOwogCiAJaWYgKCFzZXJ2ZXItPm9wcy0+bmVlZF9uZWcgfHwgIXNlcnZlci0+b3BzLT5uZWdv
dGlhdGUpCiAJCXJldHVybiAtRU5PU1lTOwogCityZXRyeToKIAkvKiBvbmx5IHNlbmQgb25jZSBw
ZXIgY29ubmVjdCAqLwogCXNwaW5fbG9jaygmc2VydmVyLT5zcnZfbG9jayk7CiAJaWYgKHNlcnZl
ci0+dGNwU3RhdHVzICE9IENpZnNHb29kICYmCkBAIC00MjE0LDYgKzQyMTYsMTQgQEAgY2lmc19u
ZWdvdGlhdGVfcHJvdG9jb2woY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfc2Vz
ICpzZXMsCiAJc3Bpbl91bmxvY2soJnNlcnZlci0+c3J2X2xvY2spOwogCiAJcmMgPSBzZXJ2ZXIt
Pm9wcy0+bmVnb3RpYXRlKHhpZCwgc2VzLCBzZXJ2ZXIpOworCWlmIChyYyA9PSAtRUFHQUlOKSB7
CisJCS8qIEFsbG93IG9uZSByZXRyeSBhdHRlbXB0ICovCisJCWlmICghaW5fcmV0cnkpIHsKKwkJ
CWluX3JldHJ5ID0gdHJ1ZTsKKwkJCWdvdG8gcmV0cnk7CisJCX0KKwkJcmMgPSAtRUhPU1RET1dO
OworCX0KIAlpZiAocmMgPT0gMCkgewogCQlzcGluX2xvY2soJnNlcnZlci0+c3J2X2xvY2spOwog
CQlpZiAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc0luTmVnb3RpYXRlKQpkaWZmIC0tZ2l0IGEv
ZnMvc21iL2NsaWVudC9zbWIxb3BzLmMgYi9mcy9zbWIvY2xpZW50L3NtYjFvcHMuYwppbmRleCA0
MDE0ODg3Y2FiMGIuLjgzYTVkZTI0MmI4MSAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9zbWIx
b3BzLmMKKysrIGIvZnMvc21iL2NsaWVudC9zbWIxb3BzLmMKQEAgLTQyNiwxMyArNDI2LDYgQEAg
Y2lmc19uZWdvdGlhdGUoY29uc3QgdW5zaWduZWQgaW50IHhpZCwKIHsKIAlpbnQgcmM7CiAJcmMg
PSBDSUZTU01CTmVnb3RpYXRlKHhpZCwgc2VzLCBzZXJ2ZXIpOwotCWlmIChyYyA9PSAtRUFHQUlO
KSB7Ci0JCS8qIHJldHJ5IG9ubHkgb25jZSBvbiAxc3QgdGltZSBjb25uZWN0aW9uICovCi0JCXNl
dF9jcmVkaXRzKHNlcnZlciwgMSk7Ci0JCXJjID0gQ0lGU1NNQk5lZ290aWF0ZSh4aWQsIHNlcywg
c2VydmVyKTsKLQkJaWYgKHJjID09IC1FQUdBSU4pCi0JCQlyYyA9IC1FSE9TVERPV047Ci0JfQog
CXJldHVybiByYzsKIH0KIApkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9zbWIyb3BzLmMgYi9m
cy9zbWIvY2xpZW50L3NtYjJvcHMuYwppbmRleCA1ZGRmZDhlMzgyZWUuLjEyZGFjNjRiMGEyOSAx
MDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9zbWIyb3BzLmMKKysrIGIvZnMvc21iL2NsaWVudC9z
bWIyb3BzLmMKQEAgLTQ2NCw5ICs0NjQsNiBAQCBzbWIyX25lZ290aWF0ZShjb25zdCB1bnNpZ25l
ZCBpbnQgeGlkLAogCXNlcnZlci0+Q3VycmVudE1pZCA9IDA7CiAJc3Bpbl91bmxvY2soJnNlcnZl
ci0+bWlkX2xvY2spOwogCXJjID0gU01CMl9uZWdvdGlhdGUoeGlkLCBzZXMsIHNlcnZlcik7Ci0J
LyogQkIgd2UgcHJvYmFibHkgZG9uJ3QgbmVlZCB0byByZXRyeSB3aXRoIG1vZGVybiBzZXJ2ZXJz
ICovCi0JaWYgKHJjID09IC1FQUdBSU4pCi0JCXJjID0gLUVIT1NURE9XTjsKIAlyZXR1cm4gcmM7
CiB9CiAKLS0gCjIuNDMuMAoK
--000000000000f126210631b2402a
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0015-cifs-Add-a-new-xattr-system.smb3_ntsd_owner-for-gett.patch"
Content-Disposition: attachment; 
	filename="0015-cifs-Add-a-new-xattr-system.smb3_ntsd_owner-for-gett.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m8y5lyix5>
X-Attachment-Id: f_m8y5lyix5

RnJvbSBkYmUzMjRjZWFmMzcxYjQ2YjgyMzdjNmRlZDAyNGM5ODZmMjllYWU0IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBNb24sIDE0IE9jdCAyMDI0IDEzOjU2OjI2ICswMjAwClN1YmplY3Q6
IFtQQVRDSCAxNS80MV0gY2lmczogQWRkIGEgbmV3IHhhdHRyIHN5c3RlbS5zbWIzX250c2Rfb3du
ZXIgZm9yCiBnZXR0aW5nIG9yIHNldHRpbmcgb3duZXIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVu
dC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PVVURi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rp
bmc6IDhiaXQKCkNoYW5naW5nIG93bmVyIGlzIGNvbnRyb2xsZWQgYnkgREFDTCBwZXJtaXNzaW9u
IFdSSVRFX09XTkVSLiBDaGFuZ2luZyBEQUNMCml0c2VsZiBpcyBjb250cm9sbGVkIGJ5IERBQ0wg
cGVybWlzc3Npb24gV1JJVEVfREFDLiBPd25lciBvZiB0aGUgZmlsZSBoYXMKaW1wbGljaXQgV1JJ
VEVfREFDIHBlcm1pc3Npb24gZXZlbiB3aGVuIGl0IGlzIG5vdCBleHBsaWNpdGx5IGdyYW50ZWQg
Zm9yCm93bmVyIGJ5IERBQ0wuCgpSZWFkaW5nIERBQ0wgb3Igb3duZXIgaXMgY29udHJvbGxlZCBv
bmx5IGJ5IG9uZSBwZXJtaXNzaW9uIFJFQURfQ09OVFJPTC4KV1JJVEVfT1dORVIgcGVybWlzc2lv
biBjYW4gYmUgYnlwYXNzZWQgYnkgdGhlIFNlVGFrZU93bmVyc2hpcFByaXZpbGVnZSwKd2hpY2gg
aXMgYnkgZGVmYXVsdCBhdmFpbGFibGUgZm9yIGxvY2FsIGFkbWluaXN0cmF0b3JzLgoKU28gaWYg
dGhlIGxvY2FsIGFkbWluaXN0cmF0b3Igd2FudHMgdG8gYWNjZXNzIHNvbWUgZmlsZSB0byB3aGlj
aCBkb2VzIG5vdApoYXZlIGFjY2VzcywgaXQgaXMgcmVxdWlyZWQgdG8gZmlyc3QgY2hhbmdlIG93
bmVyIHRvIG91cnNlbGYgYW5kIHRoZW4KY2hhbmdlIERBQ0wgcGVybWlzc2lvbnMuCgpDdXJyZW50
bHkgTGludXggU01CIGNsaWVudCBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgYmVjYXVzZSBjbGllbnQg
ZG9lcyBub3QKcHJvdmlkZSBhIHdheSB0byBjaGFuZ2Ugb3duZXIgd2l0aG91dCB0b3VjaGluZyBE
QUNMIHBlcm1pc3Npb25zLgoKRml4IHRoaXMgcHJvYmxlbSBieSBpbnRyb2R1Y2luZyBhIG5ldyB4
YXR0ciAic3lzdGVtLnNtYjNfbnRzZF9vd25lciIgZm9yCnNldHRpbmcvY2hhbmdpbmcgb25seSBv
d25lciBwYXJ0IG9mIHRoZSBzZWN1cml0eSBkZXNjcmlwdG9yLgoKU2lnbmVkLW9mZi1ieTogUGFs
aSBSb2jDoXIgPHBhbGlAa2VybmVsLm9yZz4KLS0tCiBmcy9zbWIvY2xpZW50L3hhdHRyLmMgfCAy
MCArKysrKysrKysrKysrKysrKysrLQogMSBmaWxlIGNoYW5nZWQsIDE5IGluc2VydGlvbnMoKyks
IDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L3hhdHRyLmMgYi9mcy9z
bWIvY2xpZW50L3hhdHRyLmMKaW5kZXggOTViODI2OTg1MWYzLi5iODhmYTA0ZjU3OTIgMTAwNjQ0
Ci0tLSBhL2ZzL3NtYi9jbGllbnQveGF0dHIuYworKysgYi9mcy9zbWIvY2xpZW50L3hhdHRyLmMK
QEAgLTMyLDYgKzMyLDcgQEAKICAqLwogI2RlZmluZSBTTUIzX1hBVFRSX0NJRlNfQUNMICJzeXN0
ZW0uc21iM19hY2wiIC8qIERBQ0wgb25seSAqLwogI2RlZmluZSBTTUIzX1hBVFRSX0NJRlNfTlRT
RF9TQUNMICJzeXN0ZW0uc21iM19udHNkX3NhY2wiIC8qIFNBQ0wgb25seSAqLworI2RlZmluZSBT
TUIzX1hBVFRSX0NJRlNfTlRTRF9PV05FUiAic3lzdGVtLnNtYjNfbnRzZF9vd25lciIgLyogb3du
ZXIgb25seSAqLwogI2RlZmluZSBTTUIzX1hBVFRSX0NJRlNfTlRTRCAic3lzdGVtLnNtYjNfbnRz
ZCIgLyogb3duZXIgcGx1cyBEQUNMICovCiAjZGVmaW5lIFNNQjNfWEFUVFJfQ0lGU19OVFNEX0ZV
TEwgInN5c3RlbS5zbWIzX250c2RfZnVsbCIgLyogb3duZXIvREFDTC9TQUNMICovCiAjZGVmaW5l
IFNNQjNfWEFUVFJfQVRUUklCICJzbWIzLmRvc2F0dHJpYiIgIC8qIGZ1bGwgbmFtZTogdXNlci5z
bWIzLmRvc2F0dHJpYiAqLwpAQCAtMzksNyArNDAsNyBAQAogLyogQkIgbmVlZCB0byBhZGQgc2Vy
dmVyIChTYW1iYSBlLmcpIHN1cHBvcnQgZm9yIHNlY3VyaXR5IGFuZCB0cnVzdGVkIHByZWZpeCAq
LwogCiBlbnVtIHsgWEFUVFJfVVNFUiwgWEFUVFJfQ0lGU19BQ0wsIFhBVFRSX0FDTF9BQ0NFU1Ms
IFhBVFRSX0FDTF9ERUZBVUxULAotCVhBVFRSX0NJRlNfTlRTRF9TQUNMLAorCVhBVFRSX0NJRlNf
TlRTRF9TQUNMLCBYQVRUUl9DSUZTX05UU0RfT1dORVIsCiAJWEFUVFJfQ0lGU19OVFNELCBYQVRU
Ul9DSUZTX05UU0RfRlVMTCB9OwogCiBzdGF0aWMgaW50IGNpZnNfYXR0cmliX3NldCh1bnNpZ25l
ZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICpwVGNvbiwKQEAgLTE2Myw2ICsxNjQsNyBAQCBz
dGF0aWMgaW50IGNpZnNfeGF0dHJfc2V0KGNvbnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyICpoYW5k
bGVyLAogCiAJY2FzZSBYQVRUUl9DSUZTX0FDTDoKIAljYXNlIFhBVFRSX0NJRlNfTlRTRF9TQUNM
OgorCWNhc2UgWEFUVFJfQ0lGU19OVFNEX09XTkVSOgogCWNhc2UgWEFUVFJfQ0lGU19OVFNEOgog
CWNhc2UgWEFUVFJfQ0lGU19OVFNEX0ZVTEw6IHsKIAkJc3RydWN0IHNtYl9udHNkICpwYWNsOwpA
QCAtMTkwLDYgKzE5MiwxMCBAQCBzdGF0aWMgaW50IGNpZnNfeGF0dHJfc2V0KGNvbnN0IHN0cnVj
dCB4YXR0cl9oYW5kbGVyICpoYW5kbGVyLAogCQkJCQkJICAgIENJRlNfQUNMX0dST1VQIHwKIAkJ
CQkJCSAgICBDSUZTX0FDTF9EQUNMKTsKIAkJCQkJYnJlYWs7CisJCQkJY2FzZSBYQVRUUl9DSUZT
X05UU0RfT1dORVI6CisJCQkJCWFjbGZsYWdzID0gKENJRlNfQUNMX09XTkVSIHwKKwkJCQkJCSAg
ICBDSUZTX0FDTF9HUk9VUCk7CisJCQkJCWJyZWFrOwogCQkJCWNhc2UgWEFUVFJfQ0lGU19OVFNE
X1NBQ0w6CiAJCQkJCWFjbGZsYWdzID0gQ0lGU19BQ0xfU0FDTDsKIAkJCQkJYnJlYWs7CkBAIC0z
MTUsNiArMzIxLDcgQEAgc3RhdGljIGludCBjaWZzX3hhdHRyX2dldChjb25zdCBzdHJ1Y3QgeGF0
dHJfaGFuZGxlciAqaGFuZGxlciwKIAogCWNhc2UgWEFUVFJfQ0lGU19BQ0w6CiAJY2FzZSBYQVRU
Ul9DSUZTX05UU0RfU0FDTDoKKwljYXNlIFhBVFRSX0NJRlNfTlRTRF9PV05FUjoKIAljYXNlIFhB
VFRSX0NJRlNfTlRTRDoKIAljYXNlIFhBVFRSX0NJRlNfTlRTRF9GVUxMOiB7CiAJCS8qCkBAIC0z
MzQsNiArMzQxLDkgQEAgc3RhdGljIGludCBjaWZzX3hhdHRyX2dldChjb25zdCBzdHJ1Y3QgeGF0
dHJfaGFuZGxlciAqaGFuZGxlciwKIAkJY2FzZSBYQVRUUl9DSUZTX05UU0Q6CiAJCQlleHRyYV9p
bmZvID0gT1dORVJfU0VDSU5GTyB8IEdST1VQX1NFQ0lORk8gfCBEQUNMX1NFQ0lORk87CiAJCQli
cmVhazsKKwkJY2FzZSBYQVRUUl9DSUZTX05UU0RfT1dORVI6CisJCQlleHRyYV9pbmZvID0gT1dO
RVJfU0VDSU5GTyB8IEdST1VQX1NFQ0lORk87CisJCQlicmVhazsKIAkJY2FzZSBYQVRUUl9DSUZT
X05UU0RfU0FDTDoKIAkJCWV4dHJhX2luZm8gPSBTQUNMX1NFQ0lORk87CiAJCQlicmVhazsKQEAg
LTQ2NSw2ICs0NzUsMTMgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyIHNtYjNf
bnRzZF9zYWNsX3hhdHRyX2hhbmRsZXIgPSB7CiAJLnNldCA9IGNpZnNfeGF0dHJfc2V0LAogfTsK
IAorc3RhdGljIGNvbnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyIHNtYjNfbnRzZF9vd25lcl94YXR0
cl9oYW5kbGVyID0geworCS5uYW1lID0gU01CM19YQVRUUl9DSUZTX05UU0RfT1dORVIsCisJLmZs
YWdzID0gWEFUVFJfQ0lGU19OVFNEX09XTkVSLAorCS5nZXQgPSBjaWZzX3hhdHRyX2dldCwKKwku
c2V0ID0gY2lmc194YXR0cl9zZXQsCit9OworCiBzdGF0aWMgY29uc3Qgc3RydWN0IHhhdHRyX2hh
bmRsZXIgY2lmc19jaWZzX250c2RfeGF0dHJfaGFuZGxlciA9IHsKIAkubmFtZSA9IENJRlNfWEFU
VFJfQ0lGU19OVFNELAogCS5mbGFncyA9IFhBVFRSX0NJRlNfTlRTRCwKQEAgLTUxMSw2ICs1Mjgs
NyBAQCBjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxlciAqIGNvbnN0IGNpZnNfeGF0dHJfaGFuZGxl
cnNbXSA9IHsKIAkmY2lmc19jaWZzX2FjbF94YXR0cl9oYW5kbGVyLAogCSZzbWIzX2FjbF94YXR0
cl9oYW5kbGVyLCAvKiBhbGlhcyBmb3IgYWJvdmUgc2luY2UgYXZvaWRpbmcgImNpZnMiICovCiAJ
JnNtYjNfbnRzZF9zYWNsX3hhdHRyX2hhbmRsZXIsCisJJnNtYjNfbnRzZF9vd25lcl94YXR0cl9o
YW5kbGVyLAogCSZjaWZzX2NpZnNfbnRzZF94YXR0cl9oYW5kbGVyLAogCSZzbWIzX250c2RfeGF0
dHJfaGFuZGxlciwgLyogYWxpYXMgZm9yIGFib3ZlIHNpbmNlIGF2b2lkaW5nICJjaWZzIiAqLwog
CSZjaWZzX2NpZnNfbnRzZF9mdWxsX3hhdHRyX2hhbmRsZXIsCi0tIAoyLjQzLjAKCg==
--000000000000f126210631b2402a
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0014-cifs-Add-a-new-xattr-system.smb3_ntsd_sacl-for-getti.patch"
Content-Disposition: attachment; 
	filename="0014-cifs-Add-a-new-xattr-system.smb3_ntsd_sacl-for-getti.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m8y5lyj46>
X-Attachment-Id: f_m8y5lyj46

RnJvbSBmMWYxZWY4MTFjOTBiYWQxN2M2MWNiYTM2OWU3ZGJiN2U0MGE1MDU1IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBNb24sIDE0IE9jdCAyMDI0IDEzOjUxOjIxICswMjAwClN1YmplY3Q6
IFtQQVRDSCAxNC80MV0gY2lmczogQWRkIGEgbmV3IHhhdHRyIHN5c3RlbS5zbWIzX250c2Rfc2Fj
bCBmb3IgZ2V0dGluZwogb3Igc2V0dGluZyBTQUNMcwpNSU1FLVZlcnNpb246IDEuMApDb250ZW50
LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLTgKQ29udGVudC1UcmFuc2Zlci1FbmNvZGlu
ZzogOGJpdAoKQWNjZXNzIHRvIFNBQ0wgcGFydCBvZiBTTUIgc2VjdXJpdHkgZGVzY3JpcHRvciBp
cyBncmFudGVkIGJ5IFNBQ0wgcHJpdmlsZWdlCndoaWNoIGJ5IGRlZmF1bHQgaXMgYWNjZXNzaWJs
ZSBvbmx5IGZvciBsb2NhbCBhZG1pbmlzdHJhdG9yLiBCdXQgaXQgY2FuIGJlCmdyYW50ZWQgdG8g
YW55IG90aGVyIHVzZXIgYnkgbG9jYWwgR1BPIG9yIEFELiBTQUNMIGFjY2VzcyBpcyBub3QgZ3Jh
bnRlZCBieQpEQUNMIHBlcm1pc3Npb25zIGFuZCB0aGVyZWZvcmUgaXMgaXQgcG9zc2libGUgdGhh
dCBzb21lIHVzZXIgd291bGQgbm90IGhhdmUKYWNjZXNzIHRvIERBQ0xzIG9mIHNvbWUgZmlsZSwg
YnV0IHdvdWxkIGhhdmUgYWNjZXNzIHRvIFNBQ0xzIG9mIGFsbCBmaWxlcy4KU28gaXQgbWVhbnMg
dGhhdCBmb3IgYWNjZXNzaW5nIFNBQ0xzIChlaXRoZXIgZ2V0dGluZyBvciBzZXR0aW5nKSBpbiBz
b21lCmNhc2VzIHJlcXVpcmVzIG5vdCB0b3VjaGluZyBvciBhc2tpbmcgZm9yIERBQ0xzLgoKQ3Vy
cmVudGx5IExpbnV4IFNNQiBjbGllbnQgZG9lcyBub3QgYWxsb3cgdG8gZ2V0IG9yIHNldCBTQUNM
cyB3aXRob3V0CnRvdWNoaW5nIERBQ0xzLiBXaGljaCBtZWFucyB0aGF0IHVzZXIgd2l0aG91dCBE
QUNMIGFjY2VzcyBpcyBub3QgYWJsZSB0bwpnZXQgb3Igc2V0IFNBQ0xzIGV2ZW4gaWYgaXQgaGFz
IGFjY2VzcyB0byBTQUNMcy4KCkZpeCB0aGlzIHByb2JsZW0gYnkgaW50cm9kdWNpbmcgYSBuZXcg
eGF0dHIgInN5c3RlbS5zbWIzX250c2Rfc2FjbCIgZm9yCmFjY2Vzc2luZyBvbmx5IFNBQ0xzIHBh
cnQgb2YgdGhlIHNlY3VyaXR5IGRlc2NyaXB0b3IgKHRoZXJlZm9yZSB3aXRob3V0CkRBQ0xzIGFu
ZCBPV05FUi9HUk9VUCkuCgpTaWduZWQtb2ZmLWJ5OiBQYWxpIFJvaMOhciA8cGFsaUBrZXJuZWwu
b3JnPgotLS0KIGZzL3NtYi9jbGllbnQveGF0dHIuYyB8IDE4ICsrKysrKysrKysrKysrKysrKwog
MSBmaWxlIGNoYW5nZWQsIDE4IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xp
ZW50L3hhdHRyLmMgYi9mcy9zbWIvY2xpZW50L3hhdHRyLmMKaW5kZXggN2Q0OWYzOGYwMWYzLi45
NWI4MjY5ODUxZjMgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQveGF0dHIuYworKysgYi9mcy9z
bWIvY2xpZW50L3hhdHRyLmMKQEAgLTMxLDYgKzMxLDcgQEAKICAqIHNlY3VyZSwgcmVwbGFjZWQg
YnkgU01CMiAodGhlbiBldmVuIG1vcmUgaGlnaGx5IHNlY3VyZSBTTUIzKSBtYW55IHllYXJzIGFn
bwogICovCiAjZGVmaW5lIFNNQjNfWEFUVFJfQ0lGU19BQ0wgInN5c3RlbS5zbWIzX2FjbCIgLyog
REFDTCBvbmx5ICovCisjZGVmaW5lIFNNQjNfWEFUVFJfQ0lGU19OVFNEX1NBQ0wgInN5c3RlbS5z
bWIzX250c2Rfc2FjbCIgLyogU0FDTCBvbmx5ICovCiAjZGVmaW5lIFNNQjNfWEFUVFJfQ0lGU19O
VFNEICJzeXN0ZW0uc21iM19udHNkIiAvKiBvd25lciBwbHVzIERBQ0wgKi8KICNkZWZpbmUgU01C
M19YQVRUUl9DSUZTX05UU0RfRlVMTCAic3lzdGVtLnNtYjNfbnRzZF9mdWxsIiAvKiBvd25lci9E
QUNML1NBQ0wgKi8KICNkZWZpbmUgU01CM19YQVRUUl9BVFRSSUIgInNtYjMuZG9zYXR0cmliIiAg
LyogZnVsbCBuYW1lOiB1c2VyLnNtYjMuZG9zYXR0cmliICovCkBAIC0zOCw2ICszOSw3IEBACiAv
KiBCQiBuZWVkIHRvIGFkZCBzZXJ2ZXIgKFNhbWJhIGUuZykgc3VwcG9ydCBmb3Igc2VjdXJpdHkg
YW5kIHRydXN0ZWQgcHJlZml4ICovCiAKIGVudW0geyBYQVRUUl9VU0VSLCBYQVRUUl9DSUZTX0FD
TCwgWEFUVFJfQUNMX0FDQ0VTUywgWEFUVFJfQUNMX0RFRkFVTFQsCisJWEFUVFJfQ0lGU19OVFNE
X1NBQ0wsCiAJWEFUVFJfQ0lGU19OVFNELCBYQVRUUl9DSUZTX05UU0RfRlVMTCB9OwogCiBzdGF0
aWMgaW50IGNpZnNfYXR0cmliX3NldCh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29u
ICpwVGNvbiwKQEAgLTE2MCw2ICsxNjIsNyBAQCBzdGF0aWMgaW50IGNpZnNfeGF0dHJfc2V0KGNv
bnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyICpoYW5kbGVyLAogCQlicmVhazsKIAogCWNhc2UgWEFU
VFJfQ0lGU19BQ0w6CisJY2FzZSBYQVRUUl9DSUZTX05UU0RfU0FDTDoKIAljYXNlIFhBVFRSX0NJ
RlNfTlRTRDoKIAljYXNlIFhBVFRSX0NJRlNfTlRTRF9GVUxMOiB7CiAJCXN0cnVjdCBzbWJfbnRz
ZCAqcGFjbDsKQEAgLTE4Nyw2ICsxOTAsOSBAQCBzdGF0aWMgaW50IGNpZnNfeGF0dHJfc2V0KGNv
bnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyICpoYW5kbGVyLAogCQkJCQkJICAgIENJRlNfQUNMX0dS
T1VQIHwKIAkJCQkJCSAgICBDSUZTX0FDTF9EQUNMKTsKIAkJCQkJYnJlYWs7CisJCQkJY2FzZSBY
QVRUUl9DSUZTX05UU0RfU0FDTDoKKwkJCQkJYWNsZmxhZ3MgPSBDSUZTX0FDTF9TQUNMOworCQkJ
CQlicmVhazsKIAkJCQljYXNlIFhBVFRSX0NJRlNfQUNMOgogCQkJCWRlZmF1bHQ6CiAJCQkJCWFj
bGZsYWdzID0gQ0lGU19BQ0xfREFDTDsKQEAgLTMwOCw2ICszMTQsNyBAQCBzdGF0aWMgaW50IGNp
ZnNfeGF0dHJfZ2V0KGNvbnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyICpoYW5kbGVyLAogCQlicmVh
azsKIAogCWNhc2UgWEFUVFJfQ0lGU19BQ0w6CisJY2FzZSBYQVRUUl9DSUZTX05UU0RfU0FDTDoK
IAljYXNlIFhBVFRSX0NJRlNfTlRTRDoKIAljYXNlIFhBVFRSX0NJRlNfTlRTRF9GVUxMOiB7CiAJ
CS8qCkBAIC0zMjcsNiArMzM0LDkgQEAgc3RhdGljIGludCBjaWZzX3hhdHRyX2dldChjb25zdCBz
dHJ1Y3QgeGF0dHJfaGFuZGxlciAqaGFuZGxlciwKIAkJY2FzZSBYQVRUUl9DSUZTX05UU0Q6CiAJ
CQlleHRyYV9pbmZvID0gT1dORVJfU0VDSU5GTyB8IEdST1VQX1NFQ0lORk8gfCBEQUNMX1NFQ0lO
Rk87CiAJCQlicmVhazsKKwkJY2FzZSBYQVRUUl9DSUZTX05UU0RfU0FDTDoKKwkJCWV4dHJhX2lu
Zm8gPSBTQUNMX1NFQ0lORk87CisJCQlicmVhazsKIAkJY2FzZSBYQVRUUl9DSUZTX0FDTDoKIAkJ
ZGVmYXVsdDoKIAkJCWV4dHJhX2luZm8gPSBEQUNMX1NFQ0lORk87CkBAIC00NDgsNiArNDU4LDEz
IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgeGF0dHJfaGFuZGxlciBzbWIzX2FjbF94YXR0cl9oYW5k
bGVyID0gewogCS5zZXQgPSBjaWZzX3hhdHRyX3NldCwKIH07CiAKK3N0YXRpYyBjb25zdCBzdHJ1
Y3QgeGF0dHJfaGFuZGxlciBzbWIzX250c2Rfc2FjbF94YXR0cl9oYW5kbGVyID0geworCS5uYW1l
ID0gU01CM19YQVRUUl9DSUZTX05UU0RfU0FDTCwKKwkuZmxhZ3MgPSBYQVRUUl9DSUZTX05UU0Rf
U0FDTCwKKwkuZ2V0ID0gY2lmc194YXR0cl9nZXQsCisJLnNldCA9IGNpZnNfeGF0dHJfc2V0LAor
fTsKKwogc3RhdGljIGNvbnN0IHN0cnVjdCB4YXR0cl9oYW5kbGVyIGNpZnNfY2lmc19udHNkX3hh
dHRyX2hhbmRsZXIgPSB7CiAJLm5hbWUgPSBDSUZTX1hBVFRSX0NJRlNfTlRTRCwKIAkuZmxhZ3Mg
PSBYQVRUUl9DSUZTX05UU0QsCkBAIC00OTMsNiArNTEwLDcgQEAgY29uc3Qgc3RydWN0IHhhdHRy
X2hhbmRsZXIgKiBjb25zdCBjaWZzX3hhdHRyX2hhbmRsZXJzW10gPSB7CiAJJmNpZnNfb3MyX3hh
dHRyX2hhbmRsZXIsCiAJJmNpZnNfY2lmc19hY2xfeGF0dHJfaGFuZGxlciwKIAkmc21iM19hY2xf
eGF0dHJfaGFuZGxlciwgLyogYWxpYXMgZm9yIGFib3ZlIHNpbmNlIGF2b2lkaW5nICJjaWZzIiAq
LworCSZzbWIzX250c2Rfc2FjbF94YXR0cl9oYW5kbGVyLAogCSZjaWZzX2NpZnNfbnRzZF94YXR0
cl9oYW5kbGVyLAogCSZzbWIzX250c2RfeGF0dHJfaGFuZGxlciwgLyogYWxpYXMgZm9yIGFib3Zl
IHNpbmNlIGF2b2lkaW5nICJjaWZzIiAqLwogCSZjaWZzX2NpZnNfbnRzZF9mdWxsX3hhdHRyX2hh
bmRsZXIsCi0tIAoyLjQzLjAKCg==
--000000000000f126210631b2402a--

