Return-Path: <linux-cifs+bounces-2351-lists+linux-cifs=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from am.mirrors.kernel.org (am.mirrors.kernel.org [IPv6:2604:1380:4601:e00::3])
	by mail.lfdr.de (Postfix) with ESMTPS id C755993AC21
	for <lists+linux-cifs@lfdr.de>; Wed, 24 Jul 2024 07:03:34 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by am.mirrors.kernel.org (Postfix) with ESMTPS id 49C151F22870
	for <lists+linux-cifs@lfdr.de>; Wed, 24 Jul 2024 05:03:34 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 06B0720323;
	Wed, 24 Jul 2024 05:03:30 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="cK8hgxv0"
X-Original-To: linux-cifs@vger.kernel.org
Received: from mail-lf1-f46.google.com (mail-lf1-f46.google.com [209.85.167.46])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E541F2572
	for <linux-cifs@vger.kernel.org>; Wed, 24 Jul 2024 05:03:27 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.167.46
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1721797409; cv=none; b=pzjck+OSz75B8BmClfk4MrNqWmx53Raqjivdba9+ctdZjOYCgKWMRnqALBIKQEzSCy43HW0ZD18y7GMFC8RV/VhsH7qibCMtHOpXsWmHfLO4Jpa5XAxdzze2q64tXHY+u4f8jM3FfjDxgBlc6q+p7piTJzWERrCV9uuQG5fKIa4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1721797409; c=relaxed/simple;
	bh=Cgr2fSMJyzLBMpFZy+z4cm6EjV3MmWwYyrHMUdLeyBg=;
	h=MIME-Version:From:Date:Message-ID:Subject:To:Cc:Content-Type; b=msVCES+9gayYwiWPUYlmXXyj6hNIjQgyt/qHV5TLkBDuV3UWL6k/paw8paoklveU7SYiDuBJBcHHCHt/7SlGC7+Dejczruhext1jk5XQ0CREYpG55/dvdzrhXhjNFIdMXlLAyZO3dLJk5umLrDAIbHB67oE5YsIBuRsDbECOyHI=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=cK8hgxv0; arc=none smtp.client-ip=209.85.167.46
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Received: by mail-lf1-f46.google.com with SMTP id 2adb3069b0e04-52efba36802so4896124e87.2
        for <linux-cifs@vger.kernel.org>; Tue, 23 Jul 2024 22:03:27 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1721797406; x=1722402206; darn=vger.kernel.org;
        h=cc:to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=BGJZYsHAGXt8QjCiwgjlqtx6/rvwdXHpCXxIJPwgWoU=;
        b=cK8hgxv02HV5Wpgv2t00FF4j4AXTRyS0Fi3JuL5wCHe1rAH0vkeEftF1GkZN+stThc
         ED4cTb2K3wk1Unu45aNWcQQrDcPtAH6dyWaFmYAjfxy8H4C9SFsetSKwWWQ8mU5hZJtX
         oBkrf/SHN9ArRlBmTpaoNSq6CdH9BQS+GaA2FGVPFwSUJ/Y/F8z0P45UTTvGNuRwokus
         3mFzPWvOFbAcJvvlRdj1GsdZYU9swmrvMo0H30qiqUi3x7MhU1yf6OZTUP3l2nAn3/O+
         34qrXAkLbvGmlopuDyufPi8k+/BrSdhQXYQxpxnLB7IIB1hjMYMUrDUdi81oodNCNV6I
         66Xg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1721797406; x=1722402206;
        h=cc:to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=BGJZYsHAGXt8QjCiwgjlqtx6/rvwdXHpCXxIJPwgWoU=;
        b=esgEj3UtkMhwcDWLt3NuYghbwOk9A2Ba8XYT0YmkyNxS4FsocDqmHViBUH9t5WTfgK
         rKGJ1hIQDTibTktRToASIlfAqhuaXDf39DKnvbn96f2Y3T+R2LkZYZ6bL01wvEMsaOY+
         JXaJDkW9amY1QRhcrvtAXSazaluvgSGkLBu6kBhbj3Sx8eDaXhdswhjOsK24wWVx7gMR
         pih9yZJmSPvZkkpnyA0tblJilMT5FS+oISK00Xsq1Mc0I1e456ndUdfkfTcdphjicI4u
         JhBf08xJy62G2+2MIEXfQip/nVh2J/kyqMnur3sU+6LxjCqFF5g1KRjZ713etqOQorWW
         /XrA==
X-Gm-Message-State: AOJu0Yz/2KMVJwZJufbHsXDHUGrPatMWGXodQLRyBOAipJBLhW1iK1Nw
	Egh5qP/PX0QGU0BGop1zr811GfJzhYiCQ8657lcWe88YJtUQa4VhsF4VpgmsPhW8ufQFIq6kCR1
	/liWG0DIqPKuO/uRPsRfykbnGFl6aqNqK
X-Google-Smtp-Source: AGHT+IEpOpV7FRUzjfAh/JdUR+Jlw0ORw+lfp1IabeWak5MBULRLmIwE1LRRxMC5kt49dlUYVKbDfDXf7wxuppwuuLs=
X-Received: by 2002:a05:6512:1047:b0:52b:9c8a:734f with SMTP id
 2adb3069b0e04-52efb801e5bmr8014871e87.50.1721797405377; Tue, 23 Jul 2024
 22:03:25 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-cifs@vger.kernel.org
List-Id: <linux-cifs.vger.kernel.org>
List-Subscribe: <mailto:linux-cifs+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cifs+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
From: Steve French <smfrench@gmail.com>
Date: Wed, 24 Jul 2024 00:03:13 -0500
Message-ID: <CAH2r5msr2Xo=8stptjhsQbaMhot_x=FrcpOxyjeAu9crV9evtg@mail.gmail.com>
Subject: [PATCH][SMB3 client] dynamic tracepoints for copy_range and clone_range
To: CIFS <linux-cifs@vger.kernel.org>
Cc: Bharath S M <bharathsm@microsoft.com>
Content-Type: multipart/mixed; boundary="000000000000b9707f061df7327e"

--000000000000b9707f061df7327e
Content-Type: text/plain; charset="UTF-8"

Two patches that add dynamic tracepoints for copy_range and clone
range including

   smb3: add four more dynamic tracepoints for copy_file_range and reflink

    Add more dynamic tracepoints to help debug copy_file_range (copychunk)
    and clone_range ("duplicate extents").  These are tracepoints for
    entering the function and completing without error. For example:

      "trace-cmd record -e smb3_copychunk_enter -e smb3_copychunk_done"
      "trace-cmd record -e smb3_clone_enter -e smb3_clone_done"

    Here is sample output:

           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION
             | |         |   |||||     |         |
           cp-5964    [005] .....  2176.168977: smb3_clone_enter:
             xid=17 sid=0xeb275be4 tid=0x7ffa7cdb source fid=0x1ed02e15
             source offset=0x0 target fid=0x1ed02e15 target offset=0x0
             len=0xa0000
           cp-5964    [005] .....  2176.170668: smb3_clone_done:
             xid=17 sid=0xeb275be4 tid=0x7ffa7cdb source fid=0x1ed02e15
             source offset=0x0 target fid=0x1ed02e15 target offset=0x0
             len=0xa0000

and

    smb3: add dynamic tracepoints for copy_file_range and reflink errors

    There are cases where debugging clone_range ("smb2_duplicate_extents"
    function) and copy_range ("smb2_copychunk_range") can be helpful.
    Add dynamic trace points for any errors in these two routines. e,g,

      "trace-cmd record -e smb3_copychunk_err -e smb3_clone_err"

See attached


-- 
Thanks,

Steve

--000000000000b9707f061df7327e
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-smb3-add-dynamic-tracepoints-for-copy_file_range-and.patch"
Content-Disposition: attachment; 
	filename="0001-smb3-add-dynamic-tracepoints-for-copy_file_range-and.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lyzdov9n0>
X-Attachment-Id: f_lyzdov9n0

RnJvbSAyNmI3YjJkZWMxZDhjZmNhMmNlYTJjYTZjYTBjMjFmMjBkMGRhZjVhIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
CkRhdGU6IFR1ZSwgMjMgSnVsIDIwMjQgMTg6MTI6NDAgLTA1MDAKU3ViamVjdDogW1BBVENIIDEv
Ml0gc21iMzogYWRkIGR5bmFtaWMgdHJhY2Vwb2ludHMgZm9yIGNvcHlfZmlsZV9yYW5nZSBhbmQK
IHJlZmxpbmsgZXJyb3JzCgpUaGVyZSBhcmUgY2FzZXMgd2hlcmUgZGVidWdnaW5nIGNsb25lX3Jh
bmdlICgic21iMl9kdXBsaWNhdGVfZXh0ZW50cyIKZnVuY3Rpb24pIGFuZCBjb3B5X3JhbmdlICgi
c21iMl9jb3B5Y2h1bmtfcmFuZ2UiKSBjYW4gYmUgaGVscGZ1bC4KQWRkIGR5bmFtaWMgdHJhY2Ug
cG9pbnRzIGZvciBhbnkgZXJyb3JzIGluIHRoZXNlIHR3byByb3V0aW5lcy4gZSxnLAoKICAidHJh
Y2UtY21kIHJlY29yZCAtZSBzbWIzX2NvcHljaHVua19lcnIgLWUgc21iM19jbG9uZV9lcnIiCgpT
aWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+Ci0tLQog
ZnMvc21iL2NsaWVudC9zbWIyb3BzLmMgfCAxMyArKysrKysrKy0tCiBmcy9zbWIvY2xpZW50L3Ry
YWNlLmggICB8IDU3ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiAy
IGZpbGVzIGNoYW5nZWQsIDY4IGluc2VydGlvbnMoKyksIDIgZGVsZXRpb25zKC0pCgpkaWZmIC0t
Z2l0IGEvZnMvc21iL2NsaWVudC9zbWIyb3BzLmMgYi9mcy9zbWIvY2xpZW50L3NtYjJvcHMuYwpp
bmRleCA3ZmU1OTIzNWYwOTAuLjk0NDQ3Y2RlMmZlMCAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVu
dC9zbWIyb3BzLmMKKysrIGIvZnMvc21iL2NsaWVudC9zbWIyb3BzLmMKQEAgLTE4OTksOSArMTg5
OSwxMyBAQCBzbWIyX2NvcHljaHVua19yYW5nZShjb25zdCB1bnNpZ25lZCBpbnQgeGlkLAogY2No
dW5rX291dDoKIAlrZnJlZShwY2NodW5rKTsKIAlrZnJlZShyZXRidWYpOwotCWlmIChyYykKKwlp
ZiAocmMpIHsKKwkJdHJhY2Vfc21iM19jb3B5Y2h1bmtfZXJyKHhpZCwgc3JjZmlsZS0+ZmlkLnZv
bGF0aWxlX2ZpZCwKKwkJCQkJIHRyZ3RmaWxlLT5maWQudm9sYXRpbGVfZmlkLAorCQkJCQkgdGNv
bi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsIHNyY19vZmYsCisJCQkJCSBkZXN0X29mZiwgbGVuLCBy
Yyk7CiAJCXJldHVybiByYzsKLQllbHNlCisJfSBlbHNlCiAJCXJldHVybiB0b3RhbF9ieXRlc193
cml0dGVuOwogfQogCkBAIC0yMDc1LDYgKzIwNzksMTEgQEAgc21iMl9kdXBsaWNhdGVfZXh0ZW50
cyhjb25zdCB1bnNpZ25lZCBpbnQgeGlkLAogCQljaWZzX2RiZyhGWUksICJOb24temVybyByZXNw
b25zZSBsZW5ndGggaW4gZHVwbGljYXRlIGV4dGVudHNcbiIpOwogCiBkdXBsaWNhdGVfZXh0ZW50
c19vdXQ6CisJaWYgKHJjKQorCQl0cmFjZV9zbWIzX2Nsb25lX2Vycih4aWQsIHNyY2ZpbGUtPmZp
ZC52b2xhdGlsZV9maWQsCisJCQkJICAgICB0cmd0ZmlsZS0+ZmlkLnZvbGF0aWxlX2ZpZCwKKwkJ
CQkgICAgIHRjb24tPnRpZCwgdGNvbi0+c2VzLT5TdWlkLCBzcmNfb2ZmLAorCQkJCSAgICAgZGVz
dF9vZmYsIGxlbiwgcmMpOwogCXJldHVybiByYzsKIH0KIApkaWZmIC0tZ2l0IGEvZnMvc21iL2Ns
aWVudC90cmFjZS5oIGIvZnMvc21iL2NsaWVudC90cmFjZS5oCmluZGV4IDM2ZDUyOTVjMmE2Zi4u
ODkxZDZkOTc5ZmFkIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L3RyYWNlLmgKKysrIGIvZnMv
c21iL2NsaWVudC90cmFjZS5oCkBAIC0yMDYsNiArMjA2LDYzIEBAIERFRklORV9TTUIzX09USEVS
X0VSUl9FVkVOVChxdWVyeV9kaXJfZXJyKTsKIERFRklORV9TTUIzX09USEVSX0VSUl9FVkVOVCh6
ZXJvX2Vycik7CiBERUZJTkVfU01CM19PVEhFUl9FUlJfRVZFTlQoZmFsbG9jX2Vycik7CiAKKy8q
CisgKiBGb3IgbG9nZ2luZyBlcnJvcnMgaW4gcmVmbGluayBhbmQgY29weV9yYW5nZSBvcHMgZS5n
LiBzbWIyX2NvcHljaHVua19yYW5nZQorICogYW5kIHNtYjJfZHVwbGljYXRlX2V4dGVudHMKKyAq
LworREVDTEFSRV9FVkVOVF9DTEFTUyhzbWIzX2NvcHlfcmFuZ2VfZXJyX2NsYXNzLAorCVRQX1BS
T1RPKHVuc2lnbmVkIGludCB4aWQsCisJCV9fdTY0CXNyY19maWQsCisJCV9fdTY0ICAgdGFyZ2V0
X2ZpZCwKKwkJX191MzIJdGlkLAorCQlfX3U2NAlzZXNpZCwKKwkJX191NjQJc3JjX29mZnNldCwK
KwkJX191NjQgICB0YXJnZXRfb2Zmc2V0LAorCQlfX3UzMglsZW4sCisJCWludAlyYyksCisJVFBf
QVJHUyh4aWQsIHNyY19maWQsIHRhcmdldF9maWQsIHRpZCwgc2VzaWQsIHNyY19vZmZzZXQsIHRh
cmdldF9vZmZzZXQsIGxlbiwgcmMpLAorCVRQX1NUUlVDVF9fZW50cnkoCisJCV9fZmllbGQodW5z
aWduZWQgaW50LCB4aWQpCisJCV9fZmllbGQoX191NjQsIHNyY19maWQpCisJCV9fZmllbGQoX191
NjQsIHRhcmdldF9maWQpCisJCV9fZmllbGQoX191MzIsIHRpZCkKKwkJX19maWVsZChfX3U2NCwg
c2VzaWQpCisJCV9fZmllbGQoX191NjQsIHNyY19vZmZzZXQpCisJCV9fZmllbGQoX191NjQsIHRh
cmdldF9vZmZzZXQpCisJCV9fZmllbGQoX191MzIsIGxlbikKKwkJX19maWVsZChpbnQsIHJjKQor
CSksCisJVFBfZmFzdF9hc3NpZ24oCisJCV9fZW50cnktPnhpZCA9IHhpZDsKKwkJX19lbnRyeS0+
c3JjX2ZpZCA9IHNyY19maWQ7CisJCV9fZW50cnktPnRhcmdldF9maWQgPSB0YXJnZXRfZmlkOwor
CQlfX2VudHJ5LT50aWQgPSB0aWQ7CisJCV9fZW50cnktPnNlc2lkID0gc2VzaWQ7CisJCV9fZW50
cnktPnNyY19vZmZzZXQgPSBzcmNfb2Zmc2V0OworCQlfX2VudHJ5LT50YXJnZXRfb2Zmc2V0ID0g
dGFyZ2V0X29mZnNldDsKKwkJX19lbnRyeS0+bGVuID0gbGVuOworCQlfX2VudHJ5LT5yYyA9IHJj
OworCSksCisJVFBfcHJpbnRrKCJcdHhpZD0ldSBzaWQ9MHglbGx4IHRpZD0weCV4IHNvdXJjZSBm
aWQ9MHglbGx4IHNvdXJjZSBvZmZzZXQ9MHglbGx4IHRhcmdldCBmaWQ9MHglbGx4IHRhcmdldCBv
ZmZzZXQ9MHglbGx4IGxlbj0weCV4IHJjPSVkIiwKKwkJX19lbnRyeS0+eGlkLCBfX2VudHJ5LT5z
ZXNpZCwgX19lbnRyeS0+dGlkLCBfX2VudHJ5LT50YXJnZXRfZmlkLAorCQlfX2VudHJ5LT5zcmNf
b2Zmc2V0LCBfX2VudHJ5LT50YXJnZXRfZmlkLCBfX2VudHJ5LT50YXJnZXRfb2Zmc2V0LCBfX2Vu
dHJ5LT5sZW4sIF9fZW50cnktPnJjKQorKQorCisjZGVmaW5lIERFRklORV9TTUIzX0NPUFlfUkFO
R0VfRVJSX0VWRU5UKG5hbWUpCVwKK0RFRklORV9FVkVOVChzbWIzX2NvcHlfcmFuZ2VfZXJyX2Ns
YXNzLCBzbWIzXyMjbmFtZSwgXAorCVRQX1BST1RPKHVuc2lnbmVkIGludCB4aWQsCQlcCisJCV9f
dTY0CXNyY19maWQsCQlcCisJCV9fdTY0ICAgdGFyZ2V0X2ZpZCwJCVwKKwkJX191MzIJdGlkLAkJ
CVwKKwkJX191NjQJc2VzaWQsCQkJXAorCQlfX3U2NAlzcmNfb2Zmc2V0LAkJXAorCQlfX3U2NAl0
YXJnZXRfb2Zmc2V0LAkJXAorCQlfX3UzMglsZW4sCQkJXAorCQlpbnQJcmMpLAkJCVwKKwlUUF9B
UkdTKHhpZCwgc3JjX2ZpZCwgdGFyZ2V0X2ZpZCwgdGlkLCBzZXNpZCwgc3JjX29mZnNldCwgdGFy
Z2V0X29mZnNldCwgbGVuLCByYykpCisKK0RFRklORV9TTUIzX0NPUFlfUkFOR0VfRVJSX0VWRU5U
KGNvcHljaHVua19lcnIpOworREVGSU5FX1NNQjNfQ09QWV9SQU5HRV9FUlJfRVZFTlQoY2xvbmVf
ZXJyKTsKIAogLyogRm9yIGxvZ2dpbmcgc3VjY2Vzc2Z1bCByZWFkIG9yIHdyaXRlICovCiBERUNM
QVJFX0VWRU5UX0NMQVNTKHNtYjNfcndfZG9uZV9jbGFzcywKLS0gCjIuNDMuMAoK
--000000000000b9707f061df7327e
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0002-smb3-add-four-more-dynamic-tracepoints-for-copy_file.patch"
Content-Disposition: attachment; 
	filename="0002-smb3-add-four-more-dynamic-tracepoints-for-copy_file.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lyzdova41>
X-Attachment-Id: f_lyzdova41

RnJvbSAzNWJlNWY1OWFkMjZiMzExY2Q3NzM1ZjliMDhiOGMxYjIyYjRkZWI0IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
CkRhdGU6IFR1ZSwgMjMgSnVsIDIwMjQgMjM6NDk6MjEgLTA1MDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gc21iMzogYWRkIGZvdXIgbW9yZSBkeW5hbWljIHRyYWNlcG9pbnRzIGZvcgogY29weV9maWxl
X3JhbmdlIGFuZCByZWZsaW5rCgpBZGQgbW9yZSBkeW5hbWljIHRyYWNlcG9pbnRzIHRvIGhlbHAg
ZGVidWcgY29weV9maWxlX3JhbmdlIChjb3B5Y2h1bmspCmFuZCBjbG9uZV9yYW5nZSAoImR1cGxp
Y2F0ZSBleHRlbnRzIikuICBUaGVzZSBhcmUgdHJhY2Vwb2ludHMgZm9yCmVudGVyaW5nIHRoZSBm
dW5jdGlvbiBhbmQgY29tcGxldGluZyB3aXRob3V0IGVycm9yLiBGb3IgZXhhbXBsZToKCiAgInRy
YWNlLWNtZCByZWNvcmQgLWUgc21iM19jb3B5Y2h1bmtfZW50ZXIgLWUgc21iM19jb3B5Y2h1bmtf
ZG9uZSIKCm9yCgogICJ0cmFjZS1jbWQgcmVjb3JkIC1lIHNtYjNfY2xvbmVfZW50ZXIgLWUgc21i
M19jbG9uZV9kb25lIgoKSGVyZSBpcyBzYW1wbGUgb3V0cHV0OgoKICAgICAgIFRBU0stUElEICAg
ICBDUFUjICB8fHx8fCAgVElNRVNUQU1QICBGVU5DVElPTgogICAgICAgICB8IHwgICAgICAgICB8
ICAgfHx8fHwgICAgIHwgICAgICAgICB8CiAgICAgICBjcC01OTY0ICAgIFswMDVdIC4uLi4uICAy
MTc2LjE2ODk3Nzogc21iM19jbG9uZV9lbnRlcjoKICAgICAgICAgeGlkPTE3IHNpZD0weGViMjc1
YmU0IHRpZD0weDdmZmE3Y2RiIHNvdXJjZSBmaWQ9MHgxZWQwMmUxNQogICAgICAgICBzb3VyY2Ug
b2Zmc2V0PTB4MCB0YXJnZXQgZmlkPTB4MWVkMDJlMTUgdGFyZ2V0IG9mZnNldD0weDAKICAgICAg
ICAgbGVuPTB4YTAwMDAKICAgICAgIGNwLTU5NjQgICAgWzAwNV0gLi4uLi4gIDIxNzYuMTcwNjY4
OiBzbWIzX2Nsb25lX2RvbmU6CiAgICAgICAgIHhpZD0xNyBzaWQ9MHhlYjI3NWJlNCB0aWQ9MHg3
ZmZhN2NkYiBzb3VyY2UgZmlkPTB4MWVkMDJlMTUKICAgICAgICAgc291cmNlIG9mZnNldD0weDAg
dGFyZ2V0IGZpZD0weDFlZDAyZTE1IHRhcmdldCBvZmZzZXQ9MHgwCiAgICAgICAgIGxlbj0weGEw
MDAwCgpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
Ci0tLQogZnMvc21iL2NsaWVudC9zbWIyb3BzLmMgfCAxOCArKysrKysrKysrKy0tLQogZnMvc21i
L2NsaWVudC90cmFjZS5oICAgfCA1MyArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKwogMiBmaWxlcyBjaGFuZ2VkLCA2OCBpbnNlcnRpb25zKCspLCAzIGRlbGV0aW9ucygt
KQoKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvc21iMm9wcy5jIGIvZnMvc21iL2NsaWVudC9z
bWIyb3BzLmMKaW5kZXggOTQ0NDdjZGUyZmUwLi4wYjBjZWFlZTU5M2YgMTAwNjQ0Ci0tLSBhL2Zz
L3NtYi9jbGllbnQvc21iMm9wcy5jCisrKyBiL2ZzL3NtYi9jbGllbnQvc21iMm9wcy5jCkBAIC0x
ODEyLDYgKzE4MTIsOSBAQCBzbWIyX2NvcHljaHVua19yYW5nZShjb25zdCB1bnNpZ25lZCBpbnQg
eGlkLAogCiAJdGNvbiA9IHRsaW5rX3Rjb24odHJndGZpbGUtPnRsaW5rKTsKIAorCXRyYWNlX3Nt
YjNfY29weWNodW5rX2VudGVyKHhpZCwgc3JjZmlsZS0+ZmlkLnZvbGF0aWxlX2ZpZCwKKwkJCQkg
ICB0cmd0ZmlsZS0+ZmlkLnZvbGF0aWxlX2ZpZCwgdGNvbi0+dGlkLAorCQkJCSAgIHRjb24tPnNl
cy0+U3VpZCwgc3JjX29mZiwgZGVzdF9vZmYsIGxlbik7CiAJd2hpbGUgKGxlbiA+IDApIHsKIAkJ
cGNjaHVuay0+U291cmNlT2Zmc2V0ID0gY3B1X3RvX2xlNjQoc3JjX29mZik7CiAJCXBjY2h1bmst
PlRhcmdldE9mZnNldCA9IGNwdV90b19sZTY0KGRlc3Rfb2ZmKTsKQEAgLTE5MDUsOCArMTkwOCwx
MSBAQCBzbWIyX2NvcHljaHVua19yYW5nZShjb25zdCB1bnNpZ25lZCBpbnQgeGlkLAogCQkJCQkg
dGNvbi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsIHNyY19vZmYsCiAJCQkJCSBkZXN0X29mZiwgbGVu
LCByYyk7CiAJCXJldHVybiByYzsKLQl9IGVsc2UKLQkJcmV0dXJuIHRvdGFsX2J5dGVzX3dyaXR0
ZW47CisJfQorCXRyYWNlX3NtYjNfY29weWNodW5rX2RvbmUoeGlkLCBzcmNmaWxlLT5maWQudm9s
YXRpbGVfZmlkLAorCQkJCSAgdHJndGZpbGUtPmZpZC52b2xhdGlsZV9maWQsIHRjb24tPnRpZCwK
KwkJCQkgIHRjb24tPnNlcy0+U3VpZCwgc3JjX29mZiwgZGVzdF9vZmYsIGxlbik7CisJcmV0dXJu
IHRvdGFsX2J5dGVzX3dyaXR0ZW47CiB9CiAKIHN0YXRpYyBpbnQKQEAgLTIwNTAsNyArMjA1Niw5
IEBAIHNtYjJfZHVwbGljYXRlX2V4dGVudHMoY29uc3QgdW5zaWduZWQgaW50IHhpZCwKIAlkdXBf
ZXh0X2J1Zi5CeXRlQ291bnQgPSBjcHVfdG9fbGU2NChsZW4pOwogCWNpZnNfZGJnKEZZSSwgIkR1
cGxpY2F0ZSBleHRlbnRzOiBzcmMgb2ZmICVsbGQgZHN0IG9mZiAlbGxkIGxlbiAlbGxkXG4iLAog
CQlzcmNfb2ZmLCBkZXN0X29mZiwgbGVuKTsKLQorCXRyYWNlX3NtYjNfY2xvbmVfZW50ZXIoeGlk
LCBzcmNmaWxlLT5maWQudm9sYXRpbGVfZmlkLAorCQkJICAgICAgIHRyZ3RmaWxlLT5maWQudm9s
YXRpbGVfZmlkLCB0Y29uLT50aWQsCisJCQkgICAgICAgdGNvbi0+c2VzLT5TdWlkLCBzcmNfb2Zm
LCBkZXN0X29mZiwgbGVuKTsKIAlpbm9kZSA9IGRfaW5vZGUodHJndGZpbGUtPmRlbnRyeSk7CiAJ
aWYgKGlub2RlLT5pX3NpemUgPCBkZXN0X29mZiArIGxlbikgewogCQlyYyA9IHNtYjJfc2V0X2Zp
bGVfc2l6ZSh4aWQsIHRjb24sIHRyZ3RmaWxlLCBkZXN0X29mZiArIGxlbiwgZmFsc2UpOwpAQCAt
MjA4NCw2ICsyMDkyLDEwIEBAIHNtYjJfZHVwbGljYXRlX2V4dGVudHMoY29uc3QgdW5zaWduZWQg
aW50IHhpZCwKIAkJCQkgICAgIHRyZ3RmaWxlLT5maWQudm9sYXRpbGVfZmlkLAogCQkJCSAgICAg
dGNvbi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsIHNyY19vZmYsCiAJCQkJICAgICBkZXN0X29mZiwg
bGVuLCByYyk7CisJZWxzZQorCQl0cmFjZV9zbWIzX2Nsb25lX2RvbmUoeGlkLCBzcmNmaWxlLT5m
aWQudm9sYXRpbGVfZmlkLAorCQkJCSAgICAgIHRyZ3RmaWxlLT5maWQudm9sYXRpbGVfZmlkLCB0
Y29uLT50aWQsCisJCQkJICAgICAgdGNvbi0+c2VzLT5TdWlkLCBzcmNfb2ZmLCBkZXN0X29mZiwg
bGVuKTsKIAlyZXR1cm4gcmM7CiB9CiAKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvdHJhY2Uu
aCBiL2ZzL3NtYi9jbGllbnQvdHJhY2UuaAppbmRleCA4OTFkNmQ5NzlmYWQuLmMxYzQ2NzJmMGM1
ZSAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC90cmFjZS5oCisrKyBiL2ZzL3NtYi9jbGllbnQv
dHJhY2UuaApAQCAtMjY0LDYgKzI2NCw1OSBAQCBERUZJTkVfRVZFTlQoc21iM19jb3B5X3Jhbmdl
X2Vycl9jbGFzcywgc21iM18jI25hbWUsIFwKIERFRklORV9TTUIzX0NPUFlfUkFOR0VfRVJSX0VW
RU5UKGNvcHljaHVua19lcnIpOwogREVGSU5FX1NNQjNfQ09QWV9SQU5HRV9FUlJfRVZFTlQoY2xv
bmVfZXJyKTsKIAorREVDTEFSRV9FVkVOVF9DTEFTUyhzbWIzX2NvcHlfcmFuZ2VfZG9uZV9jbGFz
cywKKwlUUF9QUk9UTyh1bnNpZ25lZCBpbnQgeGlkLAorCQlfX3U2NAlzcmNfZmlkLAorCQlfX3U2
NCAgIHRhcmdldF9maWQsCisJCV9fdTMyCXRpZCwKKwkJX191NjQJc2VzaWQsCisJCV9fdTY0CXNy
Y19vZmZzZXQsCisJCV9fdTY0ICAgdGFyZ2V0X29mZnNldCwKKwkJX191MzIJbGVuKSwKKwlUUF9B
UkdTKHhpZCwgc3JjX2ZpZCwgdGFyZ2V0X2ZpZCwgdGlkLCBzZXNpZCwgc3JjX29mZnNldCwgdGFy
Z2V0X29mZnNldCwgbGVuKSwKKwlUUF9TVFJVQ1RfX2VudHJ5KAorCQlfX2ZpZWxkKHVuc2lnbmVk
IGludCwgeGlkKQorCQlfX2ZpZWxkKF9fdTY0LCBzcmNfZmlkKQorCQlfX2ZpZWxkKF9fdTY0LCB0
YXJnZXRfZmlkKQorCQlfX2ZpZWxkKF9fdTMyLCB0aWQpCisJCV9fZmllbGQoX191NjQsIHNlc2lk
KQorCQlfX2ZpZWxkKF9fdTY0LCBzcmNfb2Zmc2V0KQorCQlfX2ZpZWxkKF9fdTY0LCB0YXJnZXRf
b2Zmc2V0KQorCQlfX2ZpZWxkKF9fdTMyLCBsZW4pCisJKSwKKwlUUF9mYXN0X2Fzc2lnbigKKwkJ
X19lbnRyeS0+eGlkID0geGlkOworCQlfX2VudHJ5LT5zcmNfZmlkID0gc3JjX2ZpZDsKKwkJX19l
bnRyeS0+dGFyZ2V0X2ZpZCA9IHRhcmdldF9maWQ7CisJCV9fZW50cnktPnRpZCA9IHRpZDsKKwkJ
X19lbnRyeS0+c2VzaWQgPSBzZXNpZDsKKwkJX19lbnRyeS0+c3JjX29mZnNldCA9IHNyY19vZmZz
ZXQ7CisJCV9fZW50cnktPnRhcmdldF9vZmZzZXQgPSB0YXJnZXRfb2Zmc2V0OworCQlfX2VudHJ5
LT5sZW4gPSBsZW47CisJKSwKKwlUUF9wcmludGsoIlx0eGlkPSV1IHNpZD0weCVsbHggdGlkPTB4
JXggc291cmNlIGZpZD0weCVsbHggc291cmNlIG9mZnNldD0weCVsbHggdGFyZ2V0IGZpZD0weCVs
bHggdGFyZ2V0IG9mZnNldD0weCVsbHggbGVuPTB4JXgiLAorCQlfX2VudHJ5LT54aWQsIF9fZW50
cnktPnNlc2lkLCBfX2VudHJ5LT50aWQsIF9fZW50cnktPnRhcmdldF9maWQsCisJCV9fZW50cnkt
PnNyY19vZmZzZXQsIF9fZW50cnktPnRhcmdldF9maWQsIF9fZW50cnktPnRhcmdldF9vZmZzZXQs
IF9fZW50cnktPmxlbikKKykKKworI2RlZmluZSBERUZJTkVfU01CM19DT1BZX1JBTkdFX0RPTkVf
RVZFTlQobmFtZSkJXAorREVGSU5FX0VWRU5UKHNtYjNfY29weV9yYW5nZV9kb25lX2NsYXNzLCBz
bWIzXyMjbmFtZSwgXAorCVRQX1BST1RPKHVuc2lnbmVkIGludCB4aWQsCQlcCisJCV9fdTY0CXNy
Y19maWQsCQlcCisJCV9fdTY0ICAgdGFyZ2V0X2ZpZCwJCVwKKwkJX191MzIJdGlkLAkJCVwKKwkJ
X191NjQJc2VzaWQsCQkJXAorCQlfX3U2NAlzcmNfb2Zmc2V0LAkJXAorCQlfX3U2NAl0YXJnZXRf
b2Zmc2V0LAkJXAorCQlfX3UzMglsZW4pLAkJCVwKKwlUUF9BUkdTKHhpZCwgc3JjX2ZpZCwgdGFy
Z2V0X2ZpZCwgdGlkLCBzZXNpZCwgc3JjX29mZnNldCwgdGFyZ2V0X29mZnNldCwgbGVuKSkKKwor
REVGSU5FX1NNQjNfQ09QWV9SQU5HRV9ET05FX0VWRU5UKGNvcHljaHVua19lbnRlcik7CitERUZJ
TkVfU01CM19DT1BZX1JBTkdFX0RPTkVfRVZFTlQoY2xvbmVfZW50ZXIpOworREVGSU5FX1NNQjNf
Q09QWV9SQU5HRV9ET05FX0VWRU5UKGNvcHljaHVua19kb25lKTsKK0RFRklORV9TTUIzX0NPUFlf
UkFOR0VfRE9ORV9FVkVOVChjbG9uZV9kb25lKTsKKworCiAvKiBGb3IgbG9nZ2luZyBzdWNjZXNz
ZnVsIHJlYWQgb3Igd3JpdGUgKi8KIERFQ0xBUkVfRVZFTlRfQ0xBU1Moc21iM19yd19kb25lX2Ns
YXNzLAogCVRQX1BST1RPKHVuc2lnbmVkIGludCBycmVxX2RlYnVnX2lkLAotLSAKMi40My4wCgo=
--000000000000b9707f061df7327e--

