Return-Path: <linux-cifs-owner@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 4D3DD481952
	for <lists+linux-cifs@lfdr.de>; Thu, 30 Dec 2021 05:33:11 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235919AbhL3EdJ (ORCPT <rfc822;lists+linux-cifs@lfdr.de>);
        Wed, 29 Dec 2021 23:33:09 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49564 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231868AbhL3EdH (ORCPT
        <rfc822;linux-cifs@vger.kernel.org>); Wed, 29 Dec 2021 23:33:07 -0500
Received: from mail-lf1-x132.google.com (mail-lf1-x132.google.com [IPv6:2a00:1450:4864:20::132])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 9904EC061574
        for <linux-cifs@vger.kernel.org>; Wed, 29 Dec 2021 20:33:06 -0800 (PST)
Received: by mail-lf1-x132.google.com with SMTP id p13so15714912lfh.13
        for <linux-cifs@vger.kernel.org>; Wed, 29 Dec 2021 20:33:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
        bh=MtRa8DxM4EkqPQYSqb18HLtmrxzm9/2W2icGoetpp+k=;
        b=M4i0PwDECf6wtJ7K+dheENpc0P/+FM97x7TUue02hniMESXS00qElEB/1an6U1XrWS
         EUMKvYI6DLjsxjqGA2X/5vC0hA2y7fJGyxYvVW2gvPbYZ9M4tmLwyRtjVNIL/TrIRtMA
         9wn4JW5Fd7J5rXyIUjccSNzBGQeViadizd8OGDVxgV9Dnjb2tR/yFfmXlvuqiwsAPapo
         qE4oLxxzJyvQuvNue0N74YXhGIp95GXvFyFBNB4fz5z5TLrwZjM9NI2A8OIWypytnegV
         3PxYbZBZuWleYSXiwjxI5smvXkLDYAlJTD64d0JD6M+ZdFuCeP+9nCmAXPvSUD1J66Lt
         Wmew==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to;
        bh=MtRa8DxM4EkqPQYSqb18HLtmrxzm9/2W2icGoetpp+k=;
        b=K5hp0KVj2FTShBAmxtgrSlzeLsIswlCd1F/ETqsFFG6SYB3mYl0+VIstjIMitl+usU
         S1gajNJBkbNT0DKFfnDmnWB1qROleifJwo6KpiWnxNN8JDug5rBRw1xOLnZFvC9uVJAy
         zqRLvxe97XYpjELvegtWm3L92+WjetTxFgvi63CCeWYdkWyaxLebTsc74QNGOK/XfK6K
         zupFGrei8Poqcc6qRQpOIpAac0itKZZFpRs1Nl8Jrrnfr99+CsXr7zVxwTrUqtkCSLT0
         qNjCRMxQS5puDatSqFXdmT1SiNv9bb22jHC0fNnLcIz3Z924OeB0iMAmkowt2B/F5OXl
         jv+Q==
X-Gm-Message-State: AOAM532tI6/nk1ROJNBoivYA0KS2P4wUZSiHsDyBKndJxdL92G9Zrj1+
        Ok5JZbq4xTP0D4og//k9X+qW+RkohiRnGJM+Q+MJz13j
X-Google-Smtp-Source: ABdhPJxrLFQ+Pt1b7UkFCDfxtwjj9n+lINrLWjzK5FzVId/Z3qQC81vb79YBm29i0ucPEuaVw4D5kVs3juRVLSFSe3o=
X-Received: by 2002:a19:504c:: with SMTP id z12mr27885961lfj.234.1640838784698;
 Wed, 29 Dec 2021 20:33:04 -0800 (PST)
MIME-Version: 1.0
References: <CAH2r5mvC84qghZH+296BV8f2QWh3w3q=LMbUOE6PHHFLHvKKnw@mail.gmail.com>
 <CAH2r5mtHQjZTLVNMxjDKMSuBxLCeONKETTsK6LTFv1VbXpHk1A@mail.gmail.com>
In-Reply-To: <CAH2r5mtHQjZTLVNMxjDKMSuBxLCeONKETTsK6LTFv1VbXpHk1A@mail.gmail.com>
From:   Steve French <smfrench@gmail.com>
Date:   Wed, 29 Dec 2021 22:32:53 -0600
Message-ID: <CAH2r5msDHntuFUOBB717mEio1XH-6qjHK6HTN5P0kAct_YxcOA@mail.gmail.com>
Subject: Re: First 5 of the multichannel reconnect patch series
To:     Shyam Prasad N <nspmangalore@gmail.com>,
        CIFS <linux-cifs@vger.kernel.org>
Content-Type: multipart/mixed; boundary="000000000000e5673b05d4558c52"
Precedence: bulk
List-ID: <linux-cifs.vger.kernel.org>
X-Mailing-List: linux-cifs@vger.kernel.org

--000000000000e5673b05d4558c52
Content-Type: text/plain; charset="UTF-8"

updated patch 6 to fix the compile warnings

On Wed, Dec 29, 2021 at 9:34 PM Steve French <smfrench@gmail.com> wrote:
>
> FYI - passed Azure mchan test group with the first 5 patches applied
>
> http://smb3-test-rhel-75.southcentralus.cloudapp.azure.com/#/builders/11/builds/148
>
> On Wed, Dec 29, 2021 at 6:40 PM Steve French <smfrench@gmail.com> wrote:
> >
> > Tentatively merged the first five of Shyam's multichannel series into
> > cifs-2.6.git for-next, pending more review and cleanup.  Comments
> > welcome
> >
> >
> >
> > --
> > Thanks,
> >
> > Steve
>
>
>
> --
> Thanks,
>
> Steve



-- 
Thanks,

Steve

--000000000000e5673b05d4558c52
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-take-cifs_tcp_ses_lock-for-status-checks.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-take-cifs_tcp_ses_lock-for-status-checks.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_kxsft1bp0>
X-Attachment-Id: f_kxsft1bp0

RnJvbSAyMjM0MzljZTI1NWViYjM2YmM3Y2JiNDBhMTc0ZTI5MmU1MmZjOWIyIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTaHlhbSBQcmFzYWQgTiA8c3ByYXNhZEBtaWNyb3NvZnQuY29t
PgpEYXRlOiBNb24sIDE5IEp1bCAyMDIxIDE3OjA1OjUzICswMDAwClN1YmplY3Q6IFtQQVRDSF0g
Y2lmczogdGFrZSBjaWZzX3RjcF9zZXNfbG9jayBmb3Igc3RhdHVzIGNoZWNrcwoKV2hpbGUgY2hl
Y2tpbmcvdXBkYXRpbmcgc3RhdHVzIGZvciB0Y3Agc2VzLCBzbWIgc2VzIG9yIHRjb24sCndlIHRh
a2UgR2xvYmFsTWlkX0xvY2suIFRoaXMgZG9lc24ndCBtYWtlIGFueSBzZW5zZS4KUmVwbGFjZWQg
aXQgd2l0aCBjaWZzX3RjcF9zZXNfbG9jay4KCklkZWFsbHksIHdlIHNob3VsZCB0YWtlIGEgc3Bp
biBsb2NrIHBlciBzdHJ1Y3QuCkJ1dCBzaW5jZSB0Y3Agc2VzLCBzbWIgc2VzIGFuZCB0Y29uIG9i
amVjdHMgd29uJ3QgYWRkIHVwIHRvIGEgbG90LApJIHRoaW5rIHRoZXJlIHNob3VsZCBub3QgYmUg
dG9vIG11Y2ggY29udGVudGlvbi4KCkFsc28sIGluIGZldyBvdGhlciBwbGFjZXMsIHRoZXNlIGFy
ZSBjaGVja2VkIHdpdGhvdXQgbG9ja2luZy4KQWRkZWQgbG9ja2luZyBmb3IgdGhlc2UuCgpTaWdu
ZWQtb2ZmLWJ5OiBTaHlhbSBQcmFzYWQgTiA8c3ByYXNhZEBtaWNyb3NvZnQuY29tPgpTaWduZWQt
b2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvY2lm
cy9jaWZzX3N3bi5jICAgICAgfCAgNCArLS0KIGZzL2NpZnMvY2lmc2VuY3J5cHQuYyAgIHwgIDYg
KysrKy0KIGZzL2NpZnMvY2lmc2dsb2IuaCAgICAgIHwgIDQgKy0tCiBmcy9jaWZzL2NpZnNzbWIu
YyAgICAgICB8IDEyICsrKysrKysrLQogZnMvY2lmcy9jb25uZWN0LmMgICAgICAgfCAzNiArKysr
KysrKysrKysrKysrKysrLS0tLS0tLS0KIGZzL2NpZnMvbmV0bWlzYy5jICAgICAgIHwgIDQgKy0t
CiBmcy9jaWZzL3Nlc3MuYyAgICAgICAgICB8ICA4ICsrKy0tLQogZnMvY2lmcy9zbWIxb3BzLmMg
ICAgICAgfCAxMSArKysrKysrLS0KIGZzL2NpZnMvc21iMm9wcy5jICAgICAgIHwgMTUgKysrKysr
KysrLS0KIGZzL2NpZnMvc21iMnBkdS5jICAgICAgIHwgMjEgKysrKysrKysrKysrKy0tLQogZnMv
Y2lmcy9zbWIydHJhbnNwb3J0LmMgfCAzMSArKysrKysrKysrKysrKysrKystLS0tLQogZnMvY2lm
cy90cmFuc3BvcnQuYyAgICAgfCA1NSArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
Ky0tLS0tLQogMTIgZmlsZXMgY2hhbmdlZCwgMTY0IGluc2VydGlvbnMoKyksIDQzIGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc19zd24uYyBiL2ZzL2NpZnMvY2lmc19zd24u
YwppbmRleCAyM2ExZWQyZmI3NjkuLjhmMzg2ZGQ5OTM5ZSAxMDA2NDQKLS0tIGEvZnMvY2lmcy9j
aWZzX3N3bi5jCisrKyBiL2ZzL2NpZnMvY2lmc19zd24uYwpAQCAtNDk4LDEwICs0OTgsMTAgQEAg
c3RhdGljIGludCBjaWZzX3N3bl9yZWNvbm5lY3Qoc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwgc3Ry
dWN0IHNvY2thZGRyX3N0b3JhZ2UgKmEKIAkJZ290byB1bmxvY2s7CiAJfQogCi0Jc3Bpbl9sb2Nr
KCZHbG9iYWxNaWRfTG9jayk7CisJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJaWYg
KHRjb24tPnNlcy0+c2VydmVyLT50Y3BTdGF0dXMgIT0gQ2lmc0V4aXRpbmcpCiAJCXRjb24tPnNl
cy0+c2VydmVyLT50Y3BTdGF0dXMgPSBDaWZzTmVlZFJlY29ubmVjdDsKLQlzcGluX3VubG9jaygm
R2xvYmFsTWlkX0xvY2spOworCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAKIHVu
bG9jazoKIAltdXRleF91bmxvY2soJnRjb24tPnNlcy0+c2VydmVyLT5zcnZfbXV0ZXgpOwpkaWZm
IC0tZ2l0IGEvZnMvY2lmcy9jaWZzZW5jcnlwdC5jIGIvZnMvY2lmcy9jaWZzZW5jcnlwdC5jCmlu
ZGV4IGQxMTgyODIwNzFiMy4uMDkxMmQ4YmJiYWMxIDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNl
bmNyeXB0LmMKKysrIGIvZnMvY2lmcy9jaWZzZW5jcnlwdC5jCkBAIC0xNDEsOSArMTQxLDEzIEBA
IGludCBjaWZzX3NpZ25fcnFzdChzdHJ1Y3Qgc21iX3Jxc3QgKnJxc3QsIHN0cnVjdCBUQ1BfU2Vy
dmVyX0luZm8gKnNlcnZlciwKIAlpZiAoKGNpZnNfcGR1ID09IE5VTEwpIHx8IChzZXJ2ZXIgPT0g
TlVMTCkpCiAJCXJldHVybiAtRUlOVkFMOwogCisJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9j
ayk7CiAJaWYgKCEoY2lmc19wZHUtPkZsYWdzMiAmIFNNQkZMRzJfU0VDVVJJVFlfU0lHTkFUVVJF
KSB8fAotCSAgICBzZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZzTmVlZE5lZ290aWF0ZSkKKwkgICAg
c2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc05lZWROZWdvdGlhdGUpIHsKKwkJc3Bpbl91bmxvY2so
JmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJcmV0dXJuIHJjOworCX0KKwlzcGluX3VubG9jaygmY2lm
c190Y3Bfc2VzX2xvY2spOwogCiAJaWYgKCFzZXJ2ZXItPnNlc3Npb25fZXN0YWIpIHsKIAkJbWVt
Y3B5KGNpZnNfcGR1LT5TaWduYXR1cmUuU2VjdXJpdHlTaWduYXR1cmUsICJCU1JTUFlMIiwgOCk7
CmRpZmYgLS1naXQgYS9mcy9jaWZzL2NpZnNnbG9iLmggYi9mcy9jaWZzL2NpZnNnbG9iLmgKaW5k
ZXggMjNkNzZhZTcxM2YwLi40YmEzNWZhZmY3OWMgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvY2lmc2ds
b2IuaAorKysgYi9mcy9jaWZzL2NpZnNnbG9iLmgKQEAgLTU4Niw3ICs1ODYsNyBAQCBzdHJ1Y3Qg
VENQX1NlcnZlcl9JbmZvIHsKIAljaGFyIHNlcnZlcl9SRkMxMDAxX25hbWVbUkZDMTAwMV9OQU1F
X0xFTl9XSVRIX05VTExdOwogCXN0cnVjdCBzbWJfdmVyc2lvbl9vcGVyYXRpb25zCSpvcHM7CiAJ
c3RydWN0IHNtYl92ZXJzaW9uX3ZhbHVlcwkqdmFsczsKLQkvKiB1cGRhdGVzIHRvIHRjcFN0YXR1
cyBwcm90ZWN0ZWQgYnkgR2xvYmFsTWlkX0xvY2sgKi8KKwkvKiB1cGRhdGVzIHRvIHRjcFN0YXR1
cyBwcm90ZWN0ZWQgYnkgY2lmc190Y3Bfc2VzX2xvY2sgKi8KIAllbnVtIHN0YXR1c0VudW0gdGNw
U3RhdHVzOyAvKiB3aGF0IHdlIHRoaW5rIHRoZSBzdGF0dXMgaXMgKi8KIAljaGFyICpob3N0bmFt
ZTsgLyogaG9zdG5hbWUgcG9ydGlvbiBvZiBVTkMgc3RyaW5nICovCiAJc3RydWN0IHNvY2tldCAq
c3NvY2tldDsKQEAgLTkyNCw3ICs5MjQsNyBAQCBzdHJ1Y3QgY2lmc19zZXMgewogCXN0cnVjdCBt
dXRleCBzZXNzaW9uX211dGV4OwogCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcjsJLyog
cG9pbnRlciB0byBzZXJ2ZXIgaW5mbyAqLwogCWludCBzZXNfY291bnQ7CQkvKiByZWZlcmVuY2Ug
Y291bnRlciAqLwotCWVudW0gc3RhdHVzRW51bSBzdGF0dXM7ICAvKiB1cGRhdGVzIHByb3RlY3Rl
ZCBieSBHbG9iYWxNaWRfTG9jayAqLworCWVudW0gc3RhdHVzRW51bSBzdGF0dXM7ICAvKiB1cGRh
dGVzIHByb3RlY3RlZCBieSBjaWZzX3RjcF9zZXNfbG9jayAqLwogCXVuc2lnbmVkIG92ZXJyaWRl
U2VjRmxnOyAgLyogaWYgbm9uLXplcm8gb3ZlcnJpZGUgZ2xvYmFsIHNlYyBmbGFncyAqLwogCWNo
YXIgKnNlcnZlck9TOwkJLyogbmFtZSBvZiBvcGVyYXRpbmcgc3lzdGVtIHVuZGVybHlpbmcgc2Vy
dmVyICovCiAJY2hhciAqc2VydmVyTk9TOwkvKiBuYW1lIG9mIG5ldHdvcmsgb3BlcmF0aW5nIHN5
c3RlbSBvZiBzZXJ2ZXIgKi8KZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc3NtYi5jIGIvZnMvY2lm
cy9jaWZzc21iLmMKaW5kZXggN2IxZDBkNzFmM2YxLi4zZWYyNzk2ZTJmMjQgMTAwNjQ0Ci0tLSBh
L2ZzL2NpZnMvY2lmc3NtYi5jCisrKyBiL2ZzL2NpZnMvY2lmc3NtYi5jCkBAIC0xMjAsMTUgKzEy
MCwxOCBAQCBjaWZzX3JlY29ubmVjdF90Y29uKHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sIGludCBz
bWJfY29tbWFuZCkKIAkgKiBvbmx5IHRyZWUgZGlzY29ubmVjdCwgb3BlbiwgYW5kIHdyaXRlLCAo
YW5kIHVsb2dvZmYgd2hpY2ggZG9lcyBub3QKIAkgKiBoYXZlIHRjb24pIGFyZSBhbGxvd2VkIGFz
IHdlIHN0YXJ0IGZvcmNlIHVtb3VudAogCSAqLworCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xv
Y2spOwogCWlmICh0Y29uLT50aWRTdGF0dXMgPT0gQ2lmc0V4aXRpbmcpIHsKIAkJaWYgKHNtYl9j
b21tYW5kICE9IFNNQl9DT01fV1JJVEVfQU5EWCAmJgogCQkgICAgc21iX2NvbW1hbmQgIT0gU01C
X0NPTV9PUEVOX0FORFggJiYKIAkJICAgIHNtYl9jb21tYW5kICE9IFNNQl9DT01fVFJFRV9ESVND
T05ORUNUKSB7CisJCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQkJY2lmc19k
YmcoRllJLCAiY2FuIG5vdCBzZW5kIGNtZCAlZCB3aGlsZSB1bW91bnRpbmdcbiIsCiAJCQkJIHNt
Yl9jb21tYW5kKTsKIAkJCXJldHVybiAtRU5PREVWOwogCQl9CiAJfQorCXNwaW5fdW5sb2NrKCZj
aWZzX3RjcF9zZXNfbG9jayk7CiAKIAlyZXRyaWVzID0gc2VydmVyLT5ucl90YXJnZXRzOwogCkBA
IC0xNDgsOCArMTUxLDEyIEBAIGNpZnNfcmVjb25uZWN0X3Rjb24oc3RydWN0IGNpZnNfdGNvbiAq
dGNvbiwgaW50IHNtYl9jb21tYW5kKQogCQl9CiAKIAkJLyogYXJlIHdlIHN0aWxsIHRyeWluZyB0
byByZWNvbm5lY3Q/ICovCi0JCWlmIChzZXJ2ZXItPnRjcFN0YXR1cyAhPSBDaWZzTmVlZFJlY29u
bmVjdCkKKwkJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CisJCWlmIChzZXJ2ZXItPnRj
cFN0YXR1cyAhPSBDaWZzTmVlZFJlY29ubmVjdCkgeworCQkJc3Bpbl91bmxvY2soJmNpZnNfdGNw
X3Nlc19sb2NrKTsKIAkJCWJyZWFrOworCQl9CisJCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNf
bG9jayk7CiAKIAkJaWYgKHJldHJpZXMgJiYgLS1yZXRyaWVzKQogCQkJY29udGludWU7CkBAIC0x
ODYsMTEgKzE5MywxNCBAQCBjaWZzX3JlY29ubmVjdF90Y29uKHN0cnVjdCBjaWZzX3Rjb24gKnRj
b24sIGludCBzbWJfY29tbWFuZCkKIAkgKiBhbmQgdGhlIHNlcnZlciBuZXZlciBzZW5kcyBhbiBh
bnN3ZXIgdGhlIHNvY2tldCB3aWxsIGJlIGNsb3NlZAogCSAqIGFuZCB0Y3BTdGF0dXMgc2V0IHRv
IHJlY29ubmVjdC4KIAkgKi8KKwlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlpZiAo
c2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc05lZWRSZWNvbm5lY3QpIHsKKwkJc3Bpbl91bmxvY2so
JmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJcmMgPSAtRUhPU1RET1dOOwogCQltdXRleF91bmxvY2so
JnNlcy0+c2Vzc2lvbl9tdXRleCk7CiAJCWdvdG8gb3V0OwogCX0KKwlzcGluX3VubG9jaygmY2lm
c190Y3Bfc2VzX2xvY2spOwogCiAJLyoKIAkgKiBuZWVkIHRvIHByZXZlbnQgbXVsdGlwbGUgdGhy
ZWFkcyB0cnlpbmcgdG8gc2ltdWx0YW5lb3VzbHkKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY29ubmVj
dC5jIGIvZnMvY2lmcy9jb25uZWN0LmMKaW5kZXggYzBkYjYwMGY3OTcwLi4xYWZlNzExZTcwZDYg
MTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvY29ubmVjdC5jCisrKyBiL2ZzL2NpZnMvY29ubmVjdC5jCkBA
IC00NjcsOSArNDY3LDEyIEBAIHJlY29ubmVjdF9kZnNfc2VydmVyKHN0cnVjdCBUQ1BfU2VydmVy
X0luZm8gKnNlcnZlciwKIAlkZnNfY2FjaGVfZnJlZV90Z3RzKCZ0bCk7CiAKIAkvKiBOZWVkIHRv
IHNldCB1cCBlY2hvIHdvcmtlciBhZ2FpbiBvbmNlIGNvbm5lY3Rpb24gaGFzIGJlZW4gZXN0YWJs
aXNoZWQgKi8KKwlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlpZiAoc2VydmVyLT50
Y3BTdGF0dXMgPT0gQ2lmc05lZWROZWdvdGlhdGUpCiAJCW1vZF9kZWxheWVkX3dvcmsoY2lmc2lv
ZF93cSwgJnNlcnZlci0+ZWNobywgMCk7CiAKKwlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xv
Y2spOworCiAJd2FrZV91cCgmc2VydmVyLT5yZXNwb25zZV9xKTsKIAlyZXR1cm4gcmM7CiB9CkBA
IC01NzEsMTUgKzU3NCwxOCBAQCBzZXJ2ZXJfdW5yZXNwb25zaXZlKHN0cnVjdCBUQ1BfU2VydmVy
X0luZm8gKnNlcnZlcikKIAkgKiA2NXMga2VybmVsX3JlY3Ztc2cgdGltZXMgb3V0LCBhbmQgd2Ug
c2VlIHRoYXQgd2UgaGF2ZW4ndCBnb3R0ZW4KIAkgKiAgICAgYSByZXNwb25zZSBpbiA+NjBzLgog
CSAqLworCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCWlmICgoc2VydmVyLT50Y3BT
dGF0dXMgPT0gQ2lmc0dvb2QgfHwKIAkgICAgc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc05lZWRO
ZWdvdGlhdGUpICYmCiAJICAgICghc2VydmVyLT5vcHMtPmNhbl9lY2hvIHx8IHNlcnZlci0+b3Bz
LT5jYW5fZWNobyhzZXJ2ZXIpKSAmJgogCSAgICB0aW1lX2FmdGVyKGppZmZpZXMsIHNlcnZlci0+
bHN0cnAgKyAzICogc2VydmVyLT5lY2hvX2ludGVydmFsKSkgeworCQlzcGluX3VubG9jaygmY2lm
c190Y3Bfc2VzX2xvY2spOwogCQljaWZzX3NlcnZlcl9kYmcoVkZTLCAiaGFzIG5vdCByZXNwb25k
ZWQgaW4gJWx1IHNlY29uZHMuIFJlY29ubmVjdGluZy4uLlxuIiwKIAkJCSAoMyAqIHNlcnZlci0+
ZWNob19pbnRlcnZhbCkgLyBIWik7CiAJCWNpZnNfcmVjb25uZWN0KHNlcnZlciwgZmFsc2UpOwog
CQlyZXR1cm4gdHJ1ZTsKIAl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAog
CXJldHVybiBmYWxzZTsKIH0KQEAgLTYyNCwxMyArNjMwLDE4IEBAIGNpZnNfcmVhZHZfZnJvbV9z
b2NrZXQoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3QgbXNnaGRyICpzbWJf
bXNnKQogCQllbHNlCiAJCQlsZW5ndGggPSBzb2NrX3JlY3Ztc2coc2VydmVyLT5zc29ja2V0LCBz
bWJfbXNnLCAwKTsKIAotCQlpZiAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc0V4aXRpbmcpCisJ
CXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOworCQlpZiAoc2VydmVyLT50Y3BTdGF0dXMg
PT0gQ2lmc0V4aXRpbmcpIHsKKwkJCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJ
CQlyZXR1cm4gLUVTSFVURE9XTjsKKwkJfQogCiAJCWlmIChzZXJ2ZXItPnRjcFN0YXR1cyA9PSBD
aWZzTmVlZFJlY29ubmVjdCkgeworCQkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsK
IAkJCWNpZnNfcmVjb25uZWN0KHNlcnZlciwgZmFsc2UpOwogCQkJcmV0dXJuIC1FQ09OTkFCT1JU
RUQ7CiAJCX0KKwkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAogCQlpZiAobGVu
Z3RoID09IC1FUkVTVEFSVFNZUyB8fAogCQkgICAgbGVuZ3RoID09IC1FQUdBSU4gfHwKQEAgLTgw
OCw5ICs4MTksOSBAQCBzdGF0aWMgdm9pZCBjbGVhbl9kZW11bHRpcGxleF9pbmZvKHN0cnVjdCBU
Q1BfU2VydmVyX0luZm8gKnNlcnZlcikKIAljYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJnNlcnZl
ci0+ZWNobyk7CiAJY2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZzZXJ2ZXItPnJlc29sdmUpOwog
Ci0Jc3Bpbl9sb2NrKCZHbG9iYWxNaWRfTG9jayk7CisJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNf
bG9jayk7CiAJc2VydmVyLT50Y3BTdGF0dXMgPSBDaWZzRXhpdGluZzsKLQlzcGluX3VubG9jaygm
R2xvYmFsTWlkX0xvY2spOworCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJd2Fr
ZV91cF9hbGwoJnNlcnZlci0+cmVzcG9uc2VfcSk7CiAKIAkvKiBjaGVjayBpZiB3ZSBoYXZlIGJs
b2NrZWQgcmVxdWVzdHMgdGhhdCBuZWVkIHRvIGZyZWUgKi8KQEAgLTE0MjcsOSArMTQzOCw5IEBA
IGNpZnNfcHV0X3RjcF9zZXNzaW9uKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgaW50
IGZyb21fcmVjb25uZWN0KQogCWVsc2UKIAkJY2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZzZXJ2
ZXItPnJlY29ubmVjdCk7CiAKLQlzcGluX2xvY2soJkdsb2JhbE1pZF9Mb2NrKTsKKwlzcGluX2xv
Y2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlzZXJ2ZXItPnRjcFN0YXR1cyA9IENpZnNFeGl0aW5n
OwotCXNwaW5fdW5sb2NrKCZHbG9iYWxNaWRfTG9jayk7CisJc3Bpbl91bmxvY2soJmNpZnNfdGNw
X3Nlc19sb2NrKTsKIAogCWNpZnNfY3J5cHRvX3NlY21lY2hfcmVsZWFzZShzZXJ2ZXIpOwogCkBA
IC0xNTgyLDcgKzE1OTMsOSBAQCBjaWZzX2dldF90Y3Bfc2Vzc2lvbihzdHJ1Y3Qgc21iM19mc19j
b250ZXh0ICpjdHgsCiAJICogdG8gdGhlIHN0cnVjdCBzaW5jZSB0aGUga2VybmVsIHRocmVhZCBu
b3QgY3JlYXRlZCB5ZXQKIAkgKiBubyBuZWVkIHRvIHNwaW5sb2NrIHRoaXMgdXBkYXRlIG9mIHRj
cFN0YXR1cwogCSAqLworCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCXRjcF9zZXMt
PnRjcFN0YXR1cyA9IENpZnNOZWVkTmVnb3RpYXRlOworCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9z
ZXNfbG9jayk7CiAKIAlpZiAoKGN0eC0+bWF4X2NyZWRpdHMgPCAyMCkgfHwgKGN0eC0+bWF4X2Ny
ZWRpdHMgPiA2MDAwMCkpCiAJCXRjcF9zZXMtPm1heF9jcmVkaXRzID0gU01CMl9NQVhfQ1JFRElU
U19BVkFJTEFCTEU7CkBAIC0xNzk5LDE1ICsxODEyLDEzIEBAIHZvaWQgY2lmc19wdXRfc21iX3Nl
cyhzdHJ1Y3QgY2lmc19zZXMgKnNlcykKIAkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2Nr
KTsKIAkJcmV0dXJuOwogCX0KLQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCiAJ
Lyogc2VzX2NvdW50IGNhbiBuZXZlciBnbyBuZWdhdGl2ZSAqLwogCVdBUk5fT04oc2VzLT5zZXNf
Y291bnQgPCAwKTsKIAotCXNwaW5fbG9jaygmR2xvYmFsTWlkX0xvY2spOwogCWlmIChzZXMtPnN0
YXR1cyA9PSBDaWZzR29vZCkKIAkJc2VzLT5zdGF0dXMgPSBDaWZzRXhpdGluZzsKLQlzcGluX3Vu
bG9jaygmR2xvYmFsTWlkX0xvY2spOworCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7
CiAKIAljaWZzX2ZyZWVfaXBjKHNlcyk7CiAKQEAgLTMwNzUsMTIgKzMwODYsMTUgQEAgc3RhdGlj
IGludCBtb3VudF9nZXRfY29ubnMoc3RydWN0IG1vdW50X2N0eCAqbW50X2N0eCkKIAkJICogZm9y
IGp1c3QgdGhpcyBtb3VudC4KIAkJICovCiAJCXJlc2V0X2NpZnNfdW5peF9jYXBzKHhpZCwgdGNv
biwgY2lmc19zYiwgY3R4KTsKKwkJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJCWlm
ICgodGNvbi0+c2VzLT5zZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZzTmVlZFJlY29ubmVjdCkgJiYK
IAkJICAgIChsZTY0X3RvX2NwdSh0Y29uLT5mc1VuaXhJbmZvLkNhcGFiaWxpdHkpICYKIAkJICAg
ICBDSUZTX1VOSVhfVFJBTlNQT1JUX0VOQ1JZUFRJT05fTUFOREFUT1JZX0NBUCkpIHsKKwkJCXNw
aW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJCQlyYyA9IC1FQUNDRVM7CiAJCQlnb3Rv
IG91dDsKIAkJfQorCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCX0gZWxzZQog
CQl0Y29uLT51bml4X2V4dCA9IDA7IC8qIHNlcnZlciBkb2VzIG5vdCBzdXBwb3J0IHRoZW0gKi8K
IApAQCAtMzc1NSw3ICszNzY5LDkgQEAgQ0lGU1RDb24oY29uc3QgdW5zaWduZWQgaW50IHhpZCwg
c3RydWN0IGNpZnNfc2VzICpzZXMsCiAJaWYgKHJjID09IDApIHsKIAkJYm9vbCBpc191bmljb2Rl
OwogCisJCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQl0Y29uLT50aWRTdGF0dXMg
PSBDaWZzR29vZDsKKwkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJdGNvbi0+
bmVlZF9yZWNvbm5lY3QgPSBmYWxzZTsKIAkJdGNvbi0+dGlkID0gc21iX2J1ZmZlcl9yZXNwb25z
ZS0+VGlkOwogCQliY2NfcHRyID0gcEJ5dGVBcmVhKHNtYl9idWZmZXJfcmVzcG9uc2UpOwpAQCAt
Mzg1OSwxMiArMzg3NSwxMiBAQCBjaWZzX25lZ290aWF0ZV9wcm90b2NvbChjb25zdCB1bnNpZ25l
ZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcywKIAogCXJjID0gc2VydmVyLT5vcHMtPm5l
Z290aWF0ZSh4aWQsIHNlcywgc2VydmVyKTsKIAlpZiAocmMgPT0gMCkgewotCQlzcGluX2xvY2so
Jkdsb2JhbE1pZF9Mb2NrKTsKKwkJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJCWlm
IChzZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZzTmVlZE5lZ290aWF0ZSkKIAkJCXNlcnZlci0+dGNw
U3RhdHVzID0gQ2lmc0dvb2Q7CiAJCWVsc2UKIAkJCXJjID0gLUVIT1NURE9XTjsKLQkJc3Bpbl91
bmxvY2soJkdsb2JhbE1pZF9Mb2NrKTsKKwkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2Nr
KTsKIAl9CiAKIAlyZXR1cm4gcmM7CmRpZmYgLS1naXQgYS9mcy9jaWZzL25ldG1pc2MuYyBiL2Zz
L2NpZnMvbmV0bWlzYy5jCmluZGV4IGZhOWZiZDZhODE5Yy4uNDNiMTZiNmQxMDhjIDEwMDY0NAot
LS0gYS9mcy9jaWZzL25ldG1pc2MuYworKysgYi9mcy9jaWZzL25ldG1pc2MuYwpAQCAtODk2LDEw
ICs4OTYsMTAgQEAgbWFwX2FuZF9jaGVja19zbWJfZXJyb3Ioc3RydWN0IG1pZF9xX2VudHJ5ICpt
aWQsIGJvb2wgbG9nRXJyKQogCQlpZiAoY2xhc3MgPT0gRVJSU1JWICYmIGNvZGUgPT0gRVJSYmFk
dWlkKSB7CiAJCQljaWZzX2RiZyhGWUksICJTZXJ2ZXIgcmV0dXJuZWQgMHgleCwgcmVjb25uZWN0
aW5nIHNlc3Npb24uLi5cbiIsCiAJCQkJY29kZSk7Ci0JCQlzcGluX2xvY2soJkdsb2JhbE1pZF9M
b2NrKTsKKwkJCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQkJaWYgKG1pZC0+c2Vy
dmVyLT50Y3BTdGF0dXMgIT0gQ2lmc0V4aXRpbmcpCiAJCQkJbWlkLT5zZXJ2ZXItPnRjcFN0YXR1
cyA9IENpZnNOZWVkUmVjb25uZWN0OwotCQkJc3Bpbl91bmxvY2soJkdsb2JhbE1pZF9Mb2NrKTsK
KwkJCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJCX0KIAl9CiAKZGlmZiAtLWdp
dCBhL2ZzL2NpZnMvc2Vzcy5jIGIvZnMvY2lmcy9zZXNzLmMKaW5kZXggNjFmYzhjYjFlYzhmLi4w
M2JhMzA4NDM5NTAgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvc2Vzcy5jCisrKyBiL2ZzL2NpZnMvc2Vz
cy5jCkBAIC0zNjksMTAgKzM2OSwxMCBAQCB2b2lkIGNpZnNfc2VzX21hcmtfZm9yX3JlY29ubmVj
dChzdHJ1Y3QgY2lmc19zZXMgKnNlcykKIAlpbnQgaTsKIAogCWZvciAoaSA9IDA7IGkgPCBzZXMt
PmNoYW5fY291bnQ7IGkrKykgewotCQlzcGluX2xvY2soJkdsb2JhbE1pZF9Mb2NrKTsKKwkJc3Bp
bl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJCWlmIChzZXMtPmNoYW5zW2ldLnNlcnZlci0+
dGNwU3RhdHVzICE9IENpZnNFeGl0aW5nKQogCQkJc2VzLT5jaGFuc1tpXS5zZXJ2ZXItPnRjcFN0
YXR1cyA9IENpZnNOZWVkUmVjb25uZWN0OwotCQlzcGluX3VubG9jaygmR2xvYmFsTWlkX0xvY2sp
OworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCX0KIH0KIApAQCAtMTA1Miw5
ICsxMDUyLDkgQEAgc2Vzc19lc3RhYmxpc2hfc2Vzc2lvbihzdHJ1Y3Qgc2Vzc19kYXRhICpzZXNz
X2RhdGEpCiAJc3Bpbl91bmxvY2soJnNlcy0+Y2hhbl9sb2NrKTsKIAogCS8qIEV2ZW4gaWYgb25l
IGNoYW5uZWwgaXMgYWN0aXZlLCBzZXNzaW9uIGlzIGluIGdvb2Qgc3RhdGUgKi8KLQlzcGluX2xv
Y2soJkdsb2JhbE1pZF9Mb2NrKTsKKwlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlz
ZXMtPnN0YXR1cyA9IENpZnNHb29kOwotCXNwaW5fdW5sb2NrKCZHbG9iYWxNaWRfTG9jayk7CisJ
c3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAogCXJldHVybiAwOwogfQpkaWZmIC0t
Z2l0IGEvZnMvY2lmcy9zbWIxb3BzLmMgYi9mcy9jaWZzL3NtYjFvcHMuYwppbmRleCA1MzY2MjAy
ZDM0M2QuLjU0MzE5YTc4OWM5MiAxMDA2NDQKLS0tIGEvZnMvY2lmcy9zbWIxb3BzLmMKKysrIGIv
ZnMvY2lmcy9zbWIxb3BzLmMKQEAgLTE2Myw3ICsxNjMsNyBAQCBjaWZzX2dldF9uZXh0X21pZChz
dHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpCiB7CiAJX191NjQgbWlkID0gMDsKIAlfX3Ux
NiBsYXN0X21pZCwgY3VyX21pZDsKLQlib29sIGNvbGxpc2lvbjsKKwlib29sIGNvbGxpc2lvbiwg
cmVjb25uZWN0OwogCiAJc3Bpbl9sb2NrKCZHbG9iYWxNaWRfTG9jayk7CiAKQEAgLTIxNSw3ICsy
MTUsNyBAQCBjaWZzX2dldF9uZXh0X21pZChzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIp
CiAJCSAqIGFuIGV2ZW50dWFsIHJlY29ubmVjdCB0byBjbGVhbiBvdXQgdGhlIHBlbmRpbmdfbWlk
X3EuCiAJCSAqLwogCQlpZiAobnVtX21pZHMgPiAzMjc2OCkKLQkJCXNlcnZlci0+dGNwU3RhdHVz
ID0gQ2lmc05lZWRSZWNvbm5lY3Q7CisJCQlyZWNvbm5lY3QgPSB0cnVlOwogCiAJCWlmICghY29s
bGlzaW9uKSB7CiAJCQltaWQgPSAoX191NjQpY3VyX21pZDsKQEAgLTIyNSw2ICsyMjUsMTMgQEAg
Y2lmc19nZXRfbmV4dF9taWQoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyKQogCQljdXJf
bWlkKys7CiAJfQogCXNwaW5fdW5sb2NrKCZHbG9iYWxNaWRfTG9jayk7CisKKwlpZiAocmVjb25u
ZWN0KSB7CisJCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOworCQlzZXJ2ZXItPnRjcFN0
YXR1cyA9IENpZnNOZWVkUmVjb25uZWN0OworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xv
Y2spOworCX0KKwogCXJldHVybiBtaWQ7CiB9CiAKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvc21iMm9w
cy5jIGIvZnMvY2lmcy9zbWIyb3BzLmMKaW5kZXggYjMzYjBmMzkxYTIzLi5jMjM2OGM5MTEwYjAg
MTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvc21iMm9wcy5jCisrKyBiL2ZzL2NpZnMvc21iMm9wcy5jCkBA
IC0xMjEsOSArMTIxLDEzIEBAIHNtYjJfYWRkX2NyZWRpdHMoc3RydWN0IFRDUF9TZXJ2ZXJfSW5m
byAqc2VydmVyLAogCQkJIG9wdHlwZSwgc2NyZWRpdHMsIGFkZCk7CiAJfQogCisJc3Bpbl9sb2Nr
KCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJaWYgKHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNOZWVk
UmVjb25uZWN0Ci0JICAgIHx8IHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNFeGl0aW5nKQorCSAg
ICB8fCBzZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZzRXhpdGluZykgeworCQlzcGluX3VubG9jaygm
Y2lmc190Y3Bfc2VzX2xvY2spOwogCQlyZXR1cm47CisJfQorCXNwaW5fdW5sb2NrKCZjaWZzX3Rj
cF9zZXNfbG9jayk7CiAKIAlzd2l0Y2ggKHJjKSB7CiAJY2FzZSAtMToKQEAgLTIwOCwxMSArMjEy
LDE1IEBAIHNtYjJfd2FpdF9tdHVfY3JlZGl0cyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2
ZXIsIHVuc2lnbmVkIGludCBzaXplLAogCQkJCXJldHVybiByYzsKIAkJCXNwaW5fbG9jaygmc2Vy
dmVyLT5yZXFfbG9jayk7CiAJCX0gZWxzZSB7CisJCQlzcGluX3VubG9jaygmc2VydmVyLT5yZXFf
bG9jayk7CisJCQlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJCWlmIChzZXJ2ZXIt
PnRjcFN0YXR1cyA9PSBDaWZzRXhpdGluZykgewotCQkJCXNwaW5fdW5sb2NrKCZzZXJ2ZXItPnJl
cV9sb2NrKTsKKwkJCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQkJCXJldHVy
biAtRU5PRU5UOwogCQkJfQorCQkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAor
CQkJc3Bpbl9sb2NrKCZzZXJ2ZXItPnJlcV9sb2NrKTsKIAkJCXNjcmVkaXRzID0gc2VydmVyLT5j
cmVkaXRzOwogCQkJLyogY2FuIGRlYWRsb2NrIHdpdGggcmVvcGVuICovCiAJCQlpZiAoc2NyZWRp
dHMgPD0gOCkgewpAQCAtNDk4MywxMCArNDk5MSwxMiBAQCBzdGF0aWMgdm9pZCBzbWIyX2RlY3J5
cHRfb2ZmbG9hZChzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAKIAkJCW1pZC0+Y2FsbGJhY2so
bWlkKTsKIAkJfSBlbHNlIHsKKwkJCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQkJ
c3Bpbl9sb2NrKCZHbG9iYWxNaWRfTG9jayk7CiAJCQlpZiAoZHctPnNlcnZlci0+dGNwU3RhdHVz
ID09IENpZnNOZWVkUmVjb25uZWN0KSB7CiAJCQkJbWlkLT5taWRfc3RhdGUgPSBNSURfUkVUUllf
TkVFREVEOwogCQkJCXNwaW5fdW5sb2NrKCZHbG9iYWxNaWRfTG9jayk7CisJCQkJc3Bpbl91bmxv
Y2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJCQltaWQtPmNhbGxiYWNrKG1pZCk7CiAJCQl9IGVs
c2UgewogCQkJCW1pZC0+bWlkX3N0YXRlID0gTUlEX1JFUVVFU1RfU1VCTUlUVEVEOwpAQCAtNDk5
NCw2ICs1MDA0LDcgQEAgc3RhdGljIHZvaWQgc21iMl9kZWNyeXB0X29mZmxvYWQoc3RydWN0IHdv
cmtfc3RydWN0ICp3b3JrKQogCQkJCWxpc3RfYWRkX3RhaWwoJm1pZC0+cWhlYWQsCiAJCQkJCSZk
dy0+c2VydmVyLT5wZW5kaW5nX21pZF9xKTsKIAkJCQlzcGluX3VubG9jaygmR2xvYmFsTWlkX0xv
Y2spOworCQkJCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJCQl9CiAJCX0KIAkJ
Y2lmc19taWRfcV9lbnRyeV9yZWxlYXNlKG1pZCk7CmRpZmYgLS1naXQgYS9mcy9jaWZzL3NtYjJw
ZHUuYyBiL2ZzL2NpZnMvc21iMnBkdS5jCmluZGV4IDllN2IyMTNkYmVmNS4uMGMxOGI2ZjRmOWVi
IDEwMDY0NAotLS0gYS9mcy9jaWZzL3NtYjJwZHUuYworKysgYi9mcy9jaWZzL3NtYjJwZHUuYwpA
QCAtMTYyLDYgKzE2Miw3IEBAIHNtYjJfcmVjb25uZWN0KF9fbGUxNiBzbWIyX2NvbW1hbmQsIHN0
cnVjdCBjaWZzX3Rjb24gKnRjb24sCiAJaWYgKHNtYjJfY29tbWFuZCA9PSBTTUIyX1RSRUVfQ09O
TkVDVCB8fCBzbWIyX2NvbW1hbmQgPT0gU01CMl9JT0NUTCkKIAkJcmV0dXJuIDA7CiAKKwlzcGlu
X2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlpZiAodGNvbi0+dGlkU3RhdHVzID09IENpZnNF
eGl0aW5nKSB7CiAJCS8qCiAJCSAqIG9ubHkgdHJlZSBkaXNjb25uZWN0LCBvcGVuLCBhbmQgd3Jp
dGUsCkBAIC0xNzEsMTEgKzE3MiwxMyBAQCBzbWIyX3JlY29ubmVjdChfX2xlMTYgc21iMl9jb21t
YW5kLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCQlpZiAoKHNtYjJfY29tbWFuZCAhPSBTTUIy
X1dSSVRFKSAmJgogCQkgICAoc21iMl9jb21tYW5kICE9IFNNQjJfQ1JFQVRFKSAmJgogCQkgICAo
c21iMl9jb21tYW5kICE9IFNNQjJfVFJFRV9ESVNDT05ORUNUKSkgeworCQkJc3Bpbl91bmxvY2so
JmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJCWNpZnNfZGJnKEZZSSwgImNhbiBub3Qgc2VuZCBjbWQg
JWQgd2hpbGUgdW1vdW50aW5nXG4iLAogCQkJCSBzbWIyX2NvbW1hbmQpOwogCQkJcmV0dXJuIC1F
Tk9ERVY7CiAJCX0KIAl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlpZiAo
KCF0Y29uLT5zZXMpIHx8ICh0Y29uLT5zZXMtPnN0YXR1cyA9PSBDaWZzRXhpdGluZykgfHwKIAkg
ICAgKCF0Y29uLT5zZXMtPnNlcnZlcikgfHwgIXNlcnZlcikKIAkJcmV0dXJuIC1FSU87CkBAIC0y
MTQsOCArMjE3LDEyIEBAIHNtYjJfcmVjb25uZWN0KF9fbGUxNiBzbWIyX2NvbW1hbmQsIHN0cnVj
dCBjaWZzX3Rjb24gKnRjb24sCiAJCX0KIAogCQkvKiBhcmUgd2Ugc3RpbGwgdHJ5aW5nIHRvIHJl
Y29ubmVjdD8gKi8KLQkJaWYgKHNlcnZlci0+dGNwU3RhdHVzICE9IENpZnNOZWVkUmVjb25uZWN0
KQorCQlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKKwkJaWYgKHNlcnZlci0+dGNwU3Rh
dHVzICE9IENpZnNOZWVkUmVjb25uZWN0KSB7CisJCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2Vz
X2xvY2spOwogCQkJYnJlYWs7CisJCX0KKwkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2Nr
KTsKIAogCQlpZiAocmV0cmllcyAmJiAtLXJldHJpZXMpCiAJCQljb250aW51ZTsKQEAgLTI1NSwx
MSArMjYyLDE0IEBAIHNtYjJfcmVjb25uZWN0KF9fbGUxNiBzbWIyX2NvbW1hbmQsIHN0cnVjdCBj
aWZzX3Rjb24gKnRjb24sCiAJICogYW5kIHRoZSBzZXJ2ZXIgbmV2ZXIgc2VuZHMgYW4gYW5zd2Vy
IHRoZSBzb2NrZXQgd2lsbCBiZSBjbG9zZWQKIAkgKiBhbmQgdGNwU3RhdHVzIHNldCB0byByZWNv
bm5lY3QuCiAJICovCisJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJaWYgKHNlcnZl
ci0+dGNwU3RhdHVzID09IENpZnNOZWVkUmVjb25uZWN0KSB7CisJCXNwaW5fdW5sb2NrKCZjaWZz
X3RjcF9zZXNfbG9jayk7CiAJCXJjID0gLUVIT1NURE9XTjsKIAkJbXV0ZXhfdW5sb2NrKCZzZXMt
PnNlc3Npb25fbXV0ZXgpOwogCQlnb3RvIG91dDsKIAl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNw
X3Nlc19sb2NrKTsKIAogCS8qCiAJICogbmVlZCB0byBwcmV2ZW50IG11bHRpcGxlIHRocmVhZHMg
dHJ5aW5nIHRvIHNpbXVsdGFuZW91c2x5CkBAIC0xMzg2LDkgKzEzOTYsOSBAQCBTTUIyX3Nlc3Nf
ZXN0YWJsaXNoX3Nlc3Npb24oc3RydWN0IFNNQjJfc2Vzc19kYXRhICpzZXNzX2RhdGEpCiAJc3Bp
bl91bmxvY2soJnNlcy0+Y2hhbl9sb2NrKTsKIAogCS8qIEV2ZW4gaWYgb25lIGNoYW5uZWwgaXMg
YWN0aXZlLCBzZXNzaW9uIGlzIGluIGdvb2Qgc3RhdGUgKi8KLQlzcGluX2xvY2soJkdsb2JhbE1p
ZF9Mb2NrKTsKKwlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlzZXMtPnN0YXR1cyA9
IENpZnNHb29kOwotCXNwaW5fdW5sb2NrKCZHbG9iYWxNaWRfTG9jayk7CisJc3Bpbl91bmxvY2so
JmNpZnNfdGNwX3Nlc19sb2NrKTsKIAogCXJldHVybiByYzsKIH0KQEAgLTE5MTcsNyArMTkyNyw5
IEBAIFNNQjJfdGNvbihjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMgKnNl
cywgY29uc3QgY2hhciAqdHJlZSwKIAl0Y29uLT5zaGFyZV9mbGFncyA9IGxlMzJfdG9fY3B1KHJz
cC0+U2hhcmVGbGFncyk7CiAJdGNvbi0+Y2FwYWJpbGl0aWVzID0gcnNwLT5DYXBhYmlsaXRpZXM7
IC8qIHdlIGtlZXAgY2FwcyBsaXR0bGUgZW5kaWFuICovCiAJdGNvbi0+bWF4aW1hbF9hY2Nlc3Mg
PSBsZTMyX3RvX2NwdShyc3AtPk1heGltYWxBY2Nlc3MpOworCXNwaW5fbG9jaygmY2lmc190Y3Bf
c2VzX2xvY2spOwogCXRjb24tPnRpZFN0YXR1cyA9IENpZnNHb29kOworCXNwaW5fdW5sb2NrKCZj
aWZzX3RjcF9zZXNfbG9jayk7CiAJdGNvbi0+bmVlZF9yZWNvbm5lY3QgPSBmYWxzZTsKIAl0Y29u
LT50aWQgPSBsZTMyX3RvX2NwdShyc3AtPmhkci5JZC5TeW5jSWQuVHJlZUlkKTsKIAlzdHJsY3B5
KHRjb24tPnRyZWVOYW1lLCB0cmVlLCBzaXplb2YodGNvbi0+dHJlZU5hbWUpKTsKQEAgLTM4NTQs
MTEgKzM4NjYsMTQgQEAgU01CMl9lY2hvKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcikK
IAogCWNpZnNfZGJnKEZZSSwgIkluIGVjaG8gcmVxdWVzdFxuIik7CiAKKwlzcGluX2xvY2soJmNp
ZnNfdGNwX3Nlc19sb2NrKTsKIAlpZiAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc05lZWROZWdv
dGlhdGUpIHsKKwkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJLyogTm8gbmVl
ZCB0byBzZW5kIGVjaG8gb24gbmV3bHkgZXN0YWJsaXNoZWQgY29ubmVjdGlvbnMgKi8KIAkJbW9k
X2RlbGF5ZWRfd29yayhjaWZzaW9kX3dxLCAmc2VydmVyLT5yZWNvbm5lY3QsIDApOwogCQlyZXR1
cm4gcmM7CiAJfQorCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAKIAlyYyA9IHNt
YjJfcGxhaW5fcmVxX2luaXQoU01CMl9FQ0hPLCBOVUxMLCBzZXJ2ZXIsCiAJCQkJICh2b2lkICoq
KSZyZXEsICZ0b3RhbF9sZW4pOwpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9zbWIydHJhbnNwb3J0LmMg
Yi9mcy9jaWZzL3NtYjJ0cmFuc3BvcnQuYwppbmRleCAxMTJhZGYxNTM4MDcuLmI3MGE0OWI0ZWRj
MCAxMDA2NDQKLS0tIGEvZnMvY2lmcy9zbWIydHJhbnNwb3J0LmMKKysrIGIvZnMvY2lmcy9zbWIy
dHJhbnNwb3J0LmMKQEAgLTYzNCw4ICs2MzQsMTIgQEAgc21iMl9zaWduX3Jxc3Qoc3RydWN0IHNt
Yl9ycXN0ICpycXN0LCBzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpCiAKIAlpZiAoIWlz
X3NpZ25lZCkKIAkJcmV0dXJuIDA7Ci0JaWYgKHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNOZWVk
TmVnb3RpYXRlKQorCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOworCWlmIChzZXJ2ZXIt
PnRjcFN0YXR1cyA9PSBDaWZzTmVlZE5lZ290aWF0ZSkgeworCQlzcGluX3VubG9jaygmY2lmc190
Y3Bfc2VzX2xvY2spOwogCQlyZXR1cm4gMDsKKwl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nl
c19sb2NrKTsKIAlpZiAoIWlzX2JpbmRpbmcgJiYgIXNlcnZlci0+c2Vzc2lvbl9lc3RhYikgewog
CQlzdHJuY3B5KHNoZHItPlNpZ25hdHVyZSwgIkJTUlNQWUwiLCA4KTsKIAkJcmV0dXJuIDA7CkBA
IC03NTEsMzAgKzc1NSw0MSBAQCBzdGF0aWMgaW50CiBzbWIyX2dldF9taWRfZW50cnkoc3RydWN0
IGNpZnNfc2VzICpzZXMsIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwKIAkJICAgc3Ry
dWN0IHNtYjJfaGRyICpzaGRyLCBzdHJ1Y3QgbWlkX3FfZW50cnkgKiptaWQpCiB7Ci0JaWYgKHNl
cnZlci0+dGNwU3RhdHVzID09IENpZnNFeGl0aW5nKQorCXNwaW5fbG9jaygmY2lmc190Y3Bfc2Vz
X2xvY2spOworCWlmIChzZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZzRXhpdGluZykgeworCQlzcGlu
X3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQlyZXR1cm4gLUVOT0VOVDsKKwl9CiAKIAlp
ZiAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc05lZWRSZWNvbm5lY3QpIHsKKwkJc3Bpbl91bmxv
Y2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJY2lmc19kYmcoRllJLCAidGNwIHNlc3Npb24gZGVh
ZCAtIHJldHVybiB0byBjYWxsZXIgdG8gcmV0cnlcbiIpOwogCQlyZXR1cm4gLUVBR0FJTjsKIAl9
CiAKIAlpZiAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc05lZWROZWdvdGlhdGUgJiYKLQkgICBz
aGRyLT5Db21tYW5kICE9IFNNQjJfTkVHT1RJQVRFKQorCSAgIHNoZHItPkNvbW1hbmQgIT0gU01C
Ml9ORUdPVElBVEUpIHsKKwkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJcmV0
dXJuIC1FQUdBSU47CisJfQogCiAJaWYgKHNlcy0+c3RhdHVzID09IENpZnNOZXcpIHsKIAkJaWYg
KChzaGRyLT5Db21tYW5kICE9IFNNQjJfU0VTU0lPTl9TRVRVUCkgJiYKLQkJICAgIChzaGRyLT5D
b21tYW5kICE9IFNNQjJfTkVHT1RJQVRFKSkKKwkJICAgIChzaGRyLT5Db21tYW5kICE9IFNNQjJf
TkVHT1RJQVRFKSkgeworCQkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJCXJl
dHVybiAtRUFHQUlOOworCQl9CiAJCS8qIGVsc2Ugb2sgLSB3ZSBhcmUgc2V0dGluZyB1cCBzZXNz
aW9uICovCiAJfQogCiAJaWYgKHNlcy0+c3RhdHVzID09IENpZnNFeGl0aW5nKSB7Ci0JCWlmIChz
aGRyLT5Db21tYW5kICE9IFNNQjJfTE9HT0ZGKQorCQlpZiAoc2hkci0+Q29tbWFuZCAhPSBTTUIy
X0xPR09GRikgeworCQkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJCXJldHVy
biAtRUFHQUlOOworCQl9CiAJCS8qIGVsc2Ugb2sgLSB3ZSBhcmUgc2h1dHRpbmcgZG93biB0aGUg
c2Vzc2lvbiAqLwogCX0KKwlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCiAJKm1p
ZCA9IHNtYjJfbWlkX2VudHJ5X2FsbG9jKHNoZHIsIHNlcnZlcik7CiAJaWYgKCptaWQgPT0gTlVM
TCkKQEAgLTg0Nyw5ICs4NjIsMTMgQEAgc21iMl9zZXR1cF9hc3luY19yZXF1ZXN0KHN0cnVjdCBU
Q1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IHNtYl9ycXN0ICpycXN0KQogCQkJKHN0cnVj
dCBzbWIyX2hkciAqKXJxc3QtPnJxX2lvdlswXS5pb3ZfYmFzZTsKIAlzdHJ1Y3QgbWlkX3FfZW50
cnkgKm1pZDsKIAorCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCWlmIChzZXJ2ZXIt
PnRjcFN0YXR1cyA9PSBDaWZzTmVlZE5lZ290aWF0ZSAmJgotCSAgIHNoZHItPkNvbW1hbmQgIT0g
U01CMl9ORUdPVElBVEUpCisJICAgc2hkci0+Q29tbWFuZCAhPSBTTUIyX05FR09USUFURSkgewor
CQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQlyZXR1cm4gRVJSX1BUUigtRUFH
QUlOKTsKKwl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAogCXNtYjJfc2Vx
X251bV9pbnRvX2J1ZihzZXJ2ZXIsIHNoZHIpOwogCmRpZmYgLS1naXQgYS9mcy9jaWZzL3RyYW5z
cG9ydC5jIGIvZnMvY2lmcy90cmFuc3BvcnQuYwppbmRleCAxZDgxNjgxZDliOTcuLjFjNDAwY2Ey
NjM4MyAxMDA2NDQKLS0tIGEvZnMvY2lmcy90cmFuc3BvcnQuYworKysgYi9mcy9jaWZzL3RyYW5z
cG9ydC5jCkBAIC00MzAsOSArNDMwLDkgQEAgX19zbWJfc2VuZF9ycXN0KHN0cnVjdCBUQ1BfU2Vy
dmVyX0luZm8gKnNlcnZlciwgaW50IG51bV9ycXN0LAogCQkgKiBiZSB0YWtlbiBhcyB0aGUgcmVt
YWluZGVyIG9mIHRoaXMgb25lLiBXZSBuZWVkIHRvIGtpbGwgdGhlCiAJCSAqIHNvY2tldCBzbyB0
aGUgc2VydmVyIHRocm93cyBhd2F5IHRoZSBwYXJ0aWFsIFNNQgogCQkgKi8KLQkJc3Bpbl9sb2Nr
KCZHbG9iYWxNaWRfTG9jayk7CisJCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQlz
ZXJ2ZXItPnRjcFN0YXR1cyA9IENpZnNOZWVkUmVjb25uZWN0OwotCQlzcGluX3VubG9jaygmR2xv
YmFsTWlkX0xvY2spOworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQl0cmFj
ZV9zbWIzX3BhcnRpYWxfc2VuZF9yZWNvbm5lY3Qoc2VydmVyLT5DdXJyZW50TWlkLAogCQkJCQkJ
ICBzZXJ2ZXItPmNvbm5faWQsIHNlcnZlci0+aG9zdG5hbWUpOwogCX0KQEAgLTU3OCwxMCArNTc4
LDE0IEBAIHdhaXRfZm9yX2ZyZWVfY3JlZGl0cyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2
ZXIsIGNvbnN0IGludCBudW1fY3JlZGl0cywKIAkJCQlyZXR1cm4gLUVSRVNUQVJUU1lTOwogCQkJ
c3Bpbl9sb2NrKCZzZXJ2ZXItPnJlcV9sb2NrKTsKIAkJfSBlbHNlIHsKKwkJCXNwaW5fdW5sb2Nr
KCZzZXJ2ZXItPnJlcV9sb2NrKTsKKworCQkJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7
CiAJCQlpZiAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc0V4aXRpbmcpIHsKLQkJCQlzcGluX3Vu
bG9jaygmc2VydmVyLT5yZXFfbG9jayk7CisJCQkJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19s
b2NrKTsKIAkJCQlyZXR1cm4gLUVOT0VOVDsKIAkJCX0KKwkJCXNwaW5fdW5sb2NrKCZjaWZzX3Rj
cF9zZXNfbG9jayk7CiAKIAkJCS8qCiAJCQkgKiBGb3Igbm9ybWFsIGNvbW1hbmRzLCByZXNlcnZl
IHRoZSBsYXN0IE1BWF9DT01QT1VORApAQCAtNTk2LDYgKzYwMCw3IEBAIHdhaXRfZm9yX2ZyZWVf
Y3JlZGl0cyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIGNvbnN0IGludCBudW1fY3Jl
ZGl0cywKIAkJCSAqIGZvciBzZXJ2ZXJzIHRoYXQgYXJlIHNsb3cgdG8gaGFuZCBvdXQgY3JlZGl0
cyBvbgogCQkJICogbmV3IHNlc3Npb25zLgogCQkJICovCisJCQlzcGluX2xvY2soJnNlcnZlci0+
cmVxX2xvY2spOwogCQkJaWYgKCFvcHR5cGUgJiYgbnVtX2NyZWRpdHMgPT0gMSAmJgogCQkJICAg
IHNlcnZlci0+aW5fZmxpZ2h0ID4gMiAqIE1BWF9DT01QT1VORCAmJgogCQkJICAgICpjcmVkaXRz
IDw9IE1BWF9DT01QT1VORCkgewpAQCAtNzIzLDI4ICs3MjgsMzYgQEAgY2lmc193YWl0X210dV9j
cmVkaXRzKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgdW5zaWduZWQgaW50IHNpemUs
CiBzdGF0aWMgaW50IGFsbG9jYXRlX21pZChzdHJ1Y3QgY2lmc19zZXMgKnNlcywgc3RydWN0IHNt
Yl9oZHIgKmluX2J1ZiwKIAkJCXN0cnVjdCBtaWRfcV9lbnRyeSAqKnBwbWlkUSkKIHsKKwlzcGlu
X2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAlpZiAoc2VzLT5zZXJ2ZXItPnRjcFN0YXR1cyA9
PSBDaWZzRXhpdGluZykgeworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQly
ZXR1cm4gLUVOT0VOVDsKIAl9CiAKIAlpZiAoc2VzLT5zZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZz
TmVlZFJlY29ubmVjdCkgeworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQlj
aWZzX2RiZyhGWUksICJ0Y3Agc2Vzc2lvbiBkZWFkIC0gcmV0dXJuIHRvIGNhbGxlciB0byByZXRy
eVxuIik7CiAJCXJldHVybiAtRUFHQUlOOwogCX0KIAogCWlmIChzZXMtPnN0YXR1cyA9PSBDaWZz
TmV3KSB7CiAJCWlmICgoaW5fYnVmLT5Db21tYW5kICE9IFNNQl9DT01fU0VTU0lPTl9TRVRVUF9B
TkRYKSAmJgotCQkJKGluX2J1Zi0+Q29tbWFuZCAhPSBTTUJfQ09NX05FR09USUFURSkpCisJCQko
aW5fYnVmLT5Db21tYW5kICE9IFNNQl9DT01fTkVHT1RJQVRFKSkgeworCQkJc3Bpbl91bmxvY2so
JmNpZnNfdGNwX3Nlc19sb2NrKTsKIAkJCXJldHVybiAtRUFHQUlOOworCQl9CiAJCS8qIGVsc2Ug
b2sgLSB3ZSBhcmUgc2V0dGluZyB1cCBzZXNzaW9uICovCiAJfQogCiAJaWYgKHNlcy0+c3RhdHVz
ID09IENpZnNFeGl0aW5nKSB7CiAJCS8qIGNoZWNrIGlmIFNNQiBzZXNzaW9uIGlzIGJhZCBiZWNh
dXNlIHdlIGFyZSBzZXR0aW5nIGl0IHVwICovCi0JCWlmIChpbl9idWYtPkNvbW1hbmQgIT0gU01C
X0NPTV9MT0dPRkZfQU5EWCkKKwkJaWYgKGluX2J1Zi0+Q29tbWFuZCAhPSBTTUJfQ09NX0xPR09G
Rl9BTkRYKSB7CisJCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQkJcmV0dXJu
IC1FQUdBSU47CisJCX0KIAkJLyogZWxzZSBvayAtIHdlIGFyZSBzaHV0dGluZyBkb3duIHNlc3Np
b24gKi8KIAl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAogCSpwcG1pZFEg
PSBBbGxvY01pZFFFbnRyeShpbl9idWYsIHNlcy0+c2VydmVyKTsKIAlpZiAoKnBwbWlkUSA9PSBO
VUxMKQpAQCAtMTA4NSw4ICsxMDk4LDEyIEBAIGNvbXBvdW5kX3NlbmRfcmVjdihjb25zdCB1bnNp
Z25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcywKIAkJcmV0dXJuIC1FSU87CiAJfQog
Ci0JaWYgKHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNFeGl0aW5nKQorCXNwaW5fbG9jaygmY2lm
c190Y3Bfc2VzX2xvY2spOworCWlmIChzZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZzRXhpdGluZykg
eworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQlyZXR1cm4gLUVOT0VOVDsK
Kwl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAogCS8qCiAJICogV2FpdCBm
b3IgYWxsIHRoZSByZXF1ZXN0cyB0byBiZWNvbWUgYXZhaWxhYmxlLgpAQCAtMTE4OSwxMSArMTIw
NiwxNyBAQCBjb21wb3VuZF9zZW5kX3JlY3YoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0
IGNpZnNfc2VzICpzZXMsCiAJLyoKIAkgKiBDb21wb3VuZGluZyBpcyBuZXZlciB1c2VkIGR1cmlu
ZyBzZXNzaW9uIGVzdGFibGlzaC4KIAkgKi8KKwlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2Nr
KTsKIAlpZiAoKHNlcy0+c3RhdHVzID09IENpZnNOZXcpIHx8IChvcHR5cGUgJiBDSUZTX05FR19P
UCkgfHwgKG9wdHlwZSAmIENJRlNfU0VTU19PUCkpIHsKKwkJc3Bpbl91bmxvY2soJmNpZnNfdGNw
X3Nlc19sb2NrKTsKKwogCQltdXRleF9sb2NrKCZzZXJ2ZXItPnNydl9tdXRleCk7CiAJCXNtYjMx
MV91cGRhdGVfcHJlYXV0aF9oYXNoKHNlcywgc2VydmVyLCBycXN0WzBdLnJxX2lvdiwgcnFzdFsw
XS5ycV9udmVjKTsKIAkJbXV0ZXhfdW5sb2NrKCZzZXJ2ZXItPnNydl9tdXRleCk7CisKKwkJc3Bp
bl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAJfQorCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9z
ZXNfbG9jayk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgbnVtX3Jxc3Q7IGkrKykgewogCQlyYyA9IHdh
aXRfZm9yX3Jlc3BvbnNlKHNlcnZlciwgbWlkUVtpXSk7CkBAIC0xMjU2LDE1ICsxMjc5LDE5IEBA
IGNvbXBvdW5kX3NlbmRfcmVjdihjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19z
ZXMgKnNlcywKIAkvKgogCSAqIENvbXBvdW5kaW5nIGlzIG5ldmVyIHVzZWQgZHVyaW5nIHNlc3Np
b24gZXN0YWJsaXNoLgogCSAqLworCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCWlm
ICgoc2VzLT5zdGF0dXMgPT0gQ2lmc05ldykgfHwgKG9wdHlwZSAmIENJRlNfTkVHX09QKSB8fCAo
b3B0eXBlICYgQ0lGU19TRVNTX09QKSkgewogCQlzdHJ1Y3Qga3ZlYyBpb3YgPSB7CiAJCQkuaW92
X2Jhc2UgPSByZXNwX2lvdlswXS5pb3ZfYmFzZSwKIAkJCS5pb3ZfbGVuID0gcmVzcF9pb3ZbMF0u
aW92X2xlbgogCQl9OworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCQltdXRl
eF9sb2NrKCZzZXJ2ZXItPnNydl9tdXRleCk7CiAJCXNtYjMxMV91cGRhdGVfcHJlYXV0aF9oYXNo
KHNlcywgc2VydmVyLCAmaW92LCAxKTsKIAkJbXV0ZXhfdW5sb2NrKCZzZXJ2ZXItPnNydl9tdXRl
eCk7CisJCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOwogCX0KKwlzcGluX3VubG9jaygm
Y2lmc190Y3Bfc2VzX2xvY2spOwogCiBvdXQ6CiAJLyoKQEAgLTEzNTMsOCArMTM4MCwxMiBAQCBT
ZW5kUmVjZWl2ZShjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcywK
IAkJcmV0dXJuIC1FSU87CiAJfQogCi0JaWYgKHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNFeGl0
aW5nKQorCXNwaW5fbG9jaygmY2lmc190Y3Bfc2VzX2xvY2spOworCWlmIChzZXJ2ZXItPnRjcFN0
YXR1cyA9PSBDaWZzRXhpdGluZykgeworCQlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xvY2sp
OwogCQlyZXR1cm4gLUVOT0VOVDsKKwl9CisJc3Bpbl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2Nr
KTsKIAogCS8qIEVuc3VyZSB0aGF0IHdlIGRvIG5vdCBzZW5kIG1vcmUgdGhhbiA1MCBvdmVybGFw
cGluZyByZXF1ZXN0cwogCSAgIHRvIHRoZSBzYW1lIHNlcnZlci4gV2UgbWF5IG1ha2UgdGhpcyBj
b25maWd1cmFibGUgbGF0ZXIgb3IKQEAgLTE0OTQsOCArMTUyNSwxMiBAQCBTZW5kUmVjZWl2ZUJs
b2NraW5nTG9jayhjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29u
LAogCQlyZXR1cm4gLUVJTzsKIAl9CiAKLQlpZiAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc0V4
aXRpbmcpCisJc3Bpbl9sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CisJaWYgKHNlcnZlci0+dGNw
U3RhdHVzID09IENpZnNFeGl0aW5nKSB7CisJCXNwaW5fdW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9j
ayk7CiAJCXJldHVybiAtRU5PRU5UOworCX0KKwlzcGluX3VubG9jaygmY2lmc190Y3Bfc2VzX2xv
Y2spOwogCiAJLyogRW5zdXJlIHRoYXQgd2UgZG8gbm90IHNlbmQgbW9yZSB0aGFuIDUwIG92ZXJs
YXBwaW5nIHJlcXVlc3RzCiAJICAgdG8gdGhlIHNhbWUgc2VydmVyLiBXZSBtYXkgbWFrZSB0aGlz
IGNvbmZpZ3VyYWJsZSBsYXRlciBvcgpAQCAtMTU1MywxMCArMTU4OCwxMiBAQCBTZW5kUmVjZWl2
ZUJsb2NraW5nTG9jayhjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0
Y29uLAogCQkgKHNlcnZlci0+dGNwU3RhdHVzICE9IENpZnNOZXcpKSk7CiAKIAkvKiBXZXJlIHdl
IGludGVycnVwdGVkIGJ5IGEgc2lnbmFsID8gKi8KKwlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19s
b2NrKTsKIAlpZiAoKHJjID09IC1FUkVTVEFSVFNZUykgJiYKIAkJKG1pZFEtPm1pZF9zdGF0ZSA9
PSBNSURfUkVRVUVTVF9TVUJNSVRURUQpICYmCiAJCSgoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lm
c0dvb2QpIHx8CiAJCSAoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc05ldykpKSB7CisJCXNwaW5f
dW5sb2NrKCZjaWZzX3RjcF9zZXNfbG9jayk7CiAKIAkJaWYgKGluX2J1Zi0+Q29tbWFuZCA9PSBT
TUJfQ09NX1RSQU5TQUNUSU9OMikgewogCQkJLyogUE9TSVggbG9jay4gV2Ugc2VuZCBhIE5UX0NB
TkNFTCBTTUIgdG8gY2F1c2UgdGhlCkBAIC0xNTk1LDcgKzE2MzIsOSBAQCBTZW5kUmVjZWl2ZUJs
b2NraW5nTG9jayhjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29u
LAogCiAJCS8qIFdlIGdvdCB0aGUgcmVzcG9uc2UgLSByZXN0YXJ0IHN5c3RlbSBjYWxsLiAqLwog
CQlyc3RhcnQgPSAxOworCQlzcGluX2xvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAl9CisJc3Bp
bl91bmxvY2soJmNpZnNfdGNwX3Nlc19sb2NrKTsKIAogCXJjID0gY2lmc19zeW5jX21pZF9yZXN1
bHQobWlkUSwgc2VydmVyKTsKIAlpZiAocmMgIT0gMCkKLS0gCjIuMzIuMAoK
--000000000000e5673b05d4558c52--
