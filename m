Return-Path: <linux-cifs+bounces-865-lists+linux-cifs=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [IPv6:2604:1380:45d1:ec00::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 54757835982
	for <lists+linux-cifs@lfdr.de>; Mon, 22 Jan 2024 03:58:33 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id 5CCBB1C210D2
	for <lists+linux-cifs@lfdr.de>; Mon, 22 Jan 2024 02:58:32 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 9391C136A;
	Mon, 22 Jan 2024 02:58:25 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="itYlpZoz"
X-Original-To: linux-cifs@vger.kernel.org
Received: from mail-lj1-f181.google.com (mail-lj1-f181.google.com [209.85.208.181])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id F0EAA1368
	for <linux-cifs@vger.kernel.org>; Mon, 22 Jan 2024 02:58:18 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.208.181
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1705892305; cv=none; b=JDgm5Q6jX5RtrhGoSkUv6eYekAfiFj0/mBBJU/aT1s1ETrqT5rEkCQlR0uRu9/n2qMJFsSebCfACDKFuHWmXP1tfldw93F24RCUTjLkbVKgZ6/OBmf8D93z7WWMurXeouaGGdr41/3icjBHGH7pggjTHxYGb/I9MTl24v7jz2hs=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1705892305; c=relaxed/simple;
	bh=ysMu4QyScUQ79YtPyzR3oFryT2zQM/IOF2QfVjZzO18=;
	h=MIME-Version:From:Date:Message-ID:Subject:To:Content-Type; b=dCWtGuMzCjeFg7/LdBtqkGymMBJ/4ADpGBcfBBV1e/azmM3Tzbp22yNZVIk/d9J27lNCpzh360DZPAgh4O2nERULjYLC/agDSbUYmvUys54BdllotT+3XwgoStkna145QRa1PhX+rAHvR/pORqykaInDpTOXCNw8u0FlOUT2A9Q=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=itYlpZoz; arc=none smtp.client-ip=209.85.208.181
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Received: by mail-lj1-f181.google.com with SMTP id 38308e7fff4ca-2cddf596321so27554511fa.0
        for <linux-cifs@vger.kernel.org>; Sun, 21 Jan 2024 18:58:18 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1705892297; x=1706497097; darn=vger.kernel.org;
        h=to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=wGgwO7+Dz2TRiaMj6ldyKvyH+w7NyLPz1VHykCMtgnk=;
        b=itYlpZoz70W0vMpOVNtOu5VGbKB0BaU9jz4RaiyW3fHuXPaYIcmqp1K0+1Ons5O5Cm
         2nGCZ+V8huBmMTGA4b04OOaMNA/xC3Nv0qnHXnhScoVLefiffLGj5nlq6MAng3k1Ywiv
         adw860XCu5/ENN2HMtMimdG730KPT0kE0cfMxOHaW90pQW+jUH18T5pnLzFg+W/TRs5I
         3PQQ7CvPfgoR2AML8hx102I9P7G8kfRiGvRS5vvKLpwGTVJo1zdGVg84OR+2p5LIxrUr
         PExjXrP2s3pnpu7OPQ/m6Gm9+htvocNO7stwMycSes1K40AbzE1w2VhC7dTDW+rI7XU8
         JnMw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1705892297; x=1706497097;
        h=to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=wGgwO7+Dz2TRiaMj6ldyKvyH+w7NyLPz1VHykCMtgnk=;
        b=R0BtUr3Z6jlA/8xMEV9kXaWbbmbRmxaf29jiGBVu/2NawbMlY5et13sgDBF/KKXch0
         O98eIbA1d3Dc9bHfruxT3nibBWFXZzoYR9cMMpJWo1RquAH6hruB1afjvL8XqX/MVlns
         Gj0ckAZ9TnvXMIJVfW3+IqduMYgykHT6CwV5A7kkYDE8WdkAVPfXjAcp21qMvWGiQlfO
         bTg5EmMQQvWkHigpa29r9UspfsAmabXIOA8lUNYIVppJpuW6r6rGukKA9anmdMsN6Ncp
         FQxCKs5KY9b/HfsViQd0BTRFflZbBJ7Kt6TA3C8/JxmlHzKug9efVX4RkjAKnNcSsLdn
         HJMQ==
X-Gm-Message-State: AOJu0Yzt/21ybNo8g2YSwt/YWOHwqZBPr2TIuQ4kI1zXPpeFLR788siF
	RuVXXtNn7VG3Pk67T+tGjEOgGP9kuxfRXix0o08PTOT8UrdUCNYP7cJcbqyzrisLY8C9tvhp4z2
	aMxIX+/0YrwWJ38IK2nun1Jjke5i67wAkg967+A==
X-Google-Smtp-Source: AGHT+IEKPirNW70tcfOZmqUIcTwaUplYM8c0Wkye4FN1EJhacKqF9Pj1gAcNlNjI4dIlEKDAwUB4Ii7vlMCEEJ3N0Oo=
X-Received: by 2002:a2e:a7d3:0:b0:2cd:9959:53a0 with SMTP id
 x19-20020a2ea7d3000000b002cd995953a0mr1697732ljp.1.1705892296543; Sun, 21 Jan
 2024 18:58:16 -0800 (PST)
Precedence: bulk
X-Mailing-List: linux-cifs@vger.kernel.org
List-Id: <linux-cifs.vger.kernel.org>
List-Subscribe: <mailto:linux-cifs+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cifs+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
From: Steve French <smfrench@gmail.com>
Date: Sun, 21 Jan 2024 20:58:04 -0600
Message-ID: <CAH2r5mvpZEk0cf2VAu9AyVYs20uk7f9G4y8461F3WX2v+afpoA@mail.gmail.com>
Subject: cifs: integrate with netfs updates patch series
To: David Howells <dhowells@redhat.com>, CIFS <linux-cifs@vger.kernel.org>
Content-Type: multipart/mixed; boundary="0000000000005c6631060f80007d"

--0000000000005c6631060f80007d
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

I had to do a few minor updates to David Howell's recent netfs series
for cifs.ko (to rebase on current code, and eliminate a few checkpatch
warnings, see attached) but patch 8 fails to build  - see below (so
only tentatively merged the first seven for testing):

  CHECK   /home/smfrench/cifs-2.6/fs/smb/client/trace.c
/home/smfrench/cifs-2.6/fs/smb/client/file.c:394:10: error: =E2=80=98const
struct netfs_request_ops=E2=80=99 has no member named =E2=80=98post_modify=
=E2=80=99
  394 |         .post_modify            =3D cifs_post_modify,
      |          ^~~~~~~~~~~
/home/smfrench/cifs-2.6/fs/smb/client/file.c:394:35: error:
initialization of =E2=80=98void (*)(struct inode *, loff_t)=E2=80=99 {aka =
=E2=80=98void
(*)(struct inode *, long long int)=E2=80=99} from incompatible pointer type
=E2=80=98void (*)(struct inode *)=E2=80=99 [-Werror=3Dincompatible-pointer-=
types]
  394 |         .post_modify            =3D cifs_post_modify,


--=20
Thanks,

Steve

--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0007-cifs-Make-wait_mtu_credits-take-size_t-args.patch"
Content-Disposition: attachment; 
	filename="0007-cifs-Make-wait_mtu_credits-take-size_t-args.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6z9q3>
X-Attachment-Id: f_lroc6z9q3

RnJvbSBlMjY5NjVkZjMzODdhMTAyMmQwODNkYmIyYzhjNjFkN2ZlOGFkYzZiIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBGcmksIDYgT2N0IDIwMjMgMTg6MjA6MzkgKzAxMDAKU3ViamVjdDogW1BBVENIIDA3LzEw
XSBjaWZzOiBNYWtlIHdhaXRfbXR1X2NyZWRpdHMgdGFrZSBzaXplX3QgYXJncwoKTWFrZSB0aGUg
d2FpdF9tdHVfY3JlZGl0cyBmdW5jdGlvbnMgdXNlIHNpemVfdCBmb3IgdGhlIHNpemUgYW5kIG51
bQphcmd1bWVudHMgcmF0aGVyIHRoYW4gdW5zaWduZWQgaW50IGFzIG5ldGZzbGliIHVzZXMgc2l6
ZV90L3NzaXplX3QgZm9yCmFyZ3VtZW50cyBhbmQgcmV0dXJuIHZhbHVlcyB0byBhbGxvdyBmb3Ig
ZXh0cmEgY2FwYWNpdHkuCgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0By
ZWRoYXQuY29tPgpjYzogU2h5YW0gUHJhc2FkIE4gPG5zcG1hbmdhbG9yZUBnbWFpbC5jb20+CmNj
OiBSb2hpdGggU3VyYWJhdHR1bGEgPHJvaGl0aHMubXNmdEBnbWFpbC5jb20+CmNjOiBKZWZmIExh
eXRvbiA8amxheXRvbkBrZXJuZWwub3JnPgpjYzogbGludXgtY2lmc0B2Z2VyLmtlcm5lbC5vcmcK
Y2M6IGxpbnV4LWNhY2hlZnNAcmVkaGF0LmNvbQpjYzogbGludXgtZnNkZXZlbEB2Z2VyLmtlcm5l
bC5vcmcKY2M6IGxpbnV4LW1tQGt2YWNrLm9yZwpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2gg
PHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oICB8
ICA0ICsrLS0KIGZzL3NtYi9jbGllbnQvY2lmc3Byb3RvLmggfCAgMiArLQogZnMvc21iL2NsaWVu
dC9maWxlLmMgICAgICB8IDE4ICsrKysrKysrKystLS0tLS0tLQogZnMvc21iL2NsaWVudC9zbWIy
b3BzLmMgICB8ICA0ICsrLS0KIGZzL3NtYi9jbGllbnQvdHJhbnNwb3J0LmMgfCAgNCArKy0tCiA1
IGZpbGVzIGNoYW5nZWQsIDE3IGluc2VydGlvbnMoKyksIDE1IGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaCBiL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2Iu
aAppbmRleCBjNGNkYzAxMjkwMDAuLjM0MTQ1MWUxZjk0NCAxMDA2NDQKLS0tIGEvZnMvc21iL2Ns
aWVudC9jaWZzZ2xvYi5oCisrKyBiL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaApAQCAtNTI4LDgg
KzUyOCw4IEBAIHN0cnVjdCBzbWJfdmVyc2lvbl9vcGVyYXRpb25zIHsKIAkvKiB3cml0ZXBhZ2Vz
IHJldHJ5IHNpemUgKi8KIAl1bnNpZ25lZCBpbnQgKCp3cF9yZXRyeV9zaXplKShzdHJ1Y3QgaW5v
ZGUgKik7CiAJLyogZ2V0IG10dSBjcmVkaXRzICovCi0JaW50ICgqd2FpdF9tdHVfY3JlZGl0cyko
c3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqLCB1bnNpZ25lZCBpbnQsCi0JCQkJdW5zaWduZWQgaW50
ICosIHN0cnVjdCBjaWZzX2NyZWRpdHMgKik7CisJaW50ICgqd2FpdF9tdHVfY3JlZGl0cykoc3Ry
dWN0IFRDUF9TZXJ2ZXJfSW5mbyAqLCBzaXplX3QsCisJCQkJc2l6ZV90ICosIHN0cnVjdCBjaWZz
X2NyZWRpdHMgKik7CiAJLyogYWRqdXN0IHByZXZpb3VzbHkgdGFrZW4gbXR1IGNyZWRpdHMgdG8g
cmVxdWVzdCBzaXplICovCiAJaW50ICgqYWRqdXN0X2NyZWRpdHMpKHN0cnVjdCBUQ1BfU2VydmVy
X0luZm8gKnNlcnZlciwKIAkJCSAgICAgIHN0cnVjdCBjaWZzX2NyZWRpdHMgKmNyZWRpdHMsCmRp
ZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NpZnNwcm90by5oIGIvZnMvc21iL2NsaWVudC9jaWZz
cHJvdG8uaAppbmRleCAyOGY1ZWQ5OWNhM2EuLjJhNDAwNzhjZDliZiAxMDA2NDQKLS0tIGEvZnMv
c21iL2NsaWVudC9jaWZzcHJvdG8uaAorKysgYi9mcy9zbWIvY2xpZW50L2NpZnNwcm90by5oCkBA
IC0xMjEsNyArMTIxLDcgQEAgZXh0ZXJuIHN0cnVjdCBtaWRfcV9lbnRyeSAqY2lmc19zZXR1cF9h
c3luY19yZXF1ZXN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKiwKIGV4dGVybiBpbnQgY2lmc19j
aGVja19yZWNlaXZlKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkLAogCQkJc3RydWN0IFRDUF9TZXJ2
ZXJfSW5mbyAqc2VydmVyLCBib29sIGxvZ19lcnJvcik7CiBleHRlcm4gaW50IGNpZnNfd2FpdF9t
dHVfY3JlZGl0cyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsCi0JCQkJIHVuc2lnbmVk
IGludCBzaXplLCB1bnNpZ25lZCBpbnQgKm51bSwKKwkJCQkgc2l6ZV90IHNpemUsIHNpemVfdCAq
bnVtLAogCQkJCSBzdHJ1Y3QgY2lmc19jcmVkaXRzICpjcmVkaXRzKTsKIGV4dGVybiBpbnQgU2Vu
ZFJlY2VpdmUyKGNvbnN0IHVuc2lnbmVkIGludCAvKiB4aWQgKi8gLCBzdHJ1Y3QgY2lmc19zZXMg
KiwKIAkJCXN0cnVjdCBrdmVjICosIGludCAvKiBudmVjIHRvIHNlbmQgKi8sCmRpZmYgLS1naXQg
YS9mcy9zbWIvY2xpZW50L2ZpbGUuYyBiL2ZzL3NtYi9jbGllbnQvZmlsZS5jCmluZGV4IGM0OGJh
MzgyZmFhNy4uMmYxZjQ4MmQ5NzJlIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2ZpbGUuYwor
KysgYi9mcy9zbWIvY2xpZW50L2ZpbGUuYwpAQCAtMjczNSw5ICsyNzM1LDkgQEAgc3RhdGljIHNz
aXplX3QgY2lmc193cml0ZV9iYWNrX2Zyb21fbG9ja2VkX2ZvbGlvKHN0cnVjdCBhZGRyZXNzX3Nw
YWNlICptYXBwaW5nLAogCXN0cnVjdCBjaWZzX2NyZWRpdHMgY3JlZGl0c19vbl9zdGFjazsKIAlz
dHJ1Y3QgY2lmc19jcmVkaXRzICpjcmVkaXRzID0gJmNyZWRpdHNfb25fc3RhY2s7CiAJc3RydWN0
IGNpZnNGaWxlSW5mbyAqY2ZpbGUgPSBOVUxMOwotCXVuc2lnbmVkIGludCB4aWQsIHdzaXplLCBs
ZW47CisJdW5zaWduZWQgaW50IHhpZCwgbGVuOwogCWxvZmZfdCBpX3NpemUgPSBpX3NpemVfcmVh
ZChpbm9kZSk7Ci0Jc2l6ZV90IG1heF9sZW47CisJc2l6ZV90IG1heF9sZW4sIHdzaXplOwogCWxv
bmcgY291bnQgPSB3YmMtPm5yX3RvX3dyaXRlOwogCWludCByYzsKIApAQCAtMzI0OSw3ICszMjQ5
LDcgQEAgc3RhdGljIGludAogY2lmc19yZXNlbmRfd2RhdGEoc3RydWN0IGNpZnNfaW9fc3VicmVx
dWVzdCAqd2RhdGEsIHN0cnVjdCBsaXN0X2hlYWQgKndkYXRhX2xpc3QsCiAJc3RydWN0IGNpZnNf
YWlvX2N0eCAqY3R4KQogewotCXVuc2lnbmVkIGludCB3c2l6ZTsKKwlzaXplX3Qgd3NpemU7CiAJ
c3RydWN0IGNpZnNfY3JlZGl0cyBjcmVkaXRzOwogCWludCByYzsKIAlzdHJ1Y3QgVENQX1NlcnZl
cl9JbmZvICpzZXJ2ZXIgPSB3ZGF0YS0+c2VydmVyOwpAQCAtMzM4Myw3ICszMzgzLDggQEAgY2lm
c193cml0ZV9mcm9tX2l0ZXIobG9mZl90IGZwb3MsIHNpemVfdCBsZW4sIHN0cnVjdCBpb3ZfaXRl
ciAqZnJvbSwKIAlkbyB7CiAJCXN0cnVjdCBjaWZzX2NyZWRpdHMgY3JlZGl0c19vbl9zdGFjazsK
IAkJc3RydWN0IGNpZnNfY3JlZGl0cyAqY3JlZGl0cyA9ICZjcmVkaXRzX29uX3N0YWNrOwotCQl1
bnNpZ25lZCBpbnQgd3NpemUsIG5zZWdzID0gMDsKKwkJdW5zaWduZWQgaW50IG5zZWdzID0gMDsK
KwkJc2l6ZV90IHdzaXplOwogCiAJCWlmIChzaWduYWxfcGVuZGluZyhjdXJyZW50KSkgewogCQkJ
cmMgPSAtRUlOVFI7CkBAIC0zODIwLDcgKzM4MjEsNyBAQCBzdGF0aWMgaW50IGNpZnNfcmVzZW5k
X3JkYXRhKHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhLAogCQkJc3RydWN0IGxpc3Rf
aGVhZCAqcmRhdGFfbGlzdCwKIAkJCXN0cnVjdCBjaWZzX2Fpb19jdHggKmN0eCkKIHsKLQl1bnNp
Z25lZCBpbnQgcnNpemU7CisJc2l6ZV90IHJzaXplOwogCXN0cnVjdCBjaWZzX2NyZWRpdHMgY3Jl
ZGl0czsKIAlpbnQgcmM7CiAJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyOwpAQCAtMzg5
NCwxMCArMzg5NSwxMCBAQCBjaWZzX3NlbmRfYXN5bmNfcmVhZChsb2ZmX3QgZnBvcywgc2l6ZV90
IGxlbiwgc3RydWN0IGNpZnNGaWxlSW5mbyAqb3Blbl9maWxlLAogCQkgICAgIHN0cnVjdCBjaWZz
X2Fpb19jdHggKmN0eCkKIHsKIAlzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YTsKLQl1
bnNpZ25lZCBpbnQgcnNpemUsIG5zZWdzLCBtYXhfc2VncyA9IElOVF9NQVg7CisJdW5zaWduZWQg
aW50IG5zZWdzLCBtYXhfc2VncyA9IElOVF9NQVg7CiAJc3RydWN0IGNpZnNfY3JlZGl0cyBjcmVk
aXRzX29uX3N0YWNrOwogCXN0cnVjdCBjaWZzX2NyZWRpdHMgKmNyZWRpdHMgPSAmY3JlZGl0c19v
bl9zdGFjazsKLQlzaXplX3QgY3VyX2xlbiwgbWF4X2xlbjsKKwlzaXplX3QgY3VyX2xlbiwgbWF4
X2xlbiwgcnNpemU7CiAJaW50IHJjOwogCXBpZF90IHBpZDsKIAlzdHJ1Y3QgVENQX1NlcnZlcl9J
bmZvICpzZXJ2ZXI7CkBAIC00NDkzLDEyICs0NDk0LDEzIEBAIHN0YXRpYyB2b2lkIGNpZnNfcmVh
ZGFoZWFkKHN0cnVjdCByZWFkYWhlYWRfY29udHJvbCAqcmFjdGwpCiAJICogQ2hvcCB0aGUgcmVh
ZGFoZWFkIHJlcXVlc3QgdXAgaW50byByc2l6ZS1zaXplZCByZWFkIHJlcXVlc3RzLgogCSAqLwog
CXdoaWxlICgobnJfcGFnZXMgPSByYV9wYWdlcykpIHsKLQkJdW5zaWduZWQgaW50IGksIHJzaXpl
OworCQl1bnNpZ25lZCBpbnQgaTsKIAkJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGE7
CiAJCXN0cnVjdCBjaWZzX2NyZWRpdHMgY3JlZGl0c19vbl9zdGFjazsKIAkJc3RydWN0IGNpZnNf
Y3JlZGl0cyAqY3JlZGl0cyA9ICZjcmVkaXRzX29uX3N0YWNrOwogCQlzdHJ1Y3QgZm9saW8gKmZv
bGlvOwogCQlwZ29mZl90IGZzaXplOworCQlzaXplX3QgcnNpemU7CiAKIAkJLyoKIAkJICogRmlu
ZCBvdXQgaWYgd2UgaGF2ZSBhbnl0aGluZyBjYWNoZWQgaW4gdGhlIHJhbmdlIG9mCmRpZmYgLS1n
aXQgYS9mcy9zbWIvY2xpZW50L3NtYjJvcHMuYyBiL2ZzL3NtYi9jbGllbnQvc21iMm9wcy5jCmlu
ZGV4IDRmMjE5YmY5Yjg3NC4uYzVmOTk5ZmRmOTRkIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50
L3NtYjJvcHMuYworKysgYi9mcy9zbWIvY2xpZW50L3NtYjJvcHMuYwpAQCAtMjE2LDggKzIxNiw4
IEBAIHNtYjJfZ2V0X2NyZWRpdHMoc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpCiB9CiAKIHN0YXRp
YyBpbnQKLXNtYjJfd2FpdF9tdHVfY3JlZGl0cyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2
ZXIsIHVuc2lnbmVkIGludCBzaXplLAotCQkgICAgICB1bnNpZ25lZCBpbnQgKm51bSwgc3RydWN0
IGNpZnNfY3JlZGl0cyAqY3JlZGl0cykKK3NtYjJfd2FpdF9tdHVfY3JlZGl0cyhzdHJ1Y3QgVENQ
X1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHNpemVfdCBzaXplLAorCQkgICAgICBzaXplX3QgKm51bSwg
c3RydWN0IGNpZnNfY3JlZGl0cyAqY3JlZGl0cykKIHsKIAlpbnQgcmMgPSAwOwogCXVuc2lnbmVk
IGludCBzY3JlZGl0cywgaW5fZmxpZ2h0OwpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC90cmFu
c3BvcnQuYyBiL2ZzL3NtYi9jbGllbnQvdHJhbnNwb3J0LmMKaW5kZXggMzA0ODUxNjU3M2U4Li41
Y2Y2NTM0NjNjNTUgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvdHJhbnNwb3J0LmMKKysrIGIv
ZnMvc21iL2NsaWVudC90cmFuc3BvcnQuYwpAQCAtNjg0LDggKzY4NCw4IEBAIHdhaXRfZm9yX2Nv
bXBvdW5kX3JlcXVlc3Qoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBpbnQgbnVtLAog
fQogCiBpbnQKLWNpZnNfd2FpdF9tdHVfY3JlZGl0cyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpz
ZXJ2ZXIsIHVuc2lnbmVkIGludCBzaXplLAotCQkgICAgICB1bnNpZ25lZCBpbnQgKm51bSwgc3Ry
dWN0IGNpZnNfY3JlZGl0cyAqY3JlZGl0cykKK2NpZnNfd2FpdF9tdHVfY3JlZGl0cyhzdHJ1Y3Qg
VENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHNpemVfdCBzaXplLAorCQkgICAgICBzaXplX3QgKm51
bSwgc3RydWN0IGNpZnNfY3JlZGl0cyAqY3JlZGl0cykKIHsKIAkqbnVtID0gc2l6ZTsKIAljcmVk
aXRzLT52YWx1ZSA9IDA7Ci0tIAoyLjQwLjEKCg==
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0008-cifs-Implement-netfslib-hooks.patch"
Content-Disposition: attachment; 
	filename="0008-cifs-Implement-netfslib-hooks.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6z9n2>
X-Attachment-Id: f_lroc6z9n2

RnJvbSA1NmZlNmU2NGRmNWRjYjkyN2Q4MjZiZGU5M2YxYjNmZWMyY2NjNzg4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBGcmksIDYgT2N0IDIwMjMgMTg6MTY6MTUgKzAxMDAKU3ViamVjdDogW1BBVENIIDA4LzEw
XSBjaWZzOiBJbXBsZW1lbnQgbmV0ZnNsaWIgaG9va3MKClByb3ZpZGUgaW1wbGVtZW50YXRpb24g
b2YgdGhlIG5ldGZzbGliIGhvb2tzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IG5ldGZzbGliCnRvIGFz
ayBjaWZzIHRvIHNldCB1cCBhbmQgcGVyZm9ybSBvcGVyYXRpb25zLiAgT2YgcGFydGljdWxhciBu
b3RlIGFyZQoKICgqKSBjaWZzX2NsYW1wX2xlbmd0aCgpIC0gVGhpcyBpcyB1c2VkIHRvIG5lZ290
aWF0ZSB0aGUgc2l6ZSBvZiB0aGUgbmV4dAogICAgIHN1YnJlcXVlc3QgaW4gYSByZWFkIHJlcXVl
c3QsIHRha2luZyBpbnRvIGFjY291bnQgdGhlIGNyZWRpdCBhdmFpbGFibGUKICAgICBhbmQgdGhl
IHJzaXplLiAgVGhlIGNyZWRpdHMgYXJlIGF0dGFjaGVkIHRvIHRoZSBzdWJyZXF1ZXN0LgoKICgq
KSBjaWZzX3JlcV9pc3N1ZV9yZWFkKCkgLSBUaGlzIGlzIHVzZWQgdG8gaXNzdWUgYSBzdWJyZXF1
ZXN0IHRoYXQgaGFzCiAgICAgYmVlbiBzZXQgdXAgYW5kIGNsYW1wZWQuCgogKCopIGNpZnNfY3Jl
YXRlX3dyaXRlX3JlcXVlc3RzKCkgLSBUaGlzIGlzIHVzZWQgdG8gYnJlYWsgdGhlIGdpdmVuIHNw
YW4gb2YKICAgICBmaWxlIHBvc2l0aW9ucyBpbnRvIHN1Ym9wZXJhdGlvbnMgYWNjb3JkaW5nIHRv
IGNpZnMncyB3c2l6ZSBhbmQKICAgICBhdmFpbGFibGUgY3JlZGl0cy4gIEFzIGVhY2ggc3Vib3Ag
aXMgY3JlYXRlZCwgaXQgY2FuIGJlIGRpc3BhdGNoZWQgb3IKICAgICBxdWV1ZWQgZm9yIGRpc3Bh
dGNoLgoKQXQgdGhpcyBwb2ludCwgY2lmcyBpcyBub3Qgd2lyZWQgdXAgdG8gYWN0dWFsbHkgKnVz
ZSogbmV0ZnNsaWI7IHRoYXQgd2lsbApiZSBkb25lIGluIGEgc3Vic2VxdWVudCBwYXRjaC4KClNp
Z25lZC1vZmYtYnk6IERhdmlkIEhvd2VsbHMgPGRob3dlbGxzQHJlZGhhdC5jb20+CmNjOiBTaHlh
bSBQcmFzYWQgTiA8bnNwbWFuZ2Fsb3JlQGdtYWlsLmNvbT4KY2M6IFJvaGl0aCBTdXJhYmF0dHVs
YSA8cm9oaXRocy5tc2Z0QGdtYWlsLmNvbT4KY2M6IEplZmYgTGF5dG9uIDxqbGF5dG9uQGtlcm5l
bC5vcmc+CmNjOiBsaW51eC1jaWZzQHZnZXIua2VybmVsLm9yZwpjYzogbGludXgtY2FjaGVmc0By
ZWRoYXQuY29tCmNjOiBsaW51eC1mc2RldmVsQHZnZXIua2VybmVsLm9yZwpjYzogbGludXgtbW1A
a3ZhY2sub3JnClNpZ25lZC1vZmYtYnk6IFN0ZXZlIEZyZW5jaCA8c3RmcmVuY2hAbWljcm9zb2Z0
LmNvbT4KLS0tCiBmcy9uZXRmcy9idWZmZXJlZF93cml0ZS5jICAgIHwgICAzICsKIGZzL3NtYi9j
bGllbnQvS2NvbmZpZyAgICAgICAgfCAgIDEgKwogZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oICAg
ICB8ICAyNiArKy0KIGZzL3NtYi9jbGllbnQvZmlsZS5jICAgICAgICAgfCAzNTcgKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysKIGluY2x1ZGUvbGludXgvbmV0ZnMuaCAgICAgICAg
fCAgIDEgKwogaW5jbHVkZS90cmFjZS9ldmVudHMvbmV0ZnMuaCB8ICAgMSArCiA2IGZpbGVzIGNo
YW5nZWQsIDM4MSBpbnNlcnRpb25zKCspLCA4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Zz
L25ldGZzL2J1ZmZlcmVkX3dyaXRlLmMgYi9mcy9uZXRmcy9idWZmZXJlZF93cml0ZS5jCmluZGV4
IDkzZGM3NmYzNGUzOS4uZjY5ZmNjZWY4NzhkIDEwMDY0NAotLS0gYS9mcy9uZXRmcy9idWZmZXJl
ZF93cml0ZS5jCisrKyBiL2ZzL25ldGZzL2J1ZmZlcmVkX3dyaXRlLmMKQEAgLTM5Myw2ICszOTMs
OSBAQCBzc2l6ZV90IG5ldGZzX3BlcmZvcm1fd3JpdGUoc3RydWN0IGtpb2NiICppb2NiLCBzdHJ1
Y3QgaW92X2l0ZXIgKml0ZXIsCiAJfSB3aGlsZSAoaW92X2l0ZXJfY291bnQoaXRlcikpOwogCiBv
dXQ6CisJaWYgKGxpa2VseSh3cml0dGVuKSAmJiBjdHgtPm9wcy0+cG9zdF9tb2RpZnkpCisJCWN0
eC0+b3BzLT5wb3N0X21vZGlmeShpbm9kZSk7CisKIAlpZiAodW5saWtlbHkod3JlcSkpIHsKIAkJ
cmV0ID0gbmV0ZnNfZW5kX3dyaXRldGhyb3VnaCh3cmVxLCBpb2NiKTsKIAkJd2JjX2RldGFjaF9p
bm9kZSgmd2JjKTsKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvS2NvbmZpZyBiL2ZzL3NtYi9j
bGllbnQvS2NvbmZpZwppbmRleCAyOTI3YmQxNzRhODguLjI1MTdkYzI0MjM4NiAxMDA2NDQKLS0t
IGEvZnMvc21iL2NsaWVudC9LY29uZmlnCisrKyBiL2ZzL3NtYi9jbGllbnQvS2NvbmZpZwpAQCAt
Miw2ICsyLDcgQEAKIGNvbmZpZyBDSUZTCiAJdHJpc3RhdGUgIlNNQjMgYW5kIENJRlMgc3VwcG9y
dCAoYWR2YW5jZWQgbmV0d29yayBmaWxlc3lzdGVtKSIKIAlkZXBlbmRzIG9uIElORVQKKwlzZWxl
Y3QgTkVURlNfU1VQUE9SVAogCXNlbGVjdCBOTFMKIAlzZWxlY3QgTkxTX1VDUzJfVVRJTFMKIAlz
ZWxlY3QgQ1JZUFRPCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmggYi9mcy9z
bWIvY2xpZW50L2NpZnNnbG9iLmgKaW5kZXggMzQxNDUxZTFmOTQ0Li4zMDFlODhjNDlhOGYgMTAw
NjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaAorKysgYi9mcy9zbWIvY2xpZW50L2Np
ZnNnbG9iLmgKQEAgLTE0NTYsMTUgKzE0NTYsMjMgQEAgc3RydWN0IGNpZnNfYWlvX2N0eCB7CiAJ
Ym9vbAkJCWRpcmVjdF9pbzsKIH07CiAKK3N0cnVjdCBjaWZzX2lvX3JlcXVlc3QgeworCXN0cnVj
dCBuZXRmc19pb19yZXF1ZXN0CQlycmVxOworCXN0cnVjdCBjaWZzRmlsZUluZm8JCSpjZmlsZTsK
K307CisKIC8qIGFzeW5jaHJvbm91cyByZWFkIHN1cHBvcnQgKi8KIHN0cnVjdCBjaWZzX2lvX3N1
YnJlcXVlc3QgewotCXN0cnVjdCBuZXRmc19pb19zdWJyZXF1ZXN0CXN1YnJlcTsKLQlzdHJ1Y3Qg
Y2lmc0ZpbGVJbmZvCQkqY2ZpbGU7Ci0Jc3RydWN0IGFkZHJlc3Nfc3BhY2UJCSptYXBwaW5nOwot
CXN0cnVjdCBjaWZzX2Fpb19jdHgJCSpjdHg7CisJdW5pb24geworCQlzdHJ1Y3QgbmV0ZnNfaW9f
c3VicmVxdWVzdCBzdWJyZXE7CisJCXN0cnVjdCBuZXRmc19pb19yZXF1ZXN0ICpycmVxOworCQlz
dHJ1Y3QgY2lmc19pb19yZXF1ZXN0ICpyZXE7CisJfTsKIAlzc2l6ZV90CQkJCWdvdF9ieXRlczsK
IAlwaWRfdAkJCQlwaWQ7CisJdW5zaWduZWQgaW50CQkJeGlkOwogCWludAkJCQlyZXN1bHQ7CisJ
Ym9vbAkJCQloYXZlX2NyZWRpdHM7CiAJc3RydWN0IGt2ZWMJCQlpb3ZbMl07CiAJc3RydWN0IFRD
UF9TZXJ2ZXJfSW5mbwkJKnNlcnZlcjsKICNpZmRlZiBDT05GSUdfQ0lGU19TTUJfRElSRUNUCkBA
IC0xNDcyLDE0ICsxNDgwLDE2IEBAIHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgewogI2VuZGlm
CiAJc3RydWN0IGNpZnNfY3JlZGl0cwkJY3JlZGl0czsKIAotCWVudW0gd3JpdGViYWNrX3N5bmNf
bW9kZXMJc3luY19tb2RlOwotCWJvb2wJCQkJdW5jYWNoZWQ7Ci0Jc3RydWN0IGJpb192ZWMJCQkq
YnY7Ci0KIAkvLyBUT0RPOiBSZW1vdmUgZm9sbG93aW5nIGVsZW1lbnRzCiAJc3RydWN0IGxpc3Rf
aGVhZAkJbGlzdDsKIAlzdHJ1Y3QgY29tcGxldGlvbgkJZG9uZTsKIAlzdHJ1Y3Qgd29ya19zdHJ1
Y3QJCXdvcms7CisJc3RydWN0IGNpZnNGaWxlSW5mbwkJKmNmaWxlOworCXN0cnVjdCBhZGRyZXNz
X3NwYWNlCQkqbWFwcGluZzsKKwlzdHJ1Y3QgY2lmc19haW9fY3R4CQkqY3R4OworCWVudW0gd3Jp
dGViYWNrX3N5bmNfbW9kZXMJc3luY19tb2RlOworCWJvb2wJCQkJdW5jYWNoZWQ7CisJc3RydWN0
IGJpb192ZWMJCQkqYnY7CiB9OwogCiAvKgpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9maWxl
LmMgYi9mcy9zbWIvY2xpZW50L2ZpbGUuYwppbmRleCAyZjFmNDgyZDk3MmUuLjkyYTI1NDgyMDc1
ZSAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9maWxlLmMKKysrIGIvZnMvc21iL2NsaWVudC9m
aWxlLmMKQEAgLTM2LDYgKzM2LDM2MyBAQAogI2luY2x1ZGUgImZzX2NvbnRleHQuaCIKICNpbmNs
dWRlICJjaWZzX2lvY3RsLmgiCiAjaW5jbHVkZSAiY2FjaGVkX2Rpci5oIgorI2luY2x1ZGUgPHRy
YWNlL2V2ZW50cy9uZXRmcy5oPgorCitzdGF0aWMgaW50IGNpZnNfcmVvcGVuX2ZpbGUoc3RydWN0
IGNpZnNGaWxlSW5mbyAqY2ZpbGUsIGJvb2wgY2FuX2ZsdXNoKTsKKworc3RhdGljIHZvaWQgY2lm
c191cGxvYWRfdG9fc2VydmVyKHN0cnVjdCBuZXRmc19pb19zdWJyZXF1ZXN0ICpzdWJyZXEpCit7
CisJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGEgPQorCQljb250YWluZXJfb2Yoc3Vi
cmVxLCBzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0LCBzdWJyZXEpOworCXNzaXplX3QgcmM7CisK
Kwl0cmFjZV9uZXRmc19zcmVxKHN1YnJlcSwgbmV0ZnNfc3JlcV90cmFjZV9zdWJtaXQpOworCisJ
aWYgKHdkYXRhLT5yZXEtPmNmaWxlLT5pbnZhbGlkSGFuZGxlKQorCQlyYyA9IC1FQUdBSU47CisJ
ZWxzZQorCQlyYyA9IHdkYXRhLT5zZXJ2ZXItPm9wcy0+YXN5bmNfd3JpdGV2KHdkYXRhKTsKKwlp
ZiAocmMgPCAwKQorCQlhZGRfY3JlZGl0c19hbmRfd2FrZV9pZih3ZGF0YS0+c2VydmVyLCAmd2Rh
dGEtPmNyZWRpdHMsIDApOworfQorCitzdGF0aWMgdm9pZCBjaWZzX3VwbG9hZF90b19zZXJ2ZXJf
d29ya2VyKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKK3sKKwlzdHJ1Y3QgbmV0ZnNfaW9fc3Vi
cmVxdWVzdCAqc3VicmVxID0KKwkJY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBuZXRmc19pb19z
dWJyZXF1ZXN0LCB3b3JrKTsKKworCWNpZnNfdXBsb2FkX3RvX3NlcnZlcihzdWJyZXEpOworfQor
CisvKgorICogU2V0IHVwIHdyaXRlIHJlcXVlc3RzIGZvciBhIHdyaXRlYmFjayBzbGljZS4gIFdl
IG5lZWQgdG8gYWRkIGEgd3JpdGUgcmVxdWVzdAorICogZm9yIGVhY2ggd3JpdGUgd2Ugd2FudCB0
byBtYWtlLgorICovCitzdGF0aWMgdm9pZCBjaWZzX2NyZWF0ZV93cml0ZV9yZXF1ZXN0cyhzdHJ1
Y3QgbmV0ZnNfaW9fcmVxdWVzdCAqd3JlcSwKKwkJCQkgICAgICAgbG9mZl90IHN0YXJ0LCBzaXpl
X3QgcmVtYWluKQoreworCXN0cnVjdCBuZXRmc19pb19zdWJyZXF1ZXN0ICpzdWJyZXE7CisJc3Ry
dWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGE7CisJc3RydWN0IGNpZnNfaW9fcmVxdWVzdCAq
cmVxID0gY29udGFpbmVyX29mKHdyZXEsIHN0cnVjdCBjaWZzX2lvX3JlcXVlc3QsIHJyZXEpOwor
CXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcjsKKwlzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpv
cGVuX2ZpbGUgPSByZXEtPmNmaWxlOworCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IgPSBD
SUZTX1NCKHdyZXEtPmlub2RlLT5pX3NiKTsKKwlpbnQgcmMgPSAwOworCXNpemVfdCBvZmZzZXQg
PSAwOworCXBpZF90IHBpZDsKKwl1bnNpZ25lZCBpbnQgeGlkLCBtYXhfc2VncyA9IElOVF9NQVg7
CisKKwlpZiAoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX1JXUElERk9SV0FS
RCkKKwkJcGlkID0gb3Blbl9maWxlLT5waWQ7CisJZWxzZQorCQlwaWQgPSBjdXJyZW50LT50Z2lk
OworCisJc2VydmVyID0gY2lmc19waWNrX2NoYW5uZWwodGxpbmtfdGNvbihvcGVuX2ZpbGUtPnRs
aW5rKS0+c2VzKTsKKwl4aWQgPSBnZXRfeGlkKCk7CisKKyNpZmRlZiBDT05GSUdfQ0lGU19TTUJf
RElSRUNUCisJaWYgKHNlcnZlci0+c21iZF9jb25uKQorCQltYXhfc2VncyA9IHNlcnZlci0+c21i
ZF9jb25uLT5tYXhfZnJtcl9kZXB0aDsKKyNlbmRpZgorCisJZG8geworCQl1bnNpZ25lZCBpbnQg
bnNlZ3MgPSAwOworCQlzaXplX3QgbWF4X2xlbiwgcGFydCwgd3NpemU7CisKKwkJc3VicmVxID0g
bmV0ZnNfY3JlYXRlX3dyaXRlX3JlcXVlc3Qod3JlcSwgTkVURlNfVVBMT0FEX1RPX1NFUlZFUiwK
KwkJCQkJCSAgICBzdGFydCwgcmVtYWluLAorCQkJCQkJICAgIGNpZnNfdXBsb2FkX3RvX3NlcnZl
cl93b3JrZXIpOworCQlpZiAoIXN1YnJlcSkgeworCQkJd3JlcS0+ZXJyb3IgPSAtRU5PTUVNOwor
CQkJYnJlYWs7CisJCX0KKworCQl3ZGF0YSA9IGNvbnRhaW5lcl9vZihzdWJyZXEsIHN0cnVjdCBj
aWZzX2lvX3N1YnJlcXVlc3QsIHN1YnJlcSk7CisKK3JldHJ5OgorCQlpZiAoc2lnbmFsX3BlbmRp
bmcoY3VycmVudCkpIHsKKwkJCXdyZXEtPmVycm9yID0gLUVJTlRSOworCQkJYnJlYWs7CisJCX0K
KworCQlpZiAob3Blbl9maWxlLT5pbnZhbGlkSGFuZGxlKSB7CisJCQlyYyA9IGNpZnNfcmVvcGVu
X2ZpbGUob3Blbl9maWxlLCBmYWxzZSk7CisJCQlpZiAocmMgPCAwKSB7CisJCQkJaWYgKHJjID09
IC1FQUdBSU4pCisJCQkJCWdvdG8gcmV0cnk7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKworCQly
YyA9IHNlcnZlci0+b3BzLT53YWl0X210dV9jcmVkaXRzKHNlcnZlciwgd3JlcS0+d3NpemUsICZ3
c2l6ZSwKKwkJCQkJCSAgICZ3ZGF0YS0+Y3JlZGl0cyk7CisJCWlmIChyYykKKwkJCWJyZWFrOwor
CisJCW1heF9sZW4gPSBtaW4ocmVtYWluLCB3c2l6ZSk7CisJCWlmICghbWF4X2xlbikgeworCQkJ
cmMgPSAtRUFHQUlOOworCQkJZ290byBmYWlsZWRfcmV0dXJuX2NyZWRpdHM7CisJCX0KKworCQlw
YXJ0ID0gbmV0ZnNfbGltaXRfaXRlcigmd3JlcS0+aW9faXRlciwgb2Zmc2V0LCBtYXhfbGVuLCBt
YXhfc2Vncyk7CisJCWNpZnNfZGJnKEZZSSwgImNyZWF0ZV93cml0ZV9yZXF1ZXN0IGxlbj0lengv
JXp4IG5zZWdzPSV1LyVsdS8ldVxuIiwKKwkJCSBwYXJ0LCBtYXhfbGVuLCBuc2Vncywgd3JlcS0+
aW9faXRlci5ucl9zZWdzLCBtYXhfc2Vncyk7CisJCWlmICghcGFydCkgeworCQkJcmMgPSAtRUlP
OworCQkJZ290byBmYWlsZWRfcmV0dXJuX2NyZWRpdHM7CisJCX0KKworCQlpZiAocGFydCA8IHdk
YXRhLT5zdWJyZXEubGVuKSB7CisJCQl3ZGF0YS0+c3VicmVxLmxlbiA9IHBhcnQ7CisJCQlpb3Zf
aXRlcl90cnVuY2F0ZSgmd2RhdGEtPnN1YnJlcS5pb19pdGVyLCBwYXJ0KTsKKwkJfQorCisJCXdk
YXRhLT5zZXJ2ZXIJPSBzZXJ2ZXI7CisJCXdkYXRhLT5waWQJPSBwaWQ7CisKKwkJcmMgPSBhZGp1
c3RfY3JlZGl0cyhzZXJ2ZXIsICZ3ZGF0YS0+Y3JlZGl0cywgd2RhdGEtPnN1YnJlcS5sZW4pOwor
CQlpZiAocmMpIHsKKwkJCWFkZF9jcmVkaXRzX2FuZF93YWtlX2lmKHNlcnZlciwgJndkYXRhLT5j
cmVkaXRzLCAwKTsKKwkJCWlmIChyYyA9PSAtRUFHQUlOKQorCQkJCWdvdG8gcmV0cnk7CisJCQln
b3RvIGZhaWxlZDsKKwkJfQorCisJCWNpZnNfdXBsb2FkX3RvX3NlcnZlcihzdWJyZXEpOworCQkv
L25ldGZzX3F1ZXVlX3dyaXRlX3JlcXVlc3Qoc3VicmVxKTsKKwkJc3RhcnQgKz0gcGFydDsKKwkJ
b2Zmc2V0ICs9IHBhcnQ7CisJCXJlbWFpbiAtPSBwYXJ0OworCX0gd2hpbGUgKHJlbWFpbiA+IDAp
OworCisJZnJlZV94aWQoeGlkKTsKKwlyZXR1cm47CisKK2ZhaWxlZF9yZXR1cm5fY3JlZGl0czoK
KwlhZGRfY3JlZGl0c19hbmRfd2FrZV9pZihzZXJ2ZXIsICZ3ZGF0YS0+Y3JlZGl0cywgMCk7Citm
YWlsZWQ6CisJbmV0ZnNfd3JpdGVfc3VicmVxdWVzdF90ZXJtaW5hdGVkKHN1YnJlcSwgcmMsIGZh
bHNlKTsKKwlmcmVlX3hpZCh4aWQpOworfQorCisvKgorICogU3BsaXQgdGhlIHJlYWQgdXAgYWNj
b3JkaW5nIHRvIGhvdyBtYW55IGNyZWRpdHMgd2UgY2FuIGdldCBmb3IgZWFjaCBwaWVjZS4KKyAq
IEl0J3Mgb2theSB0byBzbGVlcCBoZXJlIGlmIHdlIG5lZWQgdG8gd2FpdCBmb3IgbW9yZSBjcmVk
aXQgdG8gYmVjb21lCisgKiBhdmFpbGFibGUuCisgKgorICogV2UgYWxzbyBjaG9vc2UgdGhlIHNl
cnZlciBhbmQgYWxsb2NhdGUgYW4gb3BlcmF0aW9uIElEIHRvIGJlIGNsZWFuZWQgdXAKKyAqIGxh
dGVyLgorICovCitzdGF0aWMgYm9vbCBjaWZzX2NsYW1wX2xlbmd0aChzdHJ1Y3QgbmV0ZnNfaW9f
c3VicmVxdWVzdCAqc3VicmVxKQoreworCXN0cnVjdCBuZXRmc19pb19yZXF1ZXN0ICpycmVxID0g
c3VicmVxLT5ycmVxOworCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcjsKKwlzdHJ1Y3Qg
Y2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSA9IGNvbnRhaW5lcl9vZihzdWJyZXEsIHN0cnVjdCBj
aWZzX2lvX3N1YnJlcXVlc3QsIHN1YnJlcSk7CisJc3RydWN0IGNpZnNfaW9fcmVxdWVzdCAqcmVx
ID0gY29udGFpbmVyX29mKHN1YnJlcS0+cnJlcSwgc3RydWN0IGNpZnNfaW9fcmVxdWVzdCwgcnJl
cSk7CisJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IocnJlcS0+aW5vZGUt
Pmlfc2IpOworCXNpemVfdCByc2l6ZSA9IDA7CisJaW50IHJjOworCisJcmRhdGEtPnhpZCA9IGdl
dF94aWQoKTsKKworCXNlcnZlciA9IGNpZnNfcGlja19jaGFubmVsKHRsaW5rX3Rjb24ocmVxLT5j
ZmlsZS0+dGxpbmspLT5zZXMpOworCXJkYXRhLT5zZXJ2ZXIgPSBzZXJ2ZXI7CisKKwlpZiAoY2lm
c19zYi0+Y3R4LT5yc2l6ZSA9PSAwKQorCQljaWZzX3NiLT5jdHgtPnJzaXplID0KKwkJCXNlcnZl
ci0+b3BzLT5uZWdvdGlhdGVfcnNpemUodGxpbmtfdGNvbihyZXEtPmNmaWxlLT50bGluayksCisJ
CQkJCQkgICAgIGNpZnNfc2ItPmN0eCk7CisKKworCXJjID0gc2VydmVyLT5vcHMtPndhaXRfbXR1
X2NyZWRpdHMoc2VydmVyLCBjaWZzX3NiLT5jdHgtPnJzaXplLCAmcnNpemUsCisJCQkJCSAgICZy
ZGF0YS0+Y3JlZGl0cyk7CisJaWYgKHJjKSB7CisJCXN1YnJlcS0+ZXJyb3IgPSByYzsKKwkJcmV0
dXJuIGZhbHNlOworCX0KKworCXJkYXRhLT5oYXZlX2NyZWRpdHMgPSB0cnVlOworCXN1YnJlcS0+
bGVuID0gbWluX3Qoc2l6ZV90LCBzdWJyZXEtPmxlbiwgcnNpemUpOworI2lmZGVmIENPTkZJR19D
SUZTX1NNQl9ESVJFQ1QKKwlpZiAoc2VydmVyLT5zbWJkX2Nvbm4pCisJCXN1YnJlcS0+bWF4X25y
X3NlZ3MgPSBzZXJ2ZXItPnNtYmRfY29ubi0+bWF4X2ZybXJfZGVwdGg7CisjZW5kaWYKKwlyZXR1
cm4gdHJ1ZTsKK30KKworLyoKKyAqIElzc3VlIGEgcmVhZCBvcGVyYXRpb24gb24gYmVoYWxmIG9m
IHRoZSBuZXRmcyBoZWxwZXIgZnVuY3Rpb25zLiAgV2UncmUgYXNrZWQKKyAqIHRvIG1ha2UgYSBy
ZWFkIG9mIGEgY2VydGFpbiBzaXplIGF0IGEgcG9pbnQgaW4gdGhlIGZpbGUuICBXZSBhcmUgcGVy
bWl0dGVkCisgKiB0byBvbmx5IHJlYWQgYSBwb3J0aW9uIG9mIHRoYXQsIGJ1dCBhcyBsb25nIGFz
IHdlIHJlYWQgc29tZXRoaW5nLCB0aGUgbmV0ZnMKKyAqIGhlbHBlciB3aWxsIGNhbGwgdXMgYWdh
aW4gc28gdGhhdCB3ZSBjYW4gaXNzdWUgYW5vdGhlciByZWFkLgorICovCitzdGF0aWMgdm9pZCBj
aWZzX3JlcV9pc3N1ZV9yZWFkKHN0cnVjdCBuZXRmc19pb19zdWJyZXF1ZXN0ICpzdWJyZXEpCit7
CisJc3RydWN0IG5ldGZzX2lvX3JlcXVlc3QgKnJyZXEgPSBzdWJyZXEtPnJyZXE7CisJc3RydWN0
IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGEgPSBjb250YWluZXJfb2Yoc3VicmVxLCBzdHJ1Y3Qg
Y2lmc19pb19zdWJyZXF1ZXN0LCBzdWJyZXEpOworCXN0cnVjdCBjaWZzX2lvX3JlcXVlc3QgKnJl
cSA9IGNvbnRhaW5lcl9vZihzdWJyZXEtPnJyZXEsIHN0cnVjdCBjaWZzX2lvX3JlcXVlc3QsIHJy
ZXEpOworCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IgPSBDSUZTX1NCKHJyZXEtPmlub2Rl
LT5pX3NiKTsKKwlwaWRfdCBwaWQ7CisJaW50IHJjID0gMDsKKworCWlmIChjaWZzX3NiLT5tbnRf
Y2lmc19mbGFncyAmIENJRlNfTU9VTlRfUldQSURGT1JXQVJEKQorCQlwaWQgPSByZXEtPmNmaWxl
LT5waWQ7CisJZWxzZQorCQlwaWQgPSBjdXJyZW50LT50Z2lkOyAvLyBVbW1tLi4uICBUaGlzIG1h
eSBiZSBhIHdvcmtxdWV1ZQorCisJY2lmc19kYmcoRllJLCAiJXM6IG9wPSUwOHhbJXhdIG1hcHBp
bmc9JXAgbGVuPSV6dS8lenVcbiIsCisJCSBfX2Z1bmNfXywgcnJlcS0+ZGVidWdfaWQsIHN1YnJl
cS0+ZGVidWdfaW5kZXgsIHJyZXEtPm1hcHBpbmcsCisJCSBzdWJyZXEtPnRyYW5zZmVycmVkLCBz
dWJyZXEtPmxlbik7CisKKwlpZiAocmVxLT5jZmlsZS0+aW52YWxpZEhhbmRsZSkgeworCQlkbyB7
CisJCQlyYyA9IGNpZnNfcmVvcGVuX2ZpbGUocmVxLT5jZmlsZSwgdHJ1ZSk7CisJCX0gd2hpbGUg
KHJjID09IC1FQUdBSU4pOworCQlpZiAocmMpCisJCQlnb3RvIG91dDsKKwl9CisKKwlfX3NldF9i
aXQoTkVURlNfU1JFUV9DTEVBUl9UQUlMLCAmc3VicmVxLT5mbGFncyk7CisJcmRhdGEtPnBpZCA9
IHBpZDsKKworCXJjID0gYWRqdXN0X2NyZWRpdHMocmRhdGEtPnNlcnZlciwgJnJkYXRhLT5jcmVk
aXRzLCByZGF0YS0+c3VicmVxLmxlbik7CisJaWYgKCFyYykgeworCQlpZiAocmRhdGEtPnJlcS0+
Y2ZpbGUtPmludmFsaWRIYW5kbGUpCisJCQlyYyA9IC1FQUdBSU47CisJCWVsc2UKKwkJCXJjID0g
cmRhdGEtPnNlcnZlci0+b3BzLT5hc3luY19yZWFkdihyZGF0YSk7CisJfQorCitvdXQ6CisJaWYg
KHJjKQorCQluZXRmc19zdWJyZXFfdGVybWluYXRlZChzdWJyZXEsIHJjLCBmYWxzZSk7Cit9CisK
Ky8qCisgKiBJbml0aWFsaXNlIGEgcmVxdWVzdC4KKyAqLworc3RhdGljIGludCBjaWZzX2luaXRf
cmVxdWVzdChzdHJ1Y3QgbmV0ZnNfaW9fcmVxdWVzdCAqcnJlcSwgc3RydWN0IGZpbGUgKmZpbGUp
Cit7CisJc3RydWN0IGNpZnNfaW9fcmVxdWVzdCAqcmVxID0gY29udGFpbmVyX29mKHJyZXEsIHN0
cnVjdCBjaWZzX2lvX3JlcXVlc3QsIHJyZXEpOworCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNf
c2IgPSBDSUZTX1NCKHJyZXEtPmlub2RlLT5pX3NiKTsKKwlzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpv
cGVuX2ZpbGUgPSBOVUxMOworCWludCByZXQ7CisKKwlycmVxLT5yc2l6ZSA9IGNpZnNfc2ItPmN0
eC0+cnNpemU7CisJcnJlcS0+d3NpemUgPSBjaWZzX3NiLT5jdHgtPndzaXplOworCisJaWYgKGZp
bGUpIHsKKwkJb3Blbl9maWxlID0gZmlsZS0+cHJpdmF0ZV9kYXRhOworCQlycmVxLT5uZXRmc19w
cml2ID0gZmlsZS0+cHJpdmF0ZV9kYXRhOworCQlyZXEtPmNmaWxlID0gY2lmc0ZpbGVJbmZvX2dl
dChvcGVuX2ZpbGUpOworCX0gZWxzZSBpZiAocnJlcS0+b3JpZ2luID09IE5FVEZTX1dSSVRFQkFD
SyB8fAorCQkgICBycmVxLT5vcmlnaW4gPT0gTkVURlNfTEFVTkRFUl9XUklURSkgeworCQlyZXQg
PSBjaWZzX2dldF93cml0YWJsZV9maWxlKENJRlNfSShycmVxLT5pbm9kZSksIEZJTkRfV1JfQU5Z
LCAmcmVxLT5jZmlsZSk7CisJCWlmIChyZXQpIHsKKwkJCWNpZnNfZGJnKFZGUywgIk5vIHdyaXRh
YmxlIGhhbmRsZSBpbiB3cml0ZXBhZ2VzIHJldD0lZFxuIiwgcmV0KTsKKwkJCXJldHVybiByZXQ7
CisJCX0KKwl9IGVsc2UgeworCQlXQVJOX09OX09OQ0UoMSk7CisJCXJldHVybiAtRUlPOworCX0K
KworCXJldHVybiAwOworfQorCisvKgorICogRXhwYW5kIHRoZSBzaXplIG9mIGEgcmVhZGFoZWFk
IHRvIHRoZSBzaXplIG9mIHRoZSByc2l6ZSwgaWYgYXQgbGVhc3QgYXMKKyAqIGxhcmdlIGFzIGEg
cGFnZSwgYWxsb3dpbmcgZm9yIHRoZSBwb3NzaWJpbGl0eSB0aGF0IHJzaXplIGlzIG5vdCBwb3ct
MgorICogYWxpZ25lZC4KKyAqLworc3RhdGljIHZvaWQgY2lmc19leHBhbmRfcmVhZGFoZWFkKHN0
cnVjdCBuZXRmc19pb19yZXF1ZXN0ICpycmVxKQoreworCXVuc2lnbmVkIGludCByc2l6ZSA9IHJy
ZXEtPnJzaXplOworCWxvZmZfdCBtaXNhbGlnbm1lbnQsIGlfc2l6ZSA9IGlfc2l6ZV9yZWFkKHJy
ZXEtPmlub2RlKTsKKworCWlmIChyc2l6ZSA8IFBBR0VfU0laRSkKKwkJcmV0dXJuOworCisJaWYg
KHJzaXplIDwgSU5UX01BWCkKKwkJcnNpemUgPSByb3VuZHVwX3Bvd19vZl90d28ocnNpemUpOwor
CWVsc2UKKwkJcnNpemUgPSAoKHVuc2lnbmVkIGludClJTlRfTUFYICsgMSkgLyAyOworCisJbWlz
YWxpZ25tZW50ID0gcnJlcS0+c3RhcnQgJiAocnNpemUgLSAxKTsKKwlpZiAobWlzYWxpZ25tZW50
KSB7CisJCXJyZXEtPnN0YXJ0IC09IG1pc2FsaWdubWVudDsKKwkJcnJlcS0+bGVuICs9IG1pc2Fs
aWdubWVudDsKKwl9CisKKwlycmVxLT5sZW4gPSByb3VuZF91cChycmVxLT5sZW4sIHJzaXplKTsK
KwlpZiAocnJlcS0+c3RhcnQgPCBpX3NpemUgJiYgcnJlcS0+bGVuID4gaV9zaXplIC0gcnJlcS0+
c3RhcnQpCisJCXJyZXEtPmxlbiA9IGlfc2l6ZSAtIHJyZXEtPnN0YXJ0OworfQorCisvKgorICog
Q29tcGxldGlvbiBvZiBhIHJlcXVlc3Qgb3BlcmF0aW9uLgorICovCitzdGF0aWMgdm9pZCBjaWZz
X3JyZXFfZG9uZShzdHJ1Y3QgbmV0ZnNfaW9fcmVxdWVzdCAqcnJlcSkKK3sKKwlzdHJ1Y3QgdGlt
ZXNwZWM2NCBhdGltZSwgbXRpbWU7CisJc3RydWN0IGlub2RlICppbm9kZSA9IHJyZXEtPmlub2Rl
OworCisJLyogd2UgZG8gbm90IHdhbnQgYXRpbWUgdG8gYmUgbGVzcyB0aGFuIG10aW1lLCBpdCBi
cm9rZSBzb21lIGFwcHMgKi8KKwlhdGltZSA9IGlub2RlX3NldF9hdGltZV90b190cyhpbm9kZSwg
Y3VycmVudF90aW1lKGlub2RlKSk7CisJbXRpbWUgPSBpbm9kZV9nZXRfbXRpbWUoaW5vZGUpOwor
CWlmICh0aW1lc3BlYzY0X2NvbXBhcmUoJmF0aW1lLCAmbXRpbWUpKQorCQlpbm9kZV9zZXRfYXRp
bWVfdG9fdHMoaW5vZGUsIGlub2RlX2dldF9tdGltZShpbm9kZSkpOworfQorCitzdGF0aWMgdm9p
ZCBjaWZzX3Bvc3RfbW9kaWZ5KHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJLyogSW5kaWNhdGlv
biB0byB1cGRhdGUgY3RpbWUgYW5kIG10aW1lIGFzIGNsb3NlIGlzIGRlZmVycmVkICovCisJc2V0
X2JpdChDSUZTX0lOT19NT0RJRklFRF9BVFRSLCAmQ0lGU19JKGlub2RlKS0+ZmxhZ3MpOworfQor
CitzdGF0aWMgdm9pZCBjaWZzX2ZyZWVfcmVxdWVzdChzdHJ1Y3QgbmV0ZnNfaW9fcmVxdWVzdCAq
cnJlcSkKK3sKKwlzdHJ1Y3QgY2lmc19pb19yZXF1ZXN0ICpyZXEgPSBjb250YWluZXJfb2YocnJl
cSwgc3RydWN0IGNpZnNfaW9fcmVxdWVzdCwgcnJlcSk7CisKKwlpZiAocmVxLT5jZmlsZSkKKwkJ
Y2lmc0ZpbGVJbmZvX3B1dChyZXEtPmNmaWxlKTsKK30KKworc3RhdGljIHZvaWQgY2lmc19mcmVl
X3N1YnJlcXVlc3Qoc3RydWN0IG5ldGZzX2lvX3N1YnJlcXVlc3QgKnN1YnJlcSkKK3sKKwlzdHJ1
Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSA9CisJCWNvbnRhaW5lcl9vZihzdWJyZXEsIHN0
cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QsIHN1YnJlcSk7CisJaW50IHJjOworCisJaWYgKHJkYXRh
LT5zdWJyZXEuc291cmNlID09IE5FVEZTX0RPV05MT0FEX0ZST01fU0VSVkVSKSB7CisjaWZkZWYg
Q09ORklHX0NJRlNfU01CX0RJUkVDVAorCQlpZiAocmRhdGEtPm1yKSB7CisJCQlzbWJkX2RlcmVn
aXN0ZXJfbXIocmRhdGEtPm1yKTsKKwkJCXJkYXRhLT5tciA9IE5VTEw7CisJCX0KKyNlbmRpZgor
CisJCWlmIChyZGF0YS0+aGF2ZV9jcmVkaXRzKQorCQkJYWRkX2NyZWRpdHNfYW5kX3dha2VfaWYo
cmRhdGEtPnNlcnZlciwgJnJkYXRhLT5jcmVkaXRzLCAwKTsKKwkJcmMgPSBzdWJyZXEtPmVycm9y
OworCQlmcmVlX3hpZChyZGF0YS0+eGlkKTsKKwl9Cit9CisKK2NvbnN0IHN0cnVjdCBuZXRmc19y
ZXF1ZXN0X29wcyBjaWZzX3JlcV9vcHMgPSB7CisJLmlvX3JlcXVlc3Rfc2l6ZQk9IHNpemVvZihz
dHJ1Y3QgY2lmc19pb19yZXF1ZXN0KSwKKwkuaW9fc3VicmVxdWVzdF9zaXplCT0gc2l6ZW9mKHN0
cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QpLAorCS5pbml0X3JlcXVlc3QJCT0gY2lmc19pbml0X3Jl
cXVlc3QsCisJLmZyZWVfcmVxdWVzdAkJPSBjaWZzX2ZyZWVfcmVxdWVzdCwKKwkuZnJlZV9zdWJy
ZXF1ZXN0CT0gY2lmc19mcmVlX3N1YnJlcXVlc3QsCisJLmV4cGFuZF9yZWFkYWhlYWQJPSBjaWZz
X2V4cGFuZF9yZWFkYWhlYWQsCisJLmNsYW1wX2xlbmd0aAkJPSBjaWZzX2NsYW1wX2xlbmd0aCwK
KwkuaXNzdWVfcmVhZAkJPSBjaWZzX3JlcV9pc3N1ZV9yZWFkLAorCS5kb25lCQkJPSBjaWZzX3Jy
ZXFfZG9uZSwKKwkucG9zdF9tb2RpZnkJCT0gY2lmc19wb3N0X21vZGlmeSwKKwkuY3JlYXRlX3dy
aXRlX3JlcXVlc3RzCT0gY2lmc19jcmVhdGVfd3JpdGVfcmVxdWVzdHMsCit9OwogCiAvKgogICog
UmVtb3ZlIHRoZSBkaXJ0eSBmbGFncyBmcm9tIGEgc3BhbiBvZiBwYWdlcy4KZGlmZiAtLWdpdCBh
L2luY2x1ZGUvbGludXgvbmV0ZnMuaCBiL2luY2x1ZGUvbGludXgvbmV0ZnMuaAppbmRleCAxMDBj
YmIyNjEyNjkuLjYxMTk1Y2YxNmQ2ZSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9uZXRmcy5o
CisrKyBiL2luY2x1ZGUvbGludXgvbmV0ZnMuaApAQCAtMzEyLDYgKzMxMiw3IEBAIHN0cnVjdCBu
ZXRmc19yZXF1ZXN0X29wcyB7CiAKIAkvKiBNb2RpZmljYXRpb24gaGFuZGxpbmcgKi8KIAl2b2lk
ICgqdXBkYXRlX2lfc2l6ZSkoc3RydWN0IGlub2RlICppbm9kZSwgbG9mZl90IGlfc2l6ZSk7CisJ
dm9pZCAoKnBvc3RfbW9kaWZ5KShzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKIAogCS8qIFdyaXRlIHJl
cXVlc3QgaGFuZGxpbmcgKi8KIAl2b2lkICgqY3JlYXRlX3dyaXRlX3JlcXVlc3RzKShzdHJ1Y3Qg
bmV0ZnNfaW9fcmVxdWVzdCAqd3JlcSwKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdHJhY2UvZXZlbnRz
L25ldGZzLmggYi9pbmNsdWRlL3RyYWNlL2V2ZW50cy9uZXRmcy5oCmluZGV4IDQ0N2E4YzIxY2Y1
Ny4uMDY1NjdiNWJlOGZhIDEwMDY0NAotLS0gYS9pbmNsdWRlL3RyYWNlL2V2ZW50cy9uZXRmcy5o
CisrKyBiL2luY2x1ZGUvdHJhY2UvZXZlbnRzL25ldGZzLmgKQEAgLTEwMSw2ICsxMDEsNyBAQAog
I2RlZmluZSBuZXRmc19zcmVxX3JlZl90cmFjZXMJCQkJCVwKIAlFTShuZXRmc19zcmVxX3RyYWNl
X2dldF9jb3B5X3RvX2NhY2hlLAkiR0VUIENPUFkyQyAiKQlcCiAJRU0obmV0ZnNfc3JlcV90cmFj
ZV9nZXRfcmVzdWJtaXQsCSJHRVQgUkVTVUJNSVQiKQlcCisJRU0obmV0ZnNfc3JlcV90cmFjZV9n
ZXRfc3VibWl0LAkJIkdFVCBTVUJNSVQiKQlcCiAJRU0obmV0ZnNfc3JlcV90cmFjZV9nZXRfc2hv
cnRfcmVhZCwJIkdFVCBTSE9SVFJEIikJXAogCUVNKG5ldGZzX3NyZXFfdHJhY2VfbmV3LAkJIk5F
VyAgICAgICAgIikJXAogCUVNKG5ldGZzX3NyZXFfdHJhY2VfcHV0X2NsZWFyLAkJIlBVVCBDTEVB
UiAgIikJXAotLSAKMi40MC4xCgo=
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0006-cifs-Use-more-fields-from-netfs_io_subrequest.patch"
Content-Disposition: attachment; 
	filename="0006-cifs-Use-more-fields-from-netfs_io_subrequest.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6z9t4>
X-Attachment-Id: f_lroc6z9t4

RnJvbSAzNzRiODgzZGY5OWI0OTJmMmZjMWYwZDExNzVmZTc0N2IzZWFjMTNmIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBGcmksIDYgT2N0IDIwMjMgMTY6NTU6MjAgKzAxMDAKU3ViamVjdDogW1BBVENIIDA2LzEw
XSBjaWZzOiBVc2UgbW9yZSBmaWVsZHMgZnJvbSBuZXRmc19pb19zdWJyZXF1ZXN0CgpVc2UgbW9y
ZSBmaWVsZHMgZnJvbSBuZXRmc19pb19zdWJyZXF1ZXN0IGluc3RlYWQgb2YgdGhvc2UgaW5jb3Jw
b3JhdGVkIGludG8KY2lmc19pb19zdWJyZXF1ZXN0IGZyb20gY2lmc19yZWFkZGF0YSBhbmQgY2lm
c193cml0ZWRhdGEuCgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRo
YXQuY29tPgpjYzogU2h5YW0gUHJhc2FkIE4gPG5zcG1hbmdhbG9yZUBnbWFpbC5jb20+CmNjOiBS
b2hpdGggU3VyYWJhdHR1bGEgPHJvaGl0aHMubXNmdEBnbWFpbC5jb20+CmNjOiBKZWZmIExheXRv
biA8amxheXRvbkBrZXJuZWwub3JnPgpjYzogbGludXgtY2lmc0B2Z2VyLmtlcm5lbC5vcmcKY2M6
IGxpbnV4LWNhY2hlZnNAcmVkaGF0LmNvbQpjYzogbGludXgtZnNkZXZlbEB2Z2VyLmtlcm5lbC5v
cmcKY2M6IGxpbnV4LW1tQGt2YWNrLm9yZwpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0
ZnJlbmNoQG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oICB8ICAg
MyAtCiBmcy9zbWIvY2xpZW50L2NpZnNzbWIuYyAgIHwgIDUyICsrKysrKysrKy0tLS0tLS0tLQog
ZnMvc21iL2NsaWVudC9maWxlLmMgICAgICB8IDExMiArKysrKysrKysrKysrKysrKysrLS0tLS0t
LS0tLS0tLS0tLS0tLQogZnMvc21iL2NsaWVudC9zbWIyb3BzLmMgICB8ICAgNCArLQogZnMvc21i
L2NsaWVudC9zbWIycGR1LmMgICB8ICA1MiArKysrKysrKystLS0tLS0tLS0KIGZzL3NtYi9jbGll
bnQvdHJhbnNwb3J0LmMgfCAgIDYgKy0KIDYgZmlsZXMgY2hhbmdlZCwgMTEzIGluc2VydGlvbnMo
KyksIDExNiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NpZnNnbG9i
LmggYi9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmgKaW5kZXggNmI0MzRlMGUwZGM1Li5jNGNkYzAx
MjkwMDAgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaAorKysgYi9mcy9zbWIv
Y2xpZW50L2NpZnNnbG9iLmgKQEAgLTE0ODAsOSArMTQ4MCw2IEBAIHN0cnVjdCBjaWZzX2lvX3N1
YnJlcXVlc3QgewogCXN0cnVjdCBsaXN0X2hlYWQJCWxpc3Q7CiAJc3RydWN0IGNvbXBsZXRpb24J
CWRvbmU7CiAJc3RydWN0IHdvcmtfc3RydWN0CQl3b3JrOwotCXN0cnVjdCBpb3ZfaXRlcgkJCWl0
ZXI7Ci0JX191NjQJCQkJb2Zmc2V0OwotCXVuc2lnbmVkIGludAkJCWJ5dGVzOwogfTsKIAogLyoK
ZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvY2lmc3NtYi5jIGIvZnMvc21iL2NsaWVudC9jaWZz
c21iLmMKaW5kZXggMWVhZDg2N2EwZjRhLi5iMWMzM2E2MjQxNTcgMTAwNjQ0Ci0tLSBhL2ZzL3Nt
Yi9jbGllbnQvY2lmc3NtYi5jCisrKyBiL2ZzL3NtYi9jbGllbnQvY2lmc3NtYi5jCkBAIC0xMjY5
LDEyICsxMjY5LDEyIEBAIGNpZnNfcmVhZHZfY2FsbGJhY2soc3RydWN0IG1pZF9xX2VudHJ5ICpt
aWQpCiAJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyID0gdGNvbi0+c2VzLT5zZXJ2ZXI7
CiAJc3RydWN0IHNtYl9ycXN0IHJxc3QgPSB7IC5ycV9pb3YgPSByZGF0YS0+aW92LAogCQkJCSAu
cnFfbnZlYyA9IDIsCi0JCQkJIC5ycV9pdGVyID0gcmRhdGEtPml0ZXIgfTsKKwkJCQkgLnJxX2l0
ZXIgPSByZGF0YS0+c3VicmVxLmlvX2l0ZXIgfTsKIAlzdHJ1Y3QgY2lmc19jcmVkaXRzIGNyZWRp
dHMgPSB7IC52YWx1ZSA9IDEsIC5pbnN0YW5jZSA9IDAgfTsKIAotCWNpZnNfZGJnKEZZSSwgIiVz
OiBtaWQ9JWxsdSBzdGF0ZT0lZCByZXN1bHQ9JWQgYnl0ZXM9JXVcbiIsCisJY2lmc19kYmcoRllJ
LCAiJXM6IG1pZD0lbGx1IHN0YXRlPSVkIHJlc3VsdD0lZCBieXRlcz0lenVcbiIsCiAJCSBfX2Z1
bmNfXywgbWlkLT5taWQsIG1pZC0+bWlkX3N0YXRlLCByZGF0YS0+cmVzdWx0LAotCQkgcmRhdGEt
PmJ5dGVzKTsKKwkJIHJkYXRhLT5zdWJyZXEubGVuKTsKIAogCXN3aXRjaCAobWlkLT5taWRfc3Rh
dGUpIHsKIAljYXNlIE1JRF9SRVNQT05TRV9SRUNFSVZFRDoKQEAgLTEzMjIsMTQgKzEzMjIsMTQg
QEAgY2lmc19hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSkKIAlz
dHJ1Y3Qgc21iX3Jxc3QgcnFzdCA9IHsgLnJxX2lvdiA9IHJkYXRhLT5pb3YsCiAJCQkJIC5ycV9u
dmVjID0gMiB9OwogCi0JY2lmc19kYmcoRllJLCAiJXM6IG9mZnNldD0lbGx1IGJ5dGVzPSV1XG4i
LAotCQkgX19mdW5jX18sIHJkYXRhLT5vZmZzZXQsIHJkYXRhLT5ieXRlcyk7CisJY2lmc19kYmco
RllJLCAiJXM6IG9mZnNldD0lbGx1IGJ5dGVzPSV6dVxuIiwKKwkJIF9fZnVuY19fLCByZGF0YS0+
c3VicmVxLnN0YXJ0LCByZGF0YS0+c3VicmVxLmxlbik7CiAKIAlpZiAodGNvbi0+c2VzLT5jYXBh
YmlsaXRpZXMgJiBDQVBfTEFSR0VfRklMRVMpCiAJCXdjdCA9IDEyOwogCWVsc2UgewogCQl3Y3Qg
PSAxMDsgLyogb2xkIHN0eWxlIHJlYWQgKi8KLQkJaWYgKChyZGF0YS0+b2Zmc2V0ID4+IDMyKSA+
IDApICB7CisJCWlmICgocmRhdGEtPnN1YnJlcS5zdGFydCA+PiAzMikgPiAwKSAgewogCQkJLyog
Y2FuIG5vdCBoYW5kbGUgdGhpcyBiaWcgb2Zmc2V0IGZvciBvbGQgKi8KIAkJCXJldHVybiAtRUlP
OwogCQl9CkBAIC0xMzQ0LDEyICsxMzQ0LDEyIEBAIGNpZnNfYXN5bmNfcmVhZHYoc3RydWN0IGNp
ZnNfaW9fc3VicmVxdWVzdCAqcmRhdGEpCiAKIAlzbWItPkFuZFhDb21tYW5kID0gMHhGRjsJLyog
bm9uZSAqLwogCXNtYi0+RmlkID0gcmRhdGEtPmNmaWxlLT5maWQubmV0ZmlkOwotCXNtYi0+T2Zm
c2V0TG93ID0gY3B1X3RvX2xlMzIocmRhdGEtPm9mZnNldCAmIDB4RkZGRkZGRkYpOworCXNtYi0+
T2Zmc2V0TG93ID0gY3B1X3RvX2xlMzIocmRhdGEtPnN1YnJlcS5zdGFydCAmIDB4RkZGRkZGRkYp
OwogCWlmICh3Y3QgPT0gMTIpCi0JCXNtYi0+T2Zmc2V0SGlnaCA9IGNwdV90b19sZTMyKHJkYXRh
LT5vZmZzZXQgPj4gMzIpOworCQlzbWItPk9mZnNldEhpZ2ggPSBjcHVfdG9fbGUzMihyZGF0YS0+
c3VicmVxLnN0YXJ0ID4+IDMyKTsKIAlzbWItPlJlbWFpbmluZyA9IDA7Ci0Jc21iLT5NYXhDb3Vu
dCA9IGNwdV90b19sZTE2KHJkYXRhLT5ieXRlcyAmIDB4RkZGRik7Ci0Jc21iLT5NYXhDb3VudEhp
Z2ggPSBjcHVfdG9fbGUzMihyZGF0YS0+Ynl0ZXMgPj4gMTYpOworCXNtYi0+TWF4Q291bnQgPSBj
cHVfdG9fbGUxNihyZGF0YS0+c3VicmVxLmxlbiAmIDB4RkZGRik7CisJc21iLT5NYXhDb3VudEhp
Z2ggPSBjcHVfdG9fbGUzMihyZGF0YS0+c3VicmVxLmxlbiA+PiAxNik7CiAJaWYgKHdjdCA9PSAx
MikKIAkJc21iLT5CeXRlQ291bnQgPSAwOwogCWVsc2UgewpAQCAtMTYzMywxMyArMTYzMywxMyBA
QCBjaWZzX3dyaXRldl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIAkJICogY2xp
ZW50LiBPUy8yIHNlcnZlcnMgYXJlIGtub3duIHRvIHNldCBpbmNvcnJlY3QKIAkJICogQ291bnRI
aWdoIHZhbHVlcy4KIAkJICovCi0JCWlmICh3cml0dGVuID4gd2RhdGEtPmJ5dGVzKQorCQlpZiAo
d3JpdHRlbiA+IHdkYXRhLT5zdWJyZXEubGVuKQogCQkJd3JpdHRlbiAmPSAweEZGRkY7CiAKLQkJ
aWYgKHdyaXR0ZW4gPCB3ZGF0YS0+Ynl0ZXMpCisJCWlmICh3cml0dGVuIDwgd2RhdGEtPnN1YnJl
cS5sZW4pCiAJCQl3ZGF0YS0+cmVzdWx0ID0gLUVOT1NQQzsKIAkJZWxzZQotCQkJd2RhdGEtPmJ5
dGVzID0gd3JpdHRlbjsKKwkJCXdkYXRhLT5zdWJyZXEubGVuID0gd3JpdHRlbjsKIAkJYnJlYWs7
CiAJY2FzZSBNSURfUkVRVUVTVF9TVUJNSVRURUQ6CiAJY2FzZSBNSURfUkVUUllfTkVFREVEOgpA
QCAtMTY3MCw3ICsxNjcwLDcgQEAgY2lmc19hc3luY193cml0ZXYoc3RydWN0IGNpZnNfaW9fc3Vi
cmVxdWVzdCAqd2RhdGEpCiAJCXdjdCA9IDE0OwogCX0gZWxzZSB7CiAJCXdjdCA9IDEyOwotCQlp
ZiAod2RhdGEtPm9mZnNldCA+PiAzMiA+IDApIHsKKwkJaWYgKHdkYXRhLT5zdWJyZXEuc3RhcnQg
Pj4gMzIgPiAwKSB7CiAJCQkvKiBjYW4gbm90IGhhbmRsZSBiaWcgb2Zmc2V0IGZvciBvbGQgc3J2
ICovCiAJCQlyZXR1cm4gLUVJTzsKIAkJfQpAQCAtMTY4NSw5ICsxNjg1LDkgQEAgY2lmc19hc3lu
Y193cml0ZXYoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGEpCiAKIAlzbWItPkFuZFhD
b21tYW5kID0gMHhGRjsJLyogbm9uZSAqLwogCXNtYi0+RmlkID0gd2RhdGEtPmNmaWxlLT5maWQu
bmV0ZmlkOwotCXNtYi0+T2Zmc2V0TG93ID0gY3B1X3RvX2xlMzIod2RhdGEtPm9mZnNldCAmIDB4
RkZGRkZGRkYpOworCXNtYi0+T2Zmc2V0TG93ID0gY3B1X3RvX2xlMzIod2RhdGEtPnN1YnJlcS5z
dGFydCAmIDB4RkZGRkZGRkYpOwogCWlmICh3Y3QgPT0gMTQpCi0JCXNtYi0+T2Zmc2V0SGlnaCA9
IGNwdV90b19sZTMyKHdkYXRhLT5vZmZzZXQgPj4gMzIpOworCQlzbWItPk9mZnNldEhpZ2ggPSBj
cHVfdG9fbGUzMih3ZGF0YS0+c3VicmVxLnN0YXJ0ID4+IDMyKTsKIAlzbWItPlJlc2VydmVkID0g
MHhGRkZGRkZGRjsKIAlzbWItPldyaXRlTW9kZSA9IDA7CiAJc21iLT5SZW1haW5pbmcgPSAwOwpA
QCAtMTcwMywyNCArMTcwMywyNCBAQCBjaWZzX2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc19pb19z
dWJyZXF1ZXN0ICp3ZGF0YSkKIAogCXJxc3QucnFfaW92ID0gaW92OwogCXJxc3QucnFfbnZlYyA9
IDI7Ci0JcnFzdC5ycV9pdGVyID0gd2RhdGEtPml0ZXI7Ci0JcnFzdC5ycV9pdGVyX3NpemUgPSBp
b3ZfaXRlcl9jb3VudCgmd2RhdGEtPml0ZXIpOworCXJxc3QucnFfaXRlciA9IHdkYXRhLT5zdWJy
ZXEuaW9faXRlcjsKKwlycXN0LnJxX2l0ZXJfc2l6ZSA9IGlvdl9pdGVyX2NvdW50KCZ3ZGF0YS0+
c3VicmVxLmlvX2l0ZXIpOwogCi0JY2lmc19kYmcoRllJLCAiYXN5bmMgd3JpdGUgYXQgJWxsdSAl
dSBieXRlc1xuIiwKLQkJIHdkYXRhLT5vZmZzZXQsIHdkYXRhLT5ieXRlcyk7CisJY2lmc19kYmco
RllJLCAiYXN5bmMgd3JpdGUgYXQgJWxsdSAlenUgYnl0ZXNcbiIsCisJCSB3ZGF0YS0+c3VicmVx
LnN0YXJ0LCB3ZGF0YS0+c3VicmVxLmxlbik7CiAKLQlzbWItPkRhdGFMZW5ndGhMb3cgPSBjcHVf
dG9fbGUxNih3ZGF0YS0+Ynl0ZXMgJiAweEZGRkYpOwotCXNtYi0+RGF0YUxlbmd0aEhpZ2ggPSBj
cHVfdG9fbGUxNih3ZGF0YS0+Ynl0ZXMgPj4gMTYpOworCXNtYi0+RGF0YUxlbmd0aExvdyA9IGNw
dV90b19sZTE2KHdkYXRhLT5zdWJyZXEubGVuICYgMHhGRkZGKTsKKwlzbWItPkRhdGFMZW5ndGhI
aWdoID0gY3B1X3RvX2xlMTYod2RhdGEtPnN1YnJlcS5sZW4gPj4gMTYpOwogCiAJaWYgKHdjdCA9
PSAxNCkgewotCQlpbmNfcmZjMTAwMV9sZW4oJnNtYi0+aGRyLCB3ZGF0YS0+Ynl0ZXMgKyAxKTsK
LQkJcHV0X2JjYyh3ZGF0YS0+Ynl0ZXMgKyAxLCAmc21iLT5oZHIpOworCQlpbmNfcmZjMTAwMV9s
ZW4oJnNtYi0+aGRyLCB3ZGF0YS0+c3VicmVxLmxlbiArIDEpOworCQlwdXRfYmNjKHdkYXRhLT5z
dWJyZXEubGVuICsgMSwgJnNtYi0+aGRyKTsKIAl9IGVsc2UgewogCQkvKiB3Y3QgPT0gMTIgKi8K
IAkJc3RydWN0IHNtYl9jb21fd3JpdGV4X3JlcSAqc21idyA9CiAJCQkJKHN0cnVjdCBzbWJfY29t
X3dyaXRleF9yZXEgKilzbWI7Ci0JCWluY19yZmMxMDAxX2xlbigmc21idy0+aGRyLCB3ZGF0YS0+
Ynl0ZXMgKyA1KTsKLQkJcHV0X2JjYyh3ZGF0YS0+Ynl0ZXMgKyA1LCAmc21idy0+aGRyKTsKKwkJ
aW5jX3JmYzEwMDFfbGVuKCZzbWJ3LT5oZHIsIHdkYXRhLT5zdWJyZXEubGVuICsgNSk7CisJCXB1
dF9iY2Mod2RhdGEtPnN1YnJlcS5sZW4gKyA1LCAmc21idy0+aGRyKTsKIAkJaW92WzFdLmlvdl9s
ZW4gKz0gNDsgLyogcGFkIGJpZ2dlciBieSBmb3VyIGJ5dGVzICovCiAJfQogCmRpZmYgLS1naXQg
YS9mcy9zbWIvY2xpZW50L2ZpbGUuYyBiL2ZzL3NtYi9jbGllbnQvZmlsZS5jCmluZGV4IDA0ZDYx
OGU0NGU5Ny4uYzQ4YmEzODJmYWE3IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2ZpbGUuYwor
KysgYi9mcy9zbWIvY2xpZW50L2ZpbGUuYwpAQCAtMjQ0MCw4ICsyNDQwLDggQEAgY2lmc193cml0
ZXZfcmVxdWV1ZShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKIAlpbnQgcmMgPSAw
OwogCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBkX2lub2RlKHdkYXRhLT5jZmlsZS0+ZGVudHJ5KTsK
IAlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXI7Ci0JdW5zaWduZWQgaW50IHJlc3RfbGVu
ID0gd2RhdGEtPmJ5dGVzOwotCWxvZmZfdCBmcG9zID0gd2RhdGEtPm9mZnNldDsKKwl1bnNpZ25l
ZCBpbnQgcmVzdF9sZW4gPSB3ZGF0YS0+c3VicmVxLmxlbjsKKwlsb2ZmX3QgZnBvcyA9IHdkYXRh
LT5zdWJyZXEuc3RhcnQ7CiAKIAlzZXJ2ZXIgPSB0bGlua190Y29uKHdkYXRhLT5jZmlsZS0+dGxp
bmspLT5zZXMtPnNlcnZlcjsKIAlkbyB7CkBAIC0yNDY2LDE0ICsyNDY2LDE0IEBAIGNpZnNfd3Jp
dGV2X3JlcXVldWUoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGEpCiAJCX0KIAogCQl3
ZGF0YTItPnN5bmNfbW9kZSA9IHdkYXRhLT5zeW5jX21vZGU7Ci0JCXdkYXRhMi0+b2Zmc2V0CT0g
ZnBvczsKLQkJd2RhdGEyLT5ieXRlcwk9IGN1cl9sZW47Ci0JCXdkYXRhMi0+aXRlciA9IHdkYXRh
LT5pdGVyOworCQl3ZGF0YTItPnN1YnJlcS5zdGFydAk9IGZwb3M7CisJCXdkYXRhMi0+c3VicmVx
Lmxlbgk9IGN1cl9sZW47CisJCXdkYXRhMi0+c3VicmVxLmlvX2l0ZXIgPSB3ZGF0YS0+c3VicmVx
LmlvX2l0ZXI7CiAKLQkJaW92X2l0ZXJfYWR2YW5jZSgmd2RhdGEyLT5pdGVyLCBmcG9zIC0gd2Rh
dGEtPm9mZnNldCk7Ci0JCWlvdl9pdGVyX3RydW5jYXRlKCZ3ZGF0YTItPml0ZXIsIHdkYXRhMi0+
Ynl0ZXMpOworCQlpb3ZfaXRlcl9hZHZhbmNlKCZ3ZGF0YTItPnN1YnJlcS5pb19pdGVyLCBmcG9z
IC0gd2RhdGEtPnN1YnJlcS5zdGFydCk7CisJCWlvdl9pdGVyX3RydW5jYXRlKCZ3ZGF0YTItPnN1
YnJlcS5pb19pdGVyLCB3ZGF0YTItPnN1YnJlcS5sZW4pOwogCi0JCWlmIChpb3ZfaXRlcl9pc194
YXJyYXkoJndkYXRhMi0+aXRlcikpCisJCWlmIChpb3ZfaXRlcl9pc194YXJyYXkoJndkYXRhMi0+
c3VicmVxLmlvX2l0ZXIpKQogCQkJLyogQ2hlY2sgZm9yIHBhZ2VzIGhhdmluZyBiZWVuIHJlZGly
dGllZCBhbmQgY2xlYW4KIAkJCSAqIHRoZW0uICBXZSBjYW4gZG8gdGhpcyBieSB3YWxraW5nIHRo
ZSB4YXJyYXkuICBJZgogCQkJICogaXQncyBub3QgYW4geGFycmF5LCB0aGVuIGl0J3MgYSBESU8g
YW5kIHdlIHNob3VsZG4ndApAQCAtMjUwNyw3ICsyNTA3LDcgQEAgY2lmc193cml0ZXZfcmVxdWV1
ZShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKIAl9IHdoaWxlIChyZXN0X2xlbiA+
IDApOwogCiAJLyogQ2xlYW4gdXAgcmVtYWluaW5nIHBhZ2VzIGZyb20gdGhlIG9yaWdpbmFsIHdk
YXRhICovCi0JaWYgKGlvdl9pdGVyX2lzX3hhcnJheSgmd2RhdGEtPml0ZXIpKQorCWlmIChpb3Zf
aXRlcl9pc194YXJyYXkoJndkYXRhLT5zdWJyZXEuaW9faXRlcikpCiAJCWNpZnNfcGFnZXNfd3Jp
dGVfZmFpbGVkKGlub2RlLCBmcG9zLCByZXN0X2xlbik7CiAKIAlpZiAocmMgIT0gMCAmJiAhaXNf
cmV0cnlhYmxlX2Vycm9yKHJjKSkKQEAgLTI1MjQsMTkgKzI1MjQsMTkgQEAgY2lmc193cml0ZXZf
Y29tcGxldGUoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQogCiAJaWYgKHdkYXRhLT5yZXN1bHQg
PT0gMCkgewogCQlzcGluX2xvY2soJmlub2RlLT5pX2xvY2spOwotCQljaWZzX3VwZGF0ZV9lb2Yo
Q0lGU19JKGlub2RlKSwgd2RhdGEtPm9mZnNldCwgd2RhdGEtPmJ5dGVzKTsKKwkJY2lmc191cGRh
dGVfZW9mKENJRlNfSShpbm9kZSksIHdkYXRhLT5zdWJyZXEuc3RhcnQsIHdkYXRhLT5zdWJyZXEu
bGVuKTsKIAkJc3Bpbl91bmxvY2soJmlub2RlLT5pX2xvY2spOwogCQljaWZzX3N0YXRzX2J5dGVz
X3dyaXR0ZW4odGxpbmtfdGNvbih3ZGF0YS0+Y2ZpbGUtPnRsaW5rKSwKLQkJCQkJIHdkYXRhLT5i
eXRlcyk7CisJCQkJCSB3ZGF0YS0+c3VicmVxLmxlbik7CiAJfSBlbHNlIGlmICh3ZGF0YS0+c3lu
Y19tb2RlID09IFdCX1NZTkNfQUxMICYmIHdkYXRhLT5yZXN1bHQgPT0gLUVBR0FJTikKIAkJcmV0
dXJuIGNpZnNfd3JpdGV2X3JlcXVldWUod2RhdGEpOwogCiAJaWYgKHdkYXRhLT5yZXN1bHQgPT0g
LUVBR0FJTikKLQkJY2lmc19wYWdlc193cml0ZV9yZWRpcnR5KGlub2RlLCB3ZGF0YS0+b2Zmc2V0
LCB3ZGF0YS0+Ynl0ZXMpOworCQljaWZzX3BhZ2VzX3dyaXRlX3JlZGlydHkoaW5vZGUsIHdkYXRh
LT5zdWJyZXEuc3RhcnQsIHdkYXRhLT5zdWJyZXEubGVuKTsKIAllbHNlIGlmICh3ZGF0YS0+cmVz
dWx0IDwgMCkKLQkJY2lmc19wYWdlc193cml0ZV9mYWlsZWQoaW5vZGUsIHdkYXRhLT5vZmZzZXQs
IHdkYXRhLT5ieXRlcyk7CisJCWNpZnNfcGFnZXNfd3JpdGVfZmFpbGVkKGlub2RlLCB3ZGF0YS0+
c3VicmVxLnN0YXJ0LCB3ZGF0YS0+c3VicmVxLmxlbik7CiAJZWxzZQotCQljaWZzX3BhZ2VzX3dy
aXR0ZW5fYmFjayhpbm9kZSwgd2RhdGEtPm9mZnNldCwgd2RhdGEtPmJ5dGVzKTsKKwkJY2lmc19w
YWdlc193cml0dGVuX2JhY2soaW5vZGUsIHdkYXRhLT5zdWJyZXEuc3RhcnQsIHdkYXRhLT5zdWJy
ZXEubGVuKTsKIAogCWlmICh3ZGF0YS0+cmVzdWx0ICE9IC1FQUdBSU4pCiAJCW1hcHBpbmdfc2V0
X2Vycm9yKGlub2RlLT5pX21hcHBpbmcsIHdkYXRhLT5yZXN1bHQpOwpAQCAtMjc2OCw3ICsyNzY4
LDcgQEAgc3RhdGljIHNzaXplX3QgY2lmc193cml0ZV9iYWNrX2Zyb21fbG9ja2VkX2ZvbGlvKHN0
cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLAogCX0KIAogCXdkYXRhLT5zeW5jX21vZGUgPSB3
YmMtPnN5bmNfbW9kZTsKLQl3ZGF0YS0+b2Zmc2V0ID0gZm9saW9fcG9zKGZvbGlvKTsKKwl3ZGF0
YS0+c3VicmVxLnN0YXJ0ID0gZm9saW9fcG9zKGZvbGlvKTsKIAl3ZGF0YS0+cGlkID0gY2ZpbGUt
PnBpZDsKIAl3ZGF0YS0+Y3JlZGl0cyA9IGNyZWRpdHNfb25fc3RhY2s7CiAJd2RhdGEtPmNmaWxl
ID0gY2ZpbGU7CkBAIC0yODAzLDcgKzI4MDMsNyBAQCBzdGF0aWMgc3NpemVfdCBjaWZzX3dyaXRl
X2JhY2tfZnJvbV9sb2NrZWRfZm9saW8oc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCiAJ
CWxlbiA9IG1pbl90KGxvZmZfdCwgbGVuLCBtYXhfbGVuKTsKIAl9CiAKLQl3ZGF0YS0+Ynl0ZXMg
PSBsZW47CisJd2RhdGEtPnN1YnJlcS5sZW4gPSBsZW47CiAKIAkvKiBXZSBub3cgaGF2ZSBhIGNv
bnRpZ3VvdXMgc2V0IG9mIGRpcnR5IHBhZ2VzLCBlYWNoIHdpdGggd3JpdGViYWNrCiAJICogc2V0
OyB0aGUgZmlyc3QgcGFnZSBpcyBzdGlsbCBsb2NrZWQgYXQgdGhpcyBwb2ludCwgYnV0IGFsbCB0
aGUgcmVzdApAQCAtMjgxMiwxMCArMjgxMiwxMCBAQCBzdGF0aWMgc3NpemVfdCBjaWZzX3dyaXRl
X2JhY2tfZnJvbV9sb2NrZWRfZm9saW8oc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCiAJ
Zm9saW9fdW5sb2NrKGZvbGlvKTsKIAogCWlmIChzdGFydCA8IGlfc2l6ZSkgewotCQlpb3ZfaXRl
cl94YXJyYXkoJndkYXRhLT5pdGVyLCBJVEVSX1NPVVJDRSwgJm1hcHBpbmctPmlfcGFnZXMsCisJ
CWlvdl9pdGVyX3hhcnJheSgmd2RhdGEtPnN1YnJlcS5pb19pdGVyLCBJVEVSX1NPVVJDRSwgJm1h
cHBpbmctPmlfcGFnZXMsCiAJCQkJc3RhcnQsIGxlbik7CiAKLQkJcmMgPSBhZGp1c3RfY3JlZGl0
cyh3ZGF0YS0+c2VydmVyLCAmd2RhdGEtPmNyZWRpdHMsIHdkYXRhLT5ieXRlcyk7CisJCXJjID0g
YWRqdXN0X2NyZWRpdHMod2RhdGEtPnNlcnZlciwgJndkYXRhLT5jcmVkaXRzLCB3ZGF0YS0+c3Vi
cmVxLmxlbik7CiAJCWlmIChyYykKIAkJCWdvdG8gZXJyX3dkYXRhOwogCkBAIC0zMjM0LDcgKzMy
MzQsNyBAQCBjaWZzX3VuY2FjaGVkX3dyaXRldl9jb21wbGV0ZShzdHJ1Y3Qgd29ya19zdHJ1Y3Qg
KndvcmspCiAJc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNpID0gQ0lGU19JKGlub2RlKTsKIAog
CXNwaW5fbG9jaygmaW5vZGUtPmlfbG9jayk7Ci0JY2lmc191cGRhdGVfZW9mKGNpZnNpLCB3ZGF0
YS0+b2Zmc2V0LCB3ZGF0YS0+Ynl0ZXMpOworCWNpZnNfdXBkYXRlX2VvZihjaWZzaSwgd2RhdGEt
PnN1YnJlcS5zdGFydCwgd2RhdGEtPnN1YnJlcS5sZW4pOwogCWlmIChjaWZzaS0+bmV0ZnMucmVt
b3RlX2lfc2l6ZSA+IGlub2RlLT5pX3NpemUpCiAJCWlfc2l6ZV93cml0ZShpbm9kZSwgY2lmc2kt
Pm5ldGZzLnJlbW90ZV9pX3NpemUpOwogCXNwaW5fdW5sb2NrKCZpbm9kZS0+aV9sb2NrKTsKQEAg
LTMyNzAsMTkgKzMyNzAsMTkgQEAgY2lmc19yZXNlbmRfd2RhdGEoc3RydWN0IGNpZnNfaW9fc3Vi
cmVxdWVzdCAqd2RhdGEsIHN0cnVjdCBsaXN0X2hlYWQgKndkYXRhX2xpc3QKIAkJICogc2VnbWVu
dHMKIAkJICovCiAJCWRvIHsKLQkJCXJjID0gc2VydmVyLT5vcHMtPndhaXRfbXR1X2NyZWRpdHMo
c2VydmVyLCB3ZGF0YS0+Ynl0ZXMsCisJCQlyYyA9IHNlcnZlci0+b3BzLT53YWl0X210dV9jcmVk
aXRzKHNlcnZlciwgd2RhdGEtPnN1YnJlcS5sZW4sCiAJCQkJCQkmd3NpemUsICZjcmVkaXRzKTsK
IAkJCWlmIChyYykKIAkJCQlnb3RvIGZhaWw7CiAKLQkJCWlmICh3c2l6ZSA8IHdkYXRhLT5ieXRl
cykgeworCQkJaWYgKHdzaXplIDwgd2RhdGEtPnN1YnJlcS5sZW4pIHsKIAkJCQlhZGRfY3JlZGl0
c19hbmRfd2FrZV9pZihzZXJ2ZXIsICZjcmVkaXRzLCAwKTsKIAkJCQltc2xlZXAoMTAwMCk7CiAJ
CQl9Ci0JCX0gd2hpbGUgKHdzaXplIDwgd2RhdGEtPmJ5dGVzKTsKKwkJfSB3aGlsZSAod3NpemUg
PCB3ZGF0YS0+c3VicmVxLmxlbik7CiAJCXdkYXRhLT5jcmVkaXRzID0gY3JlZGl0czsKIAotCQly
YyA9IGFkanVzdF9jcmVkaXRzKHNlcnZlciwgJndkYXRhLT5jcmVkaXRzLCB3ZGF0YS0+Ynl0ZXMp
OworCQlyYyA9IGFkanVzdF9jcmVkaXRzKHNlcnZlciwgJndkYXRhLT5jcmVkaXRzLCB3ZGF0YS0+
c3VicmVxLmxlbik7CiAKIAkJaWYgKCFyYykgewogCQkJaWYgKHdkYXRhLT5jZmlsZS0+aW52YWxp
ZEhhbmRsZSkKQEAgLTM0MjgsMTkgKzM0MjgsMTkgQEAgY2lmc193cml0ZV9mcm9tX2l0ZXIobG9m
Zl90IGZwb3MsIHNpemVfdCBsZW4sIHN0cnVjdCBpb3ZfaXRlciAqZnJvbSwKIAogCQl3ZGF0YS0+
dW5jYWNoZWQJPSB0cnVlOwogCQl3ZGF0YS0+c3luY19tb2RlID0gV0JfU1lOQ19BTEw7Ci0JCXdk
YXRhLT5vZmZzZXQJPSAoX191NjQpZnBvczsKKwkJd2RhdGEtPnN1YnJlcS5zdGFydAk9IChfX3U2
NClmcG9zOwogCQl3ZGF0YS0+Y2ZpbGUJPSBjaWZzRmlsZUluZm9fZ2V0KG9wZW5fZmlsZSk7CiAJ
CXdkYXRhLT5zZXJ2ZXIJPSBzZXJ2ZXI7CiAJCXdkYXRhLT5waWQJPSBwaWQ7Ci0JCXdkYXRhLT5i
eXRlcwk9IGN1cl9sZW47CisJCXdkYXRhLT5zdWJyZXEubGVuCT0gY3VyX2xlbjsKIAkJd2RhdGEt
PmNyZWRpdHMJPSBjcmVkaXRzX29uX3N0YWNrOwotCQl3ZGF0YS0+aXRlcgk9ICpmcm9tOworCQl3
ZGF0YS0+c3VicmVxLmlvX2l0ZXIJPSAqZnJvbTsKIAkJd2RhdGEtPmN0eAk9IGN0eDsKIAkJa3Jl
Zl9nZXQoJmN0eC0+cmVmY291bnQpOwogCi0JCWlvdl9pdGVyX3RydW5jYXRlKCZ3ZGF0YS0+aXRl
ciwgY3VyX2xlbik7CisJCWlvdl9pdGVyX3RydW5jYXRlKCZ3ZGF0YS0+c3VicmVxLmlvX2l0ZXIs
IGN1cl9sZW4pOwogCi0JCXJjID0gYWRqdXN0X2NyZWRpdHMoc2VydmVyLCAmd2RhdGEtPmNyZWRp
dHMsIHdkYXRhLT5ieXRlcyk7CisJCXJjID0gYWRqdXN0X2NyZWRpdHMoc2VydmVyLCAmd2RhdGEt
PmNyZWRpdHMsIHdkYXRhLT5zdWJyZXEubGVuKTsKIAogCQlpZiAoIXJjKSB7CiAJCQlpZiAod2Rh
dGEtPmNmaWxlLT5pbnZhbGlkSGFuZGxlKQpAQCAtMzUwMiw3ICszNTAyLDcgQEAgc3RhdGljIHZv
aWQgY29sbGVjdF91bmNhY2hlZF93cml0ZV9kYXRhKHN0cnVjdCBjaWZzX2Fpb19jdHggKmN0eCkK
IAkJCWlmICh3ZGF0YS0+cmVzdWx0KQogCQkJCXJjID0gd2RhdGEtPnJlc3VsdDsKIAkJCWVsc2UK
LQkJCQljdHgtPnRvdGFsX2xlbiArPSB3ZGF0YS0+Ynl0ZXM7CisJCQkJY3R4LT50b3RhbF9sZW4g
Kz0gd2RhdGEtPnN1YnJlcS5sZW47CiAKIAkJCS8qIHJlc2VuZCBjYWxsIGlmIGl0J3MgYSByZXRy
eWFibGUgZXJyb3IgKi8KIAkJCWlmIChyYyA9PSAtRUFHQUlOKSB7CkBAIC0zNTE3LDEwICszNTE3
LDEwIEBAIHN0YXRpYyB2b2lkIGNvbGxlY3RfdW5jYWNoZWRfd3JpdGVfZGF0YShzdHJ1Y3QgY2lm
c19haW9fY3R4ICpjdHgpCiAJCQkJCQl3ZGF0YSwgJnRtcF9saXN0LCBjdHgpOwogCQkJCWVsc2Ug
ewogCQkJCQlpb3ZfaXRlcl9hZHZhbmNlKCZ0bXBfZnJvbSwKLQkJCQkJCSB3ZGF0YS0+b2Zmc2V0
IC0gY3R4LT5wb3MpOworCQkJCQkJIHdkYXRhLT5zdWJyZXEuc3RhcnQgLSBjdHgtPnBvcyk7CiAK
LQkJCQkJcmMgPSBjaWZzX3dyaXRlX2Zyb21faXRlcih3ZGF0YS0+b2Zmc2V0LAotCQkJCQkJd2Rh
dGEtPmJ5dGVzLCAmdG1wX2Zyb20sCisJCQkJCXJjID0gY2lmc193cml0ZV9mcm9tX2l0ZXIod2Rh
dGEtPnN1YnJlcS5zdGFydCwKKwkJCQkJCXdkYXRhLT5zdWJyZXEubGVuLCAmdG1wX2Zyb20sCiAJ
CQkJCQljdHgtPmNmaWxlLCBjaWZzX3NiLCAmdG1wX2xpc3QsCiAJCQkJCQljdHgpOwogCkBAIC0z
ODQzLDIwICszODQzLDIwIEBAIHN0YXRpYyBpbnQgY2lmc19yZXNlbmRfcmRhdGEoc3RydWN0IGNp
ZnNfaW9fc3VicmVxdWVzdCAqcmRhdGEsCiAJCSAqIHNlZ21lbnRzCiAJCSAqLwogCQlkbyB7Ci0J
CQlyYyA9IHNlcnZlci0+b3BzLT53YWl0X210dV9jcmVkaXRzKHNlcnZlciwgcmRhdGEtPmJ5dGVz
LAorCQkJcmMgPSBzZXJ2ZXItPm9wcy0+d2FpdF9tdHVfY3JlZGl0cyhzZXJ2ZXIsIHJkYXRhLT5z
dWJyZXEubGVuLAogCQkJCQkJJnJzaXplLCAmY3JlZGl0cyk7CiAKIAkJCWlmIChyYykKIAkJCQln
b3RvIGZhaWw7CiAKLQkJCWlmIChyc2l6ZSA8IHJkYXRhLT5ieXRlcykgeworCQkJaWYgKHJzaXpl
IDwgcmRhdGEtPnN1YnJlcS5sZW4pIHsKIAkJCQlhZGRfY3JlZGl0c19hbmRfd2FrZV9pZihzZXJ2
ZXIsICZjcmVkaXRzLCAwKTsKIAkJCQltc2xlZXAoMTAwMCk7CiAJCQl9Ci0JCX0gd2hpbGUgKHJz
aXplIDwgcmRhdGEtPmJ5dGVzKTsKKwkJfSB3aGlsZSAocnNpemUgPCByZGF0YS0+c3VicmVxLmxl
bik7CiAJCXJkYXRhLT5jcmVkaXRzID0gY3JlZGl0czsKIAotCQlyYyA9IGFkanVzdF9jcmVkaXRz
KHNlcnZlciwgJnJkYXRhLT5jcmVkaXRzLCByZGF0YS0+Ynl0ZXMpOworCQlyYyA9IGFkanVzdF9j
cmVkaXRzKHNlcnZlciwgJnJkYXRhLT5jcmVkaXRzLCByZGF0YS0+c3VicmVxLmxlbik7CiAJCWlm
ICghcmMpIHsKIAkJCWlmIChyZGF0YS0+Y2ZpbGUtPmludmFsaWRIYW5kbGUpCiAJCQkJcmMgPSAt
RUFHQUlOOwpAQCAtMzk1NCwxNyArMzk1NCwxNyBAQCBjaWZzX3NlbmRfYXN5bmNfcmVhZChsb2Zm
X3QgZnBvcywgc2l6ZV90IGxlbiwgc3RydWN0IGNpZnNGaWxlSW5mbyAqb3Blbl9maWxlLAogCiAJ
CXJkYXRhLT5zZXJ2ZXIJPSBzZXJ2ZXI7CiAJCXJkYXRhLT5jZmlsZQk9IGNpZnNGaWxlSW5mb19n
ZXQob3Blbl9maWxlKTsKLQkJcmRhdGEtPm9mZnNldAk9IGZwb3M7Ci0JCXJkYXRhLT5ieXRlcwk9
IGN1cl9sZW47CisJCXJkYXRhLT5zdWJyZXEuc3RhcnQJPSBmcG9zOworCQlyZGF0YS0+c3VicmVx
Lmxlbgk9IGN1cl9sZW47CiAJCXJkYXRhLT5waWQJPSBwaWQ7CiAJCXJkYXRhLT5jcmVkaXRzCT0g
Y3JlZGl0c19vbl9zdGFjazsKIAkJcmRhdGEtPmN0eAk9IGN0eDsKIAkJa3JlZl9nZXQoJmN0eC0+
cmVmY291bnQpOwogCi0JCXJkYXRhLT5pdGVyID0gY3R4LT5pdGVyOwotCQlpb3ZfaXRlcl90cnVu
Y2F0ZSgmcmRhdGEtPml0ZXIsIGN1cl9sZW4pOworCQlyZGF0YS0+c3VicmVxLmlvX2l0ZXIgPSBj
dHgtPml0ZXI7CisJCWlvdl9pdGVyX3RydW5jYXRlKCZyZGF0YS0+c3VicmVxLmlvX2l0ZXIsIGN1
cl9sZW4pOwogCi0JCXJjID0gYWRqdXN0X2NyZWRpdHMoc2VydmVyLCAmcmRhdGEtPmNyZWRpdHMs
IHJkYXRhLT5ieXRlcyk7CisJCXJjID0gYWRqdXN0X2NyZWRpdHMoc2VydmVyLCAmcmRhdGEtPmNy
ZWRpdHMsIHJkYXRhLT5zdWJyZXEubGVuKTsKIAogCQlpZiAoIXJjKSB7CiAJCQlpZiAocmRhdGEt
PmNmaWxlLT5pbnZhbGlkSGFuZGxlKQpAQCAtNDAzNCw4ICs0MDM0LDggQEAgY29sbGVjdF91bmNh
Y2hlZF9yZWFkX2RhdGEoc3RydWN0IGNpZnNfYWlvX2N0eCAqY3R4KQogCQkJCQkJJnRtcF9saXN0
LCBjdHgpOwogCQkJCX0gZWxzZSB7CiAJCQkJCXJjID0gY2lmc19zZW5kX2FzeW5jX3JlYWQoCi0J
CQkJCQlyZGF0YS0+b2Zmc2V0ICsgZ290X2J5dGVzLAotCQkJCQkJcmRhdGEtPmJ5dGVzIC0gZ290
X2J5dGVzLAorCQkJCQkJcmRhdGEtPnN1YnJlcS5zdGFydCArIGdvdF9ieXRlcywKKwkJCQkJCXJk
YXRhLT5zdWJyZXEubGVuIC0gZ290X2J5dGVzLAogCQkJCQkJcmRhdGEtPmNmaWxlLCBjaWZzX3Ni
LAogCQkJCQkJJnRtcF9saXN0LCBjdHgpOwogCkBAIC00MDQ5LDcgKzQwNDksNyBAQCBjb2xsZWN0
X3VuY2FjaGVkX3JlYWRfZGF0YShzdHJ1Y3QgY2lmc19haW9fY3R4ICpjdHgpCiAJCQkJcmMgPSBy
ZGF0YS0+cmVzdWx0OwogCiAJCQkvKiBpZiB0aGVyZSB3YXMgYSBzaG9ydCByZWFkIC0tIGRpc2Nh
cmQgYW55dGhpbmcgbGVmdCAqLwotCQkJaWYgKHJkYXRhLT5nb3RfYnl0ZXMgJiYgcmRhdGEtPmdv
dF9ieXRlcyA8IHJkYXRhLT5ieXRlcykKKwkJCWlmIChyZGF0YS0+Z290X2J5dGVzICYmIHJkYXRh
LT5nb3RfYnl0ZXMgPCByZGF0YS0+c3VicmVxLmxlbikKIAkJCQlyYyA9IC1FTk9EQVRBOwogCiAJ
CQljdHgtPnRvdGFsX2xlbiArPSByZGF0YS0+Z290X2J5dGVzOwpAQCAtNDQzMywxNiArNDQzMywx
NiBAQCBzdGF0aWMgdm9pZCBjaWZzX3JlYWRhaGVhZF9jb21wbGV0ZShzdHJ1Y3Qgd29ya19zdHJ1
Y3QgKndvcmspCiAJcGdvZmZfdCBsYXN0OwogCWJvb2wgZ29vZCA9IHJkYXRhLT5yZXN1bHQgPT0g
MCB8fCAocmRhdGEtPnJlc3VsdCA9PSAtRUFHQUlOICYmIHJkYXRhLT5nb3RfYnl0ZXMpOwogCi0J
WEFfU1RBVEUoeGFzLCAmcmRhdGEtPm1hcHBpbmctPmlfcGFnZXMsIHJkYXRhLT5vZmZzZXQgLyBQ
QUdFX1NJWkUpOworCVhBX1NUQVRFKHhhcywgJnJkYXRhLT5tYXBwaW5nLT5pX3BhZ2VzLCByZGF0
YS0+c3VicmVxLnN0YXJ0IC8gUEFHRV9TSVpFKTsKIAogCWlmIChnb29kKQogCQljaWZzX3JlYWRh
aGVhZF90b19mc2NhY2hlKHJkYXRhLT5tYXBwaW5nLT5ob3N0LAotCQkJCQkgIHJkYXRhLT5vZmZz
ZXQsIHJkYXRhLT5ieXRlcyk7CisJCQkJCSAgcmRhdGEtPnN1YnJlcS5zdGFydCwgcmRhdGEtPnN1
YnJlcS5sZW4pOwogCi0JaWYgKGlvdl9pdGVyX2NvdW50KCZyZGF0YS0+aXRlcikgPiAwKQotCQlp
b3ZfaXRlcl96ZXJvKGlvdl9pdGVyX2NvdW50KCZyZGF0YS0+aXRlciksICZyZGF0YS0+aXRlcik7
CisJaWYgKGlvdl9pdGVyX2NvdW50KCZyZGF0YS0+c3VicmVxLmlvX2l0ZXIpID4gMCkKKwkJaW92
X2l0ZXJfemVybyhpb3ZfaXRlcl9jb3VudCgmcmRhdGEtPnN1YnJlcS5pb19pdGVyKSwgJnJkYXRh
LT5zdWJyZXEuaW9faXRlcik7CiAKLQlsYXN0ID0gKHJkYXRhLT5vZmZzZXQgKyByZGF0YS0+Ynl0
ZXMgLSAxKSAvIFBBR0VfU0laRTsKKwlsYXN0ID0gKHJkYXRhLT5zdWJyZXEuc3RhcnQgKyByZGF0
YS0+c3VicmVxLmxlbiAtIDEpIC8gUEFHRV9TSVpFOwogCiAJcmN1X3JlYWRfbG9jaygpOwogCXhh
c19mb3JfZWFjaCgmeGFzLCBmb2xpbywgbGFzdCkgewpAQCAtNDU4MSw4ICs0NTgxLDggQEAgc3Rh
dGljIHZvaWQgY2lmc19yZWFkYWhlYWQoc3RydWN0IHJlYWRhaGVhZF9jb250cm9sICpyYWN0bCkK
IAkJCWJyZWFrOwogCQl9CiAKLQkJcmRhdGEtPm9mZnNldAk9IHJhX2luZGV4ICogUEFHRV9TSVpF
OwotCQlyZGF0YS0+Ynl0ZXMJPSBucl9wYWdlcyAqIFBBR0VfU0laRTsKKwkJcmRhdGEtPnN1YnJl
cS5zdGFydAk9IHJhX2luZGV4ICogUEFHRV9TSVpFOworCQlyZGF0YS0+c3VicmVxLmxlbgk9IG5y
X3BhZ2VzICogUEFHRV9TSVpFOwogCQlyZGF0YS0+Y2ZpbGUJPSBjaWZzRmlsZUluZm9fZ2V0KG9w
ZW5fZmlsZSk7CiAJCXJkYXRhLT5zZXJ2ZXIJPSBzZXJ2ZXI7CiAJCXJkYXRhLT5tYXBwaW5nCT0g
cmFjdGwtPm1hcHBpbmc7CkBAIC00NTk2LDEwICs0NTk2LDEwIEBAIHN0YXRpYyB2b2lkIGNpZnNf
cmVhZGFoZWFkKHN0cnVjdCByZWFkYWhlYWRfY29udHJvbCAqcmFjdGwpCiAJCXJhX3BhZ2VzIC09
IG5yX3BhZ2VzOwogCQlyYV9pbmRleCArPSBucl9wYWdlczsKIAotCQlpb3ZfaXRlcl94YXJyYXko
JnJkYXRhLT5pdGVyLCBJVEVSX0RFU1QsICZyZGF0YS0+bWFwcGluZy0+aV9wYWdlcywKLQkJCQly
ZGF0YS0+b2Zmc2V0LCByZGF0YS0+Ynl0ZXMpOworCQlpb3ZfaXRlcl94YXJyYXkoJnJkYXRhLT5z
dWJyZXEuaW9faXRlciwgSVRFUl9ERVNULCAmcmRhdGEtPm1hcHBpbmctPmlfcGFnZXMsCisJCQkJ
cmRhdGEtPnN1YnJlcS5zdGFydCwgcmRhdGEtPnN1YnJlcS5sZW4pOwogCi0JCXJjID0gYWRqdXN0
X2NyZWRpdHMoc2VydmVyLCAmcmRhdGEtPmNyZWRpdHMsIHJkYXRhLT5ieXRlcyk7CisJCXJjID0g
YWRqdXN0X2NyZWRpdHMoc2VydmVyLCAmcmRhdGEtPmNyZWRpdHMsIHJkYXRhLT5zdWJyZXEubGVu
KTsKIAkJaWYgKCFyYykgewogCQkJaWYgKHJkYXRhLT5jZmlsZS0+aW52YWxpZEhhbmRsZSkKIAkJ
CQlyYyA9IC1FQUdBSU47CkBAIC00NjEwLDggKzQ2MTAsOCBAQCBzdGF0aWMgdm9pZCBjaWZzX3Jl
YWRhaGVhZChzdHJ1Y3QgcmVhZGFoZWFkX2NvbnRyb2wgKnJhY3RsKQogCQlpZiAocmMpIHsKIAkJ
CWFkZF9jcmVkaXRzX2FuZF93YWtlX2lmKHNlcnZlciwgJnJkYXRhLT5jcmVkaXRzLCAwKTsKIAkJ
CWNpZnNfdW5sb2NrX2ZvbGlvcyhyZGF0YS0+bWFwcGluZywKLQkJCQkJICAgcmRhdGEtPm9mZnNl
dCAvIFBBR0VfU0laRSwKLQkJCQkJICAgKHJkYXRhLT5vZmZzZXQgKyByZGF0YS0+Ynl0ZXMgLSAx
KSAvIFBBR0VfU0laRSk7CisJCQkJCSAgIHJkYXRhLT5zdWJyZXEuc3RhcnQgLyBQQUdFX1NJWkUs
CisJCQkJCSAgIChyZGF0YS0+c3VicmVxLnN0YXJ0ICsgcmRhdGEtPnN1YnJlcS5sZW4gLSAxKSAv
IFBBR0VfU0laRSk7CiAJCQkvKiBGYWxsYmFjayB0byB0aGUgcmVhZHBhZ2UgaW4gZXJyb3IvcmVj
b25uZWN0IGNhc2VzICovCiAJCQljaWZzX3B1dF9yZWFkZGF0YShyZGF0YSk7CiAJCQlicmVhazsK
ZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvc21iMm9wcy5jIGIvZnMvc21iL2NsaWVudC9zbWIy
b3BzLmMKaW5kZXggZTE2MWE0MWNiMjYyLi40ZjIxOWJmOWI4NzQgMTAwNjQ0Ci0tLSBhL2ZzL3Nt
Yi9jbGllbnQvc21iMm9wcy5jCisrKyBiL2ZzL3NtYi9jbGllbnQvc21iMm9wcy5jCkBAIC00NTc3
LDcgKzQ1NzcsNyBAQCBoYW5kbGVfcmVhZF9kYXRhKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNl
cnZlciwgc3RydWN0IG1pZF9xX2VudHJ5ICptaWQsCiAKIAkJLyogQ29weSB0aGUgZGF0YSB0byB0
aGUgb3V0cHV0IEkvTyBpdGVyYXRvci4gKi8KIAkJcmRhdGEtPnJlc3VsdCA9IGNpZnNfY29weV9w
YWdlc190b19pdGVyKHBhZ2VzLCBwYWdlc19sZW4sCi0JCQkJCQkJY3VyX29mZiwgJnJkYXRhLT5p
dGVyKTsKKwkJCQkJCQljdXJfb2ZmLCAmcmRhdGEtPnN1YnJlcS5pb19pdGVyKTsKIAkJaWYgKHJk
YXRhLT5yZXN1bHQgIT0gMCkgewogCQkJaWYgKGlzX29mZmxvYWRlZCkKIAkJCQltaWQtPm1pZF9z
dGF0ZSA9IE1JRF9SRVNQT05TRV9NQUxGT1JNRUQ7CkBAIC00NTkxLDcgKzQ1OTEsNyBAQCBoYW5k
bGVfcmVhZF9kYXRhKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IG1pZF9x
X2VudHJ5ICptaWQsCiAJCS8qIHJlYWQgcmVzcG9uc2UgcGF5bG9hZCBpcyBpbiBidWYgKi8KIAkJ
V0FSTl9PTkNFKHBhZ2VzICYmICF4YV9lbXB0eShwYWdlcyksCiAJCQkgICJyZWFkIGRhdGEgY2Fu
IGJlIGVpdGhlciBpbiBidWYgb3IgaW4gcGFnZXMiKTsKLQkJbGVuZ3RoID0gY29weV90b19pdGVy
KGJ1ZiArIGRhdGFfb2Zmc2V0LCBkYXRhX2xlbiwgJnJkYXRhLT5pdGVyKTsKKwkJbGVuZ3RoID0g
Y29weV90b19pdGVyKGJ1ZiArIGRhdGFfb2Zmc2V0LCBkYXRhX2xlbiwgJnJkYXRhLT5zdWJyZXEu
aW9faXRlcik7CiAJCWlmIChsZW5ndGggPCAwKQogCQkJcmV0dXJuIGxlbmd0aDsKIAkJcmRhdGEt
PmdvdF9ieXRlcyA9IGRhdGFfbGVuOwpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9zbWIycGR1
LmMgYi9mcy9zbWIvY2xpZW50L3NtYjJwZHUuYwppbmRleCA3MjAyNjMxMzZiYjkuLjJjOWQ2ZTVi
ZWZhZiAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9zbWIycGR1LmMKKysrIGIvZnMvc21iL2Ns
aWVudC9zbWIycGR1LmMKQEAgLTQyNzEsNyArNDI3MSw3IEBAIHNtYjJfbmV3X3JlYWRfcmVxKHZv
aWQgKipidWYsIHVuc2lnbmVkIGludCAqdG90YWxfbGVuLAogCQlzdHJ1Y3Qgc21iZF9idWZmZXJf
ZGVzY3JpcHRvcl92MSAqdjE7CiAJCWJvb2wgbmVlZF9pbnZhbGlkYXRlID0gc2VydmVyLT5kaWFs
ZWN0ID09IFNNQjMwX1BST1RfSUQ7CiAKLQkJcmRhdGEtPm1yID0gc21iZF9yZWdpc3Rlcl9tcihz
ZXJ2ZXItPnNtYmRfY29ubiwgJnJkYXRhLT5pdGVyLAorCQlyZGF0YS0+bXIgPSBzbWJkX3JlZ2lz
dGVyX21yKHNlcnZlci0+c21iZF9jb25uLCAmcmRhdGEtPnN1YnJlcS5pb19pdGVyLAogCQkJCQkg
ICAgIHRydWUsIG5lZWRfaW52YWxpZGF0ZSk7CiAJCWlmICghcmRhdGEtPm1yKQogCQkJcmV0dXJu
IC1FQUdBSU47CkBAIC00MzMyLDE3ICs0MzMyLDE3IEBAIHNtYjJfcmVhZHZfY2FsbGJhY2soc3Ry
dWN0IG1pZF9xX2VudHJ5ICptaWQpCiAJCQkJIC5ycV9udmVjID0gMSB9OwogCiAJaWYgKHJkYXRh
LT5nb3RfYnl0ZXMpIHsKLQkJcnFzdC5ycV9pdGVyCSAgPSByZGF0YS0+aXRlcjsKLQkJcnFzdC5y
cV9pdGVyX3NpemUgPSBpb3ZfaXRlcl9jb3VudCgmcmRhdGEtPml0ZXIpOworCQlycXN0LnJxX2l0
ZXIJICA9IHJkYXRhLT5zdWJyZXEuaW9faXRlcjsKKwkJcnFzdC5ycV9pdGVyX3NpemUgPSBpb3Zf
aXRlcl9jb3VudCgmcmRhdGEtPnN1YnJlcS5pb19pdGVyKTsKIAl9CiAKIAlXQVJOX09OQ0UocmRh
dGEtPnNlcnZlciAhPSBtaWQtPnNlcnZlciwKIAkJICAicmRhdGEgc2VydmVyICVwICE9IG1pZCBz
ZXJ2ZXIgJXAiLAogCQkgIHJkYXRhLT5zZXJ2ZXIsIG1pZC0+c2VydmVyKTsKIAotCWNpZnNfZGJn
KEZZSSwgIiVzOiBtaWQ9JWxsdSBzdGF0ZT0lZCByZXN1bHQ9JWQgYnl0ZXM9JXVcbiIsCisJY2lm
c19kYmcoRllJLCAiJXM6IG1pZD0lbGx1IHN0YXRlPSVkIHJlc3VsdD0lZCBieXRlcz0lenVcbiIs
CiAJCSBfX2Z1bmNfXywgbWlkLT5taWQsIG1pZC0+bWlkX3N0YXRlLCByZGF0YS0+cmVzdWx0LAot
CQkgcmRhdGEtPmJ5dGVzKTsKKwkJIHJkYXRhLT5zdWJyZXEubGVuKTsKIAogCXN3aXRjaCAobWlk
LT5taWRfc3RhdGUpIHsKIAljYXNlIE1JRF9SRVNQT05TRV9SRUNFSVZFRDoKQEAgLTQzOTUsMTMg
KzQzOTUsMTMgQEAgc21iMl9yZWFkdl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkK
IAkJY2lmc19zdGF0c19mYWlsX2luYyh0Y29uLCBTTUIyX1JFQURfSEUpOwogCQl0cmFjZV9zbWIz
X3JlYWRfZXJyKDAgLyogeGlkICovLAogCQkJCSAgICByZGF0YS0+Y2ZpbGUtPmZpZC5wZXJzaXN0
ZW50X2ZpZCwKLQkJCQkgICAgdGNvbi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsIHJkYXRhLT5vZmZz
ZXQsCi0JCQkJICAgIHJkYXRhLT5ieXRlcywgcmRhdGEtPnJlc3VsdCk7CisJCQkJICAgIHRjb24t
PnRpZCwgdGNvbi0+c2VzLT5TdWlkLCByZGF0YS0+c3VicmVxLnN0YXJ0LAorCQkJCSAgICByZGF0
YS0+c3VicmVxLmxlbiwgcmRhdGEtPnJlc3VsdCk7CiAJfSBlbHNlCiAJCXRyYWNlX3NtYjNfcmVh
ZF9kb25lKDAgLyogeGlkICovLAogCQkJCSAgICAgcmRhdGEtPmNmaWxlLT5maWQucGVyc2lzdGVu
dF9maWQsCiAJCQkJICAgICB0Y29uLT50aWQsIHRjb24tPnNlcy0+U3VpZCwKLQkJCQkgICAgIHJk
YXRhLT5vZmZzZXQsIHJkYXRhLT5nb3RfYnl0ZXMpOworCQkJCSAgICAgcmRhdGEtPnN1YnJlcS5z
dGFydCwgcmRhdGEtPmdvdF9ieXRlcyk7CiAKIAlxdWV1ZV93b3JrKGNpZnNpb2Rfd3EsICZyZGF0
YS0+d29yayk7CiAJcmVsZWFzZV9taWQobWlkKTsKQEAgLTQ0MjMsMTYgKzQ0MjMsMTYgQEAgc21i
Ml9hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSkKIAl1bnNpZ25l
ZCBpbnQgdG90YWxfbGVuOwogCWludCBjcmVkaXRfcmVxdWVzdDsKIAotCWNpZnNfZGJnKEZZSSwg
IiVzOiBvZmZzZXQ9JWxsdSBieXRlcz0ldVxuIiwKLQkJIF9fZnVuY19fLCByZGF0YS0+b2Zmc2V0
LCByZGF0YS0+Ynl0ZXMpOworCWNpZnNfZGJnKEZZSSwgIiVzOiBvZmZzZXQ9JWxsdSBieXRlcz0l
enVcbiIsCisJCSBfX2Z1bmNfXywgcmRhdGEtPnN1YnJlcS5zdGFydCwgcmRhdGEtPnN1YnJlcS5s
ZW4pOwogCiAJaWYgKCFyZGF0YS0+c2VydmVyKQogCQlyZGF0YS0+c2VydmVyID0gY2lmc19waWNr
X2NoYW5uZWwodGNvbi0+c2VzKTsKIAogCWlvX3Bhcm1zLnRjb24gPSB0bGlua190Y29uKHJkYXRh
LT5jZmlsZS0+dGxpbmspOwogCWlvX3Bhcm1zLnNlcnZlciA9IHNlcnZlciA9IHJkYXRhLT5zZXJ2
ZXI7Ci0JaW9fcGFybXMub2Zmc2V0ID0gcmRhdGEtPm9mZnNldDsKLQlpb19wYXJtcy5sZW5ndGgg
PSByZGF0YS0+Ynl0ZXM7CisJaW9fcGFybXMub2Zmc2V0ID0gcmRhdGEtPnN1YnJlcS5zdGFydDsK
Kwlpb19wYXJtcy5sZW5ndGggPSByZGF0YS0+c3VicmVxLmxlbjsKIAlpb19wYXJtcy5wZXJzaXN0
ZW50X2ZpZCA9IHJkYXRhLT5jZmlsZS0+ZmlkLnBlcnNpc3RlbnRfZmlkOwogCWlvX3Bhcm1zLnZv
bGF0aWxlX2ZpZCA9IHJkYXRhLT5jZmlsZS0+ZmlkLnZvbGF0aWxlX2ZpZDsKIAlpb19wYXJtcy5w
aWQgPSByZGF0YS0+cGlkOwpAQCAtNDQ1MSw3ICs0NDUxLDcgQEAgc21iMl9hc3luY19yZWFkdihz
dHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSkKIAlzaGRyID0gKHN0cnVjdCBzbWIyX2hk
ciAqKWJ1ZjsKIAogCWlmIChyZGF0YS0+Y3JlZGl0cy52YWx1ZSA+IDApIHsKLQkJc2hkci0+Q3Jl
ZGl0Q2hhcmdlID0gY3B1X3RvX2xlMTYoRElWX1JPVU5EX1VQKHJkYXRhLT5ieXRlcywKKwkJc2hk
ci0+Q3JlZGl0Q2hhcmdlID0gY3B1X3RvX2xlMTYoRElWX1JPVU5EX1VQKHJkYXRhLT5zdWJyZXEu
bGVuLAogCQkJCQkJU01CMl9NQVhfQlVGRkVSX1NJWkUpKTsKIAkJY3JlZGl0X3JlcXVlc3QgPSBs
ZTE2X3RvX2NwdShzaGRyLT5DcmVkaXRDaGFyZ2UpICsgODsKIAkJaWYgKHNlcnZlci0+Y3JlZGl0
cyA+PSBzZXJ2ZXItPm1heF9jcmVkaXRzKQpAQCAtNDQ2MSw3ICs0NDYxLDcgQEAgc21iMl9hc3lu
Y19yZWFkdihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSkKIAkJCQltaW5fdChpbnQs
IHNlcnZlci0+bWF4X2NyZWRpdHMgLQogCQkJCQkJc2VydmVyLT5jcmVkaXRzLCBjcmVkaXRfcmVx
dWVzdCkpOwogCi0JCXJjID0gYWRqdXN0X2NyZWRpdHMoc2VydmVyLCAmcmRhdGEtPmNyZWRpdHMs
IHJkYXRhLT5ieXRlcyk7CisJCXJjID0gYWRqdXN0X2NyZWRpdHMoc2VydmVyLCAmcmRhdGEtPmNy
ZWRpdHMsIHJkYXRhLT5zdWJyZXEubGVuKTsKIAkJaWYgKHJjKQogCQkJZ290byBhc3luY19yZWFk
dl9vdXQ7CiAKQEAgLTQ1OTksMTMgKzQ1OTksMTMgQEAgc21iMl93cml0ZXZfY2FsbGJhY2soc3Ry
dWN0IG1pZF9xX2VudHJ5ICptaWQpCiAJCSAqIGNsaWVudC4gT1MvMiBzZXJ2ZXJzIGFyZSBrbm93
biB0byBzZXQgaW5jb3JyZWN0CiAJCSAqIENvdW50SGlnaCB2YWx1ZXMuCiAJCSAqLwotCQlpZiAo
d3JpdHRlbiA+IHdkYXRhLT5ieXRlcykKKwkJaWYgKHdyaXR0ZW4gPiB3ZGF0YS0+c3VicmVxLmxl
bikKIAkJCXdyaXR0ZW4gJj0gMHhGRkZGOwogCi0JCWlmICh3cml0dGVuIDwgd2RhdGEtPmJ5dGVz
KQorCQlpZiAod3JpdHRlbiA8IHdkYXRhLT5zdWJyZXEubGVuKQogCQkJd2RhdGEtPnJlc3VsdCA9
IC1FTk9TUEM7CiAJCWVsc2UKLQkJCXdkYXRhLT5ieXRlcyA9IHdyaXR0ZW47CisJCQl3ZGF0YS0+
c3VicmVxLmxlbiA9IHdyaXR0ZW47CiAJCWJyZWFrOwogCWNhc2UgTUlEX1JFUVVFU1RfU1VCTUlU
VEVEOgogCWNhc2UgTUlEX1JFVFJZX05FRURFRDoKQEAgLTQ2MzYsOCArNDYzNiw4IEBAIHNtYjJf
d3JpdGV2X2NhbGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogCQljaWZzX3N0YXRzX2Zh
aWxfaW5jKHRjb24sIFNNQjJfV1JJVEVfSEUpOwogCQl0cmFjZV9zbWIzX3dyaXRlX2VycigwIC8q
IG5vIHhpZCAqLywKIAkJCQkgICAgIHdkYXRhLT5jZmlsZS0+ZmlkLnBlcnNpc3RlbnRfZmlkLAot
CQkJCSAgICAgdGNvbi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsIHdkYXRhLT5vZmZzZXQsCi0JCQkJ
ICAgICB3ZGF0YS0+Ynl0ZXMsIHdkYXRhLT5yZXN1bHQpOworCQkJCSAgICAgdGNvbi0+dGlkLCB0
Y29uLT5zZXMtPlN1aWQsIHdkYXRhLT5zdWJyZXEuc3RhcnQsCisJCQkJICAgICB3ZGF0YS0+c3Vi
cmVxLmxlbiwgd2RhdGEtPnJlc3VsdCk7CiAJCWlmICh3ZGF0YS0+cmVzdWx0ID09IC1FTk9TUEMp
CiAJCQlwcl93YXJuX29uY2UoIk91dCBvZiBzcGFjZSB3cml0aW5nIHRvICVzXG4iLAogCQkJCSAg
ICAgdGNvbi0+dHJlZV9uYW1lKTsKQEAgLTQ2NDUsNyArNDY0NSw3IEBAIHNtYjJfd3JpdGV2X2Nh
bGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogCQl0cmFjZV9zbWIzX3dyaXRlX2RvbmUo
MCAvKiBubyB4aWQgKi8sCiAJCQkJICAgICAgd2RhdGEtPmNmaWxlLT5maWQucGVyc2lzdGVudF9m
aWQsCiAJCQkJICAgICAgdGNvbi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsCi0JCQkJICAgICAgd2Rh
dGEtPm9mZnNldCwgd2RhdGEtPmJ5dGVzKTsKKwkJCQkgICAgICB3ZGF0YS0+c3VicmVxLnN0YXJ0
LCB3ZGF0YS0+c3VicmVxLmxlbik7CiAKIAlxdWV1ZV93b3JrKGNpZnNpb2Rfd3EsICZ3ZGF0YS0+
d29yayk7CiAJcmVsZWFzZV9taWQobWlkKTsKQEAgLTQ2NzgsOCArNDY3OCw4IEBAIHNtYjJfYXN5
bmNfd3JpdGV2KHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKndkYXRhKQogCV9pb19wYXJtcyA9
IChzdHJ1Y3QgY2lmc19pb19wYXJtcykgewogCQkudGNvbiA9IHRjb24sCiAJCS5zZXJ2ZXIgPSBz
ZXJ2ZXIsCi0JCS5vZmZzZXQgPSB3ZGF0YS0+b2Zmc2V0LAotCQkubGVuZ3RoID0gd2RhdGEtPmJ5
dGVzLAorCQkub2Zmc2V0ID0gd2RhdGEtPnN1YnJlcS5zdGFydCwKKwkJLmxlbmd0aCA9IHdkYXRh
LT5zdWJyZXEubGVuLAogCQkucGVyc2lzdGVudF9maWQgPSB3ZGF0YS0+Y2ZpbGUtPmZpZC5wZXJz
aXN0ZW50X2ZpZCwKIAkJLnZvbGF0aWxlX2ZpZCA9IHdkYXRhLT5jZmlsZS0+ZmlkLnZvbGF0aWxl
X2ZpZCwKIAkJLnBpZCA9IHdkYXRhLT5waWQsCkBAIC00NzIxLDEwICs0NzIxLDEwIEBAIHNtYjJf
YXN5bmNfd3JpdGV2KHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKndkYXRhKQogCSAqLwogCWlm
IChzbWIzX3VzZV9yZG1hX29mZmxvYWQoaW9fcGFybXMpKSB7CiAJCXN0cnVjdCBzbWJkX2J1ZmZl
cl9kZXNjcmlwdG9yX3YxICp2MTsKLQkJc2l6ZV90IGRhdGFfc2l6ZSA9IGlvdl9pdGVyX2NvdW50
KCZ3ZGF0YS0+aXRlcik7CisJCXNpemVfdCBkYXRhX3NpemUgPSBpb3ZfaXRlcl9jb3VudCgmd2Rh
dGEtPnN1YnJlcS5pb19pdGVyKTsKIAkJYm9vbCBuZWVkX2ludmFsaWRhdGUgPSBzZXJ2ZXItPmRp
YWxlY3QgPT0gU01CMzBfUFJPVF9JRDsKIAotCQl3ZGF0YS0+bXIgPSBzbWJkX3JlZ2lzdGVyX21y
KHNlcnZlci0+c21iZF9jb25uLCAmd2RhdGEtPml0ZXIsCisJCXdkYXRhLT5tciA9IHNtYmRfcmVn
aXN0ZXJfbXIoc2VydmVyLT5zbWJkX2Nvbm4sICZ3ZGF0YS0+c3VicmVxLmlvX2l0ZXIsCiAJCQkJ
CSAgICAgZmFsc2UsIG5lZWRfaW52YWxpZGF0ZSk7CiAJCWlmICghd2RhdGEtPm1yKSB7CiAJCQly
YyA9IC1FQUdBSU47CkBAIC00NzUxLDcgKzQ3NTEsNyBAQCBzbWIyX2FzeW5jX3dyaXRldihzdHJ1
Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKIAogCXJxc3QucnFfaW92ID0gaW92OwogCXJx
c3QucnFfbnZlYyA9IDE7Ci0JcnFzdC5ycV9pdGVyID0gd2RhdGEtPml0ZXI7CisJcnFzdC5ycV9p
dGVyID0gd2RhdGEtPnN1YnJlcS5pb19pdGVyOwogCXJxc3QucnFfaXRlcl9zaXplID0gaW92X2l0
ZXJfY291bnQoJnJxc3QucnFfaXRlcik7CiAjaWZkZWYgQ09ORklHX0NJRlNfU01CX0RJUkVDVAog
CWlmICh3ZGF0YS0+bXIpCkBAIC00NzY5LDcgKzQ3NjksNyBAQCBzbWIyX2FzeW5jX3dyaXRldihz
dHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKICNlbmRpZgogCiAJaWYgKHdkYXRhLT5j
cmVkaXRzLnZhbHVlID4gMCkgewotCQlzaGRyLT5DcmVkaXRDaGFyZ2UgPSBjcHVfdG9fbGUxNihE
SVZfUk9VTkRfVVAod2RhdGEtPmJ5dGVzLAorCQlzaGRyLT5DcmVkaXRDaGFyZ2UgPSBjcHVfdG9f
bGUxNihESVZfUk9VTkRfVVAod2RhdGEtPnN1YnJlcS5sZW4sCiAJCQkJCQkgICAgU01CMl9NQVhf
QlVGRkVSX1NJWkUpKTsKIAkJY3JlZGl0X3JlcXVlc3QgPSBsZTE2X3RvX2NwdShzaGRyLT5DcmVk
aXRDaGFyZ2UpICsgODsKIAkJaWYgKHNlcnZlci0+Y3JlZGl0cyA+PSBzZXJ2ZXItPm1heF9jcmVk
aXRzKQpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC90cmFuc3BvcnQuYyBiL2ZzL3NtYi9jbGll
bnQvdHJhbnNwb3J0LmMKaW5kZXggYmFlNzU4ZWM2MjFiLi4zMDQ4NTE2NTczZTggMTAwNjQ0Ci0t
LSBhL2ZzL3NtYi9jbGllbnQvdHJhbnNwb3J0LmMKKysrIGIvZnMvc21iL2NsaWVudC90cmFuc3Bv
cnQuYwpAQCAtMTY5Miw4ICsxNjkyLDggQEAgY2lmc19yZWFkdl9yZWNlaXZlKHN0cnVjdCBUQ1Bf
U2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpCiAJdW5zaWduZWQg
aW50IGJ1ZmxlbiA9IHNlcnZlci0+cGR1X3NpemUgKyBIRUFERVJfUFJFQU1CTEVfU0laRShzZXJ2
ZXIpOwogCWJvb2wgdXNlX3JkbWFfbXIgPSBmYWxzZTsKIAotCWNpZnNfZGJnKEZZSSwgIiVzOiBt
aWQ9JWxsdSBvZmZzZXQ9JWxsdSBieXRlcz0ldVxuIiwKLQkJIF9fZnVuY19fLCBtaWQtPm1pZCwg
cmRhdGEtPm9mZnNldCwgcmRhdGEtPmJ5dGVzKTsKKwljaWZzX2RiZyhGWUksICIlczogbWlkPSVs
bHUgb2Zmc2V0PSVsbHUgYnl0ZXM9JXp1XG4iLAorCQkgX19mdW5jX18sIG1pZC0+bWlkLCByZGF0
YS0+c3VicmVxLnN0YXJ0LCByZGF0YS0+c3VicmVxLmxlbik7CiAKIAkvKgogCSAqIHJlYWQgdGhl
IHJlc3Qgb2YgUkVBRF9SU1AgaGVhZGVyIChzYW5zIERhdGEgYXJyYXkpLCBvciB3aGF0ZXZlciB3
ZQpAQCAtMTc5OCw3ICsxNzk4LDcgQEAgY2lmc19yZWFkdl9yZWNlaXZlKHN0cnVjdCBUQ1BfU2Vy
dmVyX0luZm8gKnNlcnZlciwgc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpCiAJCWxlbmd0aCA9IGRh
dGFfbGVuOyAvKiBBbiBSRE1BIHJlYWQgaXMgYWxyZWFkeSBkb25lLiAqLwogCWVsc2UKICNlbmRp
ZgotCQlsZW5ndGggPSBjaWZzX3JlYWRfaXRlcl9mcm9tX3NvY2tldChzZXJ2ZXIsICZyZGF0YS0+
aXRlciwKKwkJbGVuZ3RoID0gY2lmc19yZWFkX2l0ZXJfZnJvbV9zb2NrZXQoc2VydmVyLCAmcmRh
dGEtPnN1YnJlcS5pb19pdGVyLAogCQkJCQkJICAgIGRhdGFfbGVuKTsKIAlpZiAobGVuZ3RoID4g
MCkKIAkJcmRhdGEtPmdvdF9ieXRlcyArPSBsZW5ndGg7Ci0tIAoyLjQwLjEKCg==
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0010-cifs-Cut-over-to-using-netfslib.patch"
Content-Disposition: attachment; 
	filename="0010-cifs-Cut-over-to-using-netfslib.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6z8z0>
X-Attachment-Id: f_lroc6z8z0

RnJvbSBkNjM0Y2UzNGY5NWM0NmFjYTUxNmUzMjI5NjEwMmVhNTQxODU5YjkwIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBGcmksIDYgT2N0IDIwMjMgMTg6Mjk6NTkgKzAxMDAKU3ViamVjdDogW1BBVENIIDEwLzEw
XSBjaWZzOiBDdXQgb3ZlciB0byB1c2luZyBuZXRmc2xpYgoKTWFrZSB0aGUgY2lmcyBmaWxlc3lz
dGVtIHVzZSBuZXRmc2xpYiB0byBoYW5kbGUgcmVhZGluZyBhbmQgd3JpdGluZyBvbgpiZWhhbGYg
b2YgY2lmcy4gIFRoZSBjaGFuZ2VzIGluY2x1ZGU6CgogKDEpIFZhcmlvdXMgcmVhZF9pdGVyL3dy
aXRlX2l0ZXIgdHlwZSBmdW5jdGlvbnMgYXJlIHR1cm5lZCBpbnRvIHdyYXBwZXJzCiAgICAgYXJv
dW5kIG5ldGZzbGliIEFQSSBmdW5jdGlvbnMgb3IgYXJlIHBvaW50ZWQgZGlyZWN0bHkgYXQgdGhv
c2UKICAgICBmdW5jdGlvbnM6CgoJY2lmc19maWxlX2RpcmVjdHssX25vYnJsfV9vcHMgc3dpdGNo
IHRvIHVzZQoJbmV0ZnNfdW5idWZmZXJlZF9yZWFkX2l0ZXIgYW5kIG5ldGZzX3VuYnVmZmVyZWRf
d3JpdGVfaXRlci4KCkxhcmdlIHBpZWNlcyBvZiBjb2RlIHRoYXQgd2lsbCBiZSByZW1vdmVkIGFy
ZSAjaWYnZCBvdXQgYW5kIHdpbGwgYmUgcmVtb3ZlZAppbiBzdWJzZXF1ZW50IHBhdGNoZXMuCgpb
P10gV2h5IGRvZXMgY2lmcyBtYXJrIHRoZSBwYWdlIGRpcnR5IGluIHRoZSBkZXN0aW5hdGlvbiBi
dWZmZXIgb2YgYSBESU8KICAgIHJlYWQ/ICBTaG91bGQgdGhhdCBoYXBwZW4gYXV0b21hdGljYWxs
eT8gIERvZXMgbmV0ZnMgbmVlZCB0byBkbyB0aGF0PwoKU2lnbmVkLW9mZi1ieTogRGF2aWQgSG93
ZWxscyA8ZGhvd2VsbHNAcmVkaGF0LmNvbT4KY2M6IFNoeWFtIFByYXNhZCBOIDxuc3BtYW5nYWxv
cmVAZ21haWwuY29tPgpjYzogUm9oaXRoIFN1cmFiYXR0dWxhIDxyb2hpdGhzLm1zZnRAZ21haWwu
Y29tPgpjYzogSmVmZiBMYXl0b24gPGpsYXl0b25Aa2VybmVsLm9yZz4KY2M6IGxpbnV4LWNpZnNA
dmdlci5rZXJuZWwub3JnCmNjOiBsaW51eC1jYWNoZWZzQHJlZGhhdC5jb20KY2M6IGxpbnV4LWZz
ZGV2ZWxAdmdlci5rZXJuZWwub3JnCmNjOiBsaW51eC1tbUBrdmFjay5vcmcKU2lnbmVkLW9mZi1i
eTogU3RldmUgRnJlbmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL25ldGZzL2lv
LmMgICAgICAgICAgICAgfCAgIDcgKy0KIGZzL3NtYi9jbGllbnQvY2lmc2ZzLmMgICAgfCAgIDgg
Ky0KIGZzL3NtYi9jbGllbnQvY2lmc2ZzLmggICAgfCAgIDggKy0KIGZzL3NtYi9jbGllbnQvY2lm
c2dsb2IuaCAgfCAgIDMgKy0KIGZzL3NtYi9jbGllbnQvY2lmc3Byb3RvLmggfCAgIDggKy0KIGZz
L3NtYi9jbGllbnQvY2lmc3NtYi5jICAgfCAgNDUgKysrKysrLS0tLS0KIGZzL3NtYi9jbGllbnQv
ZmlsZS5jICAgICAgfCAxNjYgKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLS0K
IGZzL3NtYi9jbGllbnQvZnNjYWNoZS5jICAgfCAgIDIgKwogZnMvc21iL2NsaWVudC9mc2NhY2hl
LmggICB8ICAgNCArCiBmcy9zbWIvY2xpZW50L2lub2RlLmMgICAgIHwgIDE5ICsrKystCiBmcy9z
bWIvY2xpZW50L3NtYjJwZHUuYyAgIHwgIDk4ICsrKysrKysrKysrKystLS0tLS0tLS0KIGZzL3Nt
Yi9jbGllbnQvdHJhY2UuaCAgICAgfCAxNDQgKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0t
LS0tCiBmcy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jIHwgICAzICsKIDEzIGZpbGVzIGNoYW5nZWQs
IDM0NyBpbnNlcnRpb25zKCspLCAxNjggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvbmV0
ZnMvaW8uYyBiL2ZzL25ldGZzL2lvLmMKaW5kZXggNDMwOWVkZjMzODYyLi5mNzQ1YmFhNWViYWMg
MTAwNjQ0Ci0tLSBhL2ZzL25ldGZzL2lvLmMKKysrIGIvZnMvbmV0ZnMvaW8uYwpAQCAtMzUyLDgg
KzM1MiwxMyBAQCBzdGF0aWMgdm9pZCBuZXRmc19ycmVxX2Fzc2Vzc19kaW8oc3RydWN0IG5ldGZz
X2lvX3JlcXVlc3QgKnJyZXEpCiAJdW5zaWduZWQgaW50IGk7CiAJc2l6ZV90IHRyYW5zZmVycmVk
ID0gMDsKIAotCWZvciAoaSA9IDA7IGkgPCBycmVxLT5kaXJlY3RfYnZfY291bnQ7IGkrKykKKwlm
b3IgKGkgPSAwOyBpIDwgcnJlcS0+ZGlyZWN0X2J2X2NvdW50OyBpKyspIHsKIAkJZmx1c2hfZGNh
Y2hlX3BhZ2UocnJlcS0+ZGlyZWN0X2J2W2ldLmJ2X3BhZ2UpOworCQkvLyBUT0RPOiBjaWZzIG1h
cmtzIHBhZ2VzIGluIHRoZSBkZXN0aW5hdGlvbiBidWZmZXIKKwkJLy8gZGlydHkgdW5kZXIgc29t
ZSBjaXJjdW1zdGFuY2VzIGFmdGVyIGEgcmVhZC4gIERvIHdlCisJCS8vIG5lZWQgdG8gZG8gdGhh
dCB0b28/CisJCXNldF9wYWdlX2RpcnR5KHJyZXEtPmRpcmVjdF9idltpXS5idl9wYWdlKTsKKwl9
CiAKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5KHN1YnJlcSwgJnJyZXEtPnN1YnJlcXVlc3RzLCBycmVx
X2xpbmspIHsKIAkJaWYgKHN1YnJlcS0+ZXJyb3IgfHwgc3VicmVxLT50cmFuc2ZlcnJlZCA9PSAw
KQpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jaWZzZnMuYyBiL2ZzL3NtYi9jbGllbnQvY2lm
c2ZzLmMKaW5kZXggNGI2ZDFhNWU0NzQxLi5kZTgzOGNiODJjZTEgMTAwNjQ0Ci0tLSBhL2ZzL3Nt
Yi9jbGllbnQvY2lmc2ZzLmMKKysrIGIvZnMvc21iL2NsaWVudC9jaWZzZnMuYwpAQCAtMTUxNiw4
ICsxNTE2LDggQEAgY29uc3Qgc3RydWN0IGZpbGVfb3BlcmF0aW9ucyBjaWZzX2ZpbGVfc3RyaWN0
X29wcyA9IHsKIH07CiAKIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgY2lmc19maWxlX2Rp
cmVjdF9vcHMgPSB7Ci0JLnJlYWRfaXRlciA9IGNpZnNfZGlyZWN0X3JlYWR2LAotCS53cml0ZV9p
dGVyID0gY2lmc19kaXJlY3Rfd3JpdGV2LAorCS5yZWFkX2l0ZXIgPSBuZXRmc191bmJ1ZmZlcmVk
X3JlYWRfaXRlciwKKwkud3JpdGVfaXRlciA9IG5ldGZzX2ZpbGVfd3JpdGVfaXRlciwKIAkub3Bl
biA9IGNpZnNfb3BlbiwKIAkucmVsZWFzZSA9IGNpZnNfY2xvc2UsCiAJLmxvY2sgPSBjaWZzX2xv
Y2ssCkBAIC0xNTcyLDggKzE1NzIsOCBAQCBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIGNp
ZnNfZmlsZV9zdHJpY3Rfbm9icmxfb3BzID0gewogfTsKIAogY29uc3Qgc3RydWN0IGZpbGVfb3Bl
cmF0aW9ucyBjaWZzX2ZpbGVfZGlyZWN0X25vYnJsX29wcyA9IHsKLQkucmVhZF9pdGVyID0gY2lm
c19kaXJlY3RfcmVhZHYsCi0JLndyaXRlX2l0ZXIgPSBjaWZzX2RpcmVjdF93cml0ZXYsCisJLnJl
YWRfaXRlciA9IG5ldGZzX3VuYnVmZmVyZWRfcmVhZF9pdGVyLAorCS53cml0ZV9pdGVyID0gbmV0
ZnNfZmlsZV93cml0ZV9pdGVyLAogCS5vcGVuID0gY2lmc19vcGVuLAogCS5yZWxlYXNlID0gY2lm
c19jbG9zZSwKIAkuZnN5bmMgPSBjaWZzX2ZzeW5jLApkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVu
dC9jaWZzZnMuaCBiL2ZzL3NtYi9jbGllbnQvY2lmc2ZzLmgKaW5kZXggZThlMGY4NjNlOTM1Li41
Y2Q1NDdiN2I1ZWEgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2ZzLmgKKysrIGIvZnMv
c21iL2NsaWVudC9jaWZzZnMuaApAQCAtODUsNiArODUsNyBAQCBleHRlcm4gY29uc3Qgc3RydWN0
IGlub2RlX29wZXJhdGlvbnMgY2lmc19uYW1lc3BhY2VfaW5vZGVfb3BlcmF0aW9uczsKIAogCiAv
KiBGdW5jdGlvbnMgcmVsYXRlZCB0byBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgKi8KK2V4dGVybiBj
b25zdCBzdHJ1Y3QgbmV0ZnNfcmVxdWVzdF9vcHMgY2lmc19yZXFfb3BzOwogZXh0ZXJuIGNvbnN0
IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgY2lmc19maWxlX29wczsKIGV4dGVybiBjb25zdCBzdHJ1
Y3QgZmlsZV9vcGVyYXRpb25zIGNpZnNfZmlsZV9kaXJlY3Rfb3BzOyAvKiBpZiBkaXJlY3RpbyBt
bnQgKi8KIGV4dGVybiBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIGNpZnNfZmlsZV9zdHJp
Y3Rfb3BzOyAvKiBpZiBzdHJpY3RpbyBtbnQgKi8KQEAgLTk0LDExICs5NSw3IEBAIGV4dGVybiBj
b25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIGNpZnNfZmlsZV9zdHJpY3Rfbm9icmxfb3BzOwog
ZXh0ZXJuIGludCBjaWZzX29wZW4oc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZp
bGUpOwogZXh0ZXJuIGludCBjaWZzX2Nsb3NlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBm
aWxlICpmaWxlKTsKIGV4dGVybiBpbnQgY2lmc19jbG9zZWRpcihzdHJ1Y3QgaW5vZGUgKmlub2Rl
LCBzdHJ1Y3QgZmlsZSAqZmlsZSk7Ci1leHRlcm4gc3NpemVfdCBjaWZzX3VzZXJfcmVhZHYoc3Ry
dWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKnRvKTsKLWV4dGVybiBzc2l6ZV90IGNp
ZnNfZGlyZWN0X3JlYWR2KHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICp0byk7
CiBleHRlcm4gc3NpemVfdCBjaWZzX3N0cmljdF9yZWFkdihzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0
cnVjdCBpb3ZfaXRlciAqdG8pOwotZXh0ZXJuIHNzaXplX3QgY2lmc191c2VyX3dyaXRldihzdHJ1
Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3ZfaXRlciAqZnJvbSk7Ci1leHRlcm4gc3NpemVfdCBj
aWZzX2RpcmVjdF93cml0ZXYoc3RydWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKmZy
b20pOwogZXh0ZXJuIHNzaXplX3QgY2lmc19zdHJpY3Rfd3JpdGV2KHN0cnVjdCBraW9jYiAqaW9j
Yiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKTsKIHNzaXplX3QgY2lmc19maWxlX3dyaXRlX2l0ZXIo
c3RydWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKmZyb20pOwogc3NpemVfdCBjaWZz
X2xvb3NlX3JlYWRfaXRlcihzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3ZfaXRlciAqaXRl
cik7CkBAIC0xMTIsOSArMTA5LDYgQEAgZXh0ZXJuIGludCBjaWZzX2ZpbGVfc3RyaWN0X21tYXAo
c3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKTsKIGV4dGVybiBj
b25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIGNpZnNfZGlyX29wczsKIGV4dGVybiBpbnQgY2lm
c19kaXJfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSk7CiBleHRl
cm4gaW50IGNpZnNfcmVhZGRpcihzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGRpcl9jb250ZXh0
ICpjdHgpOwotZXh0ZXJuIHZvaWQgY2lmc19wYWdlc193cml0dGVuX2JhY2soc3RydWN0IGlub2Rl
ICppbm9kZSwgbG9mZl90IHN0YXJ0LCB1bnNpZ25lZCBpbnQgbGVuKTsKLWV4dGVybiB2b2lkIGNp
ZnNfcGFnZXNfd3JpdGVfZmFpbGVkKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBzdGFydCwg
dW5zaWduZWQgaW50IGxlbik7Ci1leHRlcm4gdm9pZCBjaWZzX3BhZ2VzX3dyaXRlX3JlZGlydHko
c3RydWN0IGlub2RlICppbm9kZSwgbG9mZl90IHN0YXJ0LCB1bnNpZ25lZCBpbnQgbGVuKTsKIAog
LyogRnVuY3Rpb25zIHJlbGF0ZWQgdG8gZGlyIGVudHJpZXMgKi8KIGV4dGVybiBjb25zdCBzdHJ1
Y3QgZGVudHJ5X29wZXJhdGlvbnMgY2lmc19kZW50cnlfb3BzOwpkaWZmIC0tZ2l0IGEvZnMvc21i
L2NsaWVudC9jaWZzZ2xvYi5oIGIvZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oCmluZGV4IDMwMWU4
OGM0OWE4Zi4uYmU2MWIzMDdlNGNkIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2NpZnNnbG9i
LmgKKysrIGIvZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oCkBAIC0xNDgwLDcgKzE0ODAsNyBAQCBz
dHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0IHsKICNlbmRpZgogCXN0cnVjdCBjaWZzX2NyZWRpdHMJ
CWNyZWRpdHM7CiAKLQkvLyBUT0RPOiBSZW1vdmUgZm9sbG93aW5nIGVsZW1lbnRzCisjaWYgMCAv
LyBUT0RPOiBSZW1vdmUgZm9sbG93aW5nIGVsZW1lbnRzCiAJc3RydWN0IGxpc3RfaGVhZAkJbGlz
dDsKIAlzdHJ1Y3QgY29tcGxldGlvbgkJZG9uZTsKIAlzdHJ1Y3Qgd29ya19zdHJ1Y3QJCXdvcms7
CkBAIC0xNDkwLDYgKzE0OTAsNyBAQCBzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0IHsKIAllbnVt
IHdyaXRlYmFja19zeW5jX21vZGVzCXN5bmNfbW9kZTsKIAlib29sCQkJCXVuY2FjaGVkOwogCXN0
cnVjdCBiaW9fdmVjCQkJKmJ2OworI2VuZGlmCiB9OwogCiAvKgpkaWZmIC0tZ2l0IGEvZnMvc21i
L2NsaWVudC9jaWZzcHJvdG8uaCBiL2ZzL3NtYi9jbGllbnQvY2lmc3Byb3RvLmgKaW5kZXggMmE0
MDA3OGNkOWJmLi4zZGRkMDYzNjNjNGIgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc3By
b3RvLmgKKysrIGIvZnMvc21iL2NsaWVudC9jaWZzcHJvdG8uaApAQCAtMTQ1LDggKzE0NSw4IEBA
IGV4dGVybiBpbnQgY2hlY2tTTUIoY2hhciAqYnVmLCB1bnNpZ25lZCBpbnQgbGVuLCBzdHJ1Y3Qg
VENQX1NlcnZlcl9JbmZvICpzcnZyKTsKIGV4dGVybiBib29sIGlzX3ZhbGlkX29wbG9ja19icmVh
ayhjaGFyICosIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKik7CiBleHRlcm4gYm9vbCBiYWNrdXBf
Y3JlZChzdHJ1Y3QgY2lmc19zYl9pbmZvICopOwogZXh0ZXJuIGJvb2wgaXNfc2l6ZV9zYWZlX3Rv
X2NoYW5nZShzdHJ1Y3QgY2lmc0lub2RlSW5mbyAqLCBfX3U2NCBlb2YpOwotZXh0ZXJuIHZvaWQg
Y2lmc191cGRhdGVfZW9mKHN0cnVjdCBjaWZzSW5vZGVJbmZvICpjaWZzaSwgbG9mZl90IG9mZnNl
dCwKLQkJCSAgICB1bnNpZ25lZCBpbnQgYnl0ZXNfd3JpdHRlbik7Cit2b2lkIGNpZnNfd3JpdGVf
c3VicmVxdWVzdF90ZXJtaW5hdGVkKHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKndkYXRhLCBz
c2l6ZV90IHJlc3VsdCwKKwkJCQkgICAgICBib29sIHdhc19hc3luYyk7CiBleHRlcm4gc3RydWN0
IGNpZnNGaWxlSW5mbyAqZmluZF93cml0YWJsZV9maWxlKHN0cnVjdCBjaWZzSW5vZGVJbmZvICos
IGludCk7CiBleHRlcm4gaW50IGNpZnNfZ2V0X3dyaXRhYmxlX2ZpbGUoc3RydWN0IGNpZnNJbm9k
ZUluZm8gKmNpZnNfaW5vZGUsCiAJCQkJICBpbnQgZmxhZ3MsCkBAIC01OTQsMTcgKzU5NCwyMCBA
QCB2b2lkIF9fY2lmc19wdXRfc21iX3NlcyhzdHJ1Y3QgY2lmc19zZXMgKnNlcyk7CiBleHRlcm4g
c3RydWN0IGNpZnNfc2VzICoKIGNpZnNfZ2V0X3NtYl9zZXMoc3RydWN0IFRDUF9TZXJ2ZXJfSW5m
byAqc2VydmVyLCBzdHJ1Y3Qgc21iM19mc19jb250ZXh0ICpjdHgpOwogCisjaWYgMCAvLyBUT0RP
IFJlbW92ZQogdm9pZCBjaWZzX3JlYWRkYXRhX3JlbGVhc2Uoc3RydWN0IGNpZnNfaW9fc3VicmVx
dWVzdCAqcmRhdGEpOwogc3RhdGljIGlubGluZSB2b2lkIGNpZnNfcHV0X3JlYWRkYXRhKHN0cnVj
dCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhKQogewogCWlmIChyZWZjb3VudF9kZWNfYW5kX3Rl
c3QoJnJkYXRhLT5zdWJyZXEucmVmKSkKIAkJY2lmc19yZWFkZGF0YV9yZWxlYXNlKHJkYXRhKTsK
IH0KKyNlbmRpZgogaW50IGNpZnNfYXN5bmNfcmVhZHYoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVz
dCAqcmRhdGEpOwogaW50IGNpZnNfcmVhZHZfcmVjZWl2ZShzdHJ1Y3QgVENQX1NlcnZlcl9JbmZv
ICpzZXJ2ZXIsIHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKTsKIAogaW50IGNpZnNfYXN5bmNfd3Jp
dGV2KHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKndkYXRhKTsKIHZvaWQgY2lmc193cml0ZXZf
Y29tcGxldGUoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKTsKKyNpZiAwIC8vIFRPRE8gUmVtb3Zl
CiBzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpjaWZzX3dyaXRlZGF0YV9hbGxvYyh3b3JrX2Z1
bmNfdCBjb21wbGV0ZSk7CiB2b2lkIGNpZnNfd3JpdGVkYXRhX3JlbGVhc2Uoc3RydWN0IGNpZnNf
aW9fc3VicmVxdWVzdCAqcmRhdGEpOwogc3RhdGljIGlubGluZSB2b2lkIGNpZnNfZ2V0X3dyaXRl
ZGF0YShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKQEAgLTYxNiw2ICs2MTksNyBA
QCBzdGF0aWMgaW5saW5lIHZvaWQgY2lmc19wdXRfd3JpdGVkYXRhKHN0cnVjdCBjaWZzX2lvX3N1
YnJlcXVlc3QgKndkYXRhKQogCWlmIChyZWZjb3VudF9kZWNfYW5kX3Rlc3QoJndkYXRhLT5zdWJy
ZXEucmVmKSkKIAkJY2lmc193cml0ZWRhdGFfcmVsZWFzZSh3ZGF0YSk7CiB9CisjZW5kaWYKIGlu
dCBjaWZzX3F1ZXJ5X21mX3N5bWxpbmsodW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNv
biAqdGNvbiwKIAkJCSAgc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiwKIAkJCSAgY29uc3Qg
dW5zaWduZWQgY2hhciAqcGF0aCwgY2hhciAqcGJ1ZiwKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGll
bnQvY2lmc3NtYi5jIGIvZnMvc21iL2NsaWVudC9jaWZzc21iLmMKaW5kZXggYjFjMzNhNjI0MTU3
Li5iNjIxNGYxZTMyNjEgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc3NtYi5jCisrKyBi
L2ZzL3NtYi9jbGllbnQvY2lmc3NtYi5jCkBAIC0xMjY1LDcgKzEyNjUsNyBAQCBzdGF0aWMgdm9p
ZAogY2lmc19yZWFkdl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIHsKIAlzdHJ1
Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKLQlzdHJ1
Y3QgY2lmc190Y29uICp0Y29uID0gdGxpbmtfdGNvbihyZGF0YS0+Y2ZpbGUtPnRsaW5rKTsKKwlz
dHJ1Y3QgY2lmc190Y29uICp0Y29uID0gdGxpbmtfdGNvbihyZGF0YS0+cmVxLT5jZmlsZS0+dGxp
bmspOwogCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciA9IHRjb24tPnNlcy0+c2VydmVy
OwogCXN0cnVjdCBzbWJfcnFzdCBycXN0ID0geyAucnFfaW92ID0gcmRhdGEtPmlvdiwKIAkJCQkg
LnJxX252ZWMgPSAyLApAQCAtMTMwNiw3ICsxMzA2LDEyIEBAIGNpZnNfcmVhZHZfY2FsbGJhY2so
c3RydWN0IG1pZF9xX2VudHJ5ICptaWQpCiAJCXJkYXRhLT5yZXN1bHQgPSAtRUlPOwogCX0KIAot
CXF1ZXVlX3dvcmsoY2lmc2lvZF93cSwgJnJkYXRhLT53b3JrKTsKKwlpZiAocmRhdGEtPnJlc3Vs
dCA9PSAwIHx8IHJkYXRhLT5yZXN1bHQgPT0gLUVBR0FJTikKKwkJaW92X2l0ZXJfYWR2YW5jZSgm
cmRhdGEtPnN1YnJlcS5pb19pdGVyLCByZGF0YS0+Z290X2J5dGVzKTsKKwluZXRmc19zdWJyZXFf
dGVybWluYXRlZCgmcmRhdGEtPnN1YnJlcSwKKwkJCQkocmRhdGEtPnJlc3VsdCA9PSAwIHx8IHJk
YXRhLT5yZXN1bHQgPT0gLUVBR0FJTikgPworCQkJCXJkYXRhLT5nb3RfYnl0ZXMgOiByZGF0YS0+
cmVzdWx0LAorCQkJCWZhbHNlKTsKIAlyZWxlYXNlX21pZChtaWQpOwogCWFkZF9jcmVkaXRzKHNl
cnZlciwgJmNyZWRpdHMsIDApOwogfQpAQCAtMTMxOCw3ICsxMzIzLDcgQEAgY2lmc19hc3luY19y
ZWFkdihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSkKIAlpbnQgcmM7CiAJUkVBRF9S
RVEgKnNtYiA9IE5VTEw7CiAJaW50IHdjdDsKLQlzdHJ1Y3QgY2lmc190Y29uICp0Y29uID0gdGxp
bmtfdGNvbihyZGF0YS0+Y2ZpbGUtPnRsaW5rKTsKKwlzdHJ1Y3QgY2lmc190Y29uICp0Y29uID0g
dGxpbmtfdGNvbihyZGF0YS0+cmVxLT5jZmlsZS0+dGxpbmspOwogCXN0cnVjdCBzbWJfcnFzdCBy
cXN0ID0geyAucnFfaW92ID0gcmRhdGEtPmlvdiwKIAkJCQkgLnJxX252ZWMgPSAyIH07CiAKQEAg
LTEzNDMsNyArMTM0OCw3IEBAIGNpZnNfYXN5bmNfcmVhZHYoc3RydWN0IGNpZnNfaW9fc3VicmVx
dWVzdCAqcmRhdGEpCiAJc21iLT5oZHIuUGlkSGlnaCA9IGNwdV90b19sZTE2KChfX3UxNikocmRh
dGEtPnBpZCA+PiAxNikpOwogCiAJc21iLT5BbmRYQ29tbWFuZCA9IDB4RkY7CS8qIG5vbmUgKi8K
LQlzbWItPkZpZCA9IHJkYXRhLT5jZmlsZS0+ZmlkLm5ldGZpZDsKKwlzbWItPkZpZCA9IHJkYXRh
LT5yZXEtPmNmaWxlLT5maWQubmV0ZmlkOwogCXNtYi0+T2Zmc2V0TG93ID0gY3B1X3RvX2xlMzIo
cmRhdGEtPnN1YnJlcS5zdGFydCAmIDB4RkZGRkZGRkYpOwogCWlmICh3Y3QgPT0gMTIpCiAJCXNt
Yi0+T2Zmc2V0SGlnaCA9IGNwdV90b19sZTMyKHJkYXRhLT5zdWJyZXEuc3RhcnQgPj4gMzIpOwpA
QCAtMTYxMywxNSArMTYxOCwxNiBAQCBzdGF0aWMgdm9pZAogY2lmc193cml0ZXZfY2FsbGJhY2so
c3RydWN0IG1pZF9xX2VudHJ5ICptaWQpCiB7CiAJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAq
d2RhdGEgPSBtaWQtPmNhbGxiYWNrX2RhdGE7Ci0Jc3RydWN0IGNpZnNfdGNvbiAqdGNvbiA9IHRs
aW5rX3Rjb24od2RhdGEtPmNmaWxlLT50bGluayk7Ci0JdW5zaWduZWQgaW50IHdyaXR0ZW47CisJ
c3RydWN0IGNpZnNfdGNvbiAqdGNvbiA9IHRsaW5rX3Rjb24od2RhdGEtPnJlcS0+Y2ZpbGUtPnRs
aW5rKTsKIAlXUklURV9SU1AgKnNtYiA9IChXUklURV9SU1AgKiltaWQtPnJlc3BfYnVmOwogCXN0
cnVjdCBjaWZzX2NyZWRpdHMgY3JlZGl0cyA9IHsgLnZhbHVlID0gMSwgLmluc3RhbmNlID0gMCB9
OworCXNzaXplX3QgcmVzdWx0OworCXNpemVfdCB3cml0dGVuOwogCiAJc3dpdGNoIChtaWQtPm1p
ZF9zdGF0ZSkgewogCWNhc2UgTUlEX1JFU1BPTlNFX1JFQ0VJVkVEOgotCQl3ZGF0YS0+cmVzdWx0
ID0gY2lmc19jaGVja19yZWNlaXZlKG1pZCwgdGNvbi0+c2VzLT5zZXJ2ZXIsIDApOwotCQlpZiAo
d2RhdGEtPnJlc3VsdCAhPSAwKQorCQlyZXN1bHQgPSBjaWZzX2NoZWNrX3JlY2VpdmUobWlkLCB0
Y29uLT5zZXMtPnNlcnZlciwgMCk7CisJCWlmIChyZXN1bHQgIT0gMCkKIAkJCWJyZWFrOwogCiAJ
CXdyaXR0ZW4gPSBsZTE2X3RvX2NwdShzbWItPkNvdW50SGlnaCk7CkBAIC0xNjM3LDIwICsxNjQz
LDIwIEBAIGNpZnNfd3JpdGV2X2NhbGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogCQkJ
d3JpdHRlbiAmPSAweEZGRkY7CiAKIAkJaWYgKHdyaXR0ZW4gPCB3ZGF0YS0+c3VicmVxLmxlbikK
LQkJCXdkYXRhLT5yZXN1bHQgPSAtRU5PU1BDOworCQkJcmVzdWx0ID0gLUVOT1NQQzsKIAkJZWxz
ZQotCQkJd2RhdGEtPnN1YnJlcS5sZW4gPSB3cml0dGVuOworCQkJcmVzdWx0ID0gd3JpdHRlbjsK
IAkJYnJlYWs7CiAJY2FzZSBNSURfUkVRVUVTVF9TVUJNSVRURUQ6CiAJY2FzZSBNSURfUkVUUllf
TkVFREVEOgotCQl3ZGF0YS0+cmVzdWx0ID0gLUVBR0FJTjsKKwkJcmVzdWx0ID0gLUVBR0FJTjsK
IAkJYnJlYWs7CiAJZGVmYXVsdDoKLQkJd2RhdGEtPnJlc3VsdCA9IC1FSU87CisJCXJlc3VsdCA9
IC1FSU87CiAJCWJyZWFrOwogCX0KIAotCXF1ZXVlX3dvcmsoY2lmc2lvZF93cSwgJndkYXRhLT53
b3JrKTsKKwljaWZzX3dyaXRlX3N1YnJlcXVlc3RfdGVybWluYXRlZCh3ZGF0YSwgcmVzdWx0LCB0
cnVlKTsKIAlyZWxlYXNlX21pZChtaWQpOwogCWFkZF9jcmVkaXRzKHRjb24tPnNlcy0+c2VydmVy
LCAmY3JlZGl0cywgMCk7CiB9CkBAIC0xNjYyLDcgKzE2NjgsNyBAQCBjaWZzX2FzeW5jX3dyaXRl
dihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKIAlpbnQgcmMgPSAtRUFDQ0VTOwog
CVdSSVRFX1JFUSAqc21iID0gTlVMTDsKIAlpbnQgd2N0OwotCXN0cnVjdCBjaWZzX3Rjb24gKnRj
b24gPSB0bGlua190Y29uKHdkYXRhLT5jZmlsZS0+dGxpbmspOworCXN0cnVjdCBjaWZzX3Rjb24g
KnRjb24gPSB0bGlua190Y29uKHdkYXRhLT5yZXEtPmNmaWxlLT50bGluayk7CiAJc3RydWN0IGt2
ZWMgaW92WzJdOwogCXN0cnVjdCBzbWJfcnFzdCBycXN0ID0geyB9OwogCkBAIC0xNjcyLDcgKzE2
NzgsOCBAQCBjaWZzX2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0
YSkKIAkJd2N0ID0gMTI7CiAJCWlmICh3ZGF0YS0+c3VicmVxLnN0YXJ0ID4+IDMyID4gMCkgewog
CQkJLyogY2FuIG5vdCBoYW5kbGUgYmlnIG9mZnNldCBmb3Igb2xkIHNydiAqLwotCQkJcmV0dXJu
IC1FSU87CisJCQlyYyA9IC1FSU87CisJCQlnb3RvIG91dDsKIAkJfQogCX0KIApAQCAtMTY4NCw3
ICsxNjkxLDcgQEAgY2lmc19hc3luY193cml0ZXYoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAq
d2RhdGEpCiAJc21iLT5oZHIuUGlkSGlnaCA9IGNwdV90b19sZTE2KChfX3UxNikod2RhdGEtPnBp
ZCA+PiAxNikpOwogCiAJc21iLT5BbmRYQ29tbWFuZCA9IDB4RkY7CS8qIG5vbmUgKi8KLQlzbWIt
PkZpZCA9IHdkYXRhLT5jZmlsZS0+ZmlkLm5ldGZpZDsKKwlzbWItPkZpZCA9IHdkYXRhLT5yZXEt
PmNmaWxlLT5maWQubmV0ZmlkOwogCXNtYi0+T2Zmc2V0TG93ID0gY3B1X3RvX2xlMzIod2RhdGEt
PnN1YnJlcS5zdGFydCAmIDB4RkZGRkZGRkYpOwogCWlmICh3Y3QgPT0gMTQpCiAJCXNtYi0+T2Zm
c2V0SGlnaCA9IGNwdV90b19sZTMyKHdkYXRhLT5zdWJyZXEuc3RhcnQgPj4gMzIpOwpAQCAtMTcy
NCwxNyArMTczMSwxNyBAQCBjaWZzX2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1
ZXN0ICp3ZGF0YSkKIAkJaW92WzFdLmlvdl9sZW4gKz0gNDsgLyogcGFkIGJpZ2dlciBieSBmb3Vy
IGJ5dGVzICovCiAJfQogCi0JY2lmc19nZXRfd3JpdGVkYXRhKHdkYXRhKTsKIAlyYyA9IGNpZnNf
Y2FsbF9hc3luYyh0Y29uLT5zZXMtPnNlcnZlciwgJnJxc3QsIE5VTEwsCiAJCQkgICAgIGNpZnNf
d3JpdGV2X2NhbGxiYWNrLCBOVUxMLCB3ZGF0YSwgMCwgTlVMTCk7CiAKIAlpZiAocmMgPT0gMCkK
IAkJY2lmc19zdGF0c19pbmMoJnRjb24tPnN0YXRzLmNpZnNfc3RhdHMubnVtX3dyaXRlcyk7Ci0J
ZWxzZQotCQljaWZzX3B1dF93cml0ZWRhdGEod2RhdGEpOwogCiBhc3luY193cml0ZXZfb3V0Ogog
CWNpZnNfc21hbGxfYnVmX3JlbGVhc2Uoc21iKTsKK291dDoKKwlpZiAocmMpCisJCWNpZnNfd3Jp
dGVfc3VicmVxdWVzdF90ZXJtaW5hdGVkKHdkYXRhLCByYywgZmFsc2UpOwogCXJldHVybiByYzsK
IH0KIApkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9maWxlLmMgYi9mcy9zbWIvY2xpZW50L2Zp
bGUuYwppbmRleCBhMDA0NDJiNDk3MzUuLjI4OGU3ZWRkOWY1NCAxMDA2NDQKLS0tIGEvZnMvc21i
L2NsaWVudC9maWxlLmMKKysrIGIvZnMvc21iL2NsaWVudC9maWxlLmMKQEAgLTIyLDYgKzIyLDcg
QEAKICNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CiAjaW5jbHVkZSA8bGludXgvc3dhcC5oPgogI2lu
Y2x1ZGUgPGxpbnV4L21tLmg+CisjaW5jbHVkZSA8bGludXgvbmV0ZnMuaD4KICNpbmNsdWRlIDxh
c20vZGl2NjQuaD4KICNpbmNsdWRlICJjaWZzZnMuaCIKICNpbmNsdWRlICJjaWZzcGR1LmgiCkBA
IC0xNzIsNyArMTczLDcgQEAgc3RhdGljIHZvaWQgY2lmc19jcmVhdGVfd3JpdGVfcmVxdWVzdHMo
c3RydWN0IG5ldGZzX2lvX3JlcXVlc3QgKndyZXEsCiBmYWlsZWRfcmV0dXJuX2NyZWRpdHM6CiAJ
YWRkX2NyZWRpdHNfYW5kX3dha2VfaWYoc2VydmVyLCAmd2RhdGEtPmNyZWRpdHMsIDApOwogZmFp
bGVkOgotCW5ldGZzX3dyaXRlX3N1YnJlcXVlc3RfdGVybWluYXRlZChzdWJyZXEsIHJjLCBmYWxz
ZSk7CisJY2lmc193cml0ZV9zdWJyZXF1ZXN0X3Rlcm1pbmF0ZWQod2RhdGEsIHJjLCBmYWxzZSk7
CiAJZnJlZV94aWQoeGlkKTsKIH0KIApAQCAtMzk0LDYgKzM5NSw3IEBAIGNvbnN0IHN0cnVjdCBu
ZXRmc19yZXF1ZXN0X29wcyBjaWZzX3JlcV9vcHMgPSB7CiAJLmNyZWF0ZV93cml0ZV9yZXF1ZXN0
cwk9IGNpZnNfY3JlYXRlX3dyaXRlX3JlcXVlc3RzLAogfTsKIAorI2lmIDAgLy8gVE9ETyByZW1v
dmUgMzk3CiAvKgogICogUmVtb3ZlIHRoZSBkaXJ0eSBmbGFncyBmcm9tIGEgc3BhbiBvZiBwYWdl
cy4KICAqLwpAQCAtNTE4LDYgKzUyMCw3IEBAIHZvaWQgY2lmc19wYWdlc193cml0ZV9yZWRpcnR5
KHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBzdGFydCwgdW5zaWduZWQgaW50IGxlCiAKIAly
Y3VfcmVhZF91bmxvY2soKTsKIH0KKyNlbmRpZiAvLyBlbmQgbmV0ZnNsaWIgcmVtb3ZlIDM5Nwog
CiAvKgogICogTWFyayBhcyBpbnZhbGlkLCBhbGwgb3BlbiBmaWxlcyBvbiB0cmVlIGNvbm5lY3Rp
b25zIHNpbmNlIHRoZXkKQEAgLTI0NjcsMjAgKzI0NzAsMjMgQEAgaW50IGNpZnNfbG9jayhzdHJ1
Y3QgZmlsZSAqZmlsZSwgaW50IGNtZCwgc3RydWN0IGZpbGVfbG9jayAqZmxvY2spCiAJcmV0dXJu
IHJjOwogfQogCi0vKgotICogdXBkYXRlIHRoZSBmaWxlIHNpemUgKGlmIG5lZWRlZCkgYWZ0ZXIg
YSB3cml0ZS4gU2hvdWxkIGJlIGNhbGxlZCB3aXRoCi0gKiB0aGUgaW5vZGUtPmlfbG9jayBoZWxk
Ci0gKi8KLXZvaWQKLWNpZnNfdXBkYXRlX2VvZihzdHJ1Y3QgY2lmc0lub2RlSW5mbyAqY2lmc2ks
IGxvZmZfdCBvZmZzZXQsCi0JCSAgICAgIHVuc2lnbmVkIGludCBieXRlc193cml0dGVuKQordm9p
ZCBjaWZzX3dyaXRlX3N1YnJlcXVlc3RfdGVybWluYXRlZChzdHJ1Y3QgY2lmc19pb19zdWJyZXF1
ZXN0ICp3ZGF0YSwgc3NpemVfdCByZXN1bHQsCisJCQkJICAgICAgYm9vbCB3YXNfYXN5bmMpCiB7
Ci0JbG9mZl90IGVuZF9vZl93cml0ZSA9IG9mZnNldCArIGJ5dGVzX3dyaXR0ZW47CisJc3RydWN0
IG5ldGZzX2lvX3JlcXVlc3QgKndyZXEgPSB3ZGF0YS0+cnJlcTsKKwlsb2ZmX3QgbmV3X3NlcnZl
cl9lb2Y7CiAKLQlpZiAoZW5kX29mX3dyaXRlID4gY2lmc2ktPm5ldGZzLnJlbW90ZV9pX3NpemUp
Ci0JCW5ldGZzX3Jlc2l6ZV9maWxlKCZjaWZzaS0+bmV0ZnMsIGVuZF9vZl93cml0ZSwgdHJ1ZSk7
CisJaWYgKHJlc3VsdCA+IDApIHsKKwkJbmV3X3NlcnZlcl9lb2YgPSB3ZGF0YS0+c3VicmVxLnN0
YXJ0ICsgd2RhdGEtPnN1YnJlcS50cmFuc2ZlcnJlZCArIHJlc3VsdDsKKworCQlpZiAobmV3X3Nl
cnZlcl9lb2YgPiBuZXRmc19pbm9kZSh3cmVxLT5pbm9kZSktPnJlbW90ZV9pX3NpemUpCisJCQlu
ZXRmc19yZXNpemVfZmlsZShuZXRmc19pbm9kZSh3cmVxLT5pbm9kZSksIG5ld19zZXJ2ZXJfZW9m
LCB0cnVlKTsKKwl9CisKKwluZXRmc193cml0ZV9zdWJyZXF1ZXN0X3Rlcm1pbmF0ZWQoJndkYXRh
LT5zdWJyZXEsIHJlc3VsdCwgd2FzX2FzeW5jKTsKIH0KIAorI2lmIDAgLy8gVE9ETyByZW1vdmUg
MjQ4Mwogc3RhdGljIHNzaXplX3QKIGNpZnNfd3JpdGUoc3RydWN0IGNpZnNGaWxlSW5mbyAqb3Bl
bl9maWxlLCBfX3UzMiBwaWQsIGNvbnN0IGNoYXIgKndyaXRlX2RhdGEsCiAJICAgc2l6ZV90IHdy
aXRlX3NpemUsIGxvZmZfdCAqb2Zmc2V0KQpAQCAtMjU2NCw2ICsyNTcwLDcgQEAgY2lmc193cml0
ZShzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpvcGVuX2ZpbGUsIF9fdTMyIHBpZCwgY29uc3QgY2hhciAq
d3JpdGVfZGF0YSwKIAlmcmVlX3hpZCh4aWQpOwogCXJldHVybiB0b3RhbF93cml0dGVuOwogfQor
I2VuZGlmIC8vIGVuZCBuZXRmc2xpYiByZW1vdmUgMjQ4MwogCiBzdHJ1Y3QgY2lmc0ZpbGVJbmZv
ICpmaW5kX3JlYWRhYmxlX2ZpbGUoc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNfaW5vZGUsCiAJ
CQkJCWJvb2wgZnN1aWRfb25seSkKQEAgLTI3NjksNiArMjc3Niw3IEBAIGNpZnNfZ2V0X3JlYWRh
YmxlX3BhdGgoc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwgY29uc3QgY2hhciAqbmFtZSwKIAlyZXR1
cm4gLUVOT0VOVDsKIH0KIAorI2lmIDAgLy8gVE9ETyByZW1vdmUgMjc3Mwogdm9pZAogY2lmc193
cml0ZWRhdGFfcmVsZWFzZShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKIHsKQEAg
LTM0NTksNyArMzQ2NywxMSBAQCBzdGF0aWMgaW50IGNpZnNfd3JpdGVfZW5kKHN0cnVjdCBmaWxl
ICpmaWxlLCBzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKIAogCXJldHVybiByYzsKIH0K
KyNlbmRpZiAvLyBFbmQgbmV0ZnMgcmVtb3ZhbCAyNzczCiAKKy8qCisgKiBGbHVzaCBkYXRhIG9u
IGEgc3RyaWN0IGZpbGUuCisgKi8KIGludCBjaWZzX3N0cmljdF9mc3luYyhzdHJ1Y3QgZmlsZSAq
ZmlsZSwgbG9mZl90IHN0YXJ0LCBsb2ZmX3QgZW5kLAogCQkgICAgICBpbnQgZGF0YXN5bmMpCiB7
CkBAIC0zNTE0LDYgKzM1MjYsOSBAQCBpbnQgY2lmc19zdHJpY3RfZnN5bmMoc3RydWN0IGZpbGUg
KmZpbGUsIGxvZmZfdCBzdGFydCwgbG9mZl90IGVuZCwKIAlyZXR1cm4gcmM7CiB9CiAKKy8qCisg
KiBGbHVzaCBkYXRhIG9uIGEgbm9uLXN0cmljdCBkYXRhLgorICovCiBpbnQgY2lmc19mc3luYyhz
dHJ1Y3QgZmlsZSAqZmlsZSwgbG9mZl90IHN0YXJ0LCBsb2ZmX3QgZW5kLCBpbnQgZGF0YXN5bmMp
CiB7CiAJdW5zaWduZWQgaW50IHhpZDsKQEAgLTM1ODAsNiArMzU5NSw3IEBAIGludCBjaWZzX2Zs
dXNoKHN0cnVjdCBmaWxlICpmaWxlLCBmbF9vd25lcl90IGlkKQogCXJldHVybiByYzsKIH0KIAor
I2lmIDAgLy8gVE9ETyByZW1vdmUgMzU5NAogc3RhdGljIHZvaWQgY29sbGVjdF91bmNhY2hlZF93
cml0ZV9kYXRhKHN0cnVjdCBjaWZzX2Fpb19jdHggKmN0eCk7CiAKIHN0YXRpYyB2b2lkCkBAIC00
MDQxLDYgKzQwNTcsNyBAQCBzc2l6ZV90IGNpZnNfdXNlcl93cml0ZXYoc3RydWN0IGtpb2NiICpp
b2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKmZyb20pCiB7CiAJcmV0dXJuIF9fY2lmc193cml0ZXYoaW9j
YiwgZnJvbSwgZmFsc2UpOwogfQorI2VuZGlmIC8vIFRPRE8gcmVtb3ZlIDM1OTQKIAogc3RhdGlj
IHNzaXplX3QKIGNpZnNfd3JpdGV2KHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVy
ICpmcm9tKQpAQCAtNDA1Miw3ICs0MDY5LDEwIEBAIGNpZnNfd3JpdGV2KHN0cnVjdCBraW9jYiAq
aW9jYiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKQogCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNl
cnZlciA9IHRsaW5rX3Rjb24oY2ZpbGUtPnRsaW5rKS0+c2VzLT5zZXJ2ZXI7CiAJc3NpemVfdCBy
YzsKIAotCWlub2RlX2xvY2soaW5vZGUpOworCXJjID0gbmV0ZnNfc3RhcnRfaW9fd3JpdGUoaW5v
ZGUpOworCWlmIChyYyA8IDApCisJCXJldHVybiByYzsKKwogCS8qCiAJICogV2UgbmVlZCB0byBo
b2xkIHRoZSBzZW0gdG8gYmUgc3VyZSBub2JvZHkgbW9kaWZpZXMgbG9jayBsaXN0CiAJICogd2l0
aCBhIGJybG9jayB0aGF0IHByZXZlbnRzIHdyaXRpbmcuCkBAIC00MDY2LDEzICs0MDg2LDEyIEBA
IGNpZnNfd3JpdGV2KHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKQog
CWlmICghY2lmc19maW5kX2xvY2tfY29uZmxpY3QoY2ZpbGUsIGlvY2ItPmtpX3BvcywgaW92X2l0
ZXJfY291bnQoZnJvbSksCiAJCQkJICAgICBzZXJ2ZXItPnZhbHMtPmV4Y2x1c2l2ZV9sb2NrX3R5
cGUsIDAsCiAJCQkJICAgICBOVUxMLCBDSUZTX1dSSVRFX09QKSkKLQkJcmMgPSBfX2dlbmVyaWNf
ZmlsZV93cml0ZV9pdGVyKGlvY2IsIGZyb20pOworCQlyYyA9IG5ldGZzX2J1ZmZlcmVkX3dyaXRl
X2l0ZXJfbG9ja2VkKGlvY2IsIGZyb20sIE5VTEwpOwogCWVsc2UKIAkJcmMgPSAtRUFDQ0VTOwog
b3V0OgogCXVwX3JlYWQoJmNpbm9kZS0+bG9ja19zZW0pOwotCWlub2RlX3VubG9jayhpbm9kZSk7
Ci0KKwluZXRmc19lbmRfaW9fd3JpdGUoaW5vZGUpOwogCWlmIChyYyA+IDApCiAJCXJjID0gZ2Vu
ZXJpY193cml0ZV9zeW5jKGlvY2IsIHJjKTsKIAlyZXR1cm4gcmM7CkBAIC00MDk1LDkgKzQxMTQs
OSBAQCBjaWZzX3N0cmljdF93cml0ZXYoc3RydWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0
ZXIgKmZyb20pCiAKIAlpZiAoQ0lGU19DQUNIRV9XUklURShjaW5vZGUpKSB7CiAJCWlmIChjYXBf
dW5peCh0Y29uLT5zZXMpICYmCi0JCShDSUZTX1VOSVhfRkNOVExfQ0FQICYgbGU2NF90b19jcHUo
dGNvbi0+ZnNVbml4SW5mby5DYXBhYmlsaXR5KSkKLQkJICAmJiAoKGNpZnNfc2ItPm1udF9jaWZz
X2ZsYWdzICYgQ0lGU19NT1VOVF9OT1BPU0lYQlJMKSA9PSAwKSkgewotCQkJd3JpdHRlbiA9IGdl
bmVyaWNfZmlsZV93cml0ZV9pdGVyKGlvY2IsIGZyb20pOworCQkgICAgKENJRlNfVU5JWF9GQ05U
TF9DQVAgJiBsZTY0X3RvX2NwdSh0Y29uLT5mc1VuaXhJbmZvLkNhcGFiaWxpdHkpKSAmJgorCQkg
ICAgKChjaWZzX3NiLT5tbnRfY2lmc19mbGFncyAmIENJRlNfTU9VTlRfTk9QT1NJWEJSTCkgPT0g
MCkpIHsKKwkJCXdyaXR0ZW4gPSBuZXRmc19maWxlX3dyaXRlX2l0ZXIoaW9jYiwgZnJvbSk7CiAJ
CQlnb3RvIG91dDsKIAkJfQogCQl3cml0dGVuID0gY2lmc193cml0ZXYoaW9jYiwgZnJvbSk7CkBA
IC00MTA5LDcgKzQxMjgsNyBAQCBjaWZzX3N0cmljdF93cml0ZXYoc3RydWN0IGtpb2NiICppb2Ni
LCBzdHJ1Y3QgaW92X2l0ZXIgKmZyb20pCiAJICogYWZmZWN0ZWQgcGFnZXMgYmVjYXVzZSBpdCBt
YXkgY2F1c2UgYSBlcnJvciB3aXRoIG1hbmRhdG9yeSBsb2NrcyBvbgogCSAqIHRoZXNlIHBhZ2Vz
IGJ1dCBub3Qgb24gdGhlIHJlZ2lvbiBmcm9tIHBvcyB0byBwcG9zK2xlbi0xLgogCSAqLwotCXdy
aXR0ZW4gPSBjaWZzX3VzZXJfd3JpdGV2KGlvY2IsIGZyb20pOworCXdyaXR0ZW4gPSBuZXRmc19m
aWxlX3dyaXRlX2l0ZXIoaW9jYiwgZnJvbSk7CiAJaWYgKENJRlNfQ0FDSEVfUkVBRChjaW5vZGUp
KSB7CiAJCS8qCiAJCSAqIFdlIGhhdmUgcmVhZCBsZXZlbCBjYWNoaW5nIGFuZCB3ZSBoYXZlIGp1
c3Qgc2VudCBhIHdyaXRlCkBAIC00MTI4LDYgKzQxNDcsNyBAQCBjaWZzX3N0cmljdF93cml0ZXYo
c3RydWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKmZyb20pCiAJcmV0dXJuIHdyaXR0
ZW47CiB9CiAKKyNpZiAwIC8vIFRPRE8gcmVtb3ZlIDQxNDMKIHN0YXRpYyBzdHJ1Y3QgY2lmc19p
b19zdWJyZXF1ZXN0ICpjaWZzX3JlYWRkYXRhX2FsbG9jKHdvcmtfZnVuY190IGNvbXBsZXRlKQog
ewogCXN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhOwpAQCAtNDU2Nyw3ICs0NTg3LDkg
QEAgc3NpemVfdCBjaWZzX2RpcmVjdF9yZWFkdihzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBp
b3ZfaXRlciAqdG8pCiBzc2l6ZV90IGNpZnNfdXNlcl9yZWFkdihzdHJ1Y3Qga2lvY2IgKmlvY2Is
IHN0cnVjdCBpb3ZfaXRlciAqdG8pCiB7CiAJcmV0dXJuIF9fY2lmc19yZWFkdihpb2NiLCB0bywg
ZmFsc2UpOworCiB9CisjZW5kaWYgLy8gZW5kIG5ldGZzbGliIHJlbW92YWwgNDE0MwogCiBzc2l6
ZV90IGNpZnNfbG9vc2VfcmVhZF9pdGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9p
dGVyICppdGVyKQogewpAQCAtNDU3NSwxMyArNDU5NywxMyBAQCBzc2l6ZV90IGNpZnNfbG9vc2Vf
cmVhZF9pdGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICppdGVyKQogCXN0
cnVjdCBpbm9kZSAqaW5vZGUgPSBmaWxlX2lub2RlKGlvY2ItPmtpX2ZpbHApOwogCiAJaWYgKGlv
Y2ItPmtpX2ZsYWdzICYgSU9DQl9ESVJFQ1QpCi0JCXJldHVybiBjaWZzX3VzZXJfcmVhZHYoaW9j
YiwgaXRlcik7CisJCXJldHVybiBuZXRmc191bmJ1ZmZlcmVkX3JlYWRfaXRlcihpb2NiLCBpdGVy
KTsKIAogCXJjID0gY2lmc19yZXZhbGlkYXRlX21hcHBpbmcoaW5vZGUpOwogCWlmIChyYykKIAkJ
cmV0dXJuIHJjOwogCi0JcmV0dXJuIGdlbmVyaWNfZmlsZV9yZWFkX2l0ZXIoaW9jYiwgaXRlcik7
CisJcmV0dXJuIG5ldGZzX2ZpbGVfcmVhZF9pdGVyKGlvY2IsIGl0ZXIpOwogfQogCiBzc2l6ZV90
IGNpZnNfZmlsZV93cml0ZV9pdGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVy
ICpmcm9tKQpAQCAtNDU5Miw3ICs0NjE0LDcgQEAgc3NpemVfdCBjaWZzX2ZpbGVfd3JpdGVfaXRl
cihzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3ZfaXRlciAqZnJvbSkKIAlpbnQgcmM7CiAK
IAlpZiAoaW9jYi0+a2lfZmlscC0+Zl9mbGFncyAmIE9fRElSRUNUKSB7Ci0JCXdyaXR0ZW4gPSBj
aWZzX3VzZXJfd3JpdGV2KGlvY2IsIGZyb20pOworCQl3cml0dGVuID0gbmV0ZnNfdW5idWZmZXJl
ZF93cml0ZV9pdGVyKGlvY2IsIGZyb20pOwogCQlpZiAod3JpdHRlbiA+IDAgJiYgQ0lGU19DQUNI
RV9SRUFEKGNpbm9kZSkpIHsKIAkJCWNpZnNfemFwX21hcHBpbmcoaW5vZGUpOwogCQkJY2lmc19k
YmcoRllJLApAQCAtNDYwNywxNyArNDYyOSwxNSBAQCBzc2l6ZV90IGNpZnNfZmlsZV93cml0ZV9p
dGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKQogCWlmICh3cml0
dGVuKQogCQlyZXR1cm4gd3JpdHRlbjsKIAotCXdyaXR0ZW4gPSBnZW5lcmljX2ZpbGVfd3JpdGVf
aXRlcihpb2NiLCBmcm9tKTsKLQotCWlmIChDSUZTX0NBQ0hFX1dSSVRFKENJRlNfSShpbm9kZSkp
KQotCQlnb3RvIG91dDsKKwl3cml0dGVuID0gbmV0ZnNfZmlsZV93cml0ZV9pdGVyKGlvY2IsIGZy
b20pOwogCi0JcmMgPSBmaWxlbWFwX2ZkYXRhd3JpdGUoaW5vZGUtPmlfbWFwcGluZyk7Ci0JaWYg
KHJjKQotCQljaWZzX2RiZyhGWUksICIlczogJWQgcmMgb24gJXAgaW5vZGVcbiIsCi0JCQkgX19m
dW5jX18sIHJjLCBpbm9kZSk7CisJaWYgKCFDSUZTX0NBQ0hFX1dSSVRFKENJRlNfSShpbm9kZSkp
KSB7CisJCXJjID0gZmlsZW1hcF9mZGF0YXdyaXRlKGlub2RlLT5pX21hcHBpbmcpOworCQlpZiAo
cmMpCisJCQljaWZzX2RiZyhGWUksICJjaWZzX2ZpbGVfd3JpdGVfaXRlcjogJWQgcmMgb24gJXAg
aW5vZGVcbiIsCisJCQkJIHJjLCBpbm9kZSk7CisJfQogCi1vdXQ6CiAJY2lmc19wdXRfd3JpdGVy
KGNpbm9kZSk7CiAJcmV0dXJuIHdyaXR0ZW47CiB9CkBAIC00NjQyLDEyICs0NjYyLDE1IEBAIGNp
ZnNfc3RyaWN0X3JlYWR2KHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICp0bykK
IAkgKiBwb3MrbGVuLTEuCiAJICovCiAJaWYgKCFDSUZTX0NBQ0hFX1JFQUQoY2lub2RlKSkKLQkJ
cmV0dXJuIGNpZnNfdXNlcl9yZWFkdihpb2NiLCB0byk7CisJCXJldHVybiBuZXRmc191bmJ1ZmZl
cmVkX3JlYWRfaXRlcihpb2NiLCB0byk7CiAKIAlpZiAoY2FwX3VuaXgodGNvbi0+c2VzKSAmJgog
CSAgICAoQ0lGU19VTklYX0ZDTlRMX0NBUCAmIGxlNjRfdG9fY3B1KHRjb24tPmZzVW5peEluZm8u
Q2FwYWJpbGl0eSkpICYmCi0JICAgICgoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01P
VU5UX05PUE9TSVhCUkwpID09IDApKQotCQlyZXR1cm4gZ2VuZXJpY19maWxlX3JlYWRfaXRlcihp
b2NiLCB0byk7CisJICAgICgoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX05P
UE9TSVhCUkwpID09IDApKSB7CisJCWlmIChpb2NiLT5raV9mbGFncyAmIElPQ0JfRElSRUNUKQor
CQkJcmV0dXJuIG5ldGZzX3VuYnVmZmVyZWRfcmVhZF9pdGVyKGlvY2IsIHRvKTsKKwkJcmV0dXJu
IG5ldGZzX2J1ZmZlcmVkX3JlYWRfaXRlcihpb2NiLCB0byk7CisJfQogCiAJLyoKIAkgKiBXZSBu
ZWVkIHRvIGhvbGQgdGhlIHNlbSB0byBiZSBzdXJlIG5vYm9keSBtb2RpZmllcyBsb2NrIGxpc3QK
QEAgLTQ2NTYsMTIgKzQ2NzksMTcgQEAgY2lmc19zdHJpY3RfcmVhZHYoc3RydWN0IGtpb2NiICpp
b2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKnRvKQogCWRvd25fcmVhZCgmY2lub2RlLT5sb2NrX3NlbSk7
CiAJaWYgKCFjaWZzX2ZpbmRfbG9ja19jb25mbGljdChjZmlsZSwgaW9jYi0+a2lfcG9zLCBpb3Zf
aXRlcl9jb3VudCh0byksCiAJCQkJICAgICB0Y29uLT5zZXMtPnNlcnZlci0+dmFscy0+c2hhcmVk
X2xvY2tfdHlwZSwKLQkJCQkgICAgIDAsIE5VTEwsIENJRlNfUkVBRF9PUCkpCi0JCXJjID0gZ2Vu
ZXJpY19maWxlX3JlYWRfaXRlcihpb2NiLCB0byk7CisJCQkJICAgICAwLCBOVUxMLCBDSUZTX1JF
QURfT1ApKSB7CisJCWlmIChpb2NiLT5raV9mbGFncyAmIElPQ0JfRElSRUNUKQorCQkJcmMgPSBu
ZXRmc191bmJ1ZmZlcmVkX3JlYWRfaXRlcihpb2NiLCB0byk7CisJCWVsc2UKKwkJCXJjID0gbmV0
ZnNfYnVmZmVyZWRfcmVhZF9pdGVyKGlvY2IsIHRvKTsKKwl9CiAJdXBfcmVhZCgmY2lub2RlLT5s
b2NrX3NlbSk7CiAJcmV0dXJuIHJjOwogfQogCisjaWYgMCAvLyBUT0RPIHJlbW92ZSA0NjMzCiBz
dGF0aWMgc3NpemVfdAogY2lmc19yZWFkKHN0cnVjdCBmaWxlICpmaWxlLCBjaGFyICpyZWFkX2Rh
dGEsIHNpemVfdCByZWFkX3NpemUsIGxvZmZfdCAqb2Zmc2V0KQogewpAQCAtNDc1MywyOSArNDc4
MSwxMSBAQCBjaWZzX3JlYWQoc3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgKnJlYWRfZGF0YSwgc2l6
ZV90IHJlYWRfc2l6ZSwgbG9mZl90ICpvZmZzZXQpCiAJZnJlZV94aWQoeGlkKTsKIAlyZXR1cm4g
dG90YWxfcmVhZDsKIH0KKyNlbmRpZiAvLyBlbmQgbmV0ZnNsaWIgcmVtb3ZlIDQ2MzMKIAotLyoK
LSAqIElmIHRoZSBwYWdlIGlzIG1tYXAnZWQgaW50byBhIHByb2Nlc3MnIHBhZ2UgdGFibGVzLCB0
aGVuIHdlIG5lZWQgdG8gbWFrZQotICogc3VyZSB0aGF0IGl0IGRvZXNuJ3QgY2hhbmdlIHdoaWxl
IGJlaW5nIHdyaXR0ZW4gYmFjay4KLSAqLwogc3RhdGljIHZtX2ZhdWx0X3QgY2lmc19wYWdlX21r
d3JpdGUoc3RydWN0IHZtX2ZhdWx0ICp2bWYpCiB7Ci0Jc3RydWN0IGZvbGlvICpmb2xpbyA9IHBh
Z2VfZm9saW8odm1mLT5wYWdlKTsKLQotCS8qIFdhaXQgZm9yIHRoZSBmb2xpbyB0byBiZSB3cml0
dGVuIHRvIHRoZSBjYWNoZSBiZWZvcmUgd2UgYWxsb3cgaXQgdG8KLQkgKiBiZSBtb2RpZmllZC4g
IFdlIHRoZW4gYXNzdW1lIHRoZSBlbnRpcmUgZm9saW8gd2lsbCBuZWVkIHdyaXRpbmcgYmFjay4K
LQkgKi8KLSNpZmRlZiBDT05GSUdfQ0lGU19GU0NBQ0hFCi0JaWYgKGZvbGlvX3Rlc3RfZnNjYWNo
ZShmb2xpbykgJiYKLQkgICAgZm9saW9fd2FpdF9mc2NhY2hlX2tpbGxhYmxlKGZvbGlvKSA8IDAp
Ci0JCXJldHVybiBWTV9GQVVMVF9SRVRSWTsKLSNlbmRpZgotCi0JZm9saW9fd2FpdF93cml0ZWJh
Y2soZm9saW8pOwotCi0JaWYgKGZvbGlvX2xvY2tfa2lsbGFibGUoZm9saW8pIDwgMCkKLQkJcmV0
dXJuIFZNX0ZBVUxUX1JFVFJZOwotCXJldHVybiBWTV9GQVVMVF9MT0NLRUQ7CisJcmV0dXJuIG5l
dGZzX3BhZ2VfbWt3cml0ZSh2bWYsIE5VTEwpOwogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IHZt
X29wZXJhdGlvbnNfc3RydWN0IGNpZnNfZmlsZV92bV9vcHMgPSB7CkBAIC00ODIxLDYgKzQ4MzEs
NyBAQCBpbnQgY2lmc19maWxlX21tYXAoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCB2bV9hcmVh
X3N0cnVjdCAqdm1hKQogCXJldHVybiByYzsKIH0KIAorI2lmIDAgLy8gVE9ETyByZW1vdmUgNDc5
NAogLyoKICAqIFVubG9jayBhIGJ1bmNoIG9mIGZvbGlvcyBpbiB0aGUgcGFnZWNhY2hlLgogICov
CkBAIC01MTA1LDYgKzUxMTYsNyBAQCBzdGF0aWMgaW50IGNpZnNfcmVhZF9mb2xpbyhzdHJ1Y3Qg
ZmlsZSAqZmlsZSwgc3RydWN0IGZvbGlvICpmb2xpbykKIAlmcmVlX3hpZCh4aWQpOwogCXJldHVy
biByYzsKIH0KKyNlbmRpZiAvLyBlbmQgbmV0ZnNsaWIgcmVtb3ZlIDQ3OTQKIAogc3RhdGljIGlu
dCBpc19pbm9kZV93cml0YWJsZShzdHJ1Y3QgY2lmc0lub2RlSW5mbyAqY2lmc19pbm9kZSkKIHsK
QEAgLTUxNTEsNiArNTE2Myw3IEBAIGJvb2wgaXNfc2l6ZV9zYWZlX3RvX2NoYW5nZShzdHJ1Y3Qg
Y2lmc0lub2RlSW5mbyAqY2lmc0lub2RlLCBfX3U2NCBlbmRfb2ZfZmlsZSkKIAkJcmV0dXJuIHRy
dWU7CiB9CiAKKyNpZiAwIC8vIFRPRE8gcmVtb3ZlIDUxNTIKIHN0YXRpYyBpbnQgY2lmc193cml0
ZV9iZWdpbihzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcs
CiAJCQlsb2ZmX3QgcG9zLCB1bnNpZ25lZCBsZW4sCiAJCQlzdHJ1Y3QgcGFnZSAqKnBhZ2VwLCB2
b2lkICoqZnNkYXRhKQpAQCAtNTI2Nyw2ICs1MjgwLDcgQEAgc3RhdGljIGludCBjaWZzX2xhdW5k
ZXJfZm9saW8oc3RydWN0IGZvbGlvICpmb2xpbykKIAlmb2xpb193YWl0X2ZzY2FjaGUoZm9saW8p
OwogCXJldHVybiByYzsKIH0KKyNlbmRpZiAvLyBlbmQgbmV0ZnNsaWIgcmVtb3ZlIDUxNTIKIAog
dm9pZCBjaWZzX29wbG9ja19icmVhayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiB7CkBAIC01
MzU3LDYgKzUzNzEsNyBAQCB2b2lkIGNpZnNfb3Bsb2NrX2JyZWFrKHN0cnVjdCB3b3JrX3N0cnVj
dCAqd29yaykKIAljaWZzX2RvbmVfb3Bsb2NrX2JyZWFrKGNpbm9kZSk7CiB9CiAKKyNpZiAwIC8v
IFRPRE8gcmVtb3ZlIDUzMzMKIC8qCiAgKiBUaGUgcHJlc2VuY2Ugb2YgY2lmc19kaXJlY3RfaW8o
KSBpbiB0aGUgYWRkcmVzcyBzcGFjZSBvcHMgdmVjdG9yCiAgKiBhbGxvd2VzIG9wZW4oKSBPX0RJ
UkVDVCBmbGFncyB3aGljaCB3b3VsZCBoYXZlIGZhaWxlZCBvdGhlcndpc2UuCkBAIC01Mzc1LDYg
KzUzOTAsNyBAQCBjaWZzX2RpcmVjdF9pbyhzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3Zf
aXRlciAqaXRlcikKICAgICAgICAgICovCiAgICAgICAgIHJldHVybiAtRUlOVkFMOwogfQorI2Vu
ZGlmIC8vIG5ldGZzIGVuZCByZW1vdmUgNTMzMwogCiBzdGF0aWMgaW50IGNpZnNfc3dhcF9hY3Rp
dmF0ZShzdHJ1Y3Qgc3dhcF9pbmZvX3N0cnVjdCAqc2lzLAogCQkJICAgICAgc3RydWN0IGZpbGUg
KnN3YXBfZmlsZSwgc2VjdG9yX3QgKnNwYW4pCkBAIC01NDM3LDIyICs1NDUzLDIwIEBAIHN0YXRp
YyB2b2lkIGNpZnNfc3dhcF9kZWFjdGl2YXRlKHN0cnVjdCBmaWxlICpmaWxlKQogfQogCiBjb25z
dCBzdHJ1Y3QgYWRkcmVzc19zcGFjZV9vcGVyYXRpb25zIGNpZnNfYWRkcl9vcHMgPSB7Ci0JLnJl
YWRfZm9saW8gPSBjaWZzX3JlYWRfZm9saW8sCi0JLnJlYWRhaGVhZCA9IGNpZnNfcmVhZGFoZWFk
LAotCS53cml0ZXBhZ2VzID0gY2lmc193cml0ZXBhZ2VzLAotCS53cml0ZV9iZWdpbiA9IGNpZnNf
d3JpdGVfYmVnaW4sCi0JLndyaXRlX2VuZCA9IGNpZnNfd3JpdGVfZW5kLAotCS5kaXJ0eV9mb2xp
byA9IG5ldGZzX2RpcnR5X2ZvbGlvLAotCS5yZWxlYXNlX2ZvbGlvID0gY2lmc19yZWxlYXNlX2Zv
bGlvLAotCS5kaXJlY3RfSU8gPSBjaWZzX2RpcmVjdF9pbywKLQkuaW52YWxpZGF0ZV9mb2xpbyA9
IGNpZnNfaW52YWxpZGF0ZV9mb2xpbywKLQkubGF1bmRlcl9mb2xpbyA9IGNpZnNfbGF1bmRlcl9m
b2xpbywKLQkubWlncmF0ZV9mb2xpbyA9IGZpbGVtYXBfbWlncmF0ZV9mb2xpbywKKwkucmVhZF9m
b2xpbwk9IG5ldGZzX3JlYWRfZm9saW8sCisJLnJlYWRhaGVhZAk9IG5ldGZzX3JlYWRhaGVhZCwK
Kwkud3JpdGVwYWdlcwk9IG5ldGZzX3dyaXRlcGFnZXMsCisJLmRpcnR5X2ZvbGlvCT0gbmV0ZnNf
ZGlydHlfZm9saW8sCisJLnJlbGVhc2VfZm9saW8JPSBuZXRmc19yZWxlYXNlX2ZvbGlvLAorCS5k
aXJlY3RfSU8JPSBub29wX2RpcmVjdF9JTywKKwkuaW52YWxpZGF0ZV9mb2xpbyA9IG5ldGZzX2lu
dmFsaWRhdGVfZm9saW8sCisJLmxhdW5kZXJfZm9saW8JPSBuZXRmc19sYXVuZGVyX2ZvbGlvLAor
CS5taWdyYXRlX2ZvbGlvCT0gZmlsZW1hcF9taWdyYXRlX2ZvbGlvLAogCS8qCiAJICogVE9ETzog
aW52ZXN0aWdhdGUgYW5kIGlmIHVzZWZ1bCB3ZSBjb3VsZCBhZGQgYW4gaXNfZGlydHlfd3JpdGVi
YWNrCiAJICogaGVscGVyIGlmIG5lZWRlZAogCSAqLwotCS5zd2FwX2FjdGl2YXRlID0gY2lmc19z
d2FwX2FjdGl2YXRlLAorCS5zd2FwX2FjdGl2YXRlCT0gY2lmc19zd2FwX2FjdGl2YXRlLAogCS5z
d2FwX2RlYWN0aXZhdGUgPSBjaWZzX3N3YXBfZGVhY3RpdmF0ZSwKIH07CiAKQEAgLTU0NjIsMTMg
KzU0NzYsMTEgQEAgY29uc3Qgc3RydWN0IGFkZHJlc3Nfc3BhY2Vfb3BlcmF0aW9ucyBjaWZzX2Fk
ZHJfb3BzID0gewogICogdG8gbGVhdmUgY2lmc19yZWFkYWhlYWQgb3V0IG9mIHRoZSBhZGRyZXNz
IHNwYWNlIG9wZXJhdGlvbnMuCiAgKi8KIGNvbnN0IHN0cnVjdCBhZGRyZXNzX3NwYWNlX29wZXJh
dGlvbnMgY2lmc19hZGRyX29wc19zbWFsbGJ1ZiA9IHsKLQkucmVhZF9mb2xpbyA9IGNpZnNfcmVh
ZF9mb2xpbywKLQkud3JpdGVwYWdlcyA9IGNpZnNfd3JpdGVwYWdlcywKLQkud3JpdGVfYmVnaW4g
PSBjaWZzX3dyaXRlX2JlZ2luLAotCS53cml0ZV9lbmQgPSBjaWZzX3dyaXRlX2VuZCwKLQkuZGly
dHlfZm9saW8gPSBuZXRmc19kaXJ0eV9mb2xpbywKLQkucmVsZWFzZV9mb2xpbyA9IGNpZnNfcmVs
ZWFzZV9mb2xpbywKLQkuaW52YWxpZGF0ZV9mb2xpbyA9IGNpZnNfaW52YWxpZGF0ZV9mb2xpbywK
LQkubGF1bmRlcl9mb2xpbyA9IGNpZnNfbGF1bmRlcl9mb2xpbywKLQkubWlncmF0ZV9mb2xpbyA9
IGZpbGVtYXBfbWlncmF0ZV9mb2xpbywKKwkucmVhZF9mb2xpbwk9IG5ldGZzX3JlYWRfZm9saW8s
CisJLndyaXRlcGFnZXMJPSBuZXRmc193cml0ZXBhZ2VzLAorCS5kaXJ0eV9mb2xpbwk9IG5ldGZz
X2RpcnR5X2ZvbGlvLAorCS5yZWxlYXNlX2ZvbGlvCT0gbmV0ZnNfcmVsZWFzZV9mb2xpbywKKwku
aW52YWxpZGF0ZV9mb2xpbyA9IG5ldGZzX2ludmFsaWRhdGVfZm9saW8sCisJLmxhdW5kZXJfZm9s
aW8JPSBuZXRmc19sYXVuZGVyX2ZvbGlvLAorCS5taWdyYXRlX2ZvbGlvCT0gZmlsZW1hcF9taWdy
YXRlX2ZvbGlvLAogfTsKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvZnNjYWNoZS5jIGIvZnMv
c21iL2NsaWVudC9mc2NhY2hlLmMKaW5kZXggYzRhM2NiNzM2ODgxLi4yMjhmZTU3YmJkZTMgMTAw
NjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvZnNjYWNoZS5jCisrKyBiL2ZzL3NtYi9jbGllbnQvZnNj
YWNoZS5jCkBAIC0xMzcsNiArMTM3LDcgQEAgdm9pZCBjaWZzX2ZzY2FjaGVfcmVsZWFzZV9pbm9k
ZV9jb29raWUoc3RydWN0IGlub2RlICppbm9kZSkKIAl9CiB9CiAKKyNpZiAwIC8vIFRPRE8gcmVt
b3ZlCiAvKgogICogRmFsbGJhY2sgcGFnZSByZWFkaW5nIGludGVyZmFjZS4KICAqLwpAQCAtMjQ1
LDMgKzI0Niw0IEBAIGludCBfX2NpZnNfZnNjYWNoZV9xdWVyeV9vY2N1cGFuY3koc3RydWN0IGlu
b2RlICppbm9kZSwKIAlmc2NhY2hlX2VuZF9vcGVyYXRpb24oJmNyZXMpOwogCXJldHVybiByZXQ7
CiB9CisjZW5kaWYKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvZnNjYWNoZS5oIGIvZnMvc21i
L2NsaWVudC9mc2NhY2hlLmgKaW5kZXggYTNkNzM3MjA5MTRmLi5jMmMwNWE3NzhhNzEgMTAwNjQ0
Ci0tLSBhL2ZzL3NtYi9jbGllbnQvZnNjYWNoZS5oCisrKyBiL2ZzL3NtYi9jbGllbnQvZnNjYWNo
ZS5oCkBAIC03NCw2ICs3NCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBjaWZzX2ludmFsaWRhdGVf
Y2FjaGUoc3RydWN0IGlub2RlICppbm9kZSwgdW5zaWduZWQgaW50IGZsYWdzCiAJCQkgICBpX3Np
emVfcmVhZChpbm9kZSksIGZsYWdzKTsKIH0KIAorI2lmIDAgLy8gVE9ETyByZW1vdmUKIGV4dGVy
biBpbnQgX19jaWZzX2ZzY2FjaGVfcXVlcnlfb2NjdXBhbmN5KHN0cnVjdCBpbm9kZSAqaW5vZGUs
CiAJCQkJCSAgcGdvZmZfdCBmaXJzdCwgdW5zaWduZWQgaW50IG5yX3BhZ2VzLAogCQkJCQkgIHBn
b2ZmX3QgKl9kYXRhX2ZpcnN0LApAQCAtMTA4LDYgKzEwOSw3IEBAIHN0YXRpYyBpbmxpbmUgdm9p
ZCBjaWZzX3JlYWRhaGVhZF90b19mc2NhY2hlKHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJaWYgKGNp
ZnNfaW5vZGVfY29va2llKGlub2RlKSkKIAkJX19jaWZzX3JlYWRhaGVhZF90b19mc2NhY2hlKGlu
b2RlLCBwb3MsIGxlbik7CiB9CisjZW5kaWYKIAogI2Vsc2UgLyogQ09ORklHX0NJRlNfRlNDQUNI
RSAqLwogc3RhdGljIGlubGluZQpAQCAtMTI1LDYgKzEyNyw3IEBAIHN0YXRpYyBpbmxpbmUgdm9p
ZCBjaWZzX2ZzY2FjaGVfdW51c2VfaW5vZGVfY29va2llKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGJv
b2wgdXBkCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBmc2NhY2hlX2Nvb2tpZSAqY2lmc19pbm9kZV9j
b29raWUoc3RydWN0IGlub2RlICppbm9kZSkgeyByZXR1cm4gTlVMTDsgfQogc3RhdGljIGlubGlu
ZSB2b2lkIGNpZnNfaW52YWxpZGF0ZV9jYWNoZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCB1bnNpZ25l
ZCBpbnQgZmxhZ3MpIHt9CiAKKyNpZiAwIC8vIFRPRE8gcmVtb3ZlCiBzdGF0aWMgaW5saW5lIGlu
dCBjaWZzX2ZzY2FjaGVfcXVlcnlfb2NjdXBhbmN5KHN0cnVjdCBpbm9kZSAqaW5vZGUsCiAJCQkJ
CSAgICAgICBwZ29mZl90IGZpcnN0LCB1bnNpZ25lZCBpbnQgbnJfcGFnZXMsCiAJCQkJCSAgICAg
ICBwZ29mZl90ICpfZGF0YV9maXJzdCwKQEAgLTE0Myw2ICsxNDYsNyBAQCBjaWZzX3JlYWRwYWdl
X2Zyb21fZnNjYWNoZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgcGFnZSAqcGFnZSkKIAog
c3RhdGljIGlubGluZQogdm9pZCBjaWZzX3JlYWRhaGVhZF90b19mc2NhY2hlKHN0cnVjdCBpbm9k
ZSAqaW5vZGUsIGxvZmZfdCBwb3MsIHNpemVfdCBsZW4pIHt9CisjZW5kaWYKIAogI2VuZGlmIC8q
IENPTkZJR19DSUZTX0ZTQ0FDSEUgKi8KIApkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9pbm9k
ZS5jIGIvZnMvc21iL2NsaWVudC9pbm9kZS5jCmluZGV4IGQwMmY4YmEyOWNiNS4uNjY2YTUyNmZk
OTFhIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2lub2RlLmMKKysrIGIvZnMvc21iL2NsaWVu
dC9pbm9kZS5jCkBAIC0yNywxNCArMjcsMjkgQEAKICNpbmNsdWRlICJjaWZzX2lvY3RsLmgiCiAj
aW5jbHVkZSAiY2FjaGVkX2Rpci5oIgogCisvKgorICogU2V0IHBhcmFtZXRlcnMgZm9yIHRoZSBu
ZXRmcyBsaWJyYXJ5CisgKi8KK3N0YXRpYyB2b2lkIGNpZnNfc2V0X25ldGZzX2NvbnRleHQoc3Ry
dWN0IGlub2RlICppbm9kZSkKK3sKKwlzdHJ1Y3QgY2lmc0lub2RlSW5mbyAqY2lmc19pID0gQ0lG
U19JKGlub2RlKTsKKwlzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiID0gQ0lGU19TQihpbm9k
ZS0+aV9zYik7CisKKwluZXRmc19pbm9kZV9pbml0KCZjaWZzX2ktPm5ldGZzLCAmY2lmc19yZXFf
b3BzLCB0cnVlKTsKKwlpZiAoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX1NU
UklDVF9JTykKKwkJX19zZXRfYml0KE5FVEZTX0lDVFhfV1JJVEVUSFJPVUdILCAmY2lmc19pLT5u
ZXRmcy5mbGFncyk7Cit9CisKIHN0YXRpYyB2b2lkIGNpZnNfc2V0X29wcyhzdHJ1Y3QgaW5vZGUg
Kmlub2RlKQogewogCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IgPSBDSUZTX1NCKGlub2Rl
LT5pX3NiKTsKKwlzdHJ1Y3QgbmV0ZnNfaW5vZGUgKmljdHggPSBuZXRmc19pbm9kZShpbm9kZSk7
CiAKIAlzd2l0Y2ggKGlub2RlLT5pX21vZGUgJiBTX0lGTVQpIHsKIAljYXNlIFNfSUZSRUc6CiAJ
CWlub2RlLT5pX29wID0gJmNpZnNfZmlsZV9pbm9kZV9vcHM7CiAJCWlmIChjaWZzX3NiLT5tbnRf
Y2lmc19mbGFncyAmIENJRlNfTU9VTlRfRElSRUNUX0lPKSB7CisJCQlzZXRfYml0KE5FVEZTX0lD
VFhfVU5CVUZGRVJFRCwgJmljdHgtPmZsYWdzKTsKIAkJCWlmIChjaWZzX3NiLT5tbnRfY2lmc19m
bGFncyAmIENJRlNfTU9VTlRfTk9fQlJMKQogCQkJCWlub2RlLT5pX2ZvcCA9ICZjaWZzX2ZpbGVf
ZGlyZWN0X25vYnJsX29wczsKIAkJCWVsc2UKQEAgLTIxOSw4ICsyMzQsMTAgQEAgY2lmc19mYXR0
cl90b19pbm9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgY2lmc19mYXR0ciAqZmF0dHIp
CiAKIAlpZiAoZmF0dHItPmNmX2ZsYWdzICYgQ0lGU19GQVRUUl9KVU5DVElPTikKIAkJaW5vZGUt
PmlfZmxhZ3MgfD0gU19BVVRPTU9VTlQ7Ci0JaWYgKGlub2RlLT5pX3N0YXRlICYgSV9ORVcpCisJ
aWYgKGlub2RlLT5pX3N0YXRlICYgSV9ORVcpIHsKKwkJY2lmc19zZXRfbmV0ZnNfY29udGV4dChp
bm9kZSk7CiAJCWNpZnNfc2V0X29wcyhpbm9kZSk7CisJfQogCXJldHVybiAwOwogfQogCmRpZmYg
LS1naXQgYS9mcy9zbWIvY2xpZW50L3NtYjJwZHUuYyBiL2ZzL3NtYi9jbGllbnQvc21iMnBkdS5j
CmluZGV4IDJjOWQ2ZTViZWZhZi4uNjgwMDFlOTljZGU0IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xp
ZW50L3NtYjJwZHUuYworKysgYi9mcy9zbWIvY2xpZW50L3NtYjJwZHUuYwpAQCAtNDI1OCwxMCAr
NDI1OCwxMiBAQCBzbWIyX25ld19yZWFkX3JlcSh2b2lkICoqYnVmLCB1bnNpZ25lZCBpbnQgKnRv
dGFsX2xlbiwKIAlyZXEtPkxlbmd0aCA9IGNwdV90b19sZTMyKGlvX3Bhcm1zLT5sZW5ndGgpOwog
CXJlcS0+T2Zmc2V0ID0gY3B1X3RvX2xlNjQoaW9fcGFybXMtPm9mZnNldCk7CiAKLQl0cmFjZV9z
bWIzX3JlYWRfZW50ZXIoMCAvKiB4aWQgKi8sCi0JCQlpb19wYXJtcy0+cGVyc2lzdGVudF9maWQs
Ci0JCQlpb19wYXJtcy0+dGNvbi0+dGlkLCBpb19wYXJtcy0+dGNvbi0+c2VzLT5TdWlkLAotCQkJ
aW9fcGFybXMtPm9mZnNldCwgaW9fcGFybXMtPmxlbmd0aCk7CisJdHJhY2Vfc21iM19yZWFkX2Vu
dGVyKHJkYXRhID8gcmRhdGEtPnJyZXEtPmRlYnVnX2lkIDogMCwKKwkJCSAgICAgIHJkYXRhID8g
cmRhdGEtPnN1YnJlcS5kZWJ1Z19pbmRleCA6IDAsCisJCQkgICAgICByZGF0YSA/IHJkYXRhLT54
aWQgOiAwLAorCQkJICAgICAgaW9fcGFybXMtPnBlcnNpc3RlbnRfZmlkLAorCQkJICAgICAgaW9f
cGFybXMtPnRjb24tPnRpZCwgaW9fcGFybXMtPnRjb24tPnNlcy0+U3VpZCwKKwkJCSAgICAgIGlv
X3Bhcm1zLT5vZmZzZXQsIGlvX3Bhcm1zLT5sZW5ndGgpOwogI2lmZGVmIENPTkZJR19DSUZTX1NN
Ql9ESVJFQ1QKIAkvKgogCSAqIElmIHdlIHdhbnQgdG8gZG8gYSBSRE1BIHdyaXRlLCBmaWxsIGlu
IGFuZCBhcHBlbmQKQEAgLTQzMjMsNyArNDMyNSw3IEBAIHN0YXRpYyB2b2lkCiBzbWIyX3JlYWR2
X2NhbGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogewogCXN0cnVjdCBjaWZzX2lvX3N1
YnJlcXVlc3QgKnJkYXRhID0gbWlkLT5jYWxsYmFja19kYXRhOwotCXN0cnVjdCBjaWZzX3Rjb24g
KnRjb24gPSB0bGlua190Y29uKHJkYXRhLT5jZmlsZS0+dGxpbmspOworCXN0cnVjdCBjaWZzX3Rj
b24gKnRjb24gPSB0bGlua190Y29uKHJkYXRhLT5yZXEtPmNmaWxlLT50bGluayk7CiAJc3RydWN0
IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyID0gcmRhdGEtPnNlcnZlcjsKIAlzdHJ1Y3Qgc21iMl9o
ZHIgKnNoZHIgPQogCQkJCShzdHJ1Y3Qgc21iMl9oZHIgKilyZGF0YS0+aW92WzBdLmlvdl9iYXNl
OwpAQCAtNDM5MywxNyArNDM5NSwzMyBAQCBzbWIyX3JlYWR2X2NhbGxiYWNrKHN0cnVjdCBtaWRf
cV9lbnRyeSAqbWlkKQogI2VuZGlmCiAJaWYgKHJkYXRhLT5yZXN1bHQgJiYgcmRhdGEtPnJlc3Vs
dCAhPSAtRU5PREFUQSkgewogCQljaWZzX3N0YXRzX2ZhaWxfaW5jKHRjb24sIFNNQjJfUkVBRF9I
RSk7Ci0JCXRyYWNlX3NtYjNfcmVhZF9lcnIoMCAvKiB4aWQgKi8sCi0JCQkJICAgIHJkYXRhLT5j
ZmlsZS0+ZmlkLnBlcnNpc3RlbnRfZmlkLAorCQl0cmFjZV9zbWIzX3JlYWRfZXJyKHJkYXRhLT5y
cmVxLT5kZWJ1Z19pZCwKKwkJCQkgICAgcmRhdGEtPnN1YnJlcS5kZWJ1Z19pbmRleCwKKwkJCQkg
ICAgcmRhdGEtPnhpZCwKKwkJCQkgICAgcmRhdGEtPnJlcS0+Y2ZpbGUtPmZpZC5wZXJzaXN0ZW50
X2ZpZCwKIAkJCQkgICAgdGNvbi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsIHJkYXRhLT5zdWJyZXEu
c3RhcnQsCiAJCQkJICAgIHJkYXRhLT5zdWJyZXEubGVuLCByZGF0YS0+cmVzdWx0KTsKIAl9IGVs
c2UKLQkJdHJhY2Vfc21iM19yZWFkX2RvbmUoMCAvKiB4aWQgKi8sCi0JCQkJICAgICByZGF0YS0+
Y2ZpbGUtPmZpZC5wZXJzaXN0ZW50X2ZpZCwKKwkJdHJhY2Vfc21iM19yZWFkX2RvbmUocmRhdGEt
PnJyZXEtPmRlYnVnX2lkLAorCQkJCSAgICAgcmRhdGEtPnN1YnJlcS5kZWJ1Z19pbmRleCwKKwkJ
CQkgICAgIHJkYXRhLT54aWQsCisJCQkJICAgICByZGF0YS0+cmVxLT5jZmlsZS0+ZmlkLnBlcnNp
c3RlbnRfZmlkLAogCQkJCSAgICAgdGNvbi0+dGlkLCB0Y29uLT5zZXMtPlN1aWQsCiAJCQkJICAg
ICByZGF0YS0+c3VicmVxLnN0YXJ0LCByZGF0YS0+Z290X2J5dGVzKTsKIAotCXF1ZXVlX3dvcmso
Y2lmc2lvZF93cSwgJnJkYXRhLT53b3JrKTsKKwlpZiAocmRhdGEtPnJlc3VsdCA9PSAtRU5PREFU
QSkgeworCQkvKiBXZSBtYXkgaGF2ZSBnb3QgYW4gRU9GIGVycm9yIGJlY2F1c2UgZmFsbG9jYXRl
CisJCSAqIGZhaWxlZCB0byBlbmxhcmdlIHRoZSBmaWxlLgorCQkgKi8KKwkJaWYgKHJkYXRhLT5z
dWJyZXEuc3RhcnQgPCByZGF0YS0+c3VicmVxLnJyZXEtPmlfc2l6ZSkKKwkJCXJkYXRhLT5yZXN1
bHQgPSAwOworCX0KKwlpZiAocmRhdGEtPnJlc3VsdCA9PSAwIHx8IHJkYXRhLT5yZXN1bHQgPT0g
LUVBR0FJTikKKwkJaW92X2l0ZXJfYWR2YW5jZSgmcmRhdGEtPnN1YnJlcS5pb19pdGVyLCByZGF0
YS0+Z290X2J5dGVzKTsKKwlyZGF0YS0+aGF2ZV9jcmVkaXRzID0gZmFsc2U7CisJbmV0ZnNfc3Vi
cmVxX3Rlcm1pbmF0ZWQoJnJkYXRhLT5zdWJyZXEsCisJCQkJKHJkYXRhLT5yZXN1bHQgPT0gMCB8
fCByZGF0YS0+cmVzdWx0ID09IC1FQUdBSU4pID8KKwkJCQlyZGF0YS0+Z290X2J5dGVzIDogcmRh
dGEtPnJlc3VsdCwgdHJ1ZSk7CiAJcmVsZWFzZV9taWQobWlkKTsKIAlhZGRfY3JlZGl0cyhzZXJ2
ZXIsICZjcmVkaXRzLCAwKTsKIH0KQEAgLTQ0MTksNyArNDQzNyw3IEBAIHNtYjJfYXN5bmNfcmVh
ZHYoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGEpCiAJc3RydWN0IHNtYl9ycXN0IHJx
c3QgPSB7IC5ycV9pb3YgPSByZGF0YS0+aW92LAogCQkJCSAucnFfbnZlYyA9IDEgfTsKIAlzdHJ1
Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXI7Ci0Jc3RydWN0IGNpZnNfdGNvbiAqdGNvbiA9IHRs
aW5rX3Rjb24ocmRhdGEtPmNmaWxlLT50bGluayk7CisJc3RydWN0IGNpZnNfdGNvbiAqdGNvbiA9
IHRsaW5rX3Rjb24ocmRhdGEtPnJlcS0+Y2ZpbGUtPnRsaW5rKTsKIAl1bnNpZ25lZCBpbnQgdG90
YWxfbGVuOwogCWludCBjcmVkaXRfcmVxdWVzdDsKIApAQCAtNDQyOSwxMiArNDQ0NywxMiBAQCBz
bWIyX2FzeW5jX3JlYWR2KHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhKQogCWlmICgh
cmRhdGEtPnNlcnZlcikKIAkJcmRhdGEtPnNlcnZlciA9IGNpZnNfcGlja19jaGFubmVsKHRjb24t
PnNlcyk7CiAKLQlpb19wYXJtcy50Y29uID0gdGxpbmtfdGNvbihyZGF0YS0+Y2ZpbGUtPnRsaW5r
KTsKKwlpb19wYXJtcy50Y29uID0gdGxpbmtfdGNvbihyZGF0YS0+cmVxLT5jZmlsZS0+dGxpbmsp
OwogCWlvX3Bhcm1zLnNlcnZlciA9IHNlcnZlciA9IHJkYXRhLT5zZXJ2ZXI7CiAJaW9fcGFybXMu
b2Zmc2V0ID0gcmRhdGEtPnN1YnJlcS5zdGFydDsKIAlpb19wYXJtcy5sZW5ndGggPSByZGF0YS0+
c3VicmVxLmxlbjsKLQlpb19wYXJtcy5wZXJzaXN0ZW50X2ZpZCA9IHJkYXRhLT5jZmlsZS0+Zmlk
LnBlcnNpc3RlbnRfZmlkOwotCWlvX3Bhcm1zLnZvbGF0aWxlX2ZpZCA9IHJkYXRhLT5jZmlsZS0+
ZmlkLnZvbGF0aWxlX2ZpZDsKKwlpb19wYXJtcy5wZXJzaXN0ZW50X2ZpZCA9IHJkYXRhLT5yZXEt
PmNmaWxlLT5maWQucGVyc2lzdGVudF9maWQ7CisJaW9fcGFybXMudm9sYXRpbGVfZmlkID0gcmRh
dGEtPnJlcS0+Y2ZpbGUtPmZpZC52b2xhdGlsZV9maWQ7CiAJaW9fcGFybXMucGlkID0gcmRhdGEt
PnBpZDsKIAogCXJjID0gc21iMl9uZXdfcmVhZF9yZXEoCkBAIC00NDc0LDcgKzQ0OTIsOSBAQCBz
bWIyX2FzeW5jX3JlYWR2KHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhKQogCQkJICAg
ICAmcmRhdGEtPmNyZWRpdHMpOwogCWlmIChyYykgewogCQljaWZzX3N0YXRzX2ZhaWxfaW5jKGlv
X3Bhcm1zLnRjb24sIFNNQjJfUkVBRF9IRSk7Ci0JCXRyYWNlX3NtYjNfcmVhZF9lcnIoMCAvKiB4
aWQgKi8sIGlvX3Bhcm1zLnBlcnNpc3RlbnRfZmlkLAorCQl0cmFjZV9zbWIzX3JlYWRfZXJyKHJk
YXRhLT5ycmVxLT5kZWJ1Z19pZCwKKwkJCQkgICAgcmRhdGEtPnN1YnJlcS5kZWJ1Z19pbmRleCwK
KwkJCQkgICAgcmRhdGEtPnhpZCwgaW9fcGFybXMucGVyc2lzdGVudF9maWQsCiAJCQkJICAgIGlv
X3Bhcm1zLnRjb24tPnRpZCwKIAkJCQkgICAgaW9fcGFybXMudGNvbi0+c2VzLT5TdWlkLAogCQkJ
CSAgICBpb19wYXJtcy5vZmZzZXQsIGlvX3Bhcm1zLmxlbmd0aCwgcmMpOwpAQCAtNDUyNSwyMiAr
NDU0NSwyMyBAQCBTTUIyX3JlYWQoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNf
aW9fcGFybXMgKmlvX3Bhcm1zLAogCQlpZiAocmMgIT0gLUVOT0RBVEEpIHsKIAkJCWNpZnNfc3Rh
dHNfZmFpbF9pbmMoaW9fcGFybXMtPnRjb24sIFNNQjJfUkVBRF9IRSk7CiAJCQljaWZzX2RiZyhW
RlMsICJTZW5kIGVycm9yIGluIHJlYWQgPSAlZFxuIiwgcmMpOwotCQkJdHJhY2Vfc21iM19yZWFk
X2Vycih4aWQsCisJCQl0cmFjZV9zbWIzX3JlYWRfZXJyKDAsIDAsIHhpZCwKIAkJCQkJICAgIHJl
cS0+UGVyc2lzdGVudEZpbGVJZCwKIAkJCQkJICAgIGlvX3Bhcm1zLT50Y29uLT50aWQsIHNlcy0+
U3VpZCwKIAkJCQkJICAgIGlvX3Bhcm1zLT5vZmZzZXQsIGlvX3Bhcm1zLT5sZW5ndGgsCiAJCQkJ
CSAgICByYyk7CiAJCX0gZWxzZQotCQkJdHJhY2Vfc21iM19yZWFkX2RvbmUoeGlkLCByZXEtPlBl
cnNpc3RlbnRGaWxlSWQsIGlvX3Bhcm1zLT50Y29uLT50aWQsCisJCQl0cmFjZV9zbWIzX3JlYWRf
ZG9uZSgwLCAwLCB4aWQsCisJCQkJCSAgICAgcmVxLT5QZXJzaXN0ZW50RmlsZUlkLCBpb19wYXJt
cy0+dGNvbi0+dGlkLAogCQkJCQkgICAgIHNlcy0+U3VpZCwgaW9fcGFybXMtPm9mZnNldCwgMCk7
CiAJCWZyZWVfcnNwX2J1ZihyZXNwX2J1ZnR5cGUsIHJzcF9pb3YuaW92X2Jhc2UpOwogCQljaWZz
X3NtYWxsX2J1Zl9yZWxlYXNlKHJlcSk7CiAJCXJldHVybiByYyA9PSAtRU5PREFUQSA/IDAgOiBy
YzsKIAl9IGVsc2UKLQkJdHJhY2Vfc21iM19yZWFkX2RvbmUoeGlkLAotCQkJCSAgICByZXEtPlBl
cnNpc3RlbnRGaWxlSWQsCi0JCQkJICAgIGlvX3Bhcm1zLT50Y29uLT50aWQsIHNlcy0+U3VpZCwK
LQkJCQkgICAgaW9fcGFybXMtPm9mZnNldCwgaW9fcGFybXMtPmxlbmd0aCk7CisJCXRyYWNlX3Nt
YjNfcmVhZF9kb25lKDAsIDAsIHhpZCwKKwkJCQkgICAgIHJlcS0+UGVyc2lzdGVudEZpbGVJZCwK
KwkJCQkgICAgIGlvX3Bhcm1zLT50Y29uLT50aWQsIHNlcy0+U3VpZCwKKwkJCQkgICAgIGlvX3Bh
cm1zLT5vZmZzZXQsIGlvX3Bhcm1zLT5sZW5ndGgpOwogCiAJY2lmc19zbWFsbF9idWZfcmVsZWFz
ZShyZXEpOwogCkBAIC00NTc0LDExICs0NTk1LDEyIEBAIHN0YXRpYyB2b2lkCiBzbWIyX3dyaXRl
dl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIHsKIAlzdHJ1Y3QgY2lmc19pb19z
dWJyZXF1ZXN0ICp3ZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKLQlzdHJ1Y3QgY2lmc190Y29u
ICp0Y29uID0gdGxpbmtfdGNvbih3ZGF0YS0+Y2ZpbGUtPnRsaW5rKTsKKwlzdHJ1Y3QgY2lmc190
Y29uICp0Y29uID0gdGxpbmtfdGNvbih3ZGF0YS0+cmVxLT5jZmlsZS0+dGxpbmspOwogCXN0cnVj
dCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciA9IHdkYXRhLT5zZXJ2ZXI7Ci0JdW5zaWduZWQgaW50
IHdyaXR0ZW47CiAJc3RydWN0IHNtYjJfd3JpdGVfcnNwICpyc3AgPSAoc3RydWN0IHNtYjJfd3Jp
dGVfcnNwICopbWlkLT5yZXNwX2J1ZjsKIAlzdHJ1Y3QgY2lmc19jcmVkaXRzIGNyZWRpdHMgPSB7
IC52YWx1ZSA9IDAsIC5pbnN0YW5jZSA9IDAgfTsKKwlzc2l6ZV90IHJlc3VsdCA9IDA7CisJc2l6
ZV90IHdyaXR0ZW47CiAKIAlXQVJOX09OQ0Uod2RhdGEtPnNlcnZlciAhPSBtaWQtPnNlcnZlciwK
IAkJICAid2RhdGEgc2VydmVyICVwICE9IG1pZCBzZXJ2ZXIgJXAiLApAQCAtNDU4OCw4ICs0NjEw
LDggQEAgc21iMl93cml0ZXZfY2FsbGJhY2soc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpCiAJY2Fz
ZSBNSURfUkVTUE9OU0VfUkVDRUlWRUQ6CiAJCWNyZWRpdHMudmFsdWUgPSBsZTE2X3RvX2NwdShy
c3AtPmhkci5DcmVkaXRSZXF1ZXN0KTsKIAkJY3JlZGl0cy5pbnN0YW5jZSA9IHNlcnZlci0+cmVj
b25uZWN0X2luc3RhbmNlOwotCQl3ZGF0YS0+cmVzdWx0ID0gc21iMl9jaGVja19yZWNlaXZlKG1p
ZCwgc2VydmVyLCAwKTsKLQkJaWYgKHdkYXRhLT5yZXN1bHQgIT0gMCkKKwkJcmVzdWx0ID0gc21i
Ml9jaGVja19yZWNlaXZlKG1pZCwgc2VydmVyLCAwKTsKKwkJaWYgKHJlc3VsdCAhPSAwKQogCQkJ
YnJlYWs7CiAKIAkJd3JpdHRlbiA9IGxlMzJfdG9fY3B1KHJzcC0+RGF0YUxlbmd0aCk7CkBAIC00
NjA2LDE3ICs0NjI4LDE4IEBAIHNtYjJfd3JpdGV2X2NhbGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRy
eSAqbWlkKQogCQkJd2RhdGEtPnJlc3VsdCA9IC1FTk9TUEM7CiAJCWVsc2UKIAkJCXdkYXRhLT5z
dWJyZXEubGVuID0gd3JpdHRlbjsKKwkJaW92X2l0ZXJfYWR2YW5jZSgmd2RhdGEtPnN1YnJlcS5p
b19pdGVyLCB3cml0dGVuKTsKIAkJYnJlYWs7CiAJY2FzZSBNSURfUkVRVUVTVF9TVUJNSVRURUQ6
CiAJY2FzZSBNSURfUkVUUllfTkVFREVEOgotCQl3ZGF0YS0+cmVzdWx0ID0gLUVBR0FJTjsKKwkJ
cmVzdWx0ID0gLUVBR0FJTjsKIAkJYnJlYWs7CiAJY2FzZSBNSURfUkVTUE9OU0VfTUFMRk9STUVE
OgogCQljcmVkaXRzLnZhbHVlID0gbGUxNl90b19jcHUocnNwLT5oZHIuQ3JlZGl0UmVxdWVzdCk7
CiAJCWNyZWRpdHMuaW5zdGFuY2UgPSBzZXJ2ZXItPnJlY29ubmVjdF9pbnN0YW5jZTsKIAkJZmFs
bHRocm91Z2g7CiAJZGVmYXVsdDoKLQkJd2RhdGEtPnJlc3VsdCA9IC1FSU87CisJCXJlc3VsdCA9
IC1FSU87CiAJCWJyZWFrOwogCX0KICNpZmRlZiBDT05GSUdfQ0lGU19TTUJfRElSRUNUCkBAIC00
NjMyLDEwICs0NjU1LDEwIEBAIHNtYjJfd3JpdGV2X2NhbGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRy
eSAqbWlkKQogCQl3ZGF0YS0+bXIgPSBOVUxMOwogCX0KICNlbmRpZgotCWlmICh3ZGF0YS0+cmVz
dWx0KSB7CisJaWYgKHJlc3VsdCkgewogCQljaWZzX3N0YXRzX2ZhaWxfaW5jKHRjb24sIFNNQjJf
V1JJVEVfSEUpOwogCQl0cmFjZV9zbWIzX3dyaXRlX2VycigwIC8qIG5vIHhpZCAqLywKLQkJCQkg
ICAgIHdkYXRhLT5jZmlsZS0+ZmlkLnBlcnNpc3RlbnRfZmlkLAorCQkJCSAgICAgd2RhdGEtPnJl
cS0+Y2ZpbGUtPmZpZC5wZXJzaXN0ZW50X2ZpZCwKIAkJCQkgICAgIHRjb24tPnRpZCwgdGNvbi0+
c2VzLT5TdWlkLCB3ZGF0YS0+c3VicmVxLnN0YXJ0LAogCQkJCSAgICAgd2RhdGEtPnN1YnJlcS5s
ZW4sIHdkYXRhLT5yZXN1bHQpOwogCQlpZiAod2RhdGEtPnJlc3VsdCA9PSAtRU5PU1BDKQpAQCAt
NDY0MywxMSArNDY2NiwxMSBAQCBzbWIyX3dyaXRldl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50
cnkgKm1pZCkKIAkJCQkgICAgIHRjb24tPnRyZWVfbmFtZSk7CiAJfSBlbHNlCiAJCXRyYWNlX3Nt
YjNfd3JpdGVfZG9uZSgwIC8qIG5vIHhpZCAqLywKLQkJCQkgICAgICB3ZGF0YS0+Y2ZpbGUtPmZp
ZC5wZXJzaXN0ZW50X2ZpZCwKKwkJCQkgICAgICB3ZGF0YS0+cmVxLT5jZmlsZS0+ZmlkLnBlcnNp
c3RlbnRfZmlkLAogCQkJCSAgICAgIHRjb24tPnRpZCwgdGNvbi0+c2VzLT5TdWlkLAogCQkJCSAg
ICAgIHdkYXRhLT5zdWJyZXEuc3RhcnQsIHdkYXRhLT5zdWJyZXEubGVuKTsKIAotCXF1ZXVlX3dv
cmsoY2lmc2lvZF93cSwgJndkYXRhLT53b3JrKTsKKwljaWZzX3dyaXRlX3N1YnJlcXVlc3RfdGVy
bWluYXRlZCh3ZGF0YSwgcmVzdWx0ID86IHdyaXR0ZW4sIHRydWUpOwogCXJlbGVhc2VfbWlkKG1p
ZCk7CiAJYWRkX2NyZWRpdHMoc2VydmVyLCAmY3JlZGl0cywgMCk7CiB9CkBAIC00NjU5LDcgKzQ2
ODIsNyBAQCBzbWIyX2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0
YSkKIAlpbnQgcmMgPSAtRUFDQ0VTLCBmbGFncyA9IDA7CiAJc3RydWN0IHNtYjJfd3JpdGVfcmVx
ICpyZXEgPSBOVUxMOwogCXN0cnVjdCBzbWIyX2hkciAqc2hkcjsKLQlzdHJ1Y3QgY2lmc190Y29u
ICp0Y29uID0gdGxpbmtfdGNvbih3ZGF0YS0+Y2ZpbGUtPnRsaW5rKTsKKwlzdHJ1Y3QgY2lmc190
Y29uICp0Y29uID0gdGxpbmtfdGNvbih3ZGF0YS0+cmVxLT5jZmlsZS0+dGxpbmspOwogCXN0cnVj
dCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciA9IHdkYXRhLT5zZXJ2ZXI7CiAJc3RydWN0IGt2ZWMg
aW92WzFdOwogCXN0cnVjdCBzbWJfcnFzdCBycXN0ID0geyB9OwpAQCAtNDY4MCw4ICs0NzAzLDgg
QEAgc21iMl9hc3luY193cml0ZXYoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGEpCiAJ
CS5zZXJ2ZXIgPSBzZXJ2ZXIsCiAJCS5vZmZzZXQgPSB3ZGF0YS0+c3VicmVxLnN0YXJ0LAogCQku
bGVuZ3RoID0gd2RhdGEtPnN1YnJlcS5sZW4sCi0JCS5wZXJzaXN0ZW50X2ZpZCA9IHdkYXRhLT5j
ZmlsZS0+ZmlkLnBlcnNpc3RlbnRfZmlkLAotCQkudm9sYXRpbGVfZmlkID0gd2RhdGEtPmNmaWxl
LT5maWQudm9sYXRpbGVfZmlkLAorCQkucGVyc2lzdGVudF9maWQgPSB3ZGF0YS0+cmVxLT5jZmls
ZS0+ZmlkLnBlcnNpc3RlbnRfZmlkLAorCQkudm9sYXRpbGVfZmlkID0gd2RhdGEtPnJlcS0+Y2Zp
bGUtPmZpZC52b2xhdGlsZV9maWQsCiAJCS5waWQgPSB3ZGF0YS0+cGlkLAogCX07CiAJaW9fcGFy
bXMgPSAmX2lvX3Bhcm1zOwpAQCAtNDY4OSw3ICs0NzEyLDcgQEAgc21iMl9hc3luY193cml0ZXYo
c3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGEpCiAJcmMgPSBzbWIyX3BsYWluX3JlcV9p
bml0KFNNQjJfV1JJVEUsIHRjb24sIHNlcnZlciwKIAkJCQkgKHZvaWQgKiopICZyZXEsICZ0b3Rh
bF9sZW4pOwogCWlmIChyYykKLQkJcmV0dXJuIHJjOworCQlnb3RvIG91dDsKIAogCWlmIChzbWIz
X2VuY3J5cHRpb25fcmVxdWlyZWQodGNvbikpCiAJCWZsYWdzIHw9IENJRlNfVFJBTlNGT1JNX1JF
UTsKQEAgLTQ3ODYsNyArNDgwOSw2IEBAIHNtYjJfYXN5bmNfd3JpdGV2KHN0cnVjdCBjaWZzX2lv
X3N1YnJlcXVlc3QgKndkYXRhKQogCQlmbGFncyB8PSBDSUZTX0hBU19DUkVESVRTOwogCX0KIAot
CWNpZnNfZ2V0X3dyaXRlZGF0YSh3ZGF0YSk7CiAJcmMgPSBjaWZzX2NhbGxfYXN5bmMoc2VydmVy
LCAmcnFzdCwgTlVMTCwgc21iMl93cml0ZXZfY2FsbGJhY2ssIE5VTEwsCiAJCQkgICAgIHdkYXRh
LCBmbGFncywgJndkYXRhLT5jcmVkaXRzKTsKIApAQCAtNDc5OCwxMiArNDgyMCwxNCBAQCBzbWIy
X2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSkKIAkJCQkgICAg
IGlvX3Bhcm1zLT5vZmZzZXQsCiAJCQkJICAgICBpb19wYXJtcy0+bGVuZ3RoLAogCQkJCSAgICAg
cmMpOwotCQljaWZzX3B1dF93cml0ZWRhdGEod2RhdGEpOwogCQljaWZzX3N0YXRzX2ZhaWxfaW5j
KHRjb24sIFNNQjJfV1JJVEVfSEUpOwogCX0KIAogYXN5bmNfd3JpdGV2X291dDoKIAljaWZzX3Nt
YWxsX2J1Zl9yZWxlYXNlKHJlcSk7CitvdXQ6CisJaWYgKHJjKQorCQljaWZzX3dyaXRlX3N1YnJl
cXVlc3RfdGVybWluYXRlZCh3ZGF0YSwgcmMsIHRydWUpOwogCXJldHVybiByYzsKIH0KIApkaWZm
IC0tZ2l0IGEvZnMvc21iL2NsaWVudC90cmFjZS5oIGIvZnMvc21iL2NsaWVudC90cmFjZS5oCmlu
ZGV4IDUyMmZhMzg3ZmNmZC4uYjdhYTVlOTM1YjIwIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50
L3RyYWNlLmgKKysrIGIvZnMvc21iL2NsaWVudC90cmFjZS5oCkBAIC0yMSw2ICsyMSw2MiBAQAog
CiAvKiBGb3IgbG9nZ2luZyBlcnJvcnMgaW4gcmVhZCBvciB3cml0ZSAqLwogREVDTEFSRV9FVkVO
VF9DTEFTUyhzbWIzX3J3X2Vycl9jbGFzcywKKwlUUF9QUk9UTyh1bnNpZ25lZCBpbnQgcnJlcV9k
ZWJ1Z19pZCwKKwkJIHVuc2lnbmVkIGludCBycmVxX2RlYnVnX2luZGV4LAorCQkgdW5zaWduZWQg
aW50IHhpZCwKKwkJIF9fdTY0CWZpZCwKKwkJIF9fdTMyCXRpZCwKKwkJIF9fdTY0CXNlc2lkLAor
CQkgX191NjQJb2Zmc2V0LAorCQkgX191MzIJbGVuLAorCQkgaW50CXJjKSwKKwlUUF9BUkdTKHJy
ZXFfZGVidWdfaWQsIHJyZXFfZGVidWdfaW5kZXgsCisJCXhpZCwgZmlkLCB0aWQsIHNlc2lkLCBv
ZmZzZXQsIGxlbiwgcmMpLAorCVRQX1NUUlVDVF9fZW50cnkoCisJCV9fZmllbGQodW5zaWduZWQg
aW50LCBycmVxX2RlYnVnX2lkKQorCQlfX2ZpZWxkKHVuc2lnbmVkIGludCwgcnJlcV9kZWJ1Z19p
bmRleCkKKwkJX19maWVsZCh1bnNpZ25lZCBpbnQsIHhpZCkKKwkJX19maWVsZChfX3U2NCwgZmlk
KQorCQlfX2ZpZWxkKF9fdTMyLCB0aWQpCisJCV9fZmllbGQoX191NjQsIHNlc2lkKQorCQlfX2Zp
ZWxkKF9fdTY0LCBvZmZzZXQpCisJCV9fZmllbGQoX191MzIsIGxlbikKKwkJX19maWVsZChpbnQs
IHJjKQorCSksCisJVFBfZmFzdF9hc3NpZ24oCisJCV9fZW50cnktPnJyZXFfZGVidWdfaWQgPSBy
cmVxX2RlYnVnX2lkOworCQlfX2VudHJ5LT5ycmVxX2RlYnVnX2luZGV4ID0gcnJlcV9kZWJ1Z19p
bmRleDsKKwkJX19lbnRyeS0+eGlkID0geGlkOworCQlfX2VudHJ5LT5maWQgPSBmaWQ7CisJCV9f
ZW50cnktPnRpZCA9IHRpZDsKKwkJX19lbnRyeS0+c2VzaWQgPSBzZXNpZDsKKwkJX19lbnRyeS0+
b2Zmc2V0ID0gb2Zmc2V0OworCQlfX2VudHJ5LT5sZW4gPSBsZW47CisJCV9fZW50cnktPnJjID0g
cmM7CisJKSwKKwlUUF9wcmludGsoIlx0Uj0lMDh4WyV4XSB4aWQ9JXUgc2lkPTB4JWxseCB0aWQ9
MHgleCBmaWQ9MHglbGx4IG9mZnNldD0weCVsbHggbGVuPTB4JXggcmM9JWQiLAorCQkgIF9fZW50
cnktPnJyZXFfZGVidWdfaWQsIF9fZW50cnktPnJyZXFfZGVidWdfaW5kZXgsCisJCSAgX19lbnRy
eS0+eGlkLCBfX2VudHJ5LT5zZXNpZCwgX19lbnRyeS0+dGlkLCBfX2VudHJ5LT5maWQsCisJCSAg
X19lbnRyeS0+b2Zmc2V0LCBfX2VudHJ5LT5sZW4sIF9fZW50cnktPnJjKQorKQorCisjZGVmaW5l
IERFRklORV9TTUIzX1JXX0VSUl9FVkVOVChuYW1lKSAgICAgICAgICBcCitERUZJTkVfRVZFTlQo
c21iM19yd19lcnJfY2xhc3MsIHNtYjNfIyNuYW1lLCAgICBcCisJVFBfUFJPVE8odW5zaWduZWQg
aW50IHJyZXFfZGVidWdfaWQsCVwKKwkJIHVuc2lnbmVkIGludCBycmVxX2RlYnVnX2luZGV4LAkJ
XAorCQkgdW5zaWduZWQgaW50IHhpZCwJCQlcCisJCSBfX3U2NAlmaWQsCQkJCVwKKwkJIF9fdTMy
CXRpZCwJCQkJXAorCQkgX191NjQJc2VzaWQsCQkJCVwKKwkJIF9fdTY0CW9mZnNldCwJCQkJXAor
CQkgX191MzIJbGVuLAkJCQlcCisJCSBpbnQJcmMpLAkJCQlcCisJVFBfQVJHUyhycmVxX2RlYnVn
X2lkLCBycmVxX2RlYnVnX2luZGV4LCB4aWQsIGZpZCwgdGlkLCBzZXNpZCwgb2Zmc2V0LCBsZW4s
IHJjKSkKKworREVGSU5FX1NNQjNfUldfRVJSX0VWRU5UKHJlYWRfZXJyKTsKKworLyogRm9yIGxv
Z2dpbmcgZXJyb3JzIGluIG90aGVyIGZpbGUgSS9PIG9wcyAqLworREVDTEFSRV9FVkVOVF9DTEFT
UyhzbWIzX290aGVyX2Vycl9jbGFzcywKIAlUUF9QUk9UTyh1bnNpZ25lZCBpbnQgeGlkLAogCQlf
X3U2NAlmaWQsCiAJCV9fdTMyCXRpZCwKQEAgLTUyLDggKzEwOCw4IEBAIERFQ0xBUkVfRVZFTlRf
Q0xBU1Moc21iM19yd19lcnJfY2xhc3MsCiAJCV9fZW50cnktPm9mZnNldCwgX19lbnRyeS0+bGVu
LCBfX2VudHJ5LT5yYykKICkKIAotI2RlZmluZSBERUZJTkVfU01CM19SV19FUlJfRVZFTlQobmFt
ZSkgICAgICAgICAgXAotREVGSU5FX0VWRU5UKHNtYjNfcndfZXJyX2NsYXNzLCBzbWIzXyMjbmFt
ZSwgICAgXAorI2RlZmluZSBERUZJTkVfU01CM19PVEhFUl9FUlJfRVZFTlQobmFtZSkJXAorREVG
SU5FX0VWRU5UKHNtYjNfb3RoZXJfZXJyX2NsYXNzLCBzbWIzXyMjbmFtZSwgXAogCVRQX1BST1RP
KHVuc2lnbmVkIGludCB4aWQsCQlcCiAJCV9fdTY0CWZpZCwJCQlcCiAJCV9fdTMyCXRpZCwJCQlc
CkBAIC02MywxNSArMTE5LDY3IEBAIERFRklORV9FVkVOVChzbWIzX3J3X2Vycl9jbGFzcywgc21i
M18jI25hbWUsICAgIFwKIAkJaW50CXJjKSwJCQlcCiAJVFBfQVJHUyh4aWQsIGZpZCwgdGlkLCBz
ZXNpZCwgb2Zmc2V0LCBsZW4sIHJjKSkKIAotREVGSU5FX1NNQjNfUldfRVJSX0VWRU5UKHdyaXRl
X2Vycik7Ci1ERUZJTkVfU01CM19SV19FUlJfRVZFTlQocmVhZF9lcnIpOwotREVGSU5FX1NNQjNf
UldfRVJSX0VWRU5UKHF1ZXJ5X2Rpcl9lcnIpOwotREVGSU5FX1NNQjNfUldfRVJSX0VWRU5UKHpl
cm9fZXJyKTsKLURFRklORV9TTUIzX1JXX0VSUl9FVkVOVChmYWxsb2NfZXJyKTsKK0RFRklORV9T
TUIzX09USEVSX0VSUl9FVkVOVCh3cml0ZV9lcnIpOworREVGSU5FX1NNQjNfT1RIRVJfRVJSX0VW
RU5UKHF1ZXJ5X2Rpcl9lcnIpOworREVGSU5FX1NNQjNfT1RIRVJfRVJSX0VWRU5UKHplcm9fZXJy
KTsKK0RFRklORV9TTUIzX09USEVSX0VSUl9FVkVOVChmYWxsb2NfZXJyKTsKIAogCiAvKiBGb3Ig
bG9nZ2luZyBzdWNjZXNzZnVsIHJlYWQgb3Igd3JpdGUgKi8KIERFQ0xBUkVfRVZFTlRfQ0xBU1Mo
c21iM19yd19kb25lX2NsYXNzLAorCVRQX1BST1RPKHVuc2lnbmVkIGludCBycmVxX2RlYnVnX2lk
LAorCQkgdW5zaWduZWQgaW50IHJyZXFfZGVidWdfaW5kZXgsCisJCSB1bnNpZ25lZCBpbnQgeGlk
LAorCQkgX191NjQJZmlkLAorCQkgX191MzIJdGlkLAorCQkgX191NjQJc2VzaWQsCisJCSBfX3U2
NAlvZmZzZXQsCisJCSBfX3UzMglsZW4pLAorCVRQX0FSR1MocnJlcV9kZWJ1Z19pZCwgcnJlcV9k
ZWJ1Z19pbmRleCwKKwkJeGlkLCBmaWQsIHRpZCwgc2VzaWQsIG9mZnNldCwgbGVuKSwKKwlUUF9T
VFJVQ1RfX2VudHJ5KAorCQlfX2ZpZWxkKHVuc2lnbmVkIGludCwgcnJlcV9kZWJ1Z19pZCkKKwkJ
X19maWVsZCh1bnNpZ25lZCBpbnQsIHJyZXFfZGVidWdfaW5kZXgpCisJCV9fZmllbGQodW5zaWdu
ZWQgaW50LCB4aWQpCisJCV9fZmllbGQoX191NjQsIGZpZCkKKwkJX19maWVsZChfX3UzMiwgdGlk
KQorCQlfX2ZpZWxkKF9fdTY0LCBzZXNpZCkKKwkJX19maWVsZChfX3U2NCwgb2Zmc2V0KQorCQlf
X2ZpZWxkKF9fdTMyLCBsZW4pCisJKSwKKwlUUF9mYXN0X2Fzc2lnbigKKwkJX19lbnRyeS0+cnJl
cV9kZWJ1Z19pZCA9IHJyZXFfZGVidWdfaWQ7CisJCV9fZW50cnktPnJyZXFfZGVidWdfaW5kZXgg
PSBycmVxX2RlYnVnX2luZGV4OworCQlfX2VudHJ5LT54aWQgPSB4aWQ7CisJCV9fZW50cnktPmZp
ZCA9IGZpZDsKKwkJX19lbnRyeS0+dGlkID0gdGlkOworCQlfX2VudHJ5LT5zZXNpZCA9IHNlc2lk
OworCQlfX2VudHJ5LT5vZmZzZXQgPSBvZmZzZXQ7CisJCV9fZW50cnktPmxlbiA9IGxlbjsKKwkp
LAorCVRQX3ByaW50aygiUj0lMDh4WyV4XSB4aWQ9JXUgc2lkPTB4JWxseCB0aWQ9MHgleCBmaWQ9
MHglbGx4IG9mZnNldD0weCVsbHggbGVuPTB4JXgiLAorCQkgIF9fZW50cnktPnJyZXFfZGVidWdf
aWQsIF9fZW50cnktPnJyZXFfZGVidWdfaW5kZXgsCisJCSAgX19lbnRyeS0+eGlkLCBfX2VudHJ5
LT5zZXNpZCwgX19lbnRyeS0+dGlkLCBfX2VudHJ5LT5maWQsCisJCSAgX19lbnRyeS0+b2Zmc2V0
LCBfX2VudHJ5LT5sZW4pCispCisKKyNkZWZpbmUgREVGSU5FX1NNQjNfUldfRE9ORV9FVkVOVChu
YW1lKSAgICAgICAgIFwKK0RFRklORV9FVkVOVChzbWIzX3J3X2RvbmVfY2xhc3MsIHNtYjNfIyNu
YW1lLCAgIFwKKwlUUF9QUk9UTyh1bnNpZ25lZCBpbnQgcnJlcV9kZWJ1Z19pZCwJXAorCQkgdW5z
aWduZWQgaW50IHJyZXFfZGVidWdfaW5kZXgsCVwKKwkJIHVuc2lnbmVkIGludCB4aWQsCQlcCisJ
CV9fdTY0CWZpZCwJCQlcCisJCV9fdTMyCXRpZCwJCQlcCisJCV9fdTY0CXNlc2lkLAkJCVwKKwkJ
X191NjQJb2Zmc2V0LAkJCVwKKwkJX191MzIJbGVuKSwJCQlcCisJVFBfQVJHUyhycmVxX2RlYnVn
X2lkLCBycmVxX2RlYnVnX2luZGV4LCB4aWQsIGZpZCwgdGlkLCBzZXNpZCwgb2Zmc2V0LCBsZW4p
KQorCitERUZJTkVfU01CM19SV19ET05FX0VWRU5UKHJlYWRfZW50ZXIpOworREVGSU5FX1NNQjNf
UldfRE9ORV9FVkVOVChyZWFkX2RvbmUpOworCisvKiBGb3IgbG9nZ2luZyBzdWNjZXNzZnVsIG90
aGVyIG9wICovCitERUNMQVJFX0VWRU5UX0NMQVNTKHNtYjNfb3RoZXJfZG9uZV9jbGFzcywKIAlU
UF9QUk9UTyh1bnNpZ25lZCBpbnQgeGlkLAogCQlfX3U2NAlmaWQsCiAJCV9fdTMyCXRpZCwKQEAg
LTEwMCw4ICsyMDgsOCBAQCBERUNMQVJFX0VWRU5UX0NMQVNTKHNtYjNfcndfZG9uZV9jbGFzcywK
IAkJX19lbnRyeS0+b2Zmc2V0LCBfX2VudHJ5LT5sZW4pCiApCiAKLSNkZWZpbmUgREVGSU5FX1NN
QjNfUldfRE9ORV9FVkVOVChuYW1lKSAgICAgICAgIFwKLURFRklORV9FVkVOVChzbWIzX3J3X2Rv
bmVfY2xhc3MsIHNtYjNfIyNuYW1lLCAgIFwKKyNkZWZpbmUgREVGSU5FX1NNQjNfT1RIRVJfRE9O
RV9FVkVOVChuYW1lKSAgICAgICAgIFwKK0RFRklORV9FVkVOVChzbWIzX290aGVyX2RvbmVfY2xh
c3MsIHNtYjNfIyNuYW1lLCAgIFwKIAlUUF9QUk9UTyh1bnNpZ25lZCBpbnQgeGlkLAkJXAogCQlf
X3U2NAlmaWQsCQkJXAogCQlfX3UzMgl0aWQsCQkJXApAQCAtMTEwLDE2ICsyMTgsMTQgQEAgREVG
SU5FX0VWRU5UKHNtYjNfcndfZG9uZV9jbGFzcywgc21iM18jI25hbWUsICAgXAogCQlfX3UzMgls
ZW4pLAkJCVwKIAlUUF9BUkdTKHhpZCwgZmlkLCB0aWQsIHNlc2lkLCBvZmZzZXQsIGxlbikpCiAK
LURFRklORV9TTUIzX1JXX0RPTkVfRVZFTlQod3JpdGVfZW50ZXIpOwotREVGSU5FX1NNQjNfUldf
RE9ORV9FVkVOVChyZWFkX2VudGVyKTsKLURFRklORV9TTUIzX1JXX0RPTkVfRVZFTlQocXVlcnlf
ZGlyX2VudGVyKTsKLURFRklORV9TTUIzX1JXX0RPTkVfRVZFTlQoemVyb19lbnRlcik7Ci1ERUZJ
TkVfU01CM19SV19ET05FX0VWRU5UKGZhbGxvY19lbnRlcik7Ci1ERUZJTkVfU01CM19SV19ET05F
X0VWRU5UKHdyaXRlX2RvbmUpOwotREVGSU5FX1NNQjNfUldfRE9ORV9FVkVOVChyZWFkX2RvbmUp
OwotREVGSU5FX1NNQjNfUldfRE9ORV9FVkVOVChxdWVyeV9kaXJfZG9uZSk7Ci1ERUZJTkVfU01C
M19SV19ET05FX0VWRU5UKHplcm9fZG9uZSk7Ci1ERUZJTkVfU01CM19SV19ET05FX0VWRU5UKGZh
bGxvY19kb25lKTsKK0RFRklORV9TTUIzX09USEVSX0RPTkVfRVZFTlQod3JpdGVfZW50ZXIpOwor
REVGSU5FX1NNQjNfT1RIRVJfRE9ORV9FVkVOVChxdWVyeV9kaXJfZW50ZXIpOworREVGSU5FX1NN
QjNfT1RIRVJfRE9ORV9FVkVOVCh6ZXJvX2VudGVyKTsKK0RFRklORV9TTUIzX09USEVSX0RPTkVf
RVZFTlQoZmFsbG9jX2VudGVyKTsKK0RFRklORV9TTUIzX09USEVSX0RPTkVfRVZFTlQod3JpdGVf
ZG9uZSk7CitERUZJTkVfU01CM19PVEhFUl9ET05FX0VWRU5UKHF1ZXJ5X2Rpcl9kb25lKTsKK0RF
RklORV9TTUIzX09USEVSX0RPTkVfRVZFTlQoemVyb19kb25lKTsKK0RFRklORV9TTUIzX09USEVS
X0RPTkVfRVZFTlQoZmFsbG9jX2RvbmUpOwogCiAvKiBGb3IgbG9nZ2luZyBzdWNjZXNzZnVsIHNl
dCBFT0YgKHRydW5jYXRlKSAqLwogREVDTEFSRV9FVkVOVF9DTEFTUyhzbWIzX2VvZl9jbGFzcywK
ZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvdHJhbnNwb3J0LmMgYi9mcy9zbWIvY2xpZW50L3Ry
YW5zcG9ydC5jCmluZGV4IDVjZjY1MzQ2M2M1NS4uYzcyZmIyNDNjMTU5IDEwMDY0NAotLS0gYS9m
cy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jCisrKyBiL2ZzL3NtYi9jbGllbnQvdHJhbnNwb3J0LmMK
QEAgLTE3OTgsOCArMTc5OCwxMSBAQCBjaWZzX3JlYWR2X3JlY2VpdmUoc3RydWN0IFRDUF9TZXJ2
ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIAkJbGVuZ3RoID0gZGF0
YV9sZW47IC8qIEFuIFJETUEgcmVhZCBpcyBhbHJlYWR5IGRvbmUuICovCiAJZWxzZQogI2VuZGlm
CisJewogCQlsZW5ndGggPSBjaWZzX3JlYWRfaXRlcl9mcm9tX3NvY2tldChzZXJ2ZXIsICZyZGF0
YS0+c3VicmVxLmlvX2l0ZXIsCiAJCQkJCQkgICAgZGF0YV9sZW4pOworCQlpb3ZfaXRlcl9yZXZl
cnQoJnJkYXRhLT5zdWJyZXEuaW9faXRlciwgZGF0YV9sZW4pOworCX0KIAlpZiAobGVuZ3RoID4g
MCkKIAkJcmRhdGEtPmdvdF9ieXRlcyArPSBsZW5ndGg7CiAJc2VydmVyLT50b3RhbF9yZWFkICs9
IGxlbmd0aDsKLS0gCjIuNDAuMQoK
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0009-cifs-Move-cifs_loose_read_iter-and-cifs_file_write_i.patch"
Content-Disposition: attachment; 
	filename="0009-cifs-Move-cifs_loose_read_iter-and-cifs_file_write_i.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6z9j1>
X-Attachment-Id: f_lroc6z9j1

RnJvbSBkYTZmNDc2OWU1NWM2YTBmNmEwZjIwY2NiNDZiOGVmZDE5OWFhMDBkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBUaHUsIDEyIE9jdCAyMDIzIDA4OjM2OjQ0ICswMTAwClN1YmplY3Q6IFtQQVRDSCAwOS8x
MF0gY2lmczogTW92ZSBjaWZzX2xvb3NlX3JlYWRfaXRlcigpIGFuZAogY2lmc19maWxlX3dyaXRl
X2l0ZXIoKSB0byBmaWxlLmMKCk1vdmUgY2lmc19sb29zZV9yZWFkX2l0ZXIoKSBhbmQgY2lmc19m
aWxlX3dyaXRlX2l0ZXIoKSB0byBmaWxlLmMgc28gdGhhdAp0aGV5IGFyZSBjb2xvY2F0ZWQgd2l0
aCBzaW1pbGFyIGZ1bmN0aW9ucyByYXRoZXIgdGhhbiBiZWluZyBzcGxpdCB3aXRoCmNpZnNmcy5j
LgoKU2lnbmVkLW9mZi1ieTogRGF2aWQgSG93ZWxscyA8ZGhvd2VsbHNAcmVkaGF0LmNvbT4KY2M6
IFNoeWFtIFByYXNhZCBOIDxuc3BtYW5nYWxvcmVAZ21haWwuY29tPgpjYzogUm9oaXRoIFN1cmFi
YXR0dWxhIDxyb2hpdGhzLm1zZnRAZ21haWwuY29tPgpjYzogSmVmZiBMYXl0b24gPGpsYXl0b25A
a2VybmVsLm9yZz4KY2M6IGxpbnV4LWNpZnNAdmdlci5rZXJuZWwub3JnCmNjOiBsaW51eC1jYWNo
ZWZzQHJlZGhhdC5jb20KY2M6IGxpbnV4LWZzZGV2ZWxAdmdlci5rZXJuZWwub3JnCmNjOiBsaW51
eC1tbUBrdmFjay5vcmcKU2lnbmVkLW9mZi1ieTogU3RldmUgRnJlbmNoIDxzdGZyZW5jaEBtaWNy
b3NvZnQuY29tPgotLS0KIGZzL3NtYi9jbGllbnQvY2lmc2ZzLmMgfCA1NSAtLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIGZzL3NtYi9jbGllbnQvY2lmc2ZzLmggfCAg
MiArKwogZnMvc21iL2NsaWVudC9maWxlLmMgICB8IDUzICsrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysKIDMgZmlsZXMgY2hhbmdlZCwgNTUgaW5zZXJ0aW9ucygrKSwgNTUg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jaWZzZnMuYyBiL2ZzL3Nt
Yi9jbGllbnQvY2lmc2ZzLmMKaW5kZXggNDE2MTc1NDFkMTc1Li40YjZkMWE1ZTQ3NDEgMTAwNjQ0
Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2ZzLmMKKysrIGIvZnMvc21iL2NsaWVudC9jaWZzZnMu
YwpAQCAtOTg0LDYxICs5ODQsNiBAQCBjaWZzX3NtYjNfZG9fbW91bnQoc3RydWN0IGZpbGVfc3lz
dGVtX3R5cGUgKmZzX3R5cGUsCiAJcmV0dXJuIHJvb3Q7CiB9CiAKLQotc3RhdGljIHNzaXplX3QK
LWNpZnNfbG9vc2VfcmVhZF9pdGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVy
ICppdGVyKQotewotCXNzaXplX3QgcmM7Ci0Jc3RydWN0IGlub2RlICppbm9kZSA9IGZpbGVfaW5v
ZGUoaW9jYi0+a2lfZmlscCk7Ci0KLQlpZiAoaW9jYi0+a2lfZmxhZ3MgJiBJT0NCX0RJUkVDVCkK
LQkJcmV0dXJuIGNpZnNfdXNlcl9yZWFkdihpb2NiLCBpdGVyKTsKLQotCXJjID0gY2lmc19yZXZh
bGlkYXRlX21hcHBpbmcoaW5vZGUpOwotCWlmIChyYykKLQkJcmV0dXJuIHJjOwotCi0JcmV0dXJu
IGdlbmVyaWNfZmlsZV9yZWFkX2l0ZXIoaW9jYiwgaXRlcik7Ci19Ci0KLXN0YXRpYyBzc2l6ZV90
IGNpZnNfZmlsZV93cml0ZV9pdGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVy
ICpmcm9tKQotewotCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBmaWxlX2lub2RlKGlvY2ItPmtpX2Zp
bHApOwotCXN0cnVjdCBjaWZzSW5vZGVJbmZvICpjaW5vZGUgPSBDSUZTX0koaW5vZGUpOwotCXNz
aXplX3Qgd3JpdHRlbjsKLQlpbnQgcmM7Ci0KLQlpZiAoaW9jYi0+a2lfZmlscC0+Zl9mbGFncyAm
IE9fRElSRUNUKSB7Ci0JCXdyaXR0ZW4gPSBjaWZzX3VzZXJfd3JpdGV2KGlvY2IsIGZyb20pOwot
CQlpZiAod3JpdHRlbiA+IDAgJiYgQ0lGU19DQUNIRV9SRUFEKGNpbm9kZSkpIHsKLQkJCWNpZnNf
emFwX21hcHBpbmcoaW5vZGUpOwotCQkJY2lmc19kYmcoRllJLAotCQkJCSAiU2V0IG5vIG9wbG9j
ayBmb3IgaW5vZGU9JXAgYWZ0ZXIgYSB3cml0ZSBvcGVyYXRpb25cbiIsCi0JCQkJIGlub2RlKTsK
LQkJCWNpbm9kZS0+b3Bsb2NrID0gMDsKLQkJfQotCQlyZXR1cm4gd3JpdHRlbjsKLQl9Ci0KLQl3
cml0dGVuID0gY2lmc19nZXRfd3JpdGVyKGNpbm9kZSk7Ci0JaWYgKHdyaXR0ZW4pCi0JCXJldHVy
biB3cml0dGVuOwotCi0Jd3JpdHRlbiA9IGdlbmVyaWNfZmlsZV93cml0ZV9pdGVyKGlvY2IsIGZy
b20pOwotCi0JaWYgKENJRlNfQ0FDSEVfV1JJVEUoQ0lGU19JKGlub2RlKSkpCi0JCWdvdG8gb3V0
OwotCi0JcmMgPSBmaWxlbWFwX2ZkYXRhd3JpdGUoaW5vZGUtPmlfbWFwcGluZyk7Ci0JaWYgKHJj
KQotCQljaWZzX2RiZyhGWUksICJjaWZzX2ZpbGVfd3JpdGVfaXRlcjogJWQgcmMgb24gJXAgaW5v
ZGVcbiIsCi0JCQkgcmMsIGlub2RlKTsKLQotb3V0OgotCWNpZnNfcHV0X3dyaXRlcihjaW5vZGUp
OwotCXJldHVybiB3cml0dGVuOwotfQotCiBzdGF0aWMgbG9mZl90IGNpZnNfbGxzZWVrKHN0cnVj
dCBmaWxlICpmaWxlLCBsb2ZmX3Qgb2Zmc2V0LCBpbnQgd2hlbmNlKQogewogCXN0cnVjdCBjaWZz
RmlsZUluZm8gKmNmaWxlID0gZmlsZS0+cHJpdmF0ZV9kYXRhOwpkaWZmIC0tZ2l0IGEvZnMvc21i
L2NsaWVudC9jaWZzZnMuaCBiL2ZzL3NtYi9jbGllbnQvY2lmc2ZzLmgKaW5kZXggNjg1ZjdkMTEz
OWM2Li5lOGUwZjg2M2U5MzUgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2ZzLmgKKysr
IGIvZnMvc21iL2NsaWVudC9jaWZzZnMuaApAQCAtMTAwLDYgKzEwMCw4IEBAIGV4dGVybiBzc2l6
ZV90IGNpZnNfc3RyaWN0X3JlYWR2KHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVy
ICp0byk7CiBleHRlcm4gc3NpemVfdCBjaWZzX3VzZXJfd3JpdGV2KHN0cnVjdCBraW9jYiAqaW9j
Yiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKTsKIGV4dGVybiBzc2l6ZV90IGNpZnNfZGlyZWN0X3dy
aXRldihzdHJ1Y3Qga2lvY2IgKmlvY2IsIHN0cnVjdCBpb3ZfaXRlciAqZnJvbSk7CiBleHRlcm4g
c3NpemVfdCBjaWZzX3N0cmljdF93cml0ZXYoc3RydWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92
X2l0ZXIgKmZyb20pOworc3NpemVfdCBjaWZzX2ZpbGVfd3JpdGVfaXRlcihzdHJ1Y3Qga2lvY2Ig
KmlvY2IsIHN0cnVjdCBpb3ZfaXRlciAqZnJvbSk7Citzc2l6ZV90IGNpZnNfbG9vc2VfcmVhZF9p
dGVyKHN0cnVjdCBraW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICppdGVyKTsKIGV4dGVybiBp
bnQgY2lmc19mbG9jayhzdHJ1Y3QgZmlsZSAqcGZpbGUsIGludCBjbWQsIHN0cnVjdCBmaWxlX2xv
Y2sgKnBsb2NrKTsKIGV4dGVybiBpbnQgY2lmc19sb2NrKHN0cnVjdCBmaWxlICosIGludCwgc3Ry
dWN0IGZpbGVfbG9jayAqKTsKIGV4dGVybiBpbnQgY2lmc19mc3luYyhzdHJ1Y3QgZmlsZSAqLCBs
b2ZmX3QsIGxvZmZfdCwgaW50KTsKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvZmlsZS5jIGIv
ZnMvc21iL2NsaWVudC9maWxlLmMKaW5kZXggOTJhMjU0ODIwNzVlLi5hMDA0NDJiNDk3MzUgMTAw
NjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvZmlsZS5jCisrKyBiL2ZzL3NtYi9jbGllbnQvZmlsZS5j
CkBAIC00NTY5LDYgKzQ1NjksNTkgQEAgc3NpemVfdCBjaWZzX3VzZXJfcmVhZHYoc3RydWN0IGtp
b2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKnRvKQogCXJldHVybiBfX2NpZnNfcmVhZHYoaW9j
YiwgdG8sIGZhbHNlKTsKIH0KIAorc3NpemVfdCBjaWZzX2xvb3NlX3JlYWRfaXRlcihzdHJ1Y3Qg
a2lvY2IgKmlvY2IsIHN0cnVjdCBpb3ZfaXRlciAqaXRlcikKK3sKKwlzc2l6ZV90IHJjOworCXN0
cnVjdCBpbm9kZSAqaW5vZGUgPSBmaWxlX2lub2RlKGlvY2ItPmtpX2ZpbHApOworCisJaWYgKGlv
Y2ItPmtpX2ZsYWdzICYgSU9DQl9ESVJFQ1QpCisJCXJldHVybiBjaWZzX3VzZXJfcmVhZHYoaW9j
YiwgaXRlcik7CisKKwlyYyA9IGNpZnNfcmV2YWxpZGF0ZV9tYXBwaW5nKGlub2RlKTsKKwlpZiAo
cmMpCisJCXJldHVybiByYzsKKworCXJldHVybiBnZW5lcmljX2ZpbGVfcmVhZF9pdGVyKGlvY2Is
IGl0ZXIpOworfQorCitzc2l6ZV90IGNpZnNfZmlsZV93cml0ZV9pdGVyKHN0cnVjdCBraW9jYiAq
aW9jYiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKQoreworCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBm
aWxlX2lub2RlKGlvY2ItPmtpX2ZpbHApOworCXN0cnVjdCBjaWZzSW5vZGVJbmZvICpjaW5vZGUg
PSBDSUZTX0koaW5vZGUpOworCXNzaXplX3Qgd3JpdHRlbjsKKwlpbnQgcmM7CisKKwlpZiAoaW9j
Yi0+a2lfZmlscC0+Zl9mbGFncyAmIE9fRElSRUNUKSB7CisJCXdyaXR0ZW4gPSBjaWZzX3VzZXJf
d3JpdGV2KGlvY2IsIGZyb20pOworCQlpZiAod3JpdHRlbiA+IDAgJiYgQ0lGU19DQUNIRV9SRUFE
KGNpbm9kZSkpIHsKKwkJCWNpZnNfemFwX21hcHBpbmcoaW5vZGUpOworCQkJY2lmc19kYmcoRllJ
LAorCQkJCSAiU2V0IG5vIG9wbG9jayBmb3IgaW5vZGU9JXAgYWZ0ZXIgYSB3cml0ZSBvcGVyYXRp
b25cbiIsCisJCQkJIGlub2RlKTsKKwkJCWNpbm9kZS0+b3Bsb2NrID0gMDsKKwkJfQorCQlyZXR1
cm4gd3JpdHRlbjsKKwl9CisKKwl3cml0dGVuID0gY2lmc19nZXRfd3JpdGVyKGNpbm9kZSk7CisJ
aWYgKHdyaXR0ZW4pCisJCXJldHVybiB3cml0dGVuOworCisJd3JpdHRlbiA9IGdlbmVyaWNfZmls
ZV93cml0ZV9pdGVyKGlvY2IsIGZyb20pOworCisJaWYgKENJRlNfQ0FDSEVfV1JJVEUoQ0lGU19J
KGlub2RlKSkpCisJCWdvdG8gb3V0OworCisJcmMgPSBmaWxlbWFwX2ZkYXRhd3JpdGUoaW5vZGUt
PmlfbWFwcGluZyk7CisJaWYgKHJjKQorCQljaWZzX2RiZyhGWUksICIlczogJWQgcmMgb24gJXAg
aW5vZGVcbiIsCisJCQkgX19mdW5jX18sIHJjLCBpbm9kZSk7CisKK291dDoKKwljaWZzX3B1dF93
cml0ZXIoY2lub2RlKTsKKwlyZXR1cm4gd3JpdHRlbjsKK30KKwogc3NpemVfdAogY2lmc19zdHJp
Y3RfcmVhZHYoc3RydWN0IGtpb2NiICppb2NiLCBzdHJ1Y3QgaW92X2l0ZXIgKnRvKQogewotLSAK
Mi40MC4xCgo=
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0004-cifs-one-additional-place-where-server_eof-must-be-u.patch"
Content-Disposition: attachment; 
	filename="0004-cifs-one-additional-place-where-server_eof-must-be-u.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6z9y6>
X-Attachment-Id: f_lroc6z9y6

RnJvbSA1NzljZjIzMTFmMzc3NjFlNGFlZGUxZmU1OTI1YmIwZjhmYTAwMjhmIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
CkRhdGU6IFN1biwgMjEgSmFuIDIwMjQgMTk6MjM6NDIgLTA2MDAKU3ViamVjdDogW1BBVENIIDA0
LzEwXSBjaWZzOiBvbmUgYWRkaXRpb25hbCBwbGFjZSB3aGVyZSBzZXJ2ZXJfZW9mIG11c3QgYmUK
IHVwZGF0ZWQKClRoZSBwcmV2aW91cyBwYXRjaCBtaXNzZWQgb25lIG5ldyBwbGFjZSB3aGVyZSBz
ZXJ2ZXJfZW9mIHdhcyBzZXQuCkNoYW5nZSB0aGF0IGFzIHdlbGwgdG8gdXNlIGNpZnNpLT5uZXRm
c19jdHgucmVtb3RlX2lfc2l6ZQppbnN0ZWFkIG9mIGNpZnNpLT5zZXJ2ZXJfZW9mIHNvIHRoYXQg
bmV0ZnNsaWIgY2FuIHJlZmVyIHRvIGl0IHRvLgoKQ2M6IERhdmlkIEhvd2VsbHMgPGRob3dlbGxz
QHJlZGhhdC5jb20+ClNpZ25lZC1vZmYtYnk6IFN0ZXZlIEZyZW5jaCA8c3RmcmVuY2hAbWljcm9z
b2Z0LmNvbT4KLS0tCiBmcy9zbWIvY2xpZW50L3JlYWRkaXIuYyB8IDIgKy0KIDEgZmlsZSBjaGFu
Z2VkLCAxIGluc2VydGlvbigrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL2ZzL3NtYi9j
bGllbnQvcmVhZGRpci5jIGIvZnMvc21iL2NsaWVudC9yZWFkZGlyLmMKaW5kZXggOTQyNTU0MDFi
MzhkLi4zYjFiMDFkMTBmN2QgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvcmVhZGRpci5jCisr
KyBiL2ZzL3NtYi9jbGllbnQvcmVhZGRpci5jCkBAIC0xNDEsNyArMTQxLDcgQEAgY2lmc19wcmlt
ZV9kY2FjaGUoc3RydWN0IGRlbnRyeSAqcGFyZW50LCBzdHJ1Y3QgcXN0ciAqbmFtZSwKIAkJCQkJ
aWYgKGxpa2VseShyZXBhcnNlX2lub2RlX21hdGNoKGlub2RlLCBmYXR0cikpKSB7CiAJCQkJCQlm
YXR0ci0+Y2ZfbW9kZSA9IGlub2RlLT5pX21vZGU7CiAJCQkJCQlmYXR0ci0+Y2ZfcmRldiA9IGlu
b2RlLT5pX3JkZXY7Ci0JCQkJCQlmYXR0ci0+Y2ZfZW9mID0gQ0lGU19JKGlub2RlKS0+c2VydmVy
X2VvZjsKKwkJCQkJCWZhdHRyLT5jZl9lb2YgPSBDSUZTX0koaW5vZGUpLT5uZXRmcy5yZW1vdGVf
aV9zaXplOwogCQkJCQkJZmF0dHItPmNmX3N5bWxpbmtfdGFyZ2V0ID0gTlVMTDsKIAkJCQkJfSBl
bHNlIHsKIAkJCQkJCUNJRlNfSShpbm9kZSktPnRpbWUgPSAwOwotLSAKMi40MC4xCgo=
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0003-cifs-Set-zero_point-in-the-copy_file_range-and-remap.patch"
Content-Disposition: attachment; 
	filename="0003-cifs-Set-zero_point-in-the-copy_file_range-and-remap.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6za07>
X-Attachment-Id: f_lroc6za07

RnJvbSA3NjgzYTQ1NjQzZjc0ZTE1YTg3ODliMDI1OGE2NTEzMWI3Y2YzOGQ4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBUdWUsIDI4IE5vdiAyMDIzIDE2OjI2OjQ0ICswMDAwClN1YmplY3Q6IFtQQVRDSCAwMy8x
MF0gY2lmczogU2V0IHplcm9fcG9pbnQgaW4gdGhlIGNvcHlfZmlsZV9yYW5nZSgpIGFuZAogcmVt
YXBfZmlsZV9yYW5nZSgpCgpTZXQgemVyb19wb2ludCBpbiB0aGUgY29weV9maWxlX3JhbmdlKCkg
YW5kIHJlbWFwX2ZpbGVfcmFuZ2UoKQppbXBsZW1lbnRhdGlvbnMgc28gdGhhdCB3ZSBkb24ndCBz
a2lwIHJlYWRpbmcgZGF0YSBtb2RpZmllZCBvbiBhCnNlcnZlci1zaWRlIGNvcHkuCgpTaWduZWQt
b2ZmLWJ5OiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpjYzogU2h5YW0gUHJh
c2FkIE4gPG5zcG1hbmdhbG9yZUBnbWFpbC5jb20+CmNjOiBSb2hpdGggU3VyYWJhdHR1bGEgPHJv
aGl0aHMubXNmdEBnbWFpbC5jb20+CmNjOiBKZWZmIExheXRvbiA8amxheXRvbkBrZXJuZWwub3Jn
PgpjYzogbGludXgtY2lmc0B2Z2VyLmtlcm5lbC5vcmcKY2M6IGxpbnV4LWNhY2hlZnNAcmVkaGF0
LmNvbQpjYzogbGludXgtZnNkZXZlbEB2Z2VyLmtlcm5lbC5vcmcKY2M6IGxpbnV4LW1tQGt2YWNr
Lm9yZwpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
Ci0tLQogZnMvc21iL2NsaWVudC9jaWZzZnMuYyB8IDYgKysrKysrCiAxIGZpbGUgY2hhbmdlZCwg
NiBpbnNlcnRpb25zKCspCgpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jaWZzZnMuYyBiL2Zz
L3NtYi9jbGllbnQvY2lmc2ZzLmMKaW5kZXggMmE0YTRlM2E4NzUxLi40MTYxNzU0MWQxNzUgMTAw
NjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2ZzLmMKKysrIGIvZnMvc21iL2NsaWVudC9jaWZz
ZnMuYwpAQCAtMTM0MCw2ICsxMzQwLDggQEAgc3RhdGljIGxvZmZfdCBjaWZzX3JlbWFwX2ZpbGVf
cmFuZ2Uoc3RydWN0IGZpbGUgKnNyY19maWxlLCBsb2ZmX3Qgb2ZmLAogCXJjID0gY2lmc19mbHVz
aF9mb2xpbyh0YXJnZXRfaW5vZGUsIGRlc3RlbmQsICZmc3RhcnQsICZmZW5kLCBmYWxzZSk7CiAJ
aWYgKHJjKQogCQlnb3RvIHVubG9jazsKKwlpZiAoZmVuZCA+IHRhcmdldF9jaWZzaS0+bmV0ZnMu
emVyb19wb2ludCkKKwkJdGFyZ2V0X2NpZnNpLT5uZXRmcy56ZXJvX3BvaW50ID0gZmVuZCArIDE7
CiAKIAkvKiBEaXNjYXJkIGFsbCB0aGUgZm9saW9zIHRoYXQgb3ZlcmxhcCB0aGUgZGVzdGluYXRp
b24gcmVnaW9uLiAqLwogCWNpZnNfZGJnKEZZSSwgImFib3V0IHRvIGRpc2NhcmQgcGFnZXMgJWxs
eC0lbGx4XG4iLCBmc3RhcnQsIGZlbmQpOwpAQCAtMTM1OCw2ICsxMzYwLDggQEAgc3RhdGljIGxv
ZmZfdCBjaWZzX3JlbWFwX2ZpbGVfcmFuZ2Uoc3RydWN0IGZpbGUgKnNyY19maWxlLCBsb2ZmX3Qg
b2ZmLAogCQkJZnNjYWNoZV9yZXNpemVfY29va2llKGNpZnNfaW5vZGVfY29va2llKHRhcmdldF9p
bm9kZSksCiAJCQkJCSAgICAgIG5ld19zaXplKTsKIAkJfQorCQlpZiAocmMgPT0gMCAmJiBuZXdf
c2l6ZSA+IHRhcmdldF9jaWZzaS0+bmV0ZnMuemVyb19wb2ludCkKKwkJCXRhcmdldF9jaWZzaS0+
bmV0ZnMuemVyb19wb2ludCA9IG5ld19zaXplOwogCX0KIAogCS8qIGZvcmNlIHJldmFsaWRhdGUg
b2Ygc2l6ZSBhbmQgdGltZXN0YW1wcyBvZiB0YXJnZXQgZmlsZSBub3cKQEAgLTE0NDksNiArMTQ1
Myw4IEBAIHNzaXplX3QgY2lmc19maWxlX2NvcHljaHVua19yYW5nZSh1bnNpZ25lZCBpbnQgeGlk
LAogCXJjID0gY2lmc19mbHVzaF9mb2xpbyh0YXJnZXRfaW5vZGUsIGRlc3RlbmQsICZmc3RhcnQs
ICZmZW5kLCBmYWxzZSk7CiAJaWYgKHJjKQogCQlnb3RvIHVubG9jazsKKwlpZiAoZmVuZCA+IHRh
cmdldF9jaWZzaS0+bmV0ZnMuemVyb19wb2ludCkKKwkJdGFyZ2V0X2NpZnNpLT5uZXRmcy56ZXJv
X3BvaW50ID0gZmVuZCArIDE7CiAKIAkvKiBEaXNjYXJkIGFsbCB0aGUgZm9saW9zIHRoYXQgb3Zl
cmxhcCB0aGUgZGVzdGluYXRpb24gcmVnaW9uLiAqLwogCXRydW5jYXRlX2lub2RlX3BhZ2VzX3Jh
bmdlKCZ0YXJnZXRfaW5vZGUtPmlfZGF0YSwgZnN0YXJ0LCBmZW5kKTsKLS0gCjIuNDAuMQoK
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0005-cifs-Replace-cifs_writedata-with-a-wrapper-around-ne.patch"
Content-Disposition: attachment; 
	filename="0005-cifs-Replace-cifs_writedata-with-a-wrapper-around-ne.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6z9w5>
X-Attachment-Id: f_lroc6z9w5

RnJvbSBlYWM4ZmNmNGY3YjdmOThlNmY4ZmM5NGQxNmEwYzNiMWQ4NTI1ZDU3IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBGcmksIDYgT2N0IDIwMjMgMTY6Mjc6NDEgKzAxMDAKU3ViamVjdDogW1BBVENIIDA1LzEw
XSBjaWZzOiBSZXBsYWNlIGNpZnNfd3JpdGVkYXRhIHdpdGggYSB3cmFwcGVyIGFyb3VuZAogbmV0
ZnNfaW9fc3VicmVxdWVzdAoKUmVwbGFjZSB0aGUgY2lmc193cml0ZWRhdGEgc3RydWN0IHdpdGgg
dGhlIHNhbWUgd3JhcHBlciBhcm91bmQKbmV0ZnNfaW9fc3VicmVxdWVzdCB0aGF0IHdhcyB1c2Vk
IHRvIHJlcGxhY2UgY2lmc19yZWFkZGF0YS4KClNpZ25lZC1vZmYtYnk6IERhdmlkIEhvd2VsbHMg
PGRob3dlbGxzQHJlZGhhdC5jb20+CmNjOiBTaHlhbSBQcmFzYWQgTiA8bnNwbWFuZ2Fsb3JlQGdt
YWlsLmNvbT4KY2M6IFJvaGl0aCBTdXJhYmF0dHVsYSA8cm9oaXRocy5tc2Z0QGdtYWlsLmNvbT4K
Y2M6IEplZmYgTGF5dG9uIDxqbGF5dG9uQGtlcm5lbC5vcmc+CmNjOiBsaW51eC1jaWZzQHZnZXIu
a2VybmVsLm9yZwpjYzogbGludXgtY2FjaGVmc0ByZWRoYXQuY29tCmNjOiBsaW51eC1mc2RldmVs
QHZnZXIua2VybmVsLm9yZwpjYzogbGludXgtbW1Aa3ZhY2sub3JnClNpZ25lZC1vZmYtYnk6IFN0
ZXZlIEZyZW5jaCA8c3RmcmVuY2hAbWljcm9zb2Z0LmNvbT4KLS0tCiBmcy9zbWIvY2xpZW50L2Np
ZnNnbG9iLmggIHwgMzAgKysrLS0tLS0tLS0tLS0tCiBmcy9zbWIvY2xpZW50L2NpZnNwcm90by5o
IHwgMTYgKysrKysrLS0KIGZzL3NtYi9jbGllbnQvY2lmc3NtYi5jICAgfCAgOSArKy0tLQogZnMv
c21iL2NsaWVudC9maWxlLmMgICAgICB8IDc5ICsrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQogZnMvc21iL2NsaWVudC9zbWIycGR1LmMgICB8ICA5ICsrLS0tCiBmcy9zbWIv
Y2xpZW50L3NtYjJwcm90by5oIHwgIDMgKy0KIDYgZmlsZXMgY2hhbmdlZCwgNTggaW5zZXJ0aW9u
cygrKSwgODggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jaWZzZ2xv
Yi5oIGIvZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oCmluZGV4IGE3YWE3NWRmMzhhMy4uNmI0MzRl
MGUwZGM1IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmgKKysrIGIvZnMvc21i
L2NsaWVudC9jaWZzZ2xvYi5oCkBAIC0yNTUsNyArMjU1LDYgQEAgc3RydWN0IGNpZnNfZmF0dHI7
CiBzdHJ1Y3Qgc21iM19mc19jb250ZXh0Owogc3RydWN0IGNpZnNfZmlkOwogc3RydWN0IGNpZnNf
aW9fc3VicmVxdWVzdDsKLXN0cnVjdCBjaWZzX3dyaXRlZGF0YTsKIHN0cnVjdCBjaWZzX2lvX3Bh
cm1zOwogc3RydWN0IGNpZnNfc2VhcmNoX2luZm87CiBzdHJ1Y3QgY2lmc0lub2RlSW5mbzsKQEAg
LTQzNCw4ICs0MzMsNyBAQCBzdHJ1Y3Qgc21iX3ZlcnNpb25fb3BlcmF0aW9ucyB7CiAJLyogYXN5
bmMgcmVhZCBmcm9tIHRoZSBzZXJ2ZXIgKi8KIAlpbnQgKCphc3luY19yZWFkdikoc3RydWN0IGNp
ZnNfaW9fc3VicmVxdWVzdCAqKTsKIAkvKiBhc3luYyB3cml0ZSB0byB0aGUgc2VydmVyICovCi0J
aW50ICgqYXN5bmNfd3JpdGV2KShzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKiwKLQkJCSAgICB2b2lk
ICgqcmVsZWFzZSkoc3RydWN0IGtyZWYgKikpOworCWludCAoKmFzeW5jX3dyaXRldikoc3RydWN0
IGNpZnNfaW9fc3VicmVxdWVzdCAqKTsKIAkvKiBzeW5jIHJlYWQgZnJvbSB0aGUgc2VydmVyICov
CiAJaW50ICgqc3luY19yZWFkKShjb25zdCB1bnNpZ25lZCBpbnQsIHN0cnVjdCBjaWZzX2ZpZCAq
LAogCQkJIHN0cnVjdCBjaWZzX2lvX3Bhcm1zICosIHVuc2lnbmVkIGludCAqLCBjaGFyICoqLApA
QCAtMTQ3NCwzNSArMTQ3MiwxNyBAQCBzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0IHsKICNlbmRp
ZgogCXN0cnVjdCBjaWZzX2NyZWRpdHMJCWNyZWRpdHM7CiAKLQkvLyBUT0RPOiBSZW1vdmUgZm9s
bG93aW5nIGVsZW1lbnRzCi0Jc3RydWN0IGxpc3RfaGVhZAkJbGlzdDsKLQlzdHJ1Y3QgY29tcGxl
dGlvbgkJZG9uZTsKLQlzdHJ1Y3Qgd29ya19zdHJ1Y3QJCXdvcms7Ci0Jc3RydWN0IGlvdl9pdGVy
CQkJaXRlcjsKLQlfX3U2NAkJCQlvZmZzZXQ7Ci0JdW5zaWduZWQgaW50CQkJYnl0ZXM7Ci19Owor
CWVudW0gd3JpdGViYWNrX3N5bmNfbW9kZXMJc3luY19tb2RlOworCWJvb2wJCQkJdW5jYWNoZWQ7
CisJc3RydWN0IGJpb192ZWMJCQkqYnY7CiAKLS8qIGFzeW5jaHJvbm91cyB3cml0ZSBzdXBwb3J0
ICovCi1zdHJ1Y3QgY2lmc193cml0ZWRhdGEgewotCXN0cnVjdCBrcmVmCQkJcmVmY291bnQ7CisJ
Ly8gVE9ETzogUmVtb3ZlIGZvbGxvd2luZyBlbGVtZW50cwogCXN0cnVjdCBsaXN0X2hlYWQJCWxp
c3Q7CiAJc3RydWN0IGNvbXBsZXRpb24JCWRvbmU7Ci0JZW51bSB3cml0ZWJhY2tfc3luY19tb2Rl
cwlzeW5jX21vZGU7CiAJc3RydWN0IHdvcmtfc3RydWN0CQl3b3JrOwotCXN0cnVjdCBjaWZzRmls
ZUluZm8JCSpjZmlsZTsKLQlzdHJ1Y3QgY2lmc19haW9fY3R4CQkqY3R4OwogCXN0cnVjdCBpb3Zf
aXRlcgkJCWl0ZXI7Ci0Jc3RydWN0IGJpb192ZWMJCQkqYnY7CiAJX191NjQJCQkJb2Zmc2V0Owot
CXBpZF90CQkJCXBpZDsKIAl1bnNpZ25lZCBpbnQJCQlieXRlczsKLQlpbnQJCQkJcmVzdWx0Owot
CXN0cnVjdCBUQ1BfU2VydmVyX0luZm8JCSpzZXJ2ZXI7Ci0jaWZkZWYgQ09ORklHX0NJRlNfU01C
X0RJUkVDVAotCXN0cnVjdCBzbWJkX21yCQkJKm1yOwotI2VuZGlmCi0Jc3RydWN0IGNpZnNfY3Jl
ZGl0cwkJY3JlZGl0czsKIH07CiAKIC8qCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NpZnNw
cm90by5oIGIvZnMvc21iL2NsaWVudC9jaWZzcHJvdG8uaAppbmRleCA1N2JhMTg0MGM1NGUuLjI4
ZjVlZDk5Y2EzYSAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9jaWZzcHJvdG8uaAorKysgYi9m
cy9zbWIvY2xpZW50L2NpZnNwcm90by5oCkBAIC02MDMsMTEgKzYwMywxOSBAQCBzdGF0aWMgaW5s
aW5lIHZvaWQgY2lmc19wdXRfcmVhZGRhdGEoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRh
dGEpCiBpbnQgY2lmc19hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0
YSk7CiBpbnQgY2lmc19yZWFkdl9yZWNlaXZlKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZl
ciwgc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpOwogCi1pbnQgY2lmc19hc3luY193cml0ZXYoc3Ry
dWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YSwKLQkJICAgICAgdm9pZCAoKnJlbGVhc2UpKHN0cnVj
dCBrcmVmICprcmVmKSk7CitpbnQgY2lmc19hc3luY193cml0ZXYoc3RydWN0IGNpZnNfaW9fc3Vi
cmVxdWVzdCAqd2RhdGEpOwogdm9pZCBjaWZzX3dyaXRldl9jb21wbGV0ZShzdHJ1Y3Qgd29ya19z
dHJ1Y3QgKndvcmspOwotc3RydWN0IGNpZnNfd3JpdGVkYXRhICpjaWZzX3dyaXRlZGF0YV9hbGxv
Yyh3b3JrX2Z1bmNfdCBjb21wbGV0ZSk7Ci12b2lkIGNpZnNfd3JpdGVkYXRhX3JlbGVhc2Uoc3Ry
dWN0IGtyZWYgKnJlZmNvdW50KTsKK3N0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKmNpZnNfd3Jp
dGVkYXRhX2FsbG9jKHdvcmtfZnVuY190IGNvbXBsZXRlKTsKK3ZvaWQgY2lmc193cml0ZWRhdGFf
cmVsZWFzZShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSk7CitzdGF0aWMgaW5saW5l
IHZvaWQgY2lmc19nZXRfd3JpdGVkYXRhKHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKndkYXRh
KQoreworCXJlZmNvdW50X2luYygmd2RhdGEtPnN1YnJlcS5yZWYpOworfQorc3RhdGljIGlubGlu
ZSB2b2lkIGNpZnNfcHV0X3dyaXRlZGF0YShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0
YSkKK3sKKwlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZ3ZGF0YS0+c3VicmVxLnJlZikpCisJ
CWNpZnNfd3JpdGVkYXRhX3JlbGVhc2Uod2RhdGEpOworfQogaW50IGNpZnNfcXVlcnlfbWZfc3lt
bGluayh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCQkJICBzdHJ1
Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiLAogCQkJICBjb25zdCB1bnNpZ25lZCBjaGFyICpwYXRo
LCBjaGFyICpwYnVmLApkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jaWZzc21iLmMgYi9mcy9z
bWIvY2xpZW50L2NpZnNzbWIuYwppbmRleCAyZDEwYzA3YzEyOTUuLjFlYWQ4NjdhMGY0YSAxMDA2
NDQKLS0tIGEvZnMvc21iL2NsaWVudC9jaWZzc21iLmMKKysrIGIvZnMvc21iL2NsaWVudC9jaWZz
c21iLmMKQEAgLTE2MTIsNyArMTYxMiw3IEBAIENJRlNTTUJXcml0ZShjb25zdCB1bnNpZ25lZCBp
bnQgeGlkLCBzdHJ1Y3QgY2lmc19pb19wYXJtcyAqaW9fcGFybXMsCiBzdGF0aWMgdm9pZAogY2lm
c193cml0ZXZfY2FsbGJhY2soc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpCiB7Ci0Jc3RydWN0IGNp
ZnNfd3JpdGVkYXRhICp3ZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKKwlzdHJ1Y3QgY2lmc19p
b19zdWJyZXF1ZXN0ICp3ZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKIAlzdHJ1Y3QgY2lmc190
Y29uICp0Y29uID0gdGxpbmtfdGNvbih3ZGF0YS0+Y2ZpbGUtPnRsaW5rKTsKIAl1bnNpZ25lZCBp
bnQgd3JpdHRlbjsKIAlXUklURV9SU1AgKnNtYiA9IChXUklURV9SU1AgKiltaWQtPnJlc3BfYnVm
OwpAQCAtMTY1Nyw4ICsxNjU3LDcgQEAgY2lmc193cml0ZXZfY2FsbGJhY2soc3RydWN0IG1pZF9x
X2VudHJ5ICptaWQpCiAKIC8qIGNpZnNfYXN5bmNfd3JpdGV2IC0gc2VuZCBhbiBhc3luYyB3cml0
ZSwgYW5kIHNldCB1cCBtaWQgdG8gaGFuZGxlIHJlc3VsdCAqLwogaW50Ci1jaWZzX2FzeW5jX3dy
aXRldihzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhLAotCQkgIHZvaWQgKCpyZWxlYXNlKShz
dHJ1Y3Qga3JlZiAqa3JlZikpCitjaWZzX2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc19pb19zdWJy
ZXF1ZXN0ICp3ZGF0YSkKIHsKIAlpbnQgcmMgPSAtRUFDQ0VTOwogCVdSSVRFX1JFUSAqc21iID0g
TlVMTDsKQEAgLTE3MjUsMTQgKzE3MjQsMTQgQEAgY2lmc19hc3luY193cml0ZXYoc3RydWN0IGNp
ZnNfd3JpdGVkYXRhICp3ZGF0YSwKIAkJaW92WzFdLmlvdl9sZW4gKz0gNDsgLyogcGFkIGJpZ2dl
ciBieSBmb3VyIGJ5dGVzICovCiAJfQogCi0Ja3JlZl9nZXQoJndkYXRhLT5yZWZjb3VudCk7CisJ
Y2lmc19nZXRfd3JpdGVkYXRhKHdkYXRhKTsKIAlyYyA9IGNpZnNfY2FsbF9hc3luYyh0Y29uLT5z
ZXMtPnNlcnZlciwgJnJxc3QsIE5VTEwsCiAJCQkgICAgIGNpZnNfd3JpdGV2X2NhbGxiYWNrLCBO
VUxMLCB3ZGF0YSwgMCwgTlVMTCk7CiAKIAlpZiAocmMgPT0gMCkKIAkJY2lmc19zdGF0c19pbmMo
JnRjb24tPnN0YXRzLmNpZnNfc3RhdHMubnVtX3dyaXRlcyk7CiAJZWxzZQotCQlrcmVmX3B1dCgm
d2RhdGEtPnJlZmNvdW50LCByZWxlYXNlKTsKKwkJY2lmc19wdXRfd3JpdGVkYXRhKHdkYXRhKTsK
IAogYXN5bmNfd3JpdGV2X291dDoKIAljaWZzX3NtYWxsX2J1Zl9yZWxlYXNlKHNtYik7CmRpZmYg
LS1naXQgYS9mcy9zbWIvY2xpZW50L2ZpbGUuYyBiL2ZzL3NtYi9jbGllbnQvZmlsZS5jCmluZGV4
IDJmOTZlYTQ4ODVmMC4uMDRkNjE4ZTQ0ZTk3IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2Zp
bGUuYworKysgYi9mcy9zbWIvY2xpZW50L2ZpbGUuYwpAQCAtMjQxMywxMCArMjQxMywxMCBAQCBj
aWZzX2dldF9yZWFkYWJsZV9wYXRoKHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sIGNvbnN0IGNoYXIg
Km5hbWUsCiB9CiAKIHZvaWQKLWNpZnNfd3JpdGVkYXRhX3JlbGVhc2Uoc3RydWN0IGtyZWYgKnJl
ZmNvdW50KQorY2lmc193cml0ZWRhdGFfcmVsZWFzZShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0
ICp3ZGF0YSkKIHsKLQlzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhID0gY29udGFpbmVyX29m
KHJlZmNvdW50LAotCQkJCQlzdHJ1Y3QgY2lmc193cml0ZWRhdGEsIHJlZmNvdW50KTsKKwlpZiAo
d2RhdGEtPnVuY2FjaGVkKQorCQlrcmVmX3B1dCgmd2RhdGEtPmN0eC0+cmVmY291bnQsIGNpZnNf
YWlvX2N0eF9yZWxlYXNlKTsKICNpZmRlZiBDT05GSUdfQ0lGU19TTUJfRElSRUNUCiAJaWYgKHdk
YXRhLT5tcikgewogCQlzbWJkX2RlcmVnaXN0ZXJfbXIod2RhdGEtPm1yKTsKQEAgLTI0MzUsNyAr
MjQzNSw3IEBAIGNpZnNfd3JpdGVkYXRhX3JlbGVhc2Uoc3RydWN0IGtyZWYgKnJlZmNvdW50KQog
ICogcG9zc2libGUgdGhhdCB0aGUgcGFnZSB3YXMgcmVkaXJ0aWVkIHNvIHJlLWNsZWFuIHRoZSBw
YWdlLgogICovCiBzdGF0aWMgdm9pZAotY2lmc193cml0ZXZfcmVxdWV1ZShzdHJ1Y3QgY2lmc193
cml0ZWRhdGEgKndkYXRhKQorY2lmc193cml0ZXZfcmVxdWV1ZShzdHJ1Y3QgY2lmc19pb19zdWJy
ZXF1ZXN0ICp3ZGF0YSkKIHsKIAlpbnQgcmMgPSAwOwogCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBk
X2lub2RlKHdkYXRhLT5jZmlsZS0+ZGVudHJ5KTsKQEAgLTI0NDUsNyArMjQ0NSw3IEBAIGNpZnNf
d3JpdGV2X3JlcXVldWUoc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YSkKIAogCXNlcnZlciA9
IHRsaW5rX3Rjb24od2RhdGEtPmNmaWxlLT50bGluayktPnNlcy0+c2VydmVyOwogCWRvIHsKLQkJ
c3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YTI7CisJCXN0cnVjdCBjaWZzX2lvX3N1YnJlcXVl
c3QgKndkYXRhMjsKIAkJdW5zaWduZWQgaW50IHdzaXplLCBjdXJfbGVuOwogCiAJCXdzaXplID0g
c2VydmVyLT5vcHMtPndwX3JldHJ5X3NpemUoaW5vZGUpOwpAQCAtMjQ2OCw3ICsyNDY4LDcgQEAg
Y2lmc193cml0ZXZfcmVxdWV1ZShzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhKQogCQl3ZGF0
YTItPnN5bmNfbW9kZSA9IHdkYXRhLT5zeW5jX21vZGU7CiAJCXdkYXRhMi0+b2Zmc2V0CT0gZnBv
czsKIAkJd2RhdGEyLT5ieXRlcwk9IGN1cl9sZW47Ci0JCXdkYXRhMi0+aXRlcgk9IHdkYXRhLT5p
dGVyOworCQl3ZGF0YTItPml0ZXIgPSB3ZGF0YS0+aXRlcjsKIAogCQlpb3ZfaXRlcl9hZHZhbmNl
KCZ3ZGF0YTItPml0ZXIsIGZwb3MgLSB3ZGF0YS0+b2Zmc2V0KTsKIAkJaW92X2l0ZXJfdHJ1bmNh
dGUoJndkYXRhMi0+aXRlciwgd2RhdGEyLT5ieXRlcyk7CkBAIC0yNDkwLDExICsyNDkwLDEwIEBA
IGNpZnNfd3JpdGV2X3JlcXVldWUoc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YSkKIAkJCQly
YyA9IC1FQkFERjsKIAkJfSBlbHNlIHsKIAkJCXdkYXRhMi0+cGlkID0gd2RhdGEyLT5jZmlsZS0+
cGlkOwotCQkJcmMgPSBzZXJ2ZXItPm9wcy0+YXN5bmNfd3JpdGV2KHdkYXRhMiwKLQkJCQkJCSAg
ICAgICBjaWZzX3dyaXRlZGF0YV9yZWxlYXNlKTsKKwkJCXJjID0gc2VydmVyLT5vcHMtPmFzeW5j
X3dyaXRldih3ZGF0YTIpOwogCQl9CiAKLQkJa3JlZl9wdXQoJndkYXRhMi0+cmVmY291bnQsIGNp
ZnNfd3JpdGVkYXRhX3JlbGVhc2UpOworCQljaWZzX3B1dF93cml0ZWRhdGEod2RhdGEyKTsKIAkJ
aWYgKHJjKSB7CiAJCQlpZiAoaXNfcmV0cnlhYmxlX2Vycm9yKHJjKSkKIAkJCQljb250aW51ZTsK
QEAgLTI1MTMsMTQgKzI1MTIsMTQgQEAgY2lmc193cml0ZXZfcmVxdWV1ZShzdHJ1Y3QgY2lmc193
cml0ZWRhdGEgKndkYXRhKQogCiAJaWYgKHJjICE9IDAgJiYgIWlzX3JldHJ5YWJsZV9lcnJvcihy
YykpCiAJCW1hcHBpbmdfc2V0X2Vycm9yKGlub2RlLT5pX21hcHBpbmcsIHJjKTsKLQlrcmVmX3B1
dCgmd2RhdGEtPnJlZmNvdW50LCBjaWZzX3dyaXRlZGF0YV9yZWxlYXNlKTsKKwljaWZzX3B1dF93
cml0ZWRhdGEod2RhdGEpOwogfQogCiB2b2lkCiBjaWZzX3dyaXRldl9jb21wbGV0ZShzdHJ1Y3Qg
d29ya19zdHJ1Y3QgKndvcmspCiB7Ci0Jc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YSA9IGNv
bnRhaW5lcl9vZih3b3JrLAotCQkJCQkJc3RydWN0IGNpZnNfd3JpdGVkYXRhLCB3b3JrKTsKKwlz
dHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3ZGF0YSA9IGNvbnRhaW5lcl9vZih3b3JrLAorCQkJ
CQkJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCwgd29yayk7CiAJc3RydWN0IGlub2RlICppbm9k
ZSA9IGRfaW5vZGUod2RhdGEtPmNmaWxlLT5kZW50cnkpOwogCiAJaWYgKHdkYXRhLT5yZXN1bHQg
PT0gMCkgewpAQCAtMjU0MSwxNiArMjU0MCwxNiBAQCBjaWZzX3dyaXRldl9jb21wbGV0ZShzdHJ1
Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAKIAlpZiAod2RhdGEtPnJlc3VsdCAhPSAtRUFHQUlOKQog
CQltYXBwaW5nX3NldF9lcnJvcihpbm9kZS0+aV9tYXBwaW5nLCB3ZGF0YS0+cmVzdWx0KTsKLQlr
cmVmX3B1dCgmd2RhdGEtPnJlZmNvdW50LCBjaWZzX3dyaXRlZGF0YV9yZWxlYXNlKTsKKwljaWZz
X3B1dF93cml0ZWRhdGEod2RhdGEpOwogfQogCi1zdHJ1Y3QgY2lmc193cml0ZWRhdGEgKmNpZnNf
d3JpdGVkYXRhX2FsbG9jKHdvcmtfZnVuY190IGNvbXBsZXRlKQorc3RydWN0IGNpZnNfaW9fc3Vi
cmVxdWVzdCAqY2lmc193cml0ZWRhdGFfYWxsb2Mod29ya19mdW5jX3QgY29tcGxldGUpCiB7Ci0J
c3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YTsKKwlzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0
ICp3ZGF0YTsKIAogCXdkYXRhID0ga3phbGxvYyhzaXplb2YoKndkYXRhKSwgR0ZQX05PRlMpOwog
CWlmICh3ZGF0YSAhPSBOVUxMKSB7Ci0JCWtyZWZfaW5pdCgmd2RhdGEtPnJlZmNvdW50KTsKKwkJ
cmVmY291bnRfc2V0KCZ3ZGF0YS0+c3VicmVxLnJlZiwgMSk7CiAJCUlOSVRfTElTVF9IRUFEKCZ3
ZGF0YS0+bGlzdCk7CiAJCWluaXRfY29tcGxldGlvbigmd2RhdGEtPmRvbmUpOwogCQlJTklUX1dP
UksoJndkYXRhLT53b3JrLCBjb21wbGV0ZSk7CkBAIC0yNzMxLDcgKzI3MzAsNyBAQCBzdGF0aWMg
c3NpemVfdCBjaWZzX3dyaXRlX2JhY2tfZnJvbV9sb2NrZWRfZm9saW8oc3RydWN0IGFkZHJlc3Nf
c3BhY2UgKm1hcHBpbmcsCiB7CiAJc3RydWN0IGlub2RlICppbm9kZSA9IG1hcHBpbmctPmhvc3Q7
CiAJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyOwotCXN0cnVjdCBjaWZzX3dyaXRlZGF0
YSAqd2RhdGE7CisJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGE7CiAJc3RydWN0IGNp
ZnNfc2JfaW5mbyAqY2lmc19zYiA9IENJRlNfU0IoaW5vZGUtPmlfc2IpOwogCXN0cnVjdCBjaWZz
X2NyZWRpdHMgY3JlZGl0c19vbl9zdGFjazsKIAlzdHJ1Y3QgY2lmc19jcmVkaXRzICpjcmVkaXRz
ID0gJmNyZWRpdHNfb25fc3RhY2s7CkBAIC0yODIzLDEwICsyODIyLDkgQEAgc3RhdGljIHNzaXpl
X3QgY2lmc193cml0ZV9iYWNrX2Zyb21fbG9ja2VkX2ZvbGlvKHN0cnVjdCBhZGRyZXNzX3NwYWNl
ICptYXBwaW5nLAogCQlpZiAod2RhdGEtPmNmaWxlLT5pbnZhbGlkSGFuZGxlKQogCQkJcmMgPSAt
RUFHQUlOOwogCQllbHNlCi0JCQlyYyA9IHdkYXRhLT5zZXJ2ZXItPm9wcy0+YXN5bmNfd3JpdGV2
KHdkYXRhLAotCQkJCQkJCSAgICAgIGNpZnNfd3JpdGVkYXRhX3JlbGVhc2UpOworCQkJcmMgPSB3
ZGF0YS0+c2VydmVyLT5vcHMtPmFzeW5jX3dyaXRldih3ZGF0YSk7CiAJCWlmIChyYyA+PSAwKSB7
Ci0JCQlrcmVmX3B1dCgmd2RhdGEtPnJlZmNvdW50LCBjaWZzX3dyaXRlZGF0YV9yZWxlYXNlKTsK
KwkJCWNpZnNfcHV0X3dyaXRlZGF0YSh3ZGF0YSk7CiAJCQlnb3RvIGVycl9jbG9zZTsKIAkJfQog
CX0gZWxzZSB7CkBAIC0yODM2LDcgKzI4MzQsNyBAQCBzdGF0aWMgc3NpemVfdCBjaWZzX3dyaXRl
X2JhY2tfZnJvbV9sb2NrZWRfZm9saW8oc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCiAJ
fQogCiBlcnJfd2RhdGE6Ci0Ja3JlZl9wdXQoJndkYXRhLT5yZWZjb3VudCwgY2lmc193cml0ZWRh
dGFfcmVsZWFzZSk7CisJY2lmc19wdXRfd3JpdGVkYXRhKHdkYXRhKTsKIGVycl91bmNyZWRpdDoK
IAlhZGRfY3JlZGl0c19hbmRfd2FrZV9pZihzZXJ2ZXIsIGNyZWRpdHMsIDApOwogZXJyX2Nsb3Nl
OgpAQCAtMzIyNSwyMyArMzIyMywxMyBAQCBpbnQgY2lmc19mbHVzaChzdHJ1Y3QgZmlsZSAqZmls
ZSwgZmxfb3duZXJfdCBpZCkKIAlyZXR1cm4gcmM7CiB9CiAKLXN0YXRpYyB2b2lkCi1jaWZzX3Vu
Y2FjaGVkX3dyaXRlZGF0YV9yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWZjb3VudCkKLXsKLQlzdHJ1
Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhID0gY29udGFpbmVyX29mKHJlZmNvdW50LAotCQkJCQlz
dHJ1Y3QgY2lmc193cml0ZWRhdGEsIHJlZmNvdW50KTsKLQotCWtyZWZfcHV0KCZ3ZGF0YS0+Y3R4
LT5yZWZjb3VudCwgY2lmc19haW9fY3R4X3JlbGVhc2UpOwotCWNpZnNfd3JpdGVkYXRhX3JlbGVh
c2UocmVmY291bnQpOwotfQotCiBzdGF0aWMgdm9pZCBjb2xsZWN0X3VuY2FjaGVkX3dyaXRlX2Rh
dGEoc3RydWN0IGNpZnNfYWlvX2N0eCAqY3R4KTsKIAogc3RhdGljIHZvaWQKIGNpZnNfdW5jYWNo
ZWRfd3JpdGV2X2NvbXBsZXRlKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIHsKLQlzdHJ1Y3Qg
Y2lmc193cml0ZWRhdGEgKndkYXRhID0gY29udGFpbmVyX29mKHdvcmssCi0JCQkJCXN0cnVjdCBj
aWZzX3dyaXRlZGF0YSwgd29yayk7CisJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqd2RhdGEg
PSBjb250YWluZXJfb2Yod29yaywKKwkJCQkJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCwgd29y
ayk7CiAJc3RydWN0IGlub2RlICppbm9kZSA9IGRfaW5vZGUod2RhdGEtPmNmaWxlLT5kZW50cnkp
OwogCXN0cnVjdCBjaWZzSW5vZGVJbmZvICpjaWZzaSA9IENJRlNfSShpbm9kZSk7CiAKQEAgLTMy
NTQsMTEgKzMyNDIsMTEgQEAgY2lmc191bmNhY2hlZF93cml0ZXZfY29tcGxldGUoc3RydWN0IHdv
cmtfc3RydWN0ICp3b3JrKQogCWNvbXBsZXRlKCZ3ZGF0YS0+ZG9uZSk7CiAJY29sbGVjdF91bmNh
Y2hlZF93cml0ZV9kYXRhKHdkYXRhLT5jdHgpOwogCS8qIHRoZSBiZWxvdyBjYWxsIGNhbiBwb3Nz
aWJseSBmcmVlIHRoZSBsYXN0IHJlZiB0byBhaW8gY3R4ICovCi0Ja3JlZl9wdXQoJndkYXRhLT5y
ZWZjb3VudCwgY2lmc191bmNhY2hlZF93cml0ZWRhdGFfcmVsZWFzZSk7CisJY2lmc19wdXRfd3Jp
dGVkYXRhKHdkYXRhKTsKIH0KIAogc3RhdGljIGludAotY2lmc19yZXNlbmRfd2RhdGEoc3RydWN0
IGNpZnNfd3JpdGVkYXRhICp3ZGF0YSwgc3RydWN0IGxpc3RfaGVhZCAqd2RhdGFfbGlzdCwKK2Np
ZnNfcmVzZW5kX3dkYXRhKHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKndkYXRhLCBzdHJ1Y3Qg
bGlzdF9oZWFkICp3ZGF0YV9saXN0LAogCXN0cnVjdCBjaWZzX2Fpb19jdHggKmN0eCkKIHsKIAl1
bnNpZ25lZCBpbnQgd3NpemU7CkBAIC0zMzA3LDggKzMyOTUsNyBAQCBjaWZzX3Jlc2VuZF93ZGF0
YShzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhLCBzdHJ1Y3QgbGlzdF9oZWFkICp3ZGF0YV9s
aXN0LAogCQkJCQl3ZGF0YS0+bXIgPSBOVUxMOwogCQkJCX0KICNlbmRpZgotCQkJCXJjID0gc2Vy
dmVyLT5vcHMtPmFzeW5jX3dyaXRldih3ZGF0YSwKLQkJCQkJY2lmc191bmNhY2hlZF93cml0ZWRh
dGFfcmVsZWFzZSk7CisJCQkJcmMgPSBzZXJ2ZXItPm9wcy0+YXN5bmNfd3JpdGV2KHdkYXRhKTsK
IAkJCX0KIAkJfQogCkBAIC0zMzIzLDcgKzMzMTAsNyBAQCBjaWZzX3Jlc2VuZF93ZGF0YShzdHJ1
Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhLCBzdHJ1Y3QgbGlzdF9oZWFkICp3ZGF0YV9saXN0LAog
CX0gd2hpbGUgKHJjID09IC1FQUdBSU4pOwogCiBmYWlsOgotCWtyZWZfcHV0KCZ3ZGF0YS0+cmVm
Y291bnQsIGNpZnNfdW5jYWNoZWRfd3JpdGVkYXRhX3JlbGVhc2UpOworCWNpZnNfcHV0X3dyaXRl
ZGF0YSh3ZGF0YSk7CiAJcmV0dXJuIHJjOwogfQogCkBAIC0zMzc1LDcgKzMzNjIsNyBAQCBjaWZz
X3dyaXRlX2Zyb21faXRlcihsb2ZmX3QgZnBvcywgc2l6ZV90IGxlbiwgc3RydWN0IGlvdl9pdGVy
ICpmcm9tLAogewogCWludCByYyA9IDA7CiAJc2l6ZV90IGN1cl9sZW4sIG1heF9sZW47Ci0Jc3Ry
dWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YTsKKwlzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICp3
ZGF0YTsKIAlwaWRfdCBwaWQ7CiAJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyOwogCXVu
c2lnbmVkIGludCB4aWQsIG1heF9zZWdzID0gSU5UX01BWDsKQEAgLTM0MzksNiArMzQyNiw3IEBA
IGNpZnNfd3JpdGVfZnJvbV9pdGVyKGxvZmZfdCBmcG9zLCBzaXplX3QgbGVuLCBzdHJ1Y3QgaW92
X2l0ZXIgKmZyb20sCiAJCQlicmVhazsKIAkJfQogCisJCXdkYXRhLT51bmNhY2hlZAk9IHRydWU7
CiAJCXdkYXRhLT5zeW5jX21vZGUgPSBXQl9TWU5DX0FMTDsKIAkJd2RhdGEtPm9mZnNldAk9IChf
X3U2NClmcG9zOwogCQl3ZGF0YS0+Y2ZpbGUJPSBjaWZzRmlsZUluZm9fZ2V0KG9wZW5fZmlsZSk7
CkBAIC0zNDU4LDE0ICszNDQ2LDEyIEBAIGNpZnNfd3JpdGVfZnJvbV9pdGVyKGxvZmZfdCBmcG9z
LCBzaXplX3QgbGVuLCBzdHJ1Y3QgaW92X2l0ZXIgKmZyb20sCiAJCQlpZiAod2RhdGEtPmNmaWxl
LT5pbnZhbGlkSGFuZGxlKQogCQkJCXJjID0gLUVBR0FJTjsKIAkJCWVsc2UKLQkJCQlyYyA9IHNl
cnZlci0+b3BzLT5hc3luY193cml0ZXYod2RhdGEsCi0JCQkJCWNpZnNfdW5jYWNoZWRfd3JpdGVk
YXRhX3JlbGVhc2UpOworCQkJCXJjID0gc2VydmVyLT5vcHMtPmFzeW5jX3dyaXRldih3ZGF0YSk7
CiAJCX0KIAogCQlpZiAocmMpIHsKIAkJCWFkZF9jcmVkaXRzX2FuZF93YWtlX2lmKHNlcnZlciwg
JndkYXRhLT5jcmVkaXRzLCAwKTsKLQkJCWtyZWZfcHV0KCZ3ZGF0YS0+cmVmY291bnQsCi0JCQkJ
IGNpZnNfdW5jYWNoZWRfd3JpdGVkYXRhX3JlbGVhc2UpOworCQkJY2lmc19wdXRfd3JpdGVkYXRh
KHdkYXRhKTsKIAkJCWlmIChyYyA9PSAtRUFHQUlOKQogCQkJCWNvbnRpbnVlOwogCQkJYnJlYWs7
CkBAIC0zNDgzLDcgKzM0NjksNyBAQCBjaWZzX3dyaXRlX2Zyb21faXRlcihsb2ZmX3QgZnBvcywg
c2l6ZV90IGxlbiwgc3RydWN0IGlvdl9pdGVyICpmcm9tLAogCiBzdGF0aWMgdm9pZCBjb2xsZWN0
X3VuY2FjaGVkX3dyaXRlX2RhdGEoc3RydWN0IGNpZnNfYWlvX2N0eCAqY3R4KQogewotCXN0cnVj
dCBjaWZzX3dyaXRlZGF0YSAqd2RhdGEsICp0bXA7CisJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVz
dCAqd2RhdGEsICp0bXA7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbjsKIAlzdHJ1Y3QgY2lmc19z
Yl9pbmZvICpjaWZzX3NiOwogCXN0cnVjdCBkZW50cnkgKmRlbnRyeSA9IGN0eC0+Y2ZpbGUtPmRl
bnRyeTsKQEAgLTM1MzgsOCArMzUyNCw3IEBAIHN0YXRpYyB2b2lkIGNvbGxlY3RfdW5jYWNoZWRf
d3JpdGVfZGF0YShzdHJ1Y3QgY2lmc19haW9fY3R4ICpjdHgpCiAJCQkJCQljdHgtPmNmaWxlLCBj
aWZzX3NiLCAmdG1wX2xpc3QsCiAJCQkJCQljdHgpOwogCi0JCQkJCWtyZWZfcHV0KCZ3ZGF0YS0+
cmVmY291bnQsCi0JCQkJCQljaWZzX3VuY2FjaGVkX3dyaXRlZGF0YV9yZWxlYXNlKTsKKwkJCQkJ
Y2lmc19wdXRfd3JpdGVkYXRhKHdkYXRhKTsKIAkJCQl9CiAKIAkJCQlsaXN0X3NwbGljZSgmdG1w
X2xpc3QsICZjdHgtPmxpc3QpOwpAQCAtMzU0Nyw3ICszNTMyLDcgQEAgc3RhdGljIHZvaWQgY29s
bGVjdF91bmNhY2hlZF93cml0ZV9kYXRhKHN0cnVjdCBjaWZzX2Fpb19jdHggKmN0eCkKIAkJCX0K
IAkJfQogCQlsaXN0X2RlbF9pbml0KCZ3ZGF0YS0+bGlzdCk7Ci0JCWtyZWZfcHV0KCZ3ZGF0YS0+
cmVmY291bnQsIGNpZnNfdW5jYWNoZWRfd3JpdGVkYXRhX3JlbGVhc2UpOworCQljaWZzX3B1dF93
cml0ZWRhdGEod2RhdGEpOwogCX0KIAogCWNpZnNfc3RhdHNfYnl0ZXNfd3JpdHRlbih0Y29uLCBj
dHgtPnRvdGFsX2xlbik7CmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L3NtYjJwZHUuYyBiL2Zz
L3NtYi9jbGllbnQvc21iMnBkdS5jCmluZGV4IDFmYTc3MWUyMDI2My4uNzIwMjYzMTM2YmI5IDEw
MDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L3NtYjJwZHUuYworKysgYi9mcy9zbWIvY2xpZW50L3Nt
YjJwZHUuYwpAQCAtNDU3Myw3ICs0NTczLDcgQEAgU01CMl9yZWFkKGNvbnN0IHVuc2lnbmVkIGlu
dCB4aWQsIHN0cnVjdCBjaWZzX2lvX3Bhcm1zICppb19wYXJtcywKIHN0YXRpYyB2b2lkCiBzbWIy
X3dyaXRldl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIHsKLQlzdHJ1Y3QgY2lm
c193cml0ZWRhdGEgKndkYXRhID0gbWlkLT5jYWxsYmFja19kYXRhOworCXN0cnVjdCBjaWZzX2lv
X3N1YnJlcXVlc3QgKndkYXRhID0gbWlkLT5jYWxsYmFja19kYXRhOwogCXN0cnVjdCBjaWZzX3Rj
b24gKnRjb24gPSB0bGlua190Y29uKHdkYXRhLT5jZmlsZS0+dGxpbmspOwogCXN0cnVjdCBUQ1Bf
U2VydmVyX0luZm8gKnNlcnZlciA9IHdkYXRhLT5zZXJ2ZXI7CiAJdW5zaWduZWQgaW50IHdyaXR0
ZW47CkBAIC00NjU0LDggKzQ2NTQsNyBAQCBzbWIyX3dyaXRldl9jYWxsYmFjayhzdHJ1Y3QgbWlk
X3FfZW50cnkgKm1pZCkKIAogLyogc21iMl9hc3luY193cml0ZXYgLSBzZW5kIGFuIGFzeW5jIHdy
aXRlLCBhbmQgc2V0IHVwIG1pZCB0byBoYW5kbGUgcmVzdWx0ICovCiBpbnQKLXNtYjJfYXN5bmNf
d3JpdGV2KHN0cnVjdCBjaWZzX3dyaXRlZGF0YSAqd2RhdGEsCi0JCSAgdm9pZCAoKnJlbGVhc2Up
KHN0cnVjdCBrcmVmICprcmVmKSkKK3NtYjJfYXN5bmNfd3JpdGV2KHN0cnVjdCBjaWZzX2lvX3N1
YnJlcXVlc3QgKndkYXRhKQogewogCWludCByYyA9IC1FQUNDRVMsIGZsYWdzID0gMDsKIAlzdHJ1
Y3Qgc21iMl93cml0ZV9yZXEgKnJlcSA9IE5VTEw7CkBAIC00Nzg3LDcgKzQ3ODYsNyBAQCBzbWIy
X2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhLAogCQlmbGFncyB8PSBD
SUZTX0hBU19DUkVESVRTOwogCX0KIAotCWtyZWZfZ2V0KCZ3ZGF0YS0+cmVmY291bnQpOworCWNp
ZnNfZ2V0X3dyaXRlZGF0YSh3ZGF0YSk7CiAJcmMgPSBjaWZzX2NhbGxfYXN5bmMoc2VydmVyLCAm
cnFzdCwgTlVMTCwgc21iMl93cml0ZXZfY2FsbGJhY2ssIE5VTEwsCiAJCQkgICAgIHdkYXRhLCBm
bGFncywgJndkYXRhLT5jcmVkaXRzKTsKIApAQCAtNDc5OSw3ICs0Nzk4LDcgQEAgc21iMl9hc3lu
Y193cml0ZXYoc3RydWN0IGNpZnNfd3JpdGVkYXRhICp3ZGF0YSwKIAkJCQkgICAgIGlvX3Bhcm1z
LT5vZmZzZXQsCiAJCQkJICAgICBpb19wYXJtcy0+bGVuZ3RoLAogCQkJCSAgICAgcmMpOwotCQlr
cmVmX3B1dCgmd2RhdGEtPnJlZmNvdW50LCByZWxlYXNlKTsKKwkJY2lmc19wdXRfd3JpdGVkYXRh
KHdkYXRhKTsKIAkJY2lmc19zdGF0c19mYWlsX2luYyh0Y29uLCBTTUIyX1dSSVRFX0hFKTsKIAl9
CiAKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvc21iMnByb3RvLmggYi9mcy9zbWIvY2xpZW50
L3NtYjJwcm90by5oCmluZGV4IDYxMTZhODAzZjZjZi4uMjczZjA4YzFiMzY3IDEwMDY0NAotLS0g
YS9mcy9zbWIvY2xpZW50L3NtYjJwcm90by5oCisrKyBiL2ZzL3NtYi9jbGllbnQvc21iMnByb3Rv
LmgKQEAgLTIwNSw4ICsyMDUsNyBAQCBleHRlcm4gaW50IFNNQjJfZ2V0X3Nydl9udW0oY29uc3Qg
dW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKIGV4dGVybiBpbnQgc21i
Ml9hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSk7CiBleHRlcm4g
aW50IFNNQjJfcmVhZChjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19pb19wYXJt
cyAqaW9fcGFybXMsCiAJCSAgICAgdW5zaWduZWQgaW50ICpuYnl0ZXMsIGNoYXIgKipidWYsIGlu
dCAqYnVmX3R5cGUpOwotZXh0ZXJuIGludCBzbWIyX2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc193
cml0ZWRhdGEgKndkYXRhLAotCQkJICAgICB2b2lkICgqcmVsZWFzZSkoc3RydWN0IGtyZWYgKmty
ZWYpKTsKK2V4dGVybiBpbnQgc21iMl9hc3luY193cml0ZXYoc3RydWN0IGNpZnNfaW9fc3VicmVx
dWVzdCAqd2RhdGEpOwogZXh0ZXJuIGludCBTTUIyX3dyaXRlKGNvbnN0IHVuc2lnbmVkIGludCB4
aWQsIHN0cnVjdCBjaWZzX2lvX3Bhcm1zICppb19wYXJtcywKIAkJICAgICAgdW5zaWduZWQgaW50
ICpuYnl0ZXMsIHN0cnVjdCBrdmVjICppb3YsIGludCBuX3ZlYyk7CiBleHRlcm4gaW50IFNNQjJf
ZWNobyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpOwotLSAKMi40MC4xCgo=
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0002-cifs-Share-server-EOF-pos-with-netfslib.patch"
Content-Disposition: attachment; 
	filename="0002-cifs-Share-server-EOF-pos-with-netfslib.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6za28>
X-Attachment-Id: f_lroc6za28

RnJvbSBkOWNlMmI3ZDU4ZDg2MmE0YjAzY2I2ODMyYTliZjI0NTM3OWQwNjJmIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBUdWUsIDE1IEZlYiAyMDIyIDE5OjIyOjE4ICswMDAwClN1YmplY3Q6IFtQQVRDSCAwMi8x
MF0gY2lmczogU2hhcmUgc2VydmVyIEVPRiBwb3Mgd2l0aCBuZXRmc2xpYgoKVXNlIGNpZnNpLT5u
ZXRmc19jdHgucmVtb3RlX2lfc2l6ZSBpbnN0ZWFkIG9mIGNpZnNpLT5zZXJ2ZXJfZW9mIHNvIHRo
YXQKbmV0ZnNsaWIgY2FuIHJlZmVyIHRvIGl0IHRvLgoKU2lnbmVkLW9mZi1ieTogRGF2aWQgSG93
ZWxscyA8ZGhvd2VsbHNAcmVkaGF0LmNvbT4KY2M6IFNoeWFtIFByYXNhZCBOIDxuc3BtYW5nYWxv
cmVAZ21haWwuY29tPgpjYzogUm9oaXRoIFN1cmFiYXR0dWxhIDxyb2hpdGhzLm1zZnRAZ21haWwu
Y29tPgpjYzogSmVmZiBMYXl0b24gPGpsYXl0b25Aa2VybmVsLm9yZz4KY2M6IGxpbnV4LWNpZnNA
dmdlci5rZXJuZWwub3JnCmNjOiBsaW51eC1jYWNoZWZzQHJlZGhhdC5jb20KY2M6IGxpbnV4LWZz
ZGV2ZWxAdmdlci5rZXJuZWwub3JnCmNjOiBsaW51eC1tbUBrdmFjay5vcmcKU2lnbmVkLW9mZi1i
eTogU3RldmUgRnJlbmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL3NtYi9jbGll
bnQvY2lmc2ZzLmMgICB8IDE3ICsrKysrKysrKysrKysrLS0tCiBmcy9zbWIvY2xpZW50L2NpZnNn
bG9iLmggfCAgMSAtCiBmcy9zbWIvY2xpZW50L2ZpbGUuYyAgICAgfCAgOCArKysrLS0tLQogZnMv
c21iL2NsaWVudC9pbm9kZS5jICAgIHwgIDggKysrKystLS0KIGZzL3NtYi9jbGllbnQvc21iMm9w
cy5jICB8IDE4ICsrKysrKysrKysrKystLS0tLQogNSBmaWxlcyBjaGFuZ2VkLCAzNiBpbnNlcnRp
b25zKCspLCAxNiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NpZnNm
cy5jIGIvZnMvc21iL2NsaWVudC9jaWZzZnMuYwppbmRleCBlOTAyZGU0ZTQ3NWEuLjJhNGE0ZTNh
ODc1MSAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9jaWZzZnMuYworKysgYi9mcy9zbWIvY2xp
ZW50L2NpZnNmcy5jCkBAIC0zOTYsNyArMzk2LDcgQEAgY2lmc19hbGxvY19pbm9kZShzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnNiKQogCXNwaW5fbG9ja19pbml0KCZjaWZzX2lub2RlLT53cml0ZXJzX2xv
Y2spOwogCWNpZnNfaW5vZGUtPndyaXRlcnMgPSAwOwogCWNpZnNfaW5vZGUtPm5ldGZzLmlub2Rl
LmlfYmxrYml0cyA9IDE0OyAgLyogMioqMTQgPSBDSUZTX01BWF9NU0dTSVpFICovCi0JY2lmc19p
bm9kZS0+c2VydmVyX2VvZiA9IDA7CisJY2lmc19pbm9kZS0+bmV0ZnMucmVtb3RlX2lfc2l6ZSA9
IDA7CiAJY2lmc19pbm9kZS0+dW5pcXVlaWQgPSAwOwogCWNpZnNfaW5vZGUtPmNyZWF0ZXRpbWUg
PSAwOwogCWNpZnNfaW5vZGUtPmVwb2NoID0gMDsKQEAgLTEzODAsNiArMTM4MCw3IEBAIHNzaXpl
X3QgY2lmc19maWxlX2NvcHljaHVua19yYW5nZSh1bnNpZ25lZCBpbnQgeGlkLAogCXN0cnVjdCBp
bm9kZSAqc3JjX2lub2RlID0gZmlsZV9pbm9kZShzcmNfZmlsZSk7CiAJc3RydWN0IGlub2RlICp0
YXJnZXRfaW5vZGUgPSBmaWxlX2lub2RlKGRzdF9maWxlKTsKIAlzdHJ1Y3QgY2lmc0lub2RlSW5m
byAqc3JjX2NpZnNpID0gQ0lGU19JKHNyY19pbm9kZSk7CisJc3RydWN0IGNpZnNJbm9kZUluZm8g
KnRhcmdldF9jaWZzaSA9IENJRlNfSSh0YXJnZXRfaW5vZGUpOwogCXN0cnVjdCBjaWZzRmlsZUlu
Zm8gKnNtYl9maWxlX3NyYzsKIAlzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpzbWJfZmlsZV90YXJnZXQ7
CiAJc3RydWN0IGNpZnNfdGNvbiAqc3JjX3Rjb247CkBAIC0xNDI4LDcgKzE0MjksNyBAQCBzc2l6
ZV90IGNpZnNfZmlsZV9jb3B5Y2h1bmtfcmFuZ2UodW5zaWduZWQgaW50IHhpZCwKIAkgKiBBZHZh
bmNlIHRoZSBFT0YgbWFya2VyIGFmdGVyIHRoZSBmbHVzaCBhYm92ZSB0byB0aGUgZW5kIG9mIHRo
ZSByYW5nZQogCSAqIGlmIGl0J3Mgc2hvcnQgb2YgdGhhdC4KIAkgKi8KLQlpZiAoc3JjX2NpZnNp
LT5zZXJ2ZXJfZW9mIDwgb2ZmICsgbGVuKSB7CisJaWYgKHNyY19jaWZzaS0+bmV0ZnMucmVtb3Rl
X2lfc2l6ZSA8IG9mZiArIGxlbikgewogCQlyYyA9IGNpZnNfcHJlY29weV9zZXRfZW9mKHNyY19p
bm9kZSwgc3JjX2NpZnNpLCBzcmNfdGNvbiwgeGlkLCBvZmYgKyBsZW4pOwogCQlpZiAocmMgPCAw
KQogCQkJZ290byB1bmxvY2s7CkBAIC0xNDUyLDEyICsxNDUzLDIyIEBAIHNzaXplX3QgY2lmc19m
aWxlX2NvcHljaHVua19yYW5nZSh1bnNpZ25lZCBpbnQgeGlkLAogCS8qIERpc2NhcmQgYWxsIHRo
ZSBmb2xpb3MgdGhhdCBvdmVybGFwIHRoZSBkZXN0aW5hdGlvbiByZWdpb24uICovCiAJdHJ1bmNh
dGVfaW5vZGVfcGFnZXNfcmFuZ2UoJnRhcmdldF9pbm9kZS0+aV9kYXRhLCBmc3RhcnQsIGZlbmQp
OwogCisJZnNjYWNoZV9pbnZhbGlkYXRlKGNpZnNfaW5vZGVfY29va2llKHRhcmdldF9pbm9kZSks
IE5VTEwsCisJCQkgICBpX3NpemVfcmVhZCh0YXJnZXRfaW5vZGUpLCAwKTsKKwogCXJjID0gZmls
ZV9tb2RpZmllZChkc3RfZmlsZSk7CiAJaWYgKCFyYykgewogCQlyYyA9IHRhcmdldF90Y29uLT5z
ZXMtPnNlcnZlci0+b3BzLT5jb3B5Y2h1bmtfcmFuZ2UoeGlkLAogCQkJc21iX2ZpbGVfc3JjLCBz
bWJfZmlsZV90YXJnZXQsIG9mZiwgbGVuLCBkZXN0b2ZmKTsKLQkJaWYgKHJjID4gMCAmJiBkZXN0
b2ZmICsgcmMgPiBpX3NpemVfcmVhZCh0YXJnZXRfaW5vZGUpKQorCQlpZiAocmMgPiAwICYmIGRl
c3RvZmYgKyByYyA+IGlfc2l6ZV9yZWFkKHRhcmdldF9pbm9kZSkpIHsKIAkJCXRydW5jYXRlX3Nl
dHNpemUodGFyZ2V0X2lub2RlLCBkZXN0b2ZmICsgcmMpOworCQkJbmV0ZnNfcmVzaXplX2ZpbGUo
JnRhcmdldF9jaWZzaS0+bmV0ZnMsCisJCQkJCSAgaV9zaXplX3JlYWQodGFyZ2V0X2lub2RlKSwg
dHJ1ZSk7CisJCQlmc2NhY2hlX3Jlc2l6ZV9jb29raWUoY2lmc19pbm9kZV9jb29raWUodGFyZ2V0
X2lub2RlKSwKKwkJCQkJICAgICAgaV9zaXplX3JlYWQodGFyZ2V0X2lub2RlKSk7CisJCX0KKwkJ
aWYgKHJjID4gMCAmJiBkZXN0b2ZmICsgcmMgPiB0YXJnZXRfY2lmc2ktPm5ldGZzLnplcm9fcG9p
bnQpCisJCQl0YXJnZXRfY2lmc2ktPm5ldGZzLnplcm9fcG9pbnQgPSBkZXN0b2ZmICsgcmM7CiAJ
fQogCiAJZmlsZV9hY2Nlc3NlZChzcmNfZmlsZSk7CmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50
L2NpZnNnbG9iLmggYi9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmgKaW5kZXggYWFiZWYxYTM5MDMy
Li5hN2FhNzVkZjM4YTMgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaAorKysg
Yi9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmgKQEAgLTE1NjMsNyArMTU2Myw2IEBAIHN0cnVjdCBj
aWZzSW5vZGVJbmZvIHsKIAlzcGlubG9ja190IHdyaXRlcnNfbG9jazsKIAl1bnNpZ25lZCBpbnQg
d3JpdGVyczsJCS8qIE51bWJlciBvZiB3cml0ZXJzIG9uIHRoaXMgaW5vZGUgKi8KIAl1bnNpZ25l
ZCBsb25nIHRpbWU7CQkvKiBqaWZmaWVzIG9mIGxhc3QgdXBkYXRlIG9mIGlub2RlICovCi0JdTY0
ICBzZXJ2ZXJfZW9mOwkJLyogY3VycmVudCBmaWxlIHNpemUgb24gc2VydmVyIC0tIHByb3RlY3Rl
ZCBieSBpX2xvY2sgKi8KIAl1NjQgIHVuaXF1ZWlkOwkJCS8qIHNlcnZlciBpbm9kZSBudW1iZXIg
Ki8KIAl1NjQgIGNyZWF0ZXRpbWU7CQkvKiBjcmVhdGlvbiB0aW1lIG9uIHNlcnZlciAqLwogCV9f
dTggbGVhc2Vfa2V5W1NNQjJfTEVBU0VfS0VZX1NJWkVdOwkvKiBsZWFzZSBrZXkgZm9yIHRoaXMg
aW5vZGUgKi8KZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvZmlsZS5jIGIvZnMvc21iL2NsaWVu
dC9maWxlLmMKaW5kZXggYmRmYzE1MTQzY2QwLi4yZjk2ZWE0ODg1ZjAgMTAwNjQ0Ci0tLSBhL2Zz
L3NtYi9jbGllbnQvZmlsZS5jCisrKyBiL2ZzL3NtYi9jbGllbnQvZmlsZS5jCkBAIC0yMTIwLDgg
KzIxMjAsOCBAQCBjaWZzX3VwZGF0ZV9lb2Yoc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNpLCBs
b2ZmX3Qgb2Zmc2V0LAogewogCWxvZmZfdCBlbmRfb2Zfd3JpdGUgPSBvZmZzZXQgKyBieXRlc193
cml0dGVuOwogCi0JaWYgKGVuZF9vZl93cml0ZSA+IGNpZnNpLT5zZXJ2ZXJfZW9mKQotCQljaWZz
aS0+c2VydmVyX2VvZiA9IGVuZF9vZl93cml0ZTsKKwlpZiAoZW5kX29mX3dyaXRlID4gY2lmc2kt
Pm5ldGZzLnJlbW90ZV9pX3NpemUpCisJCW5ldGZzX3Jlc2l6ZV9maWxlKCZjaWZzaS0+bmV0ZnMs
IGVuZF9vZl93cml0ZSwgdHJ1ZSk7CiB9CiAKIHN0YXRpYyBzc2l6ZV90CkBAIC0zMjQ3LDggKzMy
NDcsOCBAQCBjaWZzX3VuY2FjaGVkX3dyaXRldl9jb21wbGV0ZShzdHJ1Y3Qgd29ya19zdHJ1Y3Qg
KndvcmspCiAKIAlzcGluX2xvY2soJmlub2RlLT5pX2xvY2spOwogCWNpZnNfdXBkYXRlX2VvZihj
aWZzaSwgd2RhdGEtPm9mZnNldCwgd2RhdGEtPmJ5dGVzKTsKLQlpZiAoY2lmc2ktPnNlcnZlcl9l
b2YgPiBpbm9kZS0+aV9zaXplKQotCQlpX3NpemVfd3JpdGUoaW5vZGUsIGNpZnNpLT5zZXJ2ZXJf
ZW9mKTsKKwlpZiAoY2lmc2ktPm5ldGZzLnJlbW90ZV9pX3NpemUgPiBpbm9kZS0+aV9zaXplKQor
CQlpX3NpemVfd3JpdGUoaW5vZGUsIGNpZnNpLT5uZXRmcy5yZW1vdGVfaV9zaXplKTsKIAlzcGlu
X3VubG9jaygmaW5vZGUtPmlfbG9jayk7CiAKIAljb21wbGV0ZSgmd2RhdGEtPmRvbmUpOwpkaWZm
IC0tZ2l0IGEvZnMvc21iL2NsaWVudC9pbm9kZS5jIGIvZnMvc21iL2NsaWVudC9pbm9kZS5jCmlu
ZGV4IGYwOTg5NDg0ZjJjNi4uZDAyZjhiYTI5Y2I1IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50
L2lub2RlLmMKKysrIGIvZnMvc21iL2NsaWVudC9pbm9kZS5jCkBAIC0xMDQsNyArMTA0LDcgQEAg
Y2lmc19yZXZhbGlkYXRlX2NhY2hlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBjaWZzX2Zh
dHRyICpmYXR0cikKIAlmYXR0ci0+Y2ZfbXRpbWUgPSB0aW1lc3RhbXBfdHJ1bmNhdGUoZmF0dHIt
PmNmX210aW1lLCBpbm9kZSk7CiAJbXRpbWUgPSBpbm9kZV9nZXRfbXRpbWUoaW5vZGUpOwogCWlm
ICh0aW1lc3BlYzY0X2VxdWFsKCZtdGltZSwgJmZhdHRyLT5jZl9tdGltZSkgJiYKLQkgICAgY2lm
c19pLT5zZXJ2ZXJfZW9mID09IGZhdHRyLT5jZl9lb2YpIHsKKwkgICAgY2lmc19pLT5uZXRmcy5y
ZW1vdGVfaV9zaXplID09IGZhdHRyLT5jZl9lb2YpIHsKIAkJY2lmc19kYmcoRllJLCAiJXM6IGlu
b2RlICVsbHUgaXMgdW5jaGFuZ2VkXG4iLAogCQkJIF9fZnVuY19fLCBjaWZzX2ktPnVuaXF1ZWlk
KTsKIAkJcmV0dXJuOwpAQCAtMTk0LDcgKzE5NCw3IEBAIGNpZnNfZmF0dHJfdG9faW5vZGUoc3Ry
dWN0IGlub2RlICppbm9kZSwgc3RydWN0IGNpZnNfZmF0dHIgKmZhdHRyKQogCWVsc2UKIAkJY2xl
YXJfYml0KENJRlNfSU5PX0RFTEVURV9QRU5ESU5HLCAmY2lmc19pLT5mbGFncyk7CiAKLQljaWZz
X2ktPnNlcnZlcl9lb2YgPSBmYXR0ci0+Y2ZfZW9mOworCWNpZnNfaS0+bmV0ZnMucmVtb3RlX2lf
c2l6ZSA9IGZhdHRyLT5jZl9lb2Y7CiAJLyoKIAkgKiBDYW4ndCBzYWZlbHkgY2hhbmdlIHRoZSBm
aWxlIHNpemUgaGVyZSBpZiB0aGUgY2xpZW50IGlzIHdyaXRpbmcgdG8KIAkgKiBpdCBkdWUgdG8g
cG90ZW50aWFsIHJhY2VzLgpAQCAtMjg1OCw3ICsyODU4LDcgQEAgY2lmc19zZXRfZmlsZV9zaXpl
KHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBpYXR0ciAqYXR0cnMsCiAKIHNldF9zaXplX291
dDoKIAlpZiAocmMgPT0gMCkgewotCQljaWZzSW5vZGUtPnNlcnZlcl9lb2YgPSBhdHRycy0+aWFf
c2l6ZTsKKwkJbmV0ZnNfcmVzaXplX2ZpbGUoJmNpZnNJbm9kZS0+bmV0ZnMsIGF0dHJzLT5pYV9z
aXplLCB0cnVlKTsKIAkJY2lmc19zZXRzaXplKGlub2RlLCBhdHRycy0+aWFfc2l6ZSk7CiAJCS8q
CiAJCSAqIGlfYmxvY2tzIGlzIG5vdCByZWxhdGVkIHRvIChpX3NpemUgLyBpX2Jsa3NpemUpLCBi
dXQgaW5zdGVhZApAQCAtMzAxMSw2ICszMDExLDcgQEAgY2lmc19zZXRhdHRyX3VuaXgoc3RydWN0
IGRlbnRyeSAqZGlyZW50cnksIHN0cnVjdCBpYXR0ciAqYXR0cnMpCiAJaWYgKChhdHRycy0+aWFf
dmFsaWQgJiBBVFRSX1NJWkUpICYmCiAJICAgIGF0dHJzLT5pYV9zaXplICE9IGlfc2l6ZV9yZWFk
KGlub2RlKSkgewogCQl0cnVuY2F0ZV9zZXRzaXplKGlub2RlLCBhdHRycy0+aWFfc2l6ZSk7CisJ
CW5ldGZzX3Jlc2l6ZV9maWxlKCZjaWZzSW5vZGUtPm5ldGZzLCBhdHRycy0+aWFfc2l6ZSwgdHJ1
ZSk7CiAJCWZzY2FjaGVfcmVzaXplX2Nvb2tpZShjaWZzX2lub2RlX2Nvb2tpZShpbm9kZSksIGF0
dHJzLT5pYV9zaXplKTsKIAl9CiAKQEAgLTMyMTAsNiArMzIxMSw3IEBAIGNpZnNfc2V0YXR0cl9u
b3VuaXgoc3RydWN0IGRlbnRyeSAqZGlyZW50cnksIHN0cnVjdCBpYXR0ciAqYXR0cnMpCiAJaWYg
KChhdHRycy0+aWFfdmFsaWQgJiBBVFRSX1NJWkUpICYmCiAJICAgIGF0dHJzLT5pYV9zaXplICE9
IGlfc2l6ZV9yZWFkKGlub2RlKSkgewogCQl0cnVuY2F0ZV9zZXRzaXplKGlub2RlLCBhdHRycy0+
aWFfc2l6ZSk7CisJCW5ldGZzX3Jlc2l6ZV9maWxlKCZjaWZzSW5vZGUtPm5ldGZzLCBhdHRycy0+
aWFfc2l6ZSwgdHJ1ZSk7CiAJCWZzY2FjaGVfcmVzaXplX2Nvb2tpZShjaWZzX2lub2RlX2Nvb2tp
ZShpbm9kZSksIGF0dHJzLT5pYV9zaXplKTsKIAl9CiAKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGll
bnQvc21iMm9wcy5jIGIvZnMvc21iL2NsaWVudC9zbWIyb3BzLmMKaW5kZXggNjFkODFlMzVhNmI0
Li5lMTYxYTQxY2IyNjIgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvc21iMm9wcy5jCisrKyBi
L2ZzL3NtYi9jbGllbnQvc21iMm9wcy5jCkBAIC0zMjEzLDYgKzMyMTMsOSBAQCBzdGF0aWMgbG9u
ZyBzbWIzX3plcm9fcmFuZ2Uoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBjaWZzX3Rjb24gKnRj
b24sCiAJCQkJICBjZmlsZS0+ZmlkLnZvbGF0aWxlX2ZpZCwgY2ZpbGUtPnBpZCwgbmV3X3NpemUp
OwogCQlpZiAocmMgPj0gMCkgewogCQkJdHJ1bmNhdGVfc2V0c2l6ZShpbm9kZSwgbmV3X3NpemUp
OworCQkJbmV0ZnNfcmVzaXplX2ZpbGUoJmNpZnNpLT5uZXRmcywgbmV3X3NpemUsIHRydWUpOwor
CQkJaWYgKG9mZnNldCA8IGNpZnNpLT5uZXRmcy56ZXJvX3BvaW50KQorCQkJCWNpZnNpLT5uZXRm
cy56ZXJvX3BvaW50ID0gb2Zmc2V0OwogCQkJZnNjYWNoZV9yZXNpemVfY29va2llKGNpZnNfaW5v
ZGVfY29va2llKGlub2RlKSwgbmV3X3NpemUpOwogCQl9CiAJfQpAQCAtMzQzNiw3ICszNDM5LDcg
QEAgc3RhdGljIGxvbmcgc21iM19zaW1wbGVfZmFsbG9jKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1
Y3QgY2lmc190Y29uICp0Y29uLAogCQlyYyA9IFNNQjJfc2V0X2VvZih4aWQsIHRjb24sIGNmaWxl
LT5maWQucGVyc2lzdGVudF9maWQsCiAJCQkJICBjZmlsZS0+ZmlkLnZvbGF0aWxlX2ZpZCwgY2Zp
bGUtPnBpZCwgbmV3X2VvZik7CiAJCWlmIChyYyA9PSAwKSB7Ci0JCQljaWZzaS0+c2VydmVyX2Vv
ZiA9IG5ld19lb2Y7CisJCQluZXRmc19yZXNpemVfZmlsZSgmY2lmc2ktPm5ldGZzLCBuZXdfZW9m
LCB0cnVlKTsKIAkJCWNpZnNfc2V0c2l6ZShpbm9kZSwgbmV3X2VvZik7CiAJCQljaWZzX3RydW5j
YXRlX3BhZ2UoaW5vZGUtPmlfbWFwcGluZywgaW5vZGUtPmlfc2l6ZSk7CiAJCQl0cnVuY2F0ZV9z
ZXRzaXplKGlub2RlLCBuZXdfZW9mKTsKQEAgLTM1MjgsOCArMzUzMSw5IEBAIHN0YXRpYyBsb25n
IHNtYjNfY29sbGFwc2VfcmFuZ2Uoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBjaWZzX3Rjb24g
KnRjb24sCiAJaW50IHJjOwogCXVuc2lnbmVkIGludCB4aWQ7CiAJc3RydWN0IGlub2RlICppbm9k
ZSA9IGZpbGVfaW5vZGUoZmlsZSk7Ci0Jc3RydWN0IGNpZnNGaWxlSW5mbyAqY2ZpbGUgPSBmaWxl
LT5wcml2YXRlX2RhdGE7CiAJc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNpID0gQ0lGU19JKGlu
b2RlKTsKKwlzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpjZmlsZSA9IGZpbGUtPnByaXZhdGVfZGF0YTsK
KwlzdHJ1Y3QgbmV0ZnNfaW5vZGUgKmljdHggPSAmY2lmc2ktPm5ldGZzOwogCWxvZmZfdCBvbGRf
ZW9mLCBuZXdfZW9mOwogCiAJeGlkID0gZ2V0X3hpZCgpOwpAQCAtMzU0OSw2ICszNTUzLDcgQEAg
c3RhdGljIGxvbmcgc21iM19jb2xsYXBzZV9yYW5nZShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0
IGNpZnNfdGNvbiAqdGNvbiwKIAkJZ290byBvdXRfMjsKIAogCXRydW5jYXRlX3BhZ2VjYWNoZV9y
YW5nZShpbm9kZSwgb2ZmLCBvbGRfZW9mKTsKKwlpY3R4LT56ZXJvX3BvaW50ID0gb2xkX2VvZjsK
IAogCXJjID0gc21iMl9jb3B5Y2h1bmtfcmFuZ2UoeGlkLCBjZmlsZSwgY2ZpbGUsIG9mZiArIGxl
biwKIAkJCQkgIG9sZF9lb2YgLSBvZmYgLSBsZW4sIG9mZik7CkBAIC0zNTYzLDkgKzM1NjgsMTAg
QEAgc3RhdGljIGxvbmcgc21iM19jb2xsYXBzZV9yYW5nZShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3Ry
dWN0IGNpZnNfdGNvbiAqdGNvbiwKIAogCXJjID0gMDsKIAotCWNpZnNpLT5zZXJ2ZXJfZW9mID0g
aV9zaXplX3JlYWQoaW5vZGUpIC0gbGVuOwotCXRydW5jYXRlX3NldHNpemUoaW5vZGUsIGNpZnNp
LT5zZXJ2ZXJfZW9mKTsKLQlmc2NhY2hlX3Jlc2l6ZV9jb29raWUoY2lmc19pbm9kZV9jb29raWUo
aW5vZGUpLCBjaWZzaS0+c2VydmVyX2VvZik7CisJdHJ1bmNhdGVfc2V0c2l6ZShpbm9kZSwgbmV3
X2VvZik7CisJbmV0ZnNfcmVzaXplX2ZpbGUoJmNpZnNpLT5uZXRmcywgbmV3X2VvZiwgdHJ1ZSk7
CisJaWN0eC0+emVyb19wb2ludCA9IG5ld19lb2Y7CisJZnNjYWNoZV9yZXNpemVfY29va2llKGNp
ZnNfaW5vZGVfY29va2llKGlub2RlKSwgbmV3X2VvZik7CiBvdXRfMjoKIAlmaWxlbWFwX2ludmFs
aWRhdGVfdW5sb2NrKGlub2RlLT5pX21hcHBpbmcpOwogIG91dDoKQEAgLTM1ODEsNiArMzU4Nyw3
IEBAIHN0YXRpYyBsb25nIHNtYjNfaW5zZXJ0X3JhbmdlKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1
Y3QgY2lmc190Y29uICp0Y29uLAogCXVuc2lnbmVkIGludCB4aWQ7CiAJc3RydWN0IGNpZnNGaWxl
SW5mbyAqY2ZpbGUgPSBmaWxlLT5wcml2YXRlX2RhdGE7CiAJc3RydWN0IGlub2RlICppbm9kZSA9
IGZpbGVfaW5vZGUoZmlsZSk7CisJc3RydWN0IGNpZnNJbm9kZUluZm8gKmNpZnNpID0gQ0lGU19J
KGlub2RlKTsKIAlfX3U2NCBjb3VudCwgb2xkX2VvZiwgbmV3X2VvZjsKIAogCXhpZCA9IGdldF94
aWQoKTsKQEAgLTM2MDgsNiArMzYxNSw3IEBAIHN0YXRpYyBsb25nIHNtYjNfaW5zZXJ0X3Jhbmdl
KHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCQlnb3RvIG91dF8y
OwogCiAJdHJ1bmNhdGVfc2V0c2l6ZShpbm9kZSwgbmV3X2VvZik7CisJbmV0ZnNfcmVzaXplX2Zp
bGUoJmNpZnNpLT5uZXRmcywgaV9zaXplX3JlYWQoaW5vZGUpLCB0cnVlKTsKIAlmc2NhY2hlX3Jl
c2l6ZV9jb29raWUoY2lmc19pbm9kZV9jb29raWUoaW5vZGUpLCBpX3NpemVfcmVhZChpbm9kZSkp
OwogCiAJcmMgPSBzbWIyX2NvcHljaHVua19yYW5nZSh4aWQsIGNmaWxlLCBjZmlsZSwgb2ZmLCBj
b3VudCwgb2ZmICsgbGVuKTsKLS0gCjIuNDAuMQoK
--0000000000005c6631060f80007d
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-Replace-cifs_readdata-with-a-wrapper-around-net.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-Replace-cifs_readdata-with-a-wrapper-around-net.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lroc6za59>
X-Attachment-Id: f_lroc6za59

RnJvbSA2ODcyM2VlZDNkY2Y1OWM4NDlhMmRiNWM4ZWU0ZTBhYmZhMGJiOGU4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpE
YXRlOiBXZWQsIDkgTWFyIDIwMjIgMTE6MDE6MTIgKzAwMDAKU3ViamVjdDogW1BBVENIIDAxLzEw
XSBjaWZzOiBSZXBsYWNlIGNpZnNfcmVhZGRhdGEgd2l0aCBhIHdyYXBwZXIgYXJvdW5kCiBuZXRm
c19pb19zdWJyZXF1ZXN0CgpOZXRmc2xpYiBoYXMgYSBmYWNpbGl0eSB3aGVyZWJ5IHRoZSBhbGxv
Y2F0aW9uIGZvciBuZXRmc19pb19zdWJyZXF1ZXN0IGNhbgpiZSBpbmNyZWFzZWQgdG8gc28gdGhh
dCBmaWxlc3lzdGVtLXNwZWNpZmljIGRhdGEgY2FuIGJlIHRhZ2dlZCBvbiB0aGUgZW5kLgoKUHJl
cGFyZSB0byB1c2UgdGhpcyBieSBtYWtpbmcgYSBzdHJ1Y3QsIGNpZnNfaW9fc3VicmVxdWVzdCwg
dGhhdCB3cmFwcwpuZXRmc19pb19zdWJyZXF1ZXN0LCBhbmQgYWJzb3JiIHN0cnVjdCBjaWZzX3Jl
YWRkYXRhIGludG8gaXQuCgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0By
ZWRoYXQuY29tPgpjYzogU2h5YW0gUHJhc2FkIE4gPG5zcG1hbmdhbG9yZUBnbWFpbC5jb20+CmNj
OiBSb2hpdGggU3VyYWJhdHR1bGEgPHJvaGl0aHMubXNmdEBnbWFpbC5jb20+CmNjOiBKZWZmIExh
eXRvbiA8amxheXRvbkBrZXJuZWwub3JnPgpjYzogbGludXgtY2lmc0B2Z2VyLmtlcm5lbC5vcmcK
Y2M6IGxpbnV4LWNhY2hlZnNAcmVkaGF0LmNvbQpjYzogbGludXgtZnNkZXZlbEB2Z2VyLmtlcm5l
bC5vcmcKY2M6IGxpbnV4LW1tQGt2YWNrLm9yZwpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2gg
PHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvc21iL2NsaWVudC9jaWZzZ2xvYi5oICB8
IDIyICsrKysrKysrKystLS0tLS0tLQogZnMvc21iL2NsaWVudC9jaWZzcHJvdG8uaCB8ICA5ICsr
KysrKy0tCiBmcy9zbWIvY2xpZW50L2NpZnNzbWIuYyAgIHwgMTEgKysrKy0tLS0tCiBmcy9zbWIv
Y2xpZW50L2ZpbGUuYyAgICAgIHwgNDggKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0t
LS0tLS0tCiBmcy9zbWIvY2xpZW50L3NtYjJvcHMuYyAgIHwgIDIgKy0KIGZzL3NtYi9jbGllbnQv
c21iMnBkdS5jICAgfCAxMyArKysrKystLS0tLQogZnMvc21iL2NsaWVudC9zbWIycHJvdG8uaCB8
ICAyICstCiBmcy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jIHwgIDQgKystLQogOCBmaWxlcyBjaGFu
Z2VkLCA1NiBpbnNlcnRpb25zKCspLCA1NSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9z
bWIvY2xpZW50L2NpZnNnbG9iLmggYi9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmgKaW5kZXggMjAw
MzZmYjE2Y2VjLi5hYWJlZjFhMzkwMzIgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2ds
b2IuaAorKysgYi9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmgKQEAgLTI1NCw3ICsyNTQsNyBAQCBz
dHJ1Y3QgZGZzX2luZm8zX3BhcmFtOwogc3RydWN0IGNpZnNfZmF0dHI7CiBzdHJ1Y3Qgc21iM19m
c19jb250ZXh0Owogc3RydWN0IGNpZnNfZmlkOwotc3RydWN0IGNpZnNfcmVhZGRhdGE7CitzdHJ1
Y3QgY2lmc19pb19zdWJyZXF1ZXN0Owogc3RydWN0IGNpZnNfd3JpdGVkYXRhOwogc3RydWN0IGNp
ZnNfaW9fcGFybXM7CiBzdHJ1Y3QgY2lmc19zZWFyY2hfaW5mbzsKQEAgLTQzMiw3ICs0MzIsNyBA
QCBzdHJ1Y3Qgc21iX3ZlcnNpb25fb3BlcmF0aW9ucyB7CiAJLyogc2VuZCBhIGZsdXNoIHJlcXVl
c3QgdG8gdGhlIHNlcnZlciAqLwogCWludCAoKmZsdXNoKShjb25zdCB1bnNpZ25lZCBpbnQsIHN0
cnVjdCBjaWZzX3Rjb24gKiwgc3RydWN0IGNpZnNfZmlkICopOwogCS8qIGFzeW5jIHJlYWQgZnJv
bSB0aGUgc2VydmVyICovCi0JaW50ICgqYXN5bmNfcmVhZHYpKHN0cnVjdCBjaWZzX3JlYWRkYXRh
ICopOworCWludCAoKmFzeW5jX3JlYWR2KShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICopOwog
CS8qIGFzeW5jIHdyaXRlIHRvIHRoZSBzZXJ2ZXIgKi8KIAlpbnQgKCphc3luY193cml0ZXYpKHN0
cnVjdCBjaWZzX3dyaXRlZGF0YSAqLAogCQkJICAgIHZvaWQgKCpyZWxlYXNlKShzdHJ1Y3Qga3Jl
ZiAqKSk7CkBAIC0xNDU5LDI2ICsxNDU5LDI4IEBAIHN0cnVjdCBjaWZzX2Fpb19jdHggewogfTsK
IAogLyogYXN5bmNocm9ub3VzIHJlYWQgc3VwcG9ydCAqLwotc3RydWN0IGNpZnNfcmVhZGRhdGEg
ewotCXN0cnVjdCBrcmVmCQkJcmVmY291bnQ7Ci0Jc3RydWN0IGxpc3RfaGVhZAkJbGlzdDsKLQlz
dHJ1Y3QgY29tcGxldGlvbgkJZG9uZTsKK3N0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgeworCXN0
cnVjdCBuZXRmc19pb19zdWJyZXF1ZXN0CXN1YnJlcTsKIAlzdHJ1Y3QgY2lmc0ZpbGVJbmZvCQkq
Y2ZpbGU7CiAJc3RydWN0IGFkZHJlc3Nfc3BhY2UJCSptYXBwaW5nOwogCXN0cnVjdCBjaWZzX2Fp
b19jdHgJCSpjdHg7Ci0JX191NjQJCQkJb2Zmc2V0OwogCXNzaXplX3QJCQkJZ290X2J5dGVzOwot
CXVuc2lnbmVkIGludAkJCWJ5dGVzOwogCXBpZF90CQkJCXBpZDsKIAlpbnQJCQkJcmVzdWx0Owot
CXN0cnVjdCB3b3JrX3N0cnVjdAkJd29yazsKLQlzdHJ1Y3QgaW92X2l0ZXIJCQlpdGVyOwogCXN0
cnVjdCBrdmVjCQkJaW92WzJdOwogCXN0cnVjdCBUQ1BfU2VydmVyX0luZm8JCSpzZXJ2ZXI7CiAj
aWZkZWYgQ09ORklHX0NJRlNfU01CX0RJUkVDVAogCXN0cnVjdCBzbWJkX21yCQkJKm1yOwogI2Vu
ZGlmCiAJc3RydWN0IGNpZnNfY3JlZGl0cwkJY3JlZGl0czsKKworCS8vIFRPRE86IFJlbW92ZSBm
b2xsb3dpbmcgZWxlbWVudHMKKwlzdHJ1Y3QgbGlzdF9oZWFkCQlsaXN0OworCXN0cnVjdCBjb21w
bGV0aW9uCQlkb25lOworCXN0cnVjdCB3b3JrX3N0cnVjdAkJd29yazsKKwlzdHJ1Y3QgaW92X2l0
ZXIJCQlpdGVyOworCV9fdTY0CQkJCW9mZnNldDsKKwl1bnNpZ25lZCBpbnQJCQlieXRlczsKIH07
CiAKIC8qIGFzeW5jaHJvbm91cyB3cml0ZSBzdXBwb3J0ICovCmRpZmYgLS1naXQgYS9mcy9zbWIv
Y2xpZW50L2NpZnNwcm90by5oIGIvZnMvc21iL2NsaWVudC9jaWZzcHJvdG8uaAppbmRleCBhODQx
YmY0OTY3ZmEuLjU3YmExODQwYzU0ZSAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9jaWZzcHJv
dG8uaAorKysgYi9mcy9zbWIvY2xpZW50L2NpZnNwcm90by5oCkBAIC01OTQsOCArNTk0LDEzIEBA
IHZvaWQgX19jaWZzX3B1dF9zbWJfc2VzKHN0cnVjdCBjaWZzX3NlcyAqc2VzKTsKIGV4dGVybiBz
dHJ1Y3QgY2lmc19zZXMgKgogY2lmc19nZXRfc21iX3NlcyhzdHJ1Y3QgVENQX1NlcnZlcl9JbmZv
ICpzZXJ2ZXIsIHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCk7CiAKLXZvaWQgY2lmc19yZWFk
ZGF0YV9yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWZjb3VudCk7Ci1pbnQgY2lmc19hc3luY19yZWFk
dihzdHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEpOwordm9pZCBjaWZzX3JlYWRkYXRhX3JlbGVh
c2Uoc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGEpOworc3RhdGljIGlubGluZSB2b2lk
IGNpZnNfcHV0X3JlYWRkYXRhKHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhKQorewor
CWlmIChyZWZjb3VudF9kZWNfYW5kX3Rlc3QoJnJkYXRhLT5zdWJyZXEucmVmKSkKKwkJY2lmc19y
ZWFkZGF0YV9yZWxlYXNlKHJkYXRhKTsKK30KK2ludCBjaWZzX2FzeW5jX3JlYWR2KHN0cnVjdCBj
aWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhKTsKIGludCBjaWZzX3JlYWR2X3JlY2VpdmUoc3RydWN0
IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCk7CiAKIGlu
dCBjaWZzX2FzeW5jX3dyaXRldihzdHJ1Y3QgY2lmc193cml0ZWRhdGEgKndkYXRhLApkaWZmIC0t
Z2l0IGEvZnMvc21iL2NsaWVudC9jaWZzc21iLmMgYi9mcy9zbWIvY2xpZW50L2NpZnNzbWIuYwpp
bmRleCAwMWU4OTA3MGRmNWEuLjJkMTBjMDdjMTI5NSAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVu
dC9jaWZzc21iLmMKKysrIGIvZnMvc21iL2NsaWVudC9jaWZzc21iLmMKQEAgLTI0LDYgKzI0LDgg
QEAKICNpbmNsdWRlIDxsaW51eC9zd2FwLmg+CiAjaW5jbHVkZSA8bGludXgvdGFza19pb19hY2Nv
dW50aW5nX29wcy5oPgogI2luY2x1ZGUgPGxpbnV4L3VhY2Nlc3MuaD4KKyNpbmNsdWRlIDxsaW51
eC9uZXRmcy5oPgorI2luY2x1ZGUgPHRyYWNlL2V2ZW50cy9uZXRmcy5oPgogI2luY2x1ZGUgImNp
ZnNwZHUuaCIKICNpbmNsdWRlICJjaWZzZnMuaCIKICNpbmNsdWRlICJjaWZzZ2xvYi5oIgpAQCAt
MTI2MiwxMiArMTI2NCwxMSBAQCBDSUZTX29wZW4oY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3Ry
dWN0IGNpZnNfb3Blbl9wYXJtcyAqb3Bhcm1zLCBpbnQgKm9wbG9jaywKIHN0YXRpYyB2b2lkCiBj
aWZzX3JlYWR2X2NhbGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogewotCXN0cnVjdCBj
aWZzX3JlYWRkYXRhICpyZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKKwlzdHJ1Y3QgY2lmc19p
b19zdWJyZXF1ZXN0ICpyZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKIAlzdHJ1Y3QgY2lmc190
Y29uICp0Y29uID0gdGxpbmtfdGNvbihyZGF0YS0+Y2ZpbGUtPnRsaW5rKTsKIAlzdHJ1Y3QgVENQ
X1NlcnZlcl9JbmZvICpzZXJ2ZXIgPSB0Y29uLT5zZXMtPnNlcnZlcjsKIAlzdHJ1Y3Qgc21iX3Jx
c3QgcnFzdCA9IHsgLnJxX2lvdiA9IHJkYXRhLT5pb3YsCiAJCQkJIC5ycV9udmVjID0gMiwKLQkJ
CQkgLnJxX2l0ZXJfc2l6ZSA9IGlvdl9pdGVyX2NvdW50KCZyZGF0YS0+aXRlciksCiAJCQkJIC5y
cV9pdGVyID0gcmRhdGEtPml0ZXIgfTsKIAlzdHJ1Y3QgY2lmc19jcmVkaXRzIGNyZWRpdHMgPSB7
IC52YWx1ZSA9IDEsIC5pbnN0YW5jZSA9IDAgfTsKIApAQCAtMTMxMiw3ICsxMzEzLDcgQEAgY2lm
c19yZWFkdl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIAogLyogY2lmc19hc3lu
Y19yZWFkdiAtIHNlbmQgYW4gYXN5bmMgd3JpdGUsIGFuZCBzZXQgdXAgbWlkIHRvIGhhbmRsZSBy
ZXN1bHQgKi8KIGludAotY2lmc19hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRh
dGEpCitjaWZzX2FzeW5jX3JlYWR2KHN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhKQog
ewogCWludCByYzsKIAlSRUFEX1JFUSAqc21iID0gTlVMTDsKQEAgLTEzNjQsMTUgKzEzNjUsMTEg
QEAgY2lmc19hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEpCiAJcmRhdGEt
PmlvdlsxXS5pb3ZfYmFzZSA9IChjaGFyICopc21iICsgNDsKIAlyZGF0YS0+aW92WzFdLmlvdl9s
ZW4gPSBnZXRfcmZjMTAwMl9sZW5ndGgoc21iKTsKIAotCWtyZWZfZ2V0KCZyZGF0YS0+cmVmY291
bnQpOwogCXJjID0gY2lmc19jYWxsX2FzeW5jKHRjb24tPnNlcy0+c2VydmVyLCAmcnFzdCwgY2lm
c19yZWFkdl9yZWNlaXZlLAogCQkJICAgICBjaWZzX3JlYWR2X2NhbGxiYWNrLCBOVUxMLCByZGF0
YSwgMCwgTlVMTCk7CiAKIAlpZiAocmMgPT0gMCkKIAkJY2lmc19zdGF0c19pbmMoJnRjb24tPnN0
YXRzLmNpZnNfc3RhdHMubnVtX3JlYWRzKTsKLQllbHNlCi0JCWtyZWZfcHV0KCZyZGF0YS0+cmVm
Y291bnQsIGNpZnNfcmVhZGRhdGFfcmVsZWFzZSk7Ci0KIAljaWZzX3NtYWxsX2J1Zl9yZWxlYXNl
KHNtYik7CiAJcmV0dXJuIHJjOwogfQpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9maWxlLmMg
Yi9mcy9zbWIvY2xpZW50L2ZpbGUuYwppbmRleCAzYTIxMzQzMjc3NWIuLmJkZmMxNTE0M2NkMCAx
MDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9maWxlLmMKKysrIGIvZnMvc21iL2NsaWVudC9maWxl
LmMKQEAgLTI5NTEsNyArMjk1MSw3IEBAIHN0YXRpYyBpbnQgY2lmc193cml0ZXBhZ2VzX3JlZ2lv
bihzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKIAkJCWNvbnRpbnVlOwogCQl9CiAKLQkJ
Zm9saW9fYmF0Y2hfcmVsZWFzZSgmZmJhdGNoKTsJCQorCQlmb2xpb19iYXRjaF9yZWxlYXNlKCZm
YmF0Y2gpOwogCQljb25kX3Jlc2NoZWQoKTsKIAl9IHdoaWxlICh3YmMtPm5yX3RvX3dyaXRlID4g
MCk7CiAKQEAgLTM3ODUsMTMgKzM3ODUsMTMgQEAgY2lmc19zdHJpY3Rfd3JpdGV2KHN0cnVjdCBr
aW9jYiAqaW9jYiwgc3RydWN0IGlvdl9pdGVyICpmcm9tKQogCXJldHVybiB3cml0dGVuOwogfQog
Ci1zdGF0aWMgc3RydWN0IGNpZnNfcmVhZGRhdGEgKmNpZnNfcmVhZGRhdGFfYWxsb2Mod29ya19m
dW5jX3QgY29tcGxldGUpCitzdGF0aWMgc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqY2lmc19y
ZWFkZGF0YV9hbGxvYyh3b3JrX2Z1bmNfdCBjb21wbGV0ZSkKIHsKLQlzdHJ1Y3QgY2lmc19yZWFk
ZGF0YSAqcmRhdGE7CisJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGE7CiAKIAlyZGF0
YSA9IGt6YWxsb2Moc2l6ZW9mKCpyZGF0YSksIEdGUF9LRVJORUwpOwogCWlmIChyZGF0YSkgewot
CQlrcmVmX2luaXQoJnJkYXRhLT5yZWZjb3VudCk7CisJCXJlZmNvdW50X3NldCgmcmRhdGEtPnN1
YnJlcS5yZWYsIDEpOwogCQlJTklUX0xJU1RfSEVBRCgmcmRhdGEtPmxpc3QpOwogCQlpbml0X2Nv
bXBsZXRpb24oJnJkYXRhLT5kb25lKTsKIAkJSU5JVF9XT1JLKCZyZGF0YS0+d29yaywgY29tcGxl
dGUpOwpAQCAtMzgwMSwxMSArMzgwMSw4IEBAIHN0YXRpYyBzdHJ1Y3QgY2lmc19yZWFkZGF0YSAq
Y2lmc19yZWFkZGF0YV9hbGxvYyh3b3JrX2Z1bmNfdCBjb21wbGV0ZSkKIH0KIAogdm9pZAotY2lm
c19yZWFkZGF0YV9yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWZjb3VudCkKK2NpZnNfcmVhZGRhdGFf
cmVsZWFzZShzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSkKIHsKLQlzdHJ1Y3QgY2lm
c19yZWFkZGF0YSAqcmRhdGEgPSBjb250YWluZXJfb2YocmVmY291bnQsCi0JCQkJCXN0cnVjdCBj
aWZzX3JlYWRkYXRhLCByZWZjb3VudCk7Ci0KIAlpZiAocmRhdGEtPmN0eCkKIAkJa3JlZl9wdXQo
JnJkYXRhLT5jdHgtPnJlZmNvdW50LCBjaWZzX2Fpb19jdHhfcmVsZWFzZSk7CiAjaWZkZWYgQ09O
RklHX0NJRlNfU01CX0RJUkVDVApAQCAtMzgyNSwxNiArMzgyMiwxNiBAQCBzdGF0aWMgdm9pZCBj
b2xsZWN0X3VuY2FjaGVkX3JlYWRfZGF0YShzdHJ1Y3QgY2lmc19haW9fY3R4ICpjdHgpOwogc3Rh
dGljIHZvaWQKIGNpZnNfdW5jYWNoZWRfcmVhZHZfY29tcGxldGUoc3RydWN0IHdvcmtfc3RydWN0
ICp3b3JrKQogewotCXN0cnVjdCBjaWZzX3JlYWRkYXRhICpyZGF0YSA9IGNvbnRhaW5lcl9vZih3
b3JrLAotCQkJCQkJc3RydWN0IGNpZnNfcmVhZGRhdGEsIHdvcmspOworCXN0cnVjdCBjaWZzX2lv
X3N1YnJlcXVlc3QgKnJkYXRhID0KKwkJY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBjaWZzX2lv
X3N1YnJlcXVlc3QsIHdvcmspOwogCiAJY29tcGxldGUoJnJkYXRhLT5kb25lKTsKIAljb2xsZWN0
X3VuY2FjaGVkX3JlYWRfZGF0YShyZGF0YS0+Y3R4KTsKIAkvKiB0aGUgYmVsb3cgY2FsbCBjYW4g
cG9zc2libHkgZnJlZSB0aGUgbGFzdCByZWYgdG8gYWlvIGN0eCAqLwotCWtyZWZfcHV0KCZyZGF0
YS0+cmVmY291bnQsIGNpZnNfcmVhZGRhdGFfcmVsZWFzZSk7CisJY2lmc19wdXRfcmVhZGRhdGEo
cmRhdGEpOwogfQogCi1zdGF0aWMgaW50IGNpZnNfcmVzZW5kX3JkYXRhKHN0cnVjdCBjaWZzX3Jl
YWRkYXRhICpyZGF0YSwKK3N0YXRpYyBpbnQgY2lmc19yZXNlbmRfcmRhdGEoc3RydWN0IGNpZnNf
aW9fc3VicmVxdWVzdCAqcmRhdGEsCiAJCQlzdHJ1Y3QgbGlzdF9oZWFkICpyZGF0YV9saXN0LAog
CQkJc3RydWN0IGNpZnNfYWlvX2N0eCAqY3R4KQogewpAQCAtMzkwMiw3ICszODk5LDcgQEAgc3Rh
dGljIGludCBjaWZzX3Jlc2VuZF9yZGF0YShzdHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEsCiAJ
fSB3aGlsZSAocmMgPT0gLUVBR0FJTik7CiAKIGZhaWw6Ci0Ja3JlZl9wdXQoJnJkYXRhLT5yZWZj
b3VudCwgY2lmc19yZWFkZGF0YV9yZWxlYXNlKTsKKwljaWZzX3B1dF9yZWFkZGF0YShyZGF0YSk7
CiAJcmV0dXJuIHJjOwogfQogCkBAIC0zOTExLDcgKzM5MDgsNyBAQCBjaWZzX3NlbmRfYXN5bmNf
cmVhZChsb2ZmX3QgZnBvcywgc2l6ZV90IGxlbiwgc3RydWN0IGNpZnNGaWxlSW5mbyAqb3Blbl9m
aWxlLAogCQkgICAgIHN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IsIHN0cnVjdCBsaXN0X2hl
YWQgKnJkYXRhX2xpc3QsCiAJCSAgICAgc3RydWN0IGNpZnNfYWlvX2N0eCAqY3R4KQogewotCXN0
cnVjdCBjaWZzX3JlYWRkYXRhICpyZGF0YTsKKwlzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpy
ZGF0YTsKIAl1bnNpZ25lZCBpbnQgcnNpemUsIG5zZWdzLCBtYXhfc2VncyA9IElOVF9NQVg7CiAJ
c3RydWN0IGNpZnNfY3JlZGl0cyBjcmVkaXRzX29uX3N0YWNrOwogCXN0cnVjdCBjaWZzX2NyZWRp
dHMgKmNyZWRpdHMgPSAmY3JlZGl0c19vbl9zdGFjazsKQEAgLTM5NzksNyArMzk3Niw3IEBAIGNp
ZnNfc2VuZF9hc3luY19yZWFkKGxvZmZfdCBmcG9zLCBzaXplX3QgbGVuLCBzdHJ1Y3QgY2lmc0Zp
bGVJbmZvICpvcGVuX2ZpbGUsCiAJCXJkYXRhLT5jdHgJPSBjdHg7CiAJCWtyZWZfZ2V0KCZjdHgt
PnJlZmNvdW50KTsKIAotCQlyZGF0YS0+aXRlcgk9IGN0eC0+aXRlcjsKKwkJcmRhdGEtPml0ZXIg
PSBjdHgtPml0ZXI7CiAJCWlvdl9pdGVyX3RydW5jYXRlKCZyZGF0YS0+aXRlciwgY3VyX2xlbik7
CiAKIAkJcmMgPSBhZGp1c3RfY3JlZGl0cyhzZXJ2ZXIsICZyZGF0YS0+Y3JlZGl0cywgcmRhdGEt
PmJ5dGVzKTsKQEAgLTM5OTMsNyArMzk5MCw3IEBAIGNpZnNfc2VuZF9hc3luY19yZWFkKGxvZmZf
dCBmcG9zLCBzaXplX3QgbGVuLCBzdHJ1Y3QgY2lmc0ZpbGVJbmZvICpvcGVuX2ZpbGUsCiAKIAkJ
aWYgKHJjKSB7CiAJCQlhZGRfY3JlZGl0c19hbmRfd2FrZV9pZihzZXJ2ZXIsICZyZGF0YS0+Y3Jl
ZGl0cywgMCk7Ci0JCQlrcmVmX3B1dCgmcmRhdGEtPnJlZmNvdW50LCBjaWZzX3JlYWRkYXRhX3Jl
bGVhc2UpOworCQkJY2lmc19wdXRfcmVhZGRhdGEocmRhdGEpOwogCQkJaWYgKHJjID09IC1FQUdB
SU4pCiAJCQkJY29udGludWU7CiAJCQlicmVhazsKQEAgLTQwMTEsNyArNDAwOCw3IEBAIGNpZnNf
c2VuZF9hc3luY19yZWFkKGxvZmZfdCBmcG9zLCBzaXplX3QgbGVuLCBzdHJ1Y3QgY2lmc0ZpbGVJ
bmZvICpvcGVuX2ZpbGUsCiBzdGF0aWMgdm9pZAogY29sbGVjdF91bmNhY2hlZF9yZWFkX2RhdGEo
c3RydWN0IGNpZnNfYWlvX2N0eCAqY3R4KQogewotCXN0cnVjdCBjaWZzX3JlYWRkYXRhICpyZGF0
YSwgKnRtcDsKKwlzdHJ1Y3QgY2lmc19pb19zdWJyZXF1ZXN0ICpyZGF0YSwgKnRtcDsKIAlzdHJ1
Y3QgY2lmc19zYl9pbmZvICpjaWZzX3NiOwogCWludCByYzsKIApAQCAtNDA1Nyw4ICs0MDU0LDcg
QEAgY29sbGVjdF91bmNhY2hlZF9yZWFkX2RhdGEoc3RydWN0IGNpZnNfYWlvX2N0eCAqY3R4KQog
CQkJCQkJcmRhdGEtPmNmaWxlLCBjaWZzX3NiLAogCQkJCQkJJnRtcF9saXN0LCBjdHgpOwogCi0J
CQkJCWtyZWZfcHV0KCZyZGF0YS0+cmVmY291bnQsCi0JCQkJCQljaWZzX3JlYWRkYXRhX3JlbGVh
c2UpOworCQkJCQljaWZzX3B1dF9yZWFkZGF0YShyZGF0YSk7CiAJCQkJfQogCiAJCQkJbGlzdF9z
cGxpY2UoJnRtcF9saXN0LCAmY3R4LT5saXN0KTsKQEAgLTQwNzQsNyArNDA3MCw3IEBAIGNvbGxl
Y3RfdW5jYWNoZWRfcmVhZF9kYXRhKHN0cnVjdCBjaWZzX2Fpb19jdHggKmN0eCkKIAkJCWN0eC0+
dG90YWxfbGVuICs9IHJkYXRhLT5nb3RfYnl0ZXM7CiAJCX0KIAkJbGlzdF9kZWxfaW5pdCgmcmRh
dGEtPmxpc3QpOwotCQlrcmVmX3B1dCgmcmRhdGEtPnJlZmNvdW50LCBjaWZzX3JlYWRkYXRhX3Jl
bGVhc2UpOworCQljaWZzX3B1dF9yZWFkZGF0YShyZGF0YSk7CiAJfQogCiAJLyogbWFzayBub2Rh
dGEgY2FzZSAqLwpAQCAtNDQ0Niw4ICs0NDQyLDggQEAgc3RhdGljIHZvaWQgY2lmc191bmxvY2tf
Zm9saW9zKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLCBwZ29mZl90IGZpcnN0LCBwZ28K
IAogc3RhdGljIHZvaWQgY2lmc19yZWFkYWhlYWRfY29tcGxldGUoc3RydWN0IHdvcmtfc3RydWN0
ICp3b3JrKQogewotCXN0cnVjdCBjaWZzX3JlYWRkYXRhICpyZGF0YSA9IGNvbnRhaW5lcl9vZih3
b3JrLAotCQkJCQkJICAgc3RydWN0IGNpZnNfcmVhZGRhdGEsIHdvcmspOworCXN0cnVjdCBjaWZz
X2lvX3N1YnJlcXVlc3QgKnJkYXRhID0gY29udGFpbmVyX29mKHdvcmssCisJCQkJCQkgICBzdHJ1
Y3QgY2lmc19pb19zdWJyZXF1ZXN0LCB3b3JrKTsKIAlzdHJ1Y3QgZm9saW8gKmZvbGlvOwogCXBn
b2ZmX3QgbGFzdDsKIAlib29sIGdvb2QgPSByZGF0YS0+cmVzdWx0ID09IDAgfHwgKHJkYXRhLT5y
ZXN1bHQgPT0gLUVBR0FJTiAmJiByZGF0YS0+Z290X2J5dGVzKTsKQEAgLTQ0NzMsNyArNDQ2OSw3
IEBAIHN0YXRpYyB2b2lkIGNpZnNfcmVhZGFoZWFkX2NvbXBsZXRlKHN0cnVjdCB3b3JrX3N0cnVj
dCAqd29yaykKIAl9CiAJcmN1X3JlYWRfdW5sb2NrKCk7CiAKLQlrcmVmX3B1dCgmcmRhdGEtPnJl
ZmNvdW50LCBjaWZzX3JlYWRkYXRhX3JlbGVhc2UpOworCWNpZnNfcHV0X3JlYWRkYXRhKHJkYXRh
KTsKIH0KIAogc3RhdGljIHZvaWQgY2lmc19yZWFkYWhlYWQoc3RydWN0IHJlYWRhaGVhZF9jb250
cm9sICpyYWN0bCkKQEAgLTQ1MTMsNyArNDUwOSw3IEBAIHN0YXRpYyB2b2lkIGNpZnNfcmVhZGFo
ZWFkKHN0cnVjdCByZWFkYWhlYWRfY29udHJvbCAqcmFjdGwpCiAJICovCiAJd2hpbGUgKChucl9w
YWdlcyA9IHJhX3BhZ2VzKSkgewogCQl1bnNpZ25lZCBpbnQgaSwgcnNpemU7Ci0JCXN0cnVjdCBj
aWZzX3JlYWRkYXRhICpyZGF0YTsKKwkJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGE7
CiAJCXN0cnVjdCBjaWZzX2NyZWRpdHMgY3JlZGl0c19vbl9zdGFjazsKIAkJc3RydWN0IGNpZnNf
Y3JlZGl0cyAqY3JlZGl0cyA9ICZjcmVkaXRzX29uX3N0YWNrOwogCQlzdHJ1Y3QgZm9saW8gKmZv
bGlvOwpAQCAtNDYzMiwxMSArNDYyOCwxMSBAQCBzdGF0aWMgdm9pZCBjaWZzX3JlYWRhaGVhZChz
dHJ1Y3QgcmVhZGFoZWFkX2NvbnRyb2wgKnJhY3RsKQogCQkJCQkgICByZGF0YS0+b2Zmc2V0IC8g
UEFHRV9TSVpFLAogCQkJCQkgICAocmRhdGEtPm9mZnNldCArIHJkYXRhLT5ieXRlcyAtIDEpIC8g
UEFHRV9TSVpFKTsKIAkJCS8qIEZhbGxiYWNrIHRvIHRoZSByZWFkcGFnZSBpbiBlcnJvci9yZWNv
bm5lY3QgY2FzZXMgKi8KLQkJCWtyZWZfcHV0KCZyZGF0YS0+cmVmY291bnQsIGNpZnNfcmVhZGRh
dGFfcmVsZWFzZSk7CisJCQljaWZzX3B1dF9yZWFkZGF0YShyZGF0YSk7CiAJCQlicmVhazsKIAkJ
fQogCi0JCWtyZWZfcHV0KCZyZGF0YS0+cmVmY291bnQsIGNpZnNfcmVhZGRhdGFfcmVsZWFzZSk7
CisJCWNpZnNfcHV0X3JlYWRkYXRhKHJkYXRhKTsKIAl9CiAKIAlmcmVlX3hpZCh4aWQpOwpkaWZm
IC0tZ2l0IGEvZnMvc21iL2NsaWVudC9zbWIyb3BzLmMgYi9mcy9zbWIvY2xpZW50L3NtYjJvcHMu
YwppbmRleCBkOTU1M2MyNTU2YTIuLjYxZDgxZTM1YTZiNCAxMDA2NDQKLS0tIGEvZnMvc21iL2Ns
aWVudC9zbWIyb3BzLmMKKysrIGIvZnMvc21iL2NsaWVudC9zbWIyb3BzLmMKQEAgLTQ0NjcsNyAr
NDQ2Nyw3IEBAIGhhbmRsZV9yZWFkX2RhdGEoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVy
LCBzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCwKIAl1bnNpZ25lZCBpbnQgY3VyX29mZjsKIAl1bnNp
Z25lZCBpbnQgY3VyX3BhZ2VfaWR4OwogCXVuc2lnbmVkIGludCBwYWRfbGVuOwotCXN0cnVjdCBj
aWZzX3JlYWRkYXRhICpyZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKKwlzdHJ1Y3QgY2lmc19p
b19zdWJyZXF1ZXN0ICpyZGF0YSA9IG1pZC0+Y2FsbGJhY2tfZGF0YTsKIAlzdHJ1Y3Qgc21iMl9o
ZHIgKnNoZHIgPSAoc3RydWN0IHNtYjJfaGRyICopYnVmOwogCWludCBsZW5ndGg7CiAJYm9vbCB1
c2VfcmRtYV9tciA9IGZhbHNlOwpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9zbWIycGR1LmMg
Yi9mcy9zbWIvY2xpZW50L3NtYjJwZHUuYwppbmRleCAyODgxOTlmMGI5ODcuLjFmYTc3MWUyMDI2
MyAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9zbWIycGR1LmMKKysrIGIvZnMvc21iL2NsaWVu
dC9zbWIycGR1LmMKQEAgLTIzLDYgKzIzLDggQEAKICNpbmNsdWRlIDxsaW51eC91dWlkLmg+CiAj
aW5jbHVkZSA8bGludXgvcGFnZW1hcC5oPgogI2luY2x1ZGUgPGxpbnV4L3hhdHRyLmg+CisjaW5j
bHVkZSA8bGludXgvbmV0ZnMuaD4KKyNpbmNsdWRlIDx0cmFjZS9ldmVudHMvbmV0ZnMuaD4KICNp
bmNsdWRlICJjaWZzZ2xvYi5oIgogI2luY2x1ZGUgImNpZnNhY2wuaCIKICNpbmNsdWRlICJjaWZz
cHJvdG8uaCIKQEAgLTQyMjgsNyArNDIzMCw3IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBzbWIzX3Vz
ZV9yZG1hX29mZmxvYWQoc3RydWN0IGNpZnNfaW9fcGFybXMgKmlvX3Bhcm1zKQogICovCiBzdGF0
aWMgaW50CiBzbWIyX25ld19yZWFkX3JlcSh2b2lkICoqYnVmLCB1bnNpZ25lZCBpbnQgKnRvdGFs
X2xlbiwKLQlzdHJ1Y3QgY2lmc19pb19wYXJtcyAqaW9fcGFybXMsIHN0cnVjdCBjaWZzX3JlYWRk
YXRhICpyZGF0YSwKKwlzdHJ1Y3QgY2lmc19pb19wYXJtcyAqaW9fcGFybXMsIHN0cnVjdCBjaWZz
X2lvX3N1YnJlcXVlc3QgKnJkYXRhLAogCXVuc2lnbmVkIGludCByZW1haW5pbmdfYnl0ZXMsIGlu
dCByZXF1ZXN0X3R5cGUpCiB7CiAJaW50IHJjID0gLUVBQ0NFUzsKQEAgLTQzMjAsMTMgKzQzMjIs
MTQgQEAgc21iMl9uZXdfcmVhZF9yZXEodm9pZCAqKmJ1ZiwgdW5zaWduZWQgaW50ICp0b3RhbF9s
ZW4sCiBzdGF0aWMgdm9pZAogc21iMl9yZWFkdl9jYWxsYmFjayhzdHJ1Y3QgbWlkX3FfZW50cnkg
Km1pZCkKIHsKLQlzdHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEgPSBtaWQtPmNhbGxiYWNrX2Rh
dGE7CisJc3RydWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGEgPSBtaWQtPmNhbGxiYWNrX2Rh
dGE7CiAJc3RydWN0IGNpZnNfdGNvbiAqdGNvbiA9IHRsaW5rX3Rjb24ocmRhdGEtPmNmaWxlLT50
bGluayk7CiAJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyID0gcmRhdGEtPnNlcnZlcjsK
IAlzdHJ1Y3Qgc21iMl9oZHIgKnNoZHIgPQogCQkJCShzdHJ1Y3Qgc21iMl9oZHIgKilyZGF0YS0+
aW92WzBdLmlvdl9iYXNlOwogCXN0cnVjdCBjaWZzX2NyZWRpdHMgY3JlZGl0cyA9IHsgLnZhbHVl
ID0gMCwgLmluc3RhbmNlID0gMCB9OwotCXN0cnVjdCBzbWJfcnFzdCBycXN0ID0geyAucnFfaW92
ID0gJnJkYXRhLT5pb3ZbMV0sIC5ycV9udmVjID0gMSB9OworCXN0cnVjdCBzbWJfcnFzdCBycXN0
ID0geyAucnFfaW92ID0gJnJkYXRhLT5pb3ZbMV0sCisJCQkJIC5ycV9udmVjID0gMSB9OwogCiAJ
aWYgKHJkYXRhLT5nb3RfYnl0ZXMpIHsKIAkJcnFzdC5ycV9pdGVyCSAgPSByZGF0YS0+aXRlcjsK
QEAgLTQ0MDcsNyArNDQxMCw3IEBAIHNtYjJfcmVhZHZfY2FsbGJhY2soc3RydWN0IG1pZF9xX2Vu
dHJ5ICptaWQpCiAKIC8qIHNtYjJfYXN5bmNfcmVhZHYgLSBzZW5kIGFuIGFzeW5jIHJlYWQsIGFu
ZCBzZXQgdXAgbWlkIHRvIGhhbmRsZSByZXN1bHQgKi8KIGludAotc21iMl9hc3luY19yZWFkdihz
dHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEpCitzbWIyX2FzeW5jX3JlYWR2KHN0cnVjdCBjaWZz
X2lvX3N1YnJlcXVlc3QgKnJkYXRhKQogewogCWludCByYywgZmxhZ3MgPSAwOwogCWNoYXIgKmJ1
ZjsKQEAgLTQ0NjUsMTMgKzQ0NjgsMTEgQEAgc21iMl9hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19y
ZWFkZGF0YSAqcmRhdGEpCiAJCWZsYWdzIHw9IENJRlNfSEFTX0NSRURJVFM7CiAJfQogCi0Ja3Jl
Zl9nZXQoJnJkYXRhLT5yZWZjb3VudCk7CiAJcmMgPSBjaWZzX2NhbGxfYXN5bmMoc2VydmVyLCAm
cnFzdCwKIAkJCSAgICAgY2lmc19yZWFkdl9yZWNlaXZlLCBzbWIyX3JlYWR2X2NhbGxiYWNrLAog
CQkJICAgICBzbWIzX2hhbmRsZV9yZWFkX2RhdGEsIHJkYXRhLCBmbGFncywKIAkJCSAgICAgJnJk
YXRhLT5jcmVkaXRzKTsKIAlpZiAocmMpIHsKLQkJa3JlZl9wdXQoJnJkYXRhLT5yZWZjb3VudCwg
Y2lmc19yZWFkZGF0YV9yZWxlYXNlKTsKIAkJY2lmc19zdGF0c19mYWlsX2luYyhpb19wYXJtcy50
Y29uLCBTTUIyX1JFQURfSEUpOwogCQl0cmFjZV9zbWIzX3JlYWRfZXJyKDAgLyogeGlkICovLCBp
b19wYXJtcy5wZXJzaXN0ZW50X2ZpZCwKIAkJCQkgICAgaW9fcGFybXMudGNvbi0+dGlkLApkaWZm
IC0tZ2l0IGEvZnMvc21iL2NsaWVudC9zbWIycHJvdG8uaCBiL2ZzL3NtYi9jbGllbnQvc21iMnBy
b3RvLmgKaW5kZXggMDAzNGI1MzdiMGIzLi42MTE2YTgwM2Y2Y2YgMTAwNjQ0Ci0tLSBhL2ZzL3Nt
Yi9jbGllbnQvc21iMnByb3RvLmgKKysrIGIvZnMvc21iL2NsaWVudC9zbWIycHJvdG8uaApAQCAt
MjAyLDcgKzIwMiw3IEBAIGV4dGVybiBpbnQgU01CMl9xdWVyeV9hY2woY29uc3QgdW5zaWduZWQg
aW50IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKIGV4dGVybiBpbnQgU01CMl9nZXRfc3J2
X251bShjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAogCQkJ
ICAgIHU2NCBwZXJzaXN0ZW50X2ZpZCwgdTY0IHZvbGF0aWxlX2ZpZCwKIAkJCSAgICBfX2xlNjQg
KnVuaXF1ZWlkKTsKLWV4dGVybiBpbnQgc21iMl9hc3luY19yZWFkdihzdHJ1Y3QgY2lmc19yZWFk
ZGF0YSAqcmRhdGEpOworZXh0ZXJuIGludCBzbWIyX2FzeW5jX3JlYWR2KHN0cnVjdCBjaWZzX2lv
X3N1YnJlcXVlc3QgKnJkYXRhKTsKIGV4dGVybiBpbnQgU01CMl9yZWFkKGNvbnN0IHVuc2lnbmVk
IGludCB4aWQsIHN0cnVjdCBjaWZzX2lvX3Bhcm1zICppb19wYXJtcywKIAkJICAgICB1bnNpZ25l
ZCBpbnQgKm5ieXRlcywgY2hhciAqKmJ1ZiwgaW50ICpidWZfdHlwZSk7CiBleHRlcm4gaW50IHNt
YjJfYXN5bmNfd3JpdGV2KHN0cnVjdCBjaWZzX3dyaXRlZGF0YSAqd2RhdGEsCmRpZmYgLS1naXQg
YS9mcy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jIGIvZnMvc21iL2NsaWVudC90cmFuc3BvcnQuYwpp
bmRleCA0ZjcxN2FkN2MyMWIuLmJhZTc1OGVjNjIxYiAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVu
dC90cmFuc3BvcnQuYworKysgYi9mcy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jCkBAIC0xNjc3LDcg
KzE2NzcsNyBAQCBfX2NpZnNfcmVhZHZfZGlzY2FyZChzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpz
ZXJ2ZXIsIHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkLAogc3RhdGljIGludAogY2lmc19yZWFkdl9k
aXNjYXJkKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IG1pZF9xX2VudHJ5
ICptaWQpCiB7Ci0Jc3RydWN0IGNpZnNfcmVhZGRhdGEgKnJkYXRhID0gbWlkLT5jYWxsYmFja19k
YXRhOworCXN0cnVjdCBjaWZzX2lvX3N1YnJlcXVlc3QgKnJkYXRhID0gbWlkLT5jYWxsYmFja19k
YXRhOwogCiAJcmV0dXJuICBfX2NpZnNfcmVhZHZfZGlzY2FyZChzZXJ2ZXIsIG1pZCwgcmRhdGEt
PnJlc3VsdCk7CiB9CkBAIC0xNjg3LDcgKzE2ODcsNyBAQCBjaWZzX3JlYWR2X3JlY2VpdmUoc3Ry
dWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIHsK
IAlpbnQgbGVuZ3RoLCBsZW47CiAJdW5zaWduZWQgaW50IGRhdGFfb2Zmc2V0LCBkYXRhX2xlbjsK
LQlzdHJ1Y3QgY2lmc19yZWFkZGF0YSAqcmRhdGEgPSBtaWQtPmNhbGxiYWNrX2RhdGE7CisJc3Ry
dWN0IGNpZnNfaW9fc3VicmVxdWVzdCAqcmRhdGEgPSBtaWQtPmNhbGxiYWNrX2RhdGE7CiAJY2hh
ciAqYnVmID0gc2VydmVyLT5zbWFsbGJ1ZjsKIAl1bnNpZ25lZCBpbnQgYnVmbGVuID0gc2VydmVy
LT5wZHVfc2l6ZSArIEhFQURFUl9QUkVBTUJMRV9TSVpFKHNlcnZlcik7CiAJYm9vbCB1c2VfcmRt
YV9tciA9IGZhbHNlOwotLSAKMi40MC4xCgo=
--0000000000005c6631060f80007d--

