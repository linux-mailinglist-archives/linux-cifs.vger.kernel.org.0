Return-Path: <linux-cifs+bounces-5042-lists+linux-cifs=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from am.mirrors.kernel.org (am.mirrors.kernel.org [IPv6:2604:1380:4601:e00::3])
	by mail.lfdr.de (Postfix) with ESMTPS id 2004AADDDE0
	for <lists+linux-cifs@lfdr.de>; Tue, 17 Jun 2025 23:24:31 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by am.mirrors.kernel.org (Postfix) with ESMTPS id 1652B188CADE
	for <lists+linux-cifs@lfdr.de>; Tue, 17 Jun 2025 21:24:46 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id A66142DFF3B;
	Tue, 17 Jun 2025 21:24:28 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="jY2GrUUK"
X-Original-To: linux-cifs@vger.kernel.org
Received: from mail-lj1-f177.google.com (mail-lj1-f177.google.com [209.85.208.177])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7EDD31DDC28
	for <linux-cifs@vger.kernel.org>; Tue, 17 Jun 2025 21:24:26 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.208.177
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1750195468; cv=none; b=iIPcHH4hFvje1AKZnyh08FfWFyOqh9CWKcYfTGbWPUSEnXssHltkRJb5NTelx3T8dmXcavq6g7Q/xi4N6m3SrBFVaOYjpVN4zLxoHgTAEuijoS7Rx1NVFE3jmnuE4GX1Ul1BElTWz2vCBD+nnKgvKHH1f9fkyntUqZiT8WOvlwg=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1750195468; c=relaxed/simple;
	bh=GPCbpN50iSLDGV4O5YmianT8HoLfN99V+Ze9RBsNJM0=;
	h=MIME-Version:From:Date:Message-ID:Subject:To:Cc:Content-Type; b=mWM70oUNIvChXzv3KTjQnSBF3iLgZLRLO2Yln2wA+evwkWqIR3VD15Nwe+DHdD/0envaJUlU9JBElywJZOa8GeHrg//lrqrWId/b8zZ7rjjP2lT3hfWnFYeki64vuByajk/tqkdRJQ2V73eYUikJGfUUE3O8qfX9gW8glW5RglA=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=jY2GrUUK; arc=none smtp.client-ip=209.85.208.177
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Received: by mail-lj1-f177.google.com with SMTP id 38308e7fff4ca-32934448e8bso51947621fa.3
        for <linux-cifs@vger.kernel.org>; Tue, 17 Jun 2025 14:24:26 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1750195464; x=1750800264; darn=vger.kernel.org;
        h=cc:to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=JuLt0GGKgFyX2XRmAg725NFu0qIHEn0MTXrZHQEojQ4=;
        b=jY2GrUUKmqVT8OIU6eQu7cxPRuRbWt5J3eqmMnXZ2gnd7WOEesrRjgThhPrbQjedci
         JBUBmrHcFX2YzaTecAcIW2DWHBp+x/VGjiX1HJEoHgn2hiU3dE8UBJtuCCgmT+Hxqz3L
         8IwJAt87EeT2Bt84My9i1t2fGFafv7eHASyoYPeZi/bY8DJ7w6xYbLoj2QmI/Nd23gVr
         da+ut3VAoNJGTPSoooqp9qliVCql058300Y4FW/waiD1GLjhFD7Dymb1BahaT1SavALF
         y1yyOrvPfwnUVtsazJC0U22tXmeOyqMKQq0zYYkK+QMohNvVOkH05k0AUwnEdbWPvbV7
         1pjw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1750195464; x=1750800264;
        h=cc:to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=JuLt0GGKgFyX2XRmAg725NFu0qIHEn0MTXrZHQEojQ4=;
        b=SN7BxtLDAIu3kFHlZJIJzqb975r5dZXOfb9K7d/YPguh7X8l4fuHPJ0lUhpj/FhgiU
         MbkGae+/0Rplqa1s0gYlJcwLXrXMfPS4u3EhKTDrz0cqAX9yS+5DvTHqDA1yd32F5xOH
         7w7zgyen3mMHDStfIQIWM1K91U/jBgttFYkppCTqnPoqLW54sElCXxUnNSRfIqh/Zghb
         A9ee7mLMqgi0Q83aWaHGAdOPThy6I7RC6BXPiH5x4NrXd5dx/Q9avfjgD4k1YvmnQtjq
         ma1QalgmZyD7qj/ZWB8/b4x1fbBGIG1377HzjFBUL/PtlF/5CIYSC7QS8prpEKdqKs6c
         6y7g==
X-Gm-Message-State: AOJu0Yz2iEfG9NRZYIqZfEP+CF/lOMuFsoGzOwg0GawBoGMNsZIQ81I+
	yoVMuJkG3xnZxgvdjG+Ijo3wdBPt3f3EsDjot0bAnOkN9vruvKKoFq5K7YsZxWLet1bZG5Iza40
	nM70pnNpAX5A3fBfwibKQUu4gu3akF1xE95ZG
X-Gm-Gg: ASbGncuiqDJRg1YMoW16mekJVpSGmLs+cy1NKWJYzxbK31BJbQbNgMFqqist7T4nizA
	7bg8JhhbrzxB9WZUwaYXN49I+0Et5jsRrEbhI+iLM89YZ7dHHuxI0/TBq3fAYQEZhLvhGFKiBFo
	Sn+nXXHPkDwmDR6cCmlJ0YPi66rimBnBHtb/Dm66xtL1GtjKmV5beTCiqDrRE74vbC/tuzQbg54
	5U=
X-Google-Smtp-Source: AGHT+IGtS53+vo6DKNQkHrBa42D4sXeg19XeHIwHWRMRoUUK2qaBeFAvkzGhN7Bl7zuvJscUU2h6nSVps78X4Tn4O5M=
X-Received: by 2002:a2e:be83:0:b0:32b:3689:8d80 with SMTP id
 38308e7fff4ca-32b4a2ddceemr34242211fa.18.1750195463713; Tue, 17 Jun 2025
 14:24:23 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-cifs@vger.kernel.org
List-Id: <linux-cifs.vger.kernel.org>
List-Subscribe: <mailto:linux-cifs+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cifs+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
From: Steve French <smfrench@gmail.com>
Date: Tue, 17 Jun 2025 16:24:10 -0500
X-Gm-Features: AX0GCFvzH0ZKK4BzcANpfjAREEc8Srr3CpFEgEuBpNlzDHWEmjSDM2-Yieq4Adg
Message-ID: <CAH2r5mvc1A-3Ph1GKdffpRMc6BpDXMqpK7NrvR8ThW0Lc2chbg@mail.gmail.com>
Subject: [PATCH][SMB3 client] cifs: Show reason why autodisabling serverino support
To: CIFS <linux-cifs@vger.kernel.org>
Cc: samba-technical <samba-technical@lists.samba.org>, =?UTF-8?Q?Pali_Roh=C3=A1r?= <pali@kernel.org>
Content-Type: multipart/mixed; boundary="000000000000e7493d0637cb2293"

--000000000000e7493d0637cb2293
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Looks like Pali's updated patch (see attached) addressed the concerns
brought up by Tom and Paulo, and does not result in logging any extra
messages, just improving what is logged.   Let me know if any
objections (or acked-by etc. that you want me to add).  Merged into
cifs-2.6.git for-next pending additional testing.

    Extend cifs_autodisable_serverino() function to print also text message=
 why
    the function was called.

    The text message is printed just once for mount then autodisabling
    serverino support. Once the serverino support is disabled for mount it =
will
    not be re-enabled. So those text messages do not cause flooding logs.

    This change allows to debug issues why cifs.ko decide to turn off serve=
r
    inode number support and hence disable support for detection of hardlin=
ks.

    Signed-off-by: Pali Roh=C3=A1r <pali@kernel.org>



--=20
Thanks,

Steve

--000000000000e7493d0637cb2293
Content-Type: text/x-patch; charset="UTF-8"; 
	name="0001-cifs-Show-reason-why-autodisabling-serverino-support.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-Show-reason-why-autodisabling-serverino-support.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_mc1163xc0>
X-Attachment-Id: f_mc1163xc0

RnJvbSA0YjdkYjYzZWQ3YWEwZjBkOGU0NmRiYjA3MTU3MjJiYWZlZDY4ZTdkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/UGFsaT0yMFJvaD1DMz1BMXI/PSA8cGFsaUBr
ZXJuZWwub3JnPgpEYXRlOiBTYXQsIDcgSnVuIDIwMjUgMTg6MTc6MTUgKzAyMDAKU3ViamVjdDog
W1BBVENIXSBjaWZzOiBTaG93IHJlYXNvbiB3aHkgYXV0b2Rpc2FibGluZyBzZXJ2ZXJpbm8gc3Vw
cG9ydApNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9
VVRGLTgKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogOGJpdAoKRXh0ZW5kIGNpZnNfYXV0b2Rp
c2FibGVfc2VydmVyaW5vKCkgZnVuY3Rpb24gdG8gcHJpbnQgYWxzbyB0ZXh0IG1lc3NhZ2Ugd2h5
CnRoZSBmdW5jdGlvbiB3YXMgY2FsbGVkLgoKVGhlIHRleHQgbWVzc2FnZSBpcyBwcmludGVkIGp1
c3Qgb25jZSBmb3IgbW91bnQgdGhlbiBhdXRvZGlzYWJsaW5nCnNlcnZlcmlubyBzdXBwb3J0LiBP
bmNlIHRoZSBzZXJ2ZXJpbm8gc3VwcG9ydCBpcyBkaXNhYmxlZCBmb3IgbW91bnQgaXQgd2lsbApu
b3QgYmUgcmUtZW5hYmxlZC4gU28gdGhvc2UgdGV4dCBtZXNzYWdlcyBkbyBub3QgY2F1c2UgZmxv
b2RpbmcgbG9ncy4KClRoaXMgY2hhbmdlIGFsbG93cyB0byBkZWJ1ZyBpc3N1ZXMgd2h5IGNpZnMu
a28gZGVjaWRlIHRvIHR1cm4gb2ZmIHNlcnZlcgppbm9kZSBudW1iZXIgc3VwcG9ydCBhbmQgaGVu
Y2UgZGlzYWJsZSBzdXBwb3J0IGZvciBkZXRlY3Rpb24gb2YgaGFyZGxpbmtzLgoKU2lnbmVkLW9m
Zi1ieTogUGFsaSBSb2jDoXIgPHBhbGlAa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogU3RldmUg
RnJlbmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL3NtYi9jbGllbnQvY2lmc3By
b3RvLmggfCAyICstCiBmcy9zbWIvY2xpZW50L2Nvbm5lY3QuYyAgIHwgMiArLQogZnMvc21iL2Ns
aWVudC9kZnNfY2FjaGUuYyB8IDIgKy0KIGZzL3NtYi9jbGllbnQvaW5vZGUuYyAgICAgfCA2ICsr
Ky0tLQogZnMvc21iL2NsaWVudC9taXNjLmMgICAgICB8IDYgKysrKystCiBmcy9zbWIvY2xpZW50
L3JlYWRkaXIuYyAgIHwgNCArKy0tCiA2IGZpbGVzIGNoYW5nZWQsIDEzIGluc2VydGlvbnMoKyks
IDkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jaWZzcHJvdG8uaCBi
L2ZzL3NtYi9jbGllbnQvY2lmc3Byb3RvLmgKaW5kZXggNjYwOTNmYTc4YWVkLi5jY2Q0MmI4MmM3
MTEgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc3Byb3RvLmgKKysrIGIvZnMvc21iL2Ns
aWVudC9jaWZzcHJvdG8uaApAQCAtNTc5LDcgKzU3OSw3IEBAIGV4dGVybiBpbnQgY2lmc19kb19z
ZXRfYWNsKGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sCiBl
eHRlcm4gaW50IENJRlNHZXRFeHRBdHRyKGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBj
aWZzX3Rjb24gKnRjb24sCiAJCQljb25zdCBpbnQgbmV0ZmlkLCBfX3U2NCAqcEV4dEF0dHJCaXRz
LCBfX3U2NCAqcE1hc2spOwogI2VuZGlmIC8qIENJRlNfQUxMT1dfSU5TRUNVUkVfTEVHQUNZICov
Ci1leHRlcm4gdm9pZCBjaWZzX2F1dG9kaXNhYmxlX3NlcnZlcmlubyhzdHJ1Y3QgY2lmc19zYl9p
bmZvICpjaWZzX3NiKTsKK2V4dGVybiB2b2lkIGNpZnNfYXV0b2Rpc2FibGVfc2VydmVyaW5vKHN0
cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IsIGNvbnN0IGNoYXIgKnJlYXNvbiwgaW50IHJjKTsK
IGV4dGVybiBib29sIGNvdWxkYmVfbWZfc3ltbGluayhjb25zdCBzdHJ1Y3QgY2lmc19mYXR0ciAq
ZmF0dHIpOwogZXh0ZXJuIGludCBjaGVja19tZl9zeW1saW5rKHVuc2lnbmVkIGludCB4aWQsIHN0
cnVjdCBjaWZzX3Rjb24gKnRjb24sCiAJCQkgICAgICBzdHJ1Y3QgY2lmc19zYl9pbmZvICpjaWZz
X3NiLApkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jb25uZWN0LmMgYi9mcy9zbWIvY2xpZW50
L2Nvbm5lY3QuYwppbmRleCBjNDg4NjljMjllMTUuLmNlMmM0Y2Y5ODI2ZSAxMDA2NDQKLS0tIGEv
ZnMvc21iL2NsaWVudC9jb25uZWN0LmMKKysrIGIvZnMvc21iL2NsaWVudC9jb25uZWN0LmMKQEAg
LTM5MTgsNyArMzkxOCw3IEBAIGludCBjaWZzX21vdW50KHN0cnVjdCBjaWZzX3NiX2luZm8gKmNp
ZnNfc2IsIHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCkKIAkgKiBBZnRlciByZWNvbm5lY3Rp
bmcgdG8gYSBkaWZmZXJlbnQgc2VydmVyLCB1bmlxdWUgaWRzIHdvbid0IG1hdGNoIGFueW1vcmUs
IHNvIHdlIGRpc2FibGUKIAkgKiBzZXJ2ZXJpbm8uIFRoaXMgcHJldmVudHMgZGVudHJ5IHJldmFs
aWRhdGlvbiB0byB0aGluayB0aGUgZGVudHJ5IGFyZSBzdGFsZSAoRVNUQUxFKS4KIAkgKi8KLQlj
aWZzX2F1dG9kaXNhYmxlX3NlcnZlcmlubyhjaWZzX3NiKTsKKwljaWZzX2F1dG9kaXNhYmxlX3Nl
cnZlcmlubyhjaWZzX3NiLCAiUmVjb25uZWN0aW5nIHRvIGRpZmZlcmVudCBzZXJ2ZXIsIGlub2Rl
IG51bWJlcnMgd29uJ3QgbWF0Y2ggYW55bW9yZSIsIDApOwogCS8qCiAJICogRm9yY2UgdGhlIHVz
ZSBvZiBwcmVmaXggcGF0aCB0byBzdXBwb3J0IGZhaWxvdmVyIG9uIERGUyBwYXRocyB0aGF0IHJl
c29sdmUgdG8gdGFyZ2V0cwogCSAqIHRoYXQgaGF2ZSBkaWZmZXJlbnQgcHJlZml4IHBhdGhzLgpk
aWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9kZnNfY2FjaGUuYyBiL2ZzL3NtYi9jbGllbnQvZGZz
X2NhY2hlLmMKaW5kZXggNGRhZGEyNmQ1NmI1Li5jM2ZlODVjMzFlMmIgMTAwNjQ0Ci0tLSBhL2Zz
L3NtYi9jbGllbnQvZGZzX2NhY2hlLmMKKysrIGIvZnMvc21iL2NsaWVudC9kZnNfY2FjaGUuYwpA
QCAtMTI4OSw3ICsxMjg5LDcgQEAgaW50IGRmc19jYWNoZV9yZW1vdW50X2ZzKHN0cnVjdCBjaWZz
X3NiX2luZm8gKmNpZnNfc2IpCiAJICogQWZ0ZXIgcmVjb25uZWN0aW5nIHRvIGEgZGlmZmVyZW50
IHNlcnZlciwgdW5pcXVlIGlkcyB3b24ndCBtYXRjaCBhbnltb3JlLCBzbyB3ZSBkaXNhYmxlCiAJ
ICogc2VydmVyaW5vLiBUaGlzIHByZXZlbnRzIGRlbnRyeSByZXZhbGlkYXRpb24gdG8gdGhpbmsg
dGhlIGRlbnRyeSBhcmUgc3RhbGUgKEVTVEFMRSkuCiAJICovCi0JY2lmc19hdXRvZGlzYWJsZV9z
ZXJ2ZXJpbm8oY2lmc19zYik7CisJY2lmc19hdXRvZGlzYWJsZV9zZXJ2ZXJpbm8oY2lmc19zYiwg
IlJlY29ubmVjdGluZyB0byBkaWZmZXJlbnQgc2VydmVyLCBpbm9kZSBudW1iZXJzIHdvbid0IG1h
dGNoIGFueW1vcmUiLCAwKTsKIAkvKgogCSAqIEZvcmNlIHRoZSB1c2Ugb2YgcHJlZml4IHBhdGgg
dG8gc3VwcG9ydCBmYWlsb3ZlciBvbiBERlMgcGF0aHMgdGhhdCByZXNvbHZlIHRvIHRhcmdldHMK
IAkgKiB0aGF0IGhhdmUgZGlmZmVyZW50IHByZWZpeCBwYXRocy4KZGlmZiAtLWdpdCBhL2ZzL3Nt
Yi9jbGllbnQvaW5vZGUuYyBiL2ZzL3NtYi9jbGllbnQvaW5vZGUuYwppbmRleCA3NWJlNGI0NmJj
NmYuLmVhZDFiZTg3MTJmNCAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9pbm9kZS5jCisrKyBi
L2ZzL3NtYi9jbGllbnQvaW5vZGUuYwpAQCAtMTEzMiw3ICsxMTMyLDcgQEAgc3RhdGljIHZvaWQg
Y2lmc19zZXRfZmF0dHJfaW5vKGludCB4aWQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sIHN0cnVj
dCBzdXBlcl9ibG8KIAkJCWZhdHRyLT5jZl91bmlxdWVpZCA9IENJRlNfSSgqaW5vZGUpLT51bmlx
dWVpZDsKIAkJZWxzZSB7CiAJCQlmYXR0ci0+Y2ZfdW5pcXVlaWQgPSBpdW5pcXVlKHNiLCBST09U
X0kpOwotCQkJY2lmc19hdXRvZGlzYWJsZV9zZXJ2ZXJpbm8oY2lmc19zYik7CisJCQljaWZzX2F1
dG9kaXNhYmxlX3NlcnZlcmlubyhjaWZzX3NiLCAiQ2Fubm90IHJldHJpZXZlIGlub2RlIG51bWJl
ciB2aWEgZ2V0X3Nydl9pbnVtIiwgcmMpOwogCQl9CiAJCXJldHVybjsKIAl9CkBAIC0xNjI3LDcg
KzE2MjcsNyBAQCBjaWZzX2lnZXQoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgc3RydWN0IGNpZnNf
ZmF0dHIgKmZhdHRyKQogCQkJZmF0dHItPmNmX2ZsYWdzICY9IH5DSUZTX0ZBVFRSX0lOT19DT0xM
SVNJT047CiAKIAkJCWlmIChpbm9kZV9oYXNfaGFzaGVkX2RlbnRyaWVzKGlub2RlKSkgewotCQkJ
CWNpZnNfYXV0b2Rpc2FibGVfc2VydmVyaW5vKENJRlNfU0Ioc2IpKTsKKwkJCQljaWZzX2F1dG9k
aXNhYmxlX3NlcnZlcmlubyhDSUZTX1NCKHNiKSwgIklub2RlIG51bWJlciBjb2xsaXNpb24gZGV0
ZWN0ZWQiLCAwKTsKIAkJCQlpcHV0KGlub2RlKTsKIAkJCQlmYXR0ci0+Y2ZfdW5pcXVlaWQgPSBp
dW5pcXVlKHNiLCBST09UX0kpOwogCQkJCWdvdG8gcmV0cnlfaWdldDVfbG9ja2VkOwpAQCAtMTY5
NCw3ICsxNjk0LDcgQEAgc3RydWN0IGlub2RlICpjaWZzX3Jvb3RfaWdldChzdHJ1Y3Qgc3VwZXJf
YmxvY2sgKnNiKQogCWlmICghcmMpIHsKIAkJaWYgKGZhdHRyLmNmX2ZsYWdzICYgQ0lGU19GQVRU
Ul9KVU5DVElPTikgewogCQkJZmF0dHIuY2ZfZmxhZ3MgJj0gfkNJRlNfRkFUVFJfSlVOQ1RJT047
Ci0JCQljaWZzX2F1dG9kaXNhYmxlX3NlcnZlcmlubyhjaWZzX3NiKTsKKwkJCWNpZnNfYXV0b2Rp
c2FibGVfc2VydmVyaW5vKGNpZnNfc2IsICJDYW5ub3QgcmV0cmlldmUgYXR0cmlidXRlcyBmb3Ig
anVuY3Rpb24gcG9pbnQiLCByYyk7CiAJCX0KIAkJaW5vZGUgPSBjaWZzX2lnZXQoc2IsICZmYXR0
cik7CiAJfQpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9taXNjLmMgYi9mcy9zbWIvY2xpZW50
L21pc2MuYwppbmRleCBlNzcwMTdmNDcwODQuLjQwOTI3Nzg4M2U4YSAxMDA2NDQKLS0tIGEvZnMv
c21iL2NsaWVudC9taXNjLmMKKysrIGIvZnMvc21iL2NsaWVudC9taXNjLmMKQEAgLTU1Miw3ICs1
NTIsNyBAQCBkdW1wX3NtYih2b2lkICpidWYsIGludCBzbWJfYnVmX2xlbmd0aCkKIH0KIAogdm9p
ZAotY2lmc19hdXRvZGlzYWJsZV9zZXJ2ZXJpbm8oc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19z
YikKK2NpZnNfYXV0b2Rpc2FibGVfc2VydmVyaW5vKHN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNf
c2IsIGNvbnN0IGNoYXIgKnJlYXNvbiwgaW50IHJjKQogewogCWlmIChjaWZzX3NiLT5tbnRfY2lm
c19mbGFncyAmIENJRlNfTU9VTlRfU0VSVkVSX0lOVU0pIHsKIAkJc3RydWN0IGNpZnNfdGNvbiAq
dGNvbiA9IE5VTEw7CkBAIC01NjIsNiArNTYyLDEwIEBAIGNpZnNfYXV0b2Rpc2FibGVfc2VydmVy
aW5vKHN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2IpCiAKIAkJY2lmc19zYi0+bW50X2NpZnNf
ZmxhZ3MgJj0gfkNJRlNfTU9VTlRfU0VSVkVSX0lOVU07CiAJCWNpZnNfc2ItPm1udF9jaWZzX3Nl
cnZlcmlub19hdXRvZGlzYWJsZWQgPSB0cnVlOworCQlpZiAocmMpCisJCQljaWZzX2RiZyhWRlMs
ICIlczogJWRcbiIsIHJlYXNvbiwgcmMpOworCQllbHNlCisJCQljaWZzX2RiZyhWRlMsICIlc1xu
IiwgcmVhc29uKTsKIAkJY2lmc19kYmcoVkZTLCAiQXV0b2Rpc2FibGluZyB0aGUgdXNlIG9mIHNl
cnZlciBpbm9kZSBudW1iZXJzIG9uICVzXG4iLAogCQkJIHRjb24gPyB0Y29uLT50cmVlX25hbWUg
OiAibmV3IHNlcnZlciIpOwogCQljaWZzX2RiZyhWRlMsICJUaGUgc2VydmVyIGRvZXNuJ3Qgc2Vl
bSB0byBzdXBwb3J0IHRoZW0gcHJvcGVybHkgb3IgdGhlIGZpbGVzIG1pZ2h0IGJlIG9uIGRpZmZl
cmVudCBzZXJ2ZXJzIChERlMpXG4iKTsKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvcmVhZGRp
ci5jIGIvZnMvc21iL2NsaWVudC9yZWFkZGlyLmMKaW5kZXggYmEwMTkzY2Y5MDMzLi5lNWYxMjcz
OWVlMTQgMTAwNjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvcmVhZGRpci5jCisrKyBiL2ZzL3NtYi9j
bGllbnQvcmVhZGRpci5jCkBAIC00MTQsNyArNDE0LDcgQEAgX2luaXRpYXRlX2NpZnNfc2VhcmNo
KGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBmaWxlICpmaWxlLAogCQljaWZzRmlsZS0+
aW52YWxpZEhhbmRsZSA9IGZhbHNlOwogCX0gZWxzZSBpZiAoKHJjID09IC1FT1BOT1RTVVBQKSAm
JgogCQkgICAoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX1NFUlZFUl9JTlVN
KSkgewotCQljaWZzX2F1dG9kaXNhYmxlX3NlcnZlcmlubyhjaWZzX3NiKTsKKwkJY2lmc19hdXRv
ZGlzYWJsZV9zZXJ2ZXJpbm8oY2lmc19zYiwgIkNhbm5vdCByZXRyaWV2ZSBpbm9kZSBudW1iZXIg
dmlhIHF1ZXJ5X2Rpcl9maXJzdCIsIHJjKTsKIAkJZ290byBmZmlyc3RfcmV0cnk7CiAJfQogZXJy
b3JfZXhpdDoKQEAgLTEwMTAsNyArMTAxMCw3IEBAIHN0YXRpYyBpbnQgY2lmc19maWxsZGlyKGNo
YXIgKmZpbmRfZW50cnksIHN0cnVjdCBmaWxlICpmaWxlLAogCQlmYXR0ci5jZl91bmlxdWVpZCA9
IGRlLmlubzsKIAl9IGVsc2UgewogCQlmYXR0ci5jZl91bmlxdWVpZCA9IGl1bmlxdWUoc2IsIFJP
T1RfSSk7Ci0JCWNpZnNfYXV0b2Rpc2FibGVfc2VydmVyaW5vKGNpZnNfc2IpOworCQljaWZzX2F1
dG9kaXNhYmxlX3NlcnZlcmlubyhjaWZzX3NiLCAiQ2Fubm90IHJldHJpZXZlIGlub2RlIG51bWJl
ciIsIDApOwogCX0KIAogCWlmICgoY2lmc19zYi0+bW50X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5U
X01GX1NZTUxJTktTKSAmJgotLSAKMi40My4wCgo=
--000000000000e7493d0637cb2293--

