Return-Path: <linux-cifs+bounces-5511-lists+linux-cifs=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [IPv6:2604:1380:45d1:ec00::1])
	by mail.lfdr.de (Postfix) with ESMTPS id B7450B1BCEE
	for <lists+linux-cifs@lfdr.de>; Wed,  6 Aug 2025 01:08:48 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id C7714161FFD
	for <lists+linux-cifs@lfdr.de>; Tue,  5 Aug 2025 23:08:48 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 5265C2BD59B;
	Tue,  5 Aug 2025 23:08:44 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="F2BL7pw/"
X-Original-To: linux-cifs@vger.kernel.org
Received: from mail-qv1-f41.google.com (mail-qv1-f41.google.com [209.85.219.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 70BE62BD588
	for <linux-cifs@vger.kernel.org>; Tue,  5 Aug 2025 23:08:41 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.219.41
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1754435324; cv=none; b=qfGo39XD92pGMQCP3kD+Y2qU7fPfKD6EBe4j8bFPT1yrkRtUBCqMgjC7Fb/4q/N0FtPwMBZNdxFi2AvgBbHUfJOonXTPGebejRW/Acl3RCkG13tE2VYOmVdh0cAacPbtnjW0pp6Z00ilC27lv9qx0A/8NxW3lFTr9vfo7tWXiMI=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1754435324; c=relaxed/simple;
	bh=k34lmplMVd5NfxVmVsV8ALK1+WYsEKPjbiXU8zc63E8=;
	h=MIME-Version:From:Date:Message-ID:Subject:To:Cc:Content-Type; b=QAXEu7jtMHKkUsMMExGfjkGL7ADG8A9qmfnw0dQTsXSD0uYzk4Lz/5GyKitaIqnEFJ4oTaS0UAMW9ojnh+s2bal3tpE6xN4J16wEbHGuvoiWAAhe0F/MPuX/jmvf2FBmtcFTluK6f6HLpDMII0uGTpzTi0u+JkZfhZHPeSpAyEw=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=F2BL7pw/; arc=none smtp.client-ip=209.85.219.41
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Received: by mail-qv1-f41.google.com with SMTP id 6a1803df08f44-7072ed7094aso44932856d6.1
        for <linux-cifs@vger.kernel.org>; Tue, 05 Aug 2025 16:08:41 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1754435320; x=1755040120; darn=vger.kernel.org;
        h=cc:to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=hW9d+tRhz/EzxefS7TG7lv0UAftUDqcx2zH6VAUMW3U=;
        b=F2BL7pw/QFtK8aI0pRl10+D4QdlFcBYbnmAX5YHbSCJCjP5/BOQsFy/yzRQTjhRSf0
         1QG5JOAaSqjyrJjVKsRjuyCJt8gVHj26I+JE8KeJ4dc7Owz6ztiSxnvZ8n6W37X31b1v
         4p+3F2XEnkEIKS0m5Qa4xD/tWIbeZiK39V0XW2dCDu2xoivEBS6F7wDucOj4VgXZ4lVg
         K8+AQfE+KHvIVYchaPPRz3lSXNpoR9W+UeC8DhvqmZ/q87pj47p42A6vCvnO5kvFAG+T
         RW3jwNNBfS81rIM8zo0ud4Uwk4/WvDUnG2mrqY5RpdRsRRdmRoZRLTpg+veXc/6nFaIY
         m5Xw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1754435320; x=1755040120;
        h=cc:to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=hW9d+tRhz/EzxefS7TG7lv0UAftUDqcx2zH6VAUMW3U=;
        b=Y6TQk5A18zPZBhLPuhkBvY4mtXLgBRdQUxV17QwQ/MfoUBtJXecf6yN49hq/+bw5gi
         RqBRHg7akpZLhGjM8iKYcYBfBrbybWLyis4Odo+6+S1CM9Q7olC8aLpp2DhadpO8YWrH
         TWT+YycDmSy5c6lDJPh/aw6c+oMY5j/eEoKfa+RNp+phvuK0QTkDHL+RpW/CO2GUPReN
         EO/ePWLDqWQoR3m0WTF2yfqRD6o8q1fkz9+bH1vOVcS2qzgvl3muvdSoc3+6ydUUlBgR
         OmpXP4e3yl0pzjYUsm15XfNE51VaZqkpMxE3+r1J0vt/Rd4egDvF/QXiNII5ZFdtqx6o
         vWKQ==
X-Gm-Message-State: AOJu0YwzhND520lF9wX9VxnAYLBTB62JWRkQhmVn3akxu4GxF5/lvMSz
	ljCZjuzPZjqRkPX+yPjEDYZvUvxuTzLP8NMoum8pJMdhbi2+UIEjETesPvQKN/I1/YM6ZECnaVm
	sfd/zCN76TolxP8J1oryYAVLLEM7ofXxyWDN4
X-Gm-Gg: ASbGncvoSXp64kJi9GBqjNfj8lS+Su57qOZTGdlPDePZot+13iElEHlLmDwSh9W6t1F
	Sv/2dKyqwos5TK8YWSv5n5w1g7lGAhbcrYk8tG33Ebjz2d5L6yaofUYM5JXwkZ3isXDLFsGGKs+
	4/hE8bsnj4d/gy2UfkHuOaQkSAX+FMcfArITZgiHRl6bLDMAoaRm5afkxVNlId25dE4+My6wZ9N
	PpGNDFbi2xInflggHFwWFSd4IiCew6uSqueyf3R
X-Google-Smtp-Source: AGHT+IEAmpr90c2yCXndPGRn5QlUGi20UtelTj7PAoepvwT61x4mY4rdBUZD6t52dAX5PyBp6vUscWcj30dYkgKxwPE=
X-Received: by 2002:a05:6214:f04:b0:702:b805:276b with SMTP id
 6a1803df08f44-7097ae30a48mr7704086d6.20.1754435319801; Tue, 05 Aug 2025
 16:08:39 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-cifs@vger.kernel.org
List-Id: <linux-cifs.vger.kernel.org>
List-Subscribe: <mailto:linux-cifs+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cifs+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
From: Steve French <smfrench@gmail.com>
Date: Tue, 5 Aug 2025 18:08:27 -0500
X-Gm-Features: Ac12FXyu6JiBvaYcnaQg0eWZk0Cc7yzturFqYV9Q8rbROYPdi5m0FiMYeUNY0sw
Message-ID: <CAH2r5mvtCVKAk5gWfnN3dXXgVFo-PYYus7poO0LX8hQYnCZp4Q@mail.gmail.com>
Subject: [SMB1][PATCH] Move the SMB1 transport code out of transport.c
To: CIFS <linux-cifs@vger.kernel.org>
Cc: David Howells <dhowells@redhat.com>
Content-Type: multipart/mixed; boundary="0000000000000599ab063ba64eb6"

--0000000000000599ab063ba64eb6
Content-Type: text/plain; charset="UTF-8"

Here is a lightly updated (rebased on Wang's 3 cleanup patches)
version of David's patch to move the unneeded SMB1 transport code (not
needed when SMB1/CIFS disabled and using normal SMB3.1.1 mounts) to
distinct file so it can be compiled out when SMB1/CIFS disabled in
kernel config.  See attached.

Shrink the size of cifs.ko when SMB1 is not enabled in the config
by moving the SMB1 transport code to different file.

Signed-off-by: David Howells <dhowells@redhat.com>
cc: linux-cifs@vger.kernel.org




-- 
Thanks,

Steve

--0000000000000599ab063ba64eb6
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-Move-the-SMB1-transport-code-out-of-transport.c.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-Move-the-SMB1-transport-code-out-of-transport.c.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_mdz5hdiy0>
X-Attachment-Id: f_mdz5hdiy0

RnJvbSAzMjY3YjFjMDdmZmY0NGI2OGU1MjEzNTVjZGY0ZjZjOGVjYTU2MDJkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
CkRhdGU6IFR1ZSwgNSBBdWcgMjAyNSAxNzo1NjozMyAtMDUwMApTdWJqZWN0OiBbUEFUQ0hdIGNp
ZnM6IE1vdmUgdGhlIFNNQjEgdHJhbnNwb3J0IGNvZGUgb3V0IG9mIHRyYW5zcG9ydC5jCgpTaHJp
bmsgdGhlIHNpemUgb2YgY2lmcy5rbyB3aGVuIFNNQjEgaXMgbm90IGVuYWJsZWQgaW4gdGhlIGNv
bmZpZwpieSBtb3ZpbmcgdGhlIFNNQjEgdHJhbnNwb3J0IGNvZGUgdG8gZGlmZmVyZW50IGZpbGUu
CgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBIb3dlbGxzIDxkaG93ZWxsc0ByZWRoYXQuY29tPgpjYzog
bGludXgtY2lmc0B2Z2VyLmtlcm5lbC5vcmcKU2lnbmVkLW9mZi1ieTogU3RldmUgRnJlbmNoIDxz
dGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL3NtYi9jbGllbnQvTWFrZWZpbGUgICAgICAg
IHwgICAyICstCiBmcy9zbWIvY2xpZW50L2NpZnNwcm90by5oICAgICB8ICAxNSArCiBmcy9zbWIv
Y2xpZW50L2NpZnN0cmFuc3BvcnQuYyB8IDU2NiArKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrCiBmcy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jICAgICB8IDU1OCArLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0KIDQgZmlsZXMgY2hhbmdlZCwgNTg4IGluc2VydGlvbnMoKyks
IDU1MyBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBmcy9zbWIvY2xpZW50L2NpZnN0
cmFuc3BvcnQuYwoKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvTWFrZWZpbGUgYi9mcy9zbWIv
Y2xpZW50L01ha2VmaWxlCmluZGV4IDIyMDIzZTMwOTE1Yi4uNGM5N2IzMWEyNWMyIDEwMDY0NAot
LS0gYS9mcy9zbWIvY2xpZW50L01ha2VmaWxlCisrKyBiL2ZzL3NtYi9jbGllbnQvTWFrZWZpbGUK
QEAgLTMyLDYgKzMyLDYgQEAgY2lmcy0kKENPTkZJR19DSUZTX1NNQl9ESVJFQ1QpICs9IHNtYmRp
cmVjdC5vCiAKIGNpZnMtJChDT05GSUdfQ0lGU19ST09UKSArPSBjaWZzcm9vdC5vCiAKLWNpZnMt
JChDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kpICs9IHNtYjFvcHMubyBjaWZzc21i
Lm8KK2NpZnMtJChDT05GSUdfQ0lGU19BTExPV19JTlNFQ1VSRV9MRUdBQ1kpICs9IHNtYjFvcHMu
byBjaWZzc21iLm8gY2lmc3RyYW5zcG9ydC5vCiAKIGNpZnMtJChDT05GSUdfQ0lGU19DT01QUkVT
U0lPTikgKz0gY29tcHJlc3MubyBjb21wcmVzcy9sejc3Lm8KZGlmZiAtLWdpdCBhL2ZzL3NtYi9j
bGllbnQvY2lmc3Byb3RvLmggYi9mcy9zbWIvY2xpZW50L2NpZnNwcm90by5oCmluZGV4IDQwZWMw
NjM0Mzc3Zi4uYzM0YzUzM2IyZWZhIDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2NpZnNwcm90
by5oCisrKyBiL2ZzL3NtYi9jbGllbnQvY2lmc3Byb3RvLmgKQEAgLTExNiwxNiArMTE2LDMxIEBA
IGV4dGVybiBpbnQgU2VuZFJlY2VpdmUoY29uc3QgdW5zaWduZWQgaW50IC8qIHhpZCAqLyAsIHN0
cnVjdCBjaWZzX3NlcyAqLAogCQkJaW50ICogLyogYnl0ZXMgcmV0dXJuZWQgKi8gLCBjb25zdCBp
bnQpOwogZXh0ZXJuIGludCBTZW5kUmVjZWl2ZU5vUnNwKGNvbnN0IHVuc2lnbmVkIGludCB4aWQs
IHN0cnVjdCBjaWZzX3NlcyAqc2VzLAogCQkJICAgIGNoYXIgKmluX2J1ZiwgaW50IGZsYWdzKTsK
K2ludCBjaWZzX3N5bmNfbWlkX3Jlc3VsdChzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCwgc3RydWN0
IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyKTsKIGV4dGVybiBzdHJ1Y3QgbWlkX3FfZW50cnkgKmNp
ZnNfc2V0dXBfcmVxdWVzdChzdHJ1Y3QgY2lmc19zZXMgKiwKIAkJCQlzdHJ1Y3QgVENQX1NlcnZl
cl9JbmZvICosCiAJCQkJc3RydWN0IHNtYl9ycXN0ICopOwogZXh0ZXJuIHN0cnVjdCBtaWRfcV9l
bnRyeSAqY2lmc19zZXR1cF9hc3luY19yZXF1ZXN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKiwK
IAkJCQkJCXN0cnVjdCBzbWJfcnFzdCAqKTsKK2ludCBfX3NtYl9zZW5kX3Jxc3Qoc3RydWN0IFRD
UF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBpbnQgbnVtX3Jxc3QsCisJCSAgICBzdHJ1Y3Qgc21iX3Jx
c3QgKnJxc3QpOwogZXh0ZXJuIGludCBjaWZzX2NoZWNrX3JlY2VpdmUoc3RydWN0IG1pZF9xX2Vu
dHJ5ICptaWQsCiAJCQlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIGJvb2wgbG9nX2Vy
cm9yKTsKK2ludCB3YWl0X2Zvcl9mcmVlX3JlcXVlc3Qoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAq
c2VydmVyLCBjb25zdCBpbnQgZmxhZ3MsCisJCQkgIHVuc2lnbmVkIGludCAqaW5zdGFuY2UpOwog
ZXh0ZXJuIGludCBjaWZzX3dhaXRfbXR1X2NyZWRpdHMoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAq
c2VydmVyLAogCQkJCSBzaXplX3Qgc2l6ZSwgc2l6ZV90ICpudW0sCiAJCQkJIHN0cnVjdCBjaWZz
X2NyZWRpdHMgKmNyZWRpdHMpOworCitzdGF0aWMgaW5saW5lIGludAorc2VuZF9jYW5jZWwoc3Ry
dWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3Qgc21iX3Jxc3QgKnJxc3QsCisJICAg
IHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQoreworCXJldHVybiBzZXJ2ZXItPm9wcy0+c2VuZF9j
YW5jZWwgPworCQkJCXNlcnZlci0+b3BzLT5zZW5kX2NhbmNlbChzZXJ2ZXIsIHJxc3QsIG1pZCkg
OiAwOworfQorCitpbnQgd2FpdF9mb3JfcmVzcG9uc2Uoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAq
c2VydmVyLCBzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZFEpOwogZXh0ZXJuIGludCBTZW5kUmVjZWl2
ZTIoY29uc3QgdW5zaWduZWQgaW50IC8qIHhpZCAqLyAsIHN0cnVjdCBjaWZzX3NlcyAqLAogCQkJ
c3RydWN0IGt2ZWMgKiwgaW50IC8qIG52ZWMgdG8gc2VuZCAqLywKIAkJCWludCAqIC8qIHR5cGUg
b2YgYnVmIHJldHVybmVkICovLCBjb25zdCBpbnQgZmxhZ3MsCmRpZmYgLS1naXQgYS9mcy9zbWIv
Y2xpZW50L2NpZnN0cmFuc3BvcnQuYyBiL2ZzL3NtYi9jbGllbnQvY2lmc3RyYW5zcG9ydC5jCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uMzUyZGFmYjg4OGRkCi0tLSAv
ZGV2L251bGwKKysrIGIvZnMvc21iL2NsaWVudC9jaWZzdHJhbnNwb3J0LmMKQEAgLTAsMCArMSw1
NjYgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBMR1BMLTIuMQorLyoKKyAqCisgKiAg
IENvcHlyaWdodCAoQykgSW50ZXJuYXRpb25hbCBCdXNpbmVzcyBNYWNoaW5lcyAgQ29ycC4sIDIw
MDIsMjAwOAorICogICBBdXRob3Iocyk6IFN0ZXZlIEZyZW5jaCAoc2ZyZW5jaEB1cy5pYm0uY29t
KQorICogICBKZXJlbXkgQWxsaXNvbiAoanJhQHNhbWJhLm9yZykgMjAwNi4KKyAqCisgKi8KKwor
I2luY2x1ZGUgPGxpbnV4L2ZzLmg+CisjaW5jbHVkZSA8bGludXgvbGlzdC5oPgorI2luY2x1ZGUg
PGxpbnV4L2dmcC5oPgorI2luY2x1ZGUgPGxpbnV4L3dhaXQuaD4KKyNpbmNsdWRlIDxsaW51eC9u
ZXQuaD4KKyNpbmNsdWRlIDxsaW51eC9kZWxheS5oPgorI2luY2x1ZGUgPGxpbnV4L2ZyZWV6ZXIu
aD4KKyNpbmNsdWRlIDxsaW51eC90Y3AuaD4KKyNpbmNsdWRlIDxsaW51eC9idmVjLmg+CisjaW5j
bHVkZSA8bGludXgvaGlnaG1lbS5oPgorI2luY2x1ZGUgPGxpbnV4L3VhY2Nlc3MuaD4KKyNpbmNs
dWRlIDxsaW51eC9wcm9jZXNzb3IuaD4KKyNpbmNsdWRlIDxsaW51eC9tZW1wb29sLmg+CisjaW5j
bHVkZSA8bGludXgvc2NoZWQvc2lnbmFsLmg+CisjaW5jbHVkZSA8bGludXgvdGFza19pb19hY2Nv
dW50aW5nX29wcy5oPgorI2luY2x1ZGUgImNpZnNwZHUuaCIKKyNpbmNsdWRlICJjaWZzZ2xvYi5o
IgorI2luY2x1ZGUgImNpZnNwcm90by5oIgorI2luY2x1ZGUgImNpZnNfZGVidWcuaCIKKyNpbmNs
dWRlICJzbWIycHJvdG8uaCIKKyNpbmNsdWRlICJzbWJkaXJlY3QuaCIKKyNpbmNsdWRlICJjb21w
cmVzcy5oIgorCisvKiBNYXggbnVtYmVyIG9mIGlvdmVjdG9ycyB3ZSBjYW4gdXNlIG9mZiB0aGUg
c3RhY2sgd2hlbiBzZW5kaW5nIHJlcXVlc3RzLiAqLworI2RlZmluZSBDSUZTX01BWF9JT1ZfU0la
RSA4CisKK3N0YXRpYyBzdHJ1Y3QgbWlkX3FfZW50cnkgKgorYWxsb2NfbWlkKGNvbnN0IHN0cnVj
dCBzbWJfaGRyICpzbWJfYnVmZmVyLCBzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpCit7
CisJc3RydWN0IG1pZF9xX2VudHJ5ICp0ZW1wOworCisJaWYgKHNlcnZlciA9PSBOVUxMKSB7CisJ
CWNpZnNfZGJnKFZGUywgIiVzOiBudWxsIFRDUCBzZXNzaW9uXG4iLCBfX2Z1bmNfXyk7CisJCXJl
dHVybiBOVUxMOworCX0KKworCXRlbXAgPSBtZW1wb29sX2FsbG9jKGNpZnNfbWlkX3Bvb2xwLCBH
RlBfTk9GUyk7CisJbWVtc2V0KHRlbXAsIDAsIHNpemVvZihzdHJ1Y3QgbWlkX3FfZW50cnkpKTsK
KwlrcmVmX2luaXQoJnRlbXAtPnJlZmNvdW50KTsKKwl0ZW1wLT5taWQgPSBnZXRfbWlkKHNtYl9i
dWZmZXIpOworCXRlbXAtPnBpZCA9IGN1cnJlbnQtPnBpZDsKKwl0ZW1wLT5jb21tYW5kID0gY3B1
X3RvX2xlMTYoc21iX2J1ZmZlci0+Q29tbWFuZCk7CisJY2lmc19kYmcoRllJLCAiRm9yIHNtYl9j
b21tYW5kICVkXG4iLCBzbWJfYnVmZmVyLT5Db21tYW5kKTsKKwkvKiBlYXNpZXIgdG8gdXNlIGpp
ZmZpZXMgKi8KKwkvKiB3aGVuIG1pZCBhbGxvY2F0ZWQgY2FuIGJlIGJlZm9yZSB3aGVuIHNlbnQg
Ki8KKwl0ZW1wLT53aGVuX2FsbG9jID0gamlmZmllczsKKwl0ZW1wLT5zZXJ2ZXIgPSBzZXJ2ZXI7
CisKKwkvKgorCSAqIFRoZSBkZWZhdWx0IGlzIGZvciB0aGUgbWlkIHRvIGJlIHN5bmNocm9ub3Vz
LCBzbyB0aGUKKwkgKiBkZWZhdWx0IGNhbGxiYWNrIGp1c3Qgd2FrZXMgdXAgdGhlIGN1cnJlbnQg
dGFzay4KKwkgKi8KKwlnZXRfdGFza19zdHJ1Y3QoY3VycmVudCk7CisJdGVtcC0+Y3JlYXRvciA9
IGN1cnJlbnQ7CisJdGVtcC0+Y2FsbGJhY2sgPSBjaWZzX3dha2VfdXBfdGFzazsKKwl0ZW1wLT5j
YWxsYmFja19kYXRhID0gY3VycmVudDsKKworCWF0b21pY19pbmMoJm1pZF9jb3VudCk7CisJdGVt
cC0+bWlkX3N0YXRlID0gTUlEX1JFUVVFU1RfQUxMT0NBVEVEOworCXJldHVybiB0ZW1wOworfQor
CitpbnQKK3NtYl9zZW5kKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IHNt
Yl9oZHIgKnNtYl9idWZmZXIsCisJIHVuc2lnbmVkIGludCBzbWJfYnVmX2xlbmd0aCkKK3sKKwlz
dHJ1Y3Qga3ZlYyBpb3ZbMl07CisJc3RydWN0IHNtYl9ycXN0IHJxc3QgPSB7IC5ycV9pb3YgPSBp
b3YsCisJCQkJIC5ycV9udmVjID0gMiB9OworCisJaW92WzBdLmlvdl9iYXNlID0gc21iX2J1ZmZl
cjsKKwlpb3ZbMF0uaW92X2xlbiA9IDQ7CisJaW92WzFdLmlvdl9iYXNlID0gKGNoYXIgKilzbWJf
YnVmZmVyICsgNDsKKwlpb3ZbMV0uaW92X2xlbiA9IHNtYl9idWZfbGVuZ3RoOworCisJcmV0dXJu
IF9fc21iX3NlbmRfcnFzdChzZXJ2ZXIsIDEsICZycXN0KTsKK30KKworc3RhdGljIGludCBhbGxv
Y2F0ZV9taWQoc3RydWN0IGNpZnNfc2VzICpzZXMsIHN0cnVjdCBzbWJfaGRyICppbl9idWYsCisJ
CQlzdHJ1Y3QgbWlkX3FfZW50cnkgKipwcG1pZFEpCit7CisJc3Bpbl9sb2NrKCZzZXMtPnNlc19s
b2NrKTsKKwlpZiAoc2VzLT5zZXNfc3RhdHVzID09IFNFU19ORVcpIHsKKwkJaWYgKChpbl9idWYt
PkNvbW1hbmQgIT0gU01CX0NPTV9TRVNTSU9OX1NFVFVQX0FORFgpICYmCisJCQkoaW5fYnVmLT5D
b21tYW5kICE9IFNNQl9DT01fTkVHT1RJQVRFKSkgeworCQkJc3Bpbl91bmxvY2soJnNlcy0+c2Vz
X2xvY2spOworCQkJcmV0dXJuIC1FQUdBSU47CisJCX0KKwkJLyogZWxzZSBvayAtIHdlIGFyZSBz
ZXR0aW5nIHVwIHNlc3Npb24gKi8KKwl9CisKKwlpZiAoc2VzLT5zZXNfc3RhdHVzID09IFNFU19F
WElUSU5HKSB7CisJCS8qIGNoZWNrIGlmIFNNQiBzZXNzaW9uIGlzIGJhZCBiZWNhdXNlIHdlIGFy
ZSBzZXR0aW5nIGl0IHVwICovCisJCWlmIChpbl9idWYtPkNvbW1hbmQgIT0gU01CX0NPTV9MT0dP
RkZfQU5EWCkgeworCQkJc3Bpbl91bmxvY2soJnNlcy0+c2VzX2xvY2spOworCQkJcmV0dXJuIC1F
QUdBSU47CisJCX0KKwkJLyogZWxzZSBvayAtIHdlIGFyZSBzaHV0dGluZyBkb3duIHNlc3Npb24g
Ki8KKwl9CisJc3Bpbl91bmxvY2soJnNlcy0+c2VzX2xvY2spOworCisJKnBwbWlkUSA9IGFsbG9j
X21pZChpbl9idWYsIHNlcy0+c2VydmVyKTsKKwlpZiAoKnBwbWlkUSA9PSBOVUxMKQorCQlyZXR1
cm4gLUVOT01FTTsKKwlzcGluX2xvY2soJnNlcy0+c2VydmVyLT5taWRfcXVldWVfbG9jayk7CisJ
bGlzdF9hZGRfdGFpbCgmKCpwcG1pZFEpLT5xaGVhZCwgJnNlcy0+c2VydmVyLT5wZW5kaW5nX21p
ZF9xKTsKKwlzcGluX3VubG9jaygmc2VzLT5zZXJ2ZXItPm1pZF9xdWV1ZV9sb2NrKTsKKwlyZXR1
cm4gMDsKK30KKworc3RydWN0IG1pZF9xX2VudHJ5ICoKK2NpZnNfc2V0dXBfYXN5bmNfcmVxdWVz
dChzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHN0cnVjdCBzbWJfcnFzdCAqcnFzdCkK
K3sKKwlpbnQgcmM7CisJc3RydWN0IHNtYl9oZHIgKmhkciA9IChzdHJ1Y3Qgc21iX2hkciAqKXJx
c3QtPnJxX2lvdlswXS5pb3ZfYmFzZTsKKwlzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZDsKKworCWlm
IChycXN0LT5ycV9pb3ZbMF0uaW92X2xlbiAhPSA0IHx8CisJICAgIHJxc3QtPnJxX2lvdlswXS5p
b3ZfYmFzZSArIDQgIT0gcnFzdC0+cnFfaW92WzFdLmlvdl9iYXNlKQorCQlyZXR1cm4gRVJSX1BU
UigtRUlPKTsKKworCS8qIGVuYWJsZSBzaWduaW5nIGlmIHNlcnZlciByZXF1aXJlcyBpdCAqLwor
CWlmIChzZXJ2ZXItPnNpZ24pCisJCWhkci0+RmxhZ3MyIHw9IFNNQkZMRzJfU0VDVVJJVFlfU0lH
TkFUVVJFOworCisJbWlkID0gYWxsb2NfbWlkKGhkciwgc2VydmVyKTsKKwlpZiAobWlkID09IE5V
TEwpCisJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOworCisJcmMgPSBjaWZzX3NpZ25fcnFzdChy
cXN0LCBzZXJ2ZXIsICZtaWQtPnNlcXVlbmNlX251bWJlcik7CisJaWYgKHJjKSB7CisJCXJlbGVh
c2VfbWlkKG1pZCk7CisJCXJldHVybiBFUlJfUFRSKHJjKTsKKwl9CisKKwlyZXR1cm4gbWlkOwor
fQorCisvKgorICoKKyAqIFNlbmQgYW4gU01CIFJlcXVlc3QuICBObyByZXNwb25zZSBpbmZvIChv
dGhlciB0aGFuIHJldHVybiBjb2RlKQorICogbmVlZHMgdG8gYmUgcGFyc2VkLgorICoKKyAqIGZs
YWdzIGluZGljYXRlIHRoZSB0eXBlIG9mIHJlcXVlc3QgYnVmZmVyIGFuZCBob3cgbG9uZyB0byB3
YWl0CisgKiBhbmQgd2hldGhlciB0byBsb2cgTlQgU1RBVFVTIGNvZGUgKGVycm9yKSBiZWZvcmUg
bWFwcGluZyBpdCB0byBQT1NJWCBlcnJvcgorICoKKyAqLworaW50CitTZW5kUmVjZWl2ZU5vUnNw
KGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3NlcyAqc2VzLAorCQkgY2hhciAq
aW5fYnVmLCBpbnQgZmxhZ3MpCit7CisJaW50IHJjOworCXN0cnVjdCBrdmVjIGlvdlsxXTsKKwlz
dHJ1Y3Qga3ZlYyByc3BfaW92OworCWludCByZXNwX2J1Zl90eXBlOworCisJaW92WzBdLmlvdl9i
YXNlID0gaW5fYnVmOworCWlvdlswXS5pb3ZfbGVuID0gZ2V0X3JmYzEwMDJfbGVuZ3RoKGluX2J1
ZikgKyA0OworCWZsYWdzIHw9IENJRlNfTk9fUlNQX0JVRjsKKwlyYyA9IFNlbmRSZWNlaXZlMih4
aWQsIHNlcywgaW92LCAxLCAmcmVzcF9idWZfdHlwZSwgZmxhZ3MsICZyc3BfaW92KTsKKwljaWZz
X2RiZyhOT0lTWSwgIlNlbmRSY3ZOb1JzcCBmbGFncyAlZCByYyAlZFxuIiwgZmxhZ3MsIHJjKTsK
KworCXJldHVybiByYzsKK30KKworaW50CitjaWZzX2NoZWNrX3JlY2VpdmUoc3RydWN0IG1pZF9x
X2VudHJ5ICptaWQsIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwKKwkJICAgYm9vbCBs
b2dfZXJyb3IpCit7CisJdW5zaWduZWQgaW50IGxlbiA9IGdldF9yZmMxMDAyX2xlbmd0aChtaWQt
PnJlc3BfYnVmKSArIDQ7CisKKwlkdW1wX3NtYihtaWQtPnJlc3BfYnVmLCBtaW5fdCh1MzIsIDky
LCBsZW4pKTsKKworCS8qIGNvbnZlcnQgdGhlIGxlbmd0aCBpbnRvIGEgbW9yZSB1c2FibGUgZm9y
bSAqLworCWlmIChzZXJ2ZXItPnNpZ24pIHsKKwkJc3RydWN0IGt2ZWMgaW92WzJdOworCQlpbnQg
cmMgPSAwOworCQlzdHJ1Y3Qgc21iX3Jxc3QgcnFzdCA9IHsgLnJxX2lvdiA9IGlvdiwKKwkJCQkJ
IC5ycV9udmVjID0gMiB9OworCisJCWlvdlswXS5pb3ZfYmFzZSA9IG1pZC0+cmVzcF9idWY7CisJ
CWlvdlswXS5pb3ZfbGVuID0gNDsKKwkJaW92WzFdLmlvdl9iYXNlID0gKGNoYXIgKiltaWQtPnJl
c3BfYnVmICsgNDsKKwkJaW92WzFdLmlvdl9sZW4gPSBsZW4gLSA0OworCQkvKiBGSVhNRTogYWRk
IGNvZGUgdG8ga2lsbCBzZXNzaW9uICovCisJCXJjID0gY2lmc192ZXJpZnlfc2lnbmF0dXJlKCZy
cXN0LCBzZXJ2ZXIsCisJCQkJCSAgIG1pZC0+c2VxdWVuY2VfbnVtYmVyKTsKKwkJaWYgKHJjKQor
CQkJY2lmc19zZXJ2ZXJfZGJnKFZGUywgIlNNQiBzaWduYXR1cmUgdmVyaWZpY2F0aW9uIHJldHVy
bmVkIGVycm9yID0gJWRcbiIsCisJCQkJIHJjKTsKKwl9CisKKwkvKiBCQiBzcGVjaWFsIGNhc2Ug
cmVjb25uZWN0IHRpZCBhbmQgdWlkIGhlcmU/ICovCisJcmV0dXJuIG1hcF9hbmRfY2hlY2tfc21i
X2Vycm9yKG1pZCwgbG9nX2Vycm9yKTsKK30KKworc3RydWN0IG1pZF9xX2VudHJ5ICoKK2NpZnNf
c2V0dXBfcmVxdWVzdChzdHJ1Y3QgY2lmc19zZXMgKnNlcywgc3RydWN0IFRDUF9TZXJ2ZXJfSW5m
byAqaWdub3JlZCwKKwkJICAgc3RydWN0IHNtYl9ycXN0ICpycXN0KQoreworCWludCByYzsKKwlz
dHJ1Y3Qgc21iX2hkciAqaGRyID0gKHN0cnVjdCBzbWJfaGRyICopcnFzdC0+cnFfaW92WzBdLmlv
dl9iYXNlOworCXN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkOworCisJaWYgKHJxc3QtPnJxX2lvdlsw
XS5pb3ZfbGVuICE9IDQgfHwKKwkgICAgcnFzdC0+cnFfaW92WzBdLmlvdl9iYXNlICsgNCAhPSBy
cXN0LT5ycV9pb3ZbMV0uaW92X2Jhc2UpCisJCXJldHVybiBFUlJfUFRSKC1FSU8pOworCisJcmMg
PSBhbGxvY2F0ZV9taWQoc2VzLCBoZHIsICZtaWQpOworCWlmIChyYykKKwkJcmV0dXJuIEVSUl9Q
VFIocmMpOworCXJjID0gY2lmc19zaWduX3Jxc3QocnFzdCwgc2VzLT5zZXJ2ZXIsICZtaWQtPnNl
cXVlbmNlX251bWJlcik7CisJaWYgKHJjKSB7CisJCWRlbGV0ZV9taWQobWlkKTsKKwkJcmV0dXJu
IEVSUl9QVFIocmMpOworCX0KKwlyZXR1cm4gbWlkOworfQorCitpbnQKK1NlbmRSZWNlaXZlMihj
b25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcywKKwkgICAgIHN0cnVj
dCBrdmVjICppb3YsIGludCBuX3ZlYywgaW50ICpyZXNwX2J1Zl90eXBlIC8qIHJldCAqLywKKwkg
ICAgIGNvbnN0IGludCBmbGFncywgc3RydWN0IGt2ZWMgKnJlc3BfaW92KQoreworCXN0cnVjdCBz
bWJfcnFzdCBycXN0OworCXN0cnVjdCBrdmVjIHNfaW92W0NJRlNfTUFYX0lPVl9TSVpFXSwgKm5l
d19pb3Y7CisJaW50IHJjOworCisJaWYgKG5fdmVjICsgMSA+IENJRlNfTUFYX0lPVl9TSVpFKSB7
CisJCW5ld19pb3YgPSBrbWFsbG9jX2FycmF5KG5fdmVjICsgMSwgc2l6ZW9mKHN0cnVjdCBrdmVj
KSwKKwkJCQkJR0ZQX0tFUk5FTCk7CisJCWlmICghbmV3X2lvdikgeworCQkJLyogb3RoZXJ3aXNl
IGNpZnNfc2VuZF9yZWN2IGJlbG93IHNldHMgcmVzcF9idWZfdHlwZSAqLworCQkJKnJlc3BfYnVm
X3R5cGUgPSBDSUZTX05PX0JVRkZFUjsKKwkJCXJldHVybiAtRU5PTUVNOworCQl9CisJfSBlbHNl
CisJCW5ld19pb3YgPSBzX2lvdjsKKworCS8qIDFzdCBpb3YgaXMgYSBSRkMxMDAxIGxlbmd0aCBm
b2xsb3dlZCBieSB0aGUgcmVzdCBvZiB0aGUgcGFja2V0ICovCisJbWVtY3B5KG5ld19pb3YgKyAx
LCBpb3YsIChzaXplb2Yoc3RydWN0IGt2ZWMpICogbl92ZWMpKTsKKworCW5ld19pb3ZbMF0uaW92
X2Jhc2UgPSBuZXdfaW92WzFdLmlvdl9iYXNlOworCW5ld19pb3ZbMF0uaW92X2xlbiA9IDQ7CisJ
bmV3X2lvdlsxXS5pb3ZfYmFzZSArPSA0OworCW5ld19pb3ZbMV0uaW92X2xlbiAtPSA0OworCisJ
bWVtc2V0KCZycXN0LCAwLCBzaXplb2Yoc3RydWN0IHNtYl9ycXN0KSk7CisJcnFzdC5ycV9pb3Yg
PSBuZXdfaW92OworCXJxc3QucnFfbnZlYyA9IG5fdmVjICsgMTsKKworCXJjID0gY2lmc19zZW5k
X3JlY3YoeGlkLCBzZXMsIHNlcy0+c2VydmVyLAorCQkJICAgICZycXN0LCByZXNwX2J1Zl90eXBl
LCBmbGFncywgcmVzcF9pb3YpOworCWlmIChuX3ZlYyArIDEgPiBDSUZTX01BWF9JT1ZfU0laRSkK
KwkJa2ZyZWUobmV3X2lvdik7CisJcmV0dXJuIHJjOworfQorCitpbnQKK1NlbmRSZWNlaXZlKGNv
bnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3NlcyAqc2VzLAorCSAgICBzdHJ1Y3Qg
c21iX2hkciAqaW5fYnVmLCBzdHJ1Y3Qgc21iX2hkciAqb3V0X2J1ZiwKKwkgICAgaW50ICpwYnl0
ZXNfcmV0dXJuZWQsIGNvbnN0IGludCBmbGFncykKK3sKKwlpbnQgcmMgPSAwOworCXN0cnVjdCBt
aWRfcV9lbnRyeSAqbWlkUTsKKwl1bnNpZ25lZCBpbnQgbGVuID0gYmUzMl90b19jcHUoaW5fYnVm
LT5zbWJfYnVmX2xlbmd0aCk7CisJc3RydWN0IGt2ZWMgaW92ID0geyAuaW92X2Jhc2UgPSBpbl9i
dWYsIC5pb3ZfbGVuID0gbGVuIH07CisJc3RydWN0IHNtYl9ycXN0IHJxc3QgPSB7IC5ycV9pb3Yg
PSAmaW92LCAucnFfbnZlYyA9IDEgfTsKKwlzdHJ1Y3QgY2lmc19jcmVkaXRzIGNyZWRpdHMgPSB7
IC52YWx1ZSA9IDEsIC5pbnN0YW5jZSA9IDAgfTsKKwlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpz
ZXJ2ZXI7CisKKwlpZiAoc2VzID09IE5VTEwpIHsKKwkJY2lmc19kYmcoVkZTLCAiTnVsbCBzbWIg
c2Vzc2lvblxuIik7CisJCXJldHVybiAtRUlPOworCX0KKwlzZXJ2ZXIgPSBzZXMtPnNlcnZlcjsK
KwlpZiAoc2VydmVyID09IE5VTEwpIHsKKwkJY2lmc19kYmcoVkZTLCAiTnVsbCB0Y3Agc2Vzc2lv
blxuIik7CisJCXJldHVybiAtRUlPOworCX0KKworCXNwaW5fbG9jaygmc2VydmVyLT5zcnZfbG9j
ayk7CisJaWYgKHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNFeGl0aW5nKSB7CisJCXNwaW5fdW5s
b2NrKCZzZXJ2ZXItPnNydl9sb2NrKTsKKwkJcmV0dXJuIC1FTk9FTlQ7CisJfQorCXNwaW5fdW5s
b2NrKCZzZXJ2ZXItPnNydl9sb2NrKTsKKworCS8qIEVuc3VyZSB0aGF0IHdlIGRvIG5vdCBzZW5k
IG1vcmUgdGhhbiA1MCBvdmVybGFwcGluZyByZXF1ZXN0cworCSAgIHRvIHRoZSBzYW1lIHNlcnZl
ci4gV2UgbWF5IG1ha2UgdGhpcyBjb25maWd1cmFibGUgbGF0ZXIgb3IKKwkgICB1c2Ugc2VzLT5t
YXhSZXEgKi8KKworCWlmIChsZW4gPiBDSUZTTWF4QnVmU2l6ZSArIE1BWF9DSUZTX0hEUl9TSVpF
IC0gNCkgeworCQljaWZzX3NlcnZlcl9kYmcoVkZTLCAiSW52YWxpZCBsZW5ndGgsIGdyZWF0ZXIg
dGhhbiBtYXhpbXVtIGZyYW1lLCAlZFxuIiwKKwkJCQlsZW4pOworCQlyZXR1cm4gLUVJTzsKKwl9
CisKKwlyYyA9IHdhaXRfZm9yX2ZyZWVfcmVxdWVzdChzZXJ2ZXIsIGZsYWdzLCAmY3JlZGl0cy5p
bnN0YW5jZSk7CisJaWYgKHJjKQorCQlyZXR1cm4gcmM7CisKKwkvKiBtYWtlIHN1cmUgdGhhdCB3
ZSBzaWduIGluIHRoZSBzYW1lIG9yZGVyIHRoYXQgd2Ugc2VuZCBvbiB0aGlzIHNvY2tldAorCSAg
IGFuZCBhdm9pZCByYWNlcyBpbnNpZGUgdGNwIHNlbmRtc2cgY29kZSB0aGF0IGNvdWxkIGNhdXNl
IGNvcnJ1cHRpb24KKwkgICBvZiBzbWIgZGF0YSAqLworCisJY2lmc19zZXJ2ZXJfbG9jayhzZXJ2
ZXIpOworCisJcmMgPSBhbGxvY2F0ZV9taWQoc2VzLCBpbl9idWYsICZtaWRRKTsKKwlpZiAocmMp
IHsKKwkJY2lmc19zZXJ2ZXJfdW5sb2NrKHNlcnZlcik7CisJCS8qIFVwZGF0ZSAjIG9mIHJlcXVl
c3RzIG9uIHdpcmUgdG8gc2VydmVyICovCisJCWFkZF9jcmVkaXRzKHNlcnZlciwgJmNyZWRpdHMs
IDApOworCQlyZXR1cm4gcmM7CisJfQorCisJcmMgPSBjaWZzX3NpZ25fc21iKGluX2J1Ziwgc2Vy
dmVyLCAmbWlkUS0+c2VxdWVuY2VfbnVtYmVyKTsKKwlpZiAocmMpIHsKKwkJY2lmc19zZXJ2ZXJf
dW5sb2NrKHNlcnZlcik7CisJCWdvdG8gb3V0OworCX0KKworCW1pZFEtPm1pZF9zdGF0ZSA9IE1J
RF9SRVFVRVNUX1NVQk1JVFRFRDsKKworCXJjID0gc21iX3NlbmQoc2VydmVyLCBpbl9idWYsIGxl
bik7CisJY2lmc19zYXZlX3doZW5fc2VudChtaWRRKTsKKworCWlmIChyYyA8IDApCisJCXNlcnZl
ci0+c2VxdWVuY2VfbnVtYmVyIC09IDI7CisKKwljaWZzX3NlcnZlcl91bmxvY2soc2VydmVyKTsK
KworCWlmIChyYyA8IDApCisJCWdvdG8gb3V0OworCisJcmMgPSB3YWl0X2Zvcl9yZXNwb25zZShz
ZXJ2ZXIsIG1pZFEpOworCWlmIChyYyAhPSAwKSB7CisJCXNlbmRfY2FuY2VsKHNlcnZlciwgJnJx
c3QsIG1pZFEpOworCQlzcGluX2xvY2soJnNlcnZlci0+bWlkX3F1ZXVlX2xvY2spOworCQlpZiAo
bWlkUS0+bWlkX3N0YXRlID09IE1JRF9SRVFVRVNUX1NVQk1JVFRFRCB8fAorCQkgICAgbWlkUS0+
bWlkX3N0YXRlID09IE1JRF9SRVNQT05TRV9SRUNFSVZFRCkgeworCQkJLyogbm8gbG9uZ2VyIGNv
bnNpZGVyZWQgdG8gYmUgImluLWZsaWdodCIgKi8KKwkJCW1pZFEtPmNhbGxiYWNrID0gcmVsZWFz
ZV9taWQ7CisJCQlzcGluX3VubG9jaygmc2VydmVyLT5taWRfcXVldWVfbG9jayk7CisJCQlhZGRf
Y3JlZGl0cyhzZXJ2ZXIsICZjcmVkaXRzLCAwKTsKKwkJCXJldHVybiByYzsKKwkJfQorCQlzcGlu
X3VubG9jaygmc2VydmVyLT5taWRfcXVldWVfbG9jayk7CisJfQorCisJcmMgPSBjaWZzX3N5bmNf
bWlkX3Jlc3VsdChtaWRRLCBzZXJ2ZXIpOworCWlmIChyYyAhPSAwKSB7CisJCWFkZF9jcmVkaXRz
KHNlcnZlciwgJmNyZWRpdHMsIDApOworCQlyZXR1cm4gcmM7CisJfQorCisJaWYgKCFtaWRRLT5y
ZXNwX2J1ZiB8fCAhb3V0X2J1ZiB8fAorCSAgICBtaWRRLT5taWRfc3RhdGUgIT0gTUlEX1JFU1BP
TlNFX1JFQURZKSB7CisJCXJjID0gLUVJTzsKKwkJY2lmc19zZXJ2ZXJfZGJnKFZGUywgIkJhZCBN
SUQgc3RhdGU/XG4iKTsKKwkJZ290byBvdXQ7CisJfQorCisJKnBieXRlc19yZXR1cm5lZCA9IGdl
dF9yZmMxMDAyX2xlbmd0aChtaWRRLT5yZXNwX2J1Zik7CisJbWVtY3B5KG91dF9idWYsIG1pZFEt
PnJlc3BfYnVmLCAqcGJ5dGVzX3JldHVybmVkICsgNCk7CisJcmMgPSBjaWZzX2NoZWNrX3JlY2Vp
dmUobWlkUSwgc2VydmVyLCAwKTsKK291dDoKKwlkZWxldGVfbWlkKG1pZFEpOworCWFkZF9jcmVk
aXRzKHNlcnZlciwgJmNyZWRpdHMsIDApOworCisJcmV0dXJuIHJjOworfQorCisvKiBXZSBzZW5k
IGEgTE9DS0lOR1hfQ0FOQ0VMX0xPQ0sgdG8gY2F1c2UgdGhlIFdpbmRvd3MKKyAgIGJsb2NraW5n
IGxvY2sgdG8gcmV0dXJuLiAqLworCitzdGF0aWMgaW50CitzZW5kX2xvY2tfY2FuY2VsKGNvbnN0
IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24sCisJCQlzdHJ1Y3Qgc21i
X2hkciAqaW5fYnVmLAorCQkJc3RydWN0IHNtYl9oZHIgKm91dF9idWYpCit7CisJaW50IGJ5dGVz
X3JldHVybmVkOworCXN0cnVjdCBjaWZzX3NlcyAqc2VzID0gdGNvbi0+c2VzOworCUxPQ0tfUkVR
ICpwU01CID0gKExPQ0tfUkVRICopaW5fYnVmOworCisJLyogV2UganVzdCBtb2RpZnkgdGhlIGN1
cnJlbnQgaW5fYnVmIHRvIGNoYW5nZQorCSAgIHRoZSB0eXBlIG9mIGxvY2sgZnJvbSBMT0NLSU5H
X0FORFhfU0hBUkVEX0xPQ0sKKwkgICBvciBMT0NLSU5HX0FORFhfRVhDTFVTSVZFX0xPQ0sgdG8K
KwkgICBMT0NLSU5HX0FORFhfQ0FOQ0VMX0xPQ0suICovCisKKwlwU01CLT5Mb2NrVHlwZSA9IExP
Q0tJTkdfQU5EWF9DQU5DRUxfTE9DS3xMT0NLSU5HX0FORFhfTEFSR0VfRklMRVM7CisJcFNNQi0+
VGltZW91dCA9IDA7CisJcFNNQi0+aGRyLk1pZCA9IGdldF9uZXh0X21pZChzZXMtPnNlcnZlcik7
CisKKwlyZXR1cm4gU2VuZFJlY2VpdmUoeGlkLCBzZXMsIGluX2J1Ziwgb3V0X2J1ZiwKKwkJCSZi
eXRlc19yZXR1cm5lZCwgMCk7Cit9CisKK2ludAorU2VuZFJlY2VpdmVCbG9ja2luZ0xvY2soY29u
c3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKKwkgICAgc3RydWN0
IHNtYl9oZHIgKmluX2J1Ziwgc3RydWN0IHNtYl9oZHIgKm91dF9idWYsCisJICAgIGludCAqcGJ5
dGVzX3JldHVybmVkKQoreworCWludCByYyA9IDA7CisJaW50IHJzdGFydCA9IDA7CisJc3RydWN0
IG1pZF9xX2VudHJ5ICptaWRROworCXN0cnVjdCBjaWZzX3NlcyAqc2VzOworCXVuc2lnbmVkIGlu
dCBsZW4gPSBiZTMyX3RvX2NwdShpbl9idWYtPnNtYl9idWZfbGVuZ3RoKTsKKwlzdHJ1Y3Qga3Zl
YyBpb3YgPSB7IC5pb3ZfYmFzZSA9IGluX2J1ZiwgLmlvdl9sZW4gPSBsZW4gfTsKKwlzdHJ1Y3Qg
c21iX3Jxc3QgcnFzdCA9IHsgLnJxX2lvdiA9ICZpb3YsIC5ycV9udmVjID0gMSB9OworCXVuc2ln
bmVkIGludCBpbnN0YW5jZTsKKwlzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXI7CisKKwlp
ZiAodGNvbiA9PSBOVUxMIHx8IHRjb24tPnNlcyA9PSBOVUxMKSB7CisJCWNpZnNfZGJnKFZGUywg
Ik51bGwgc21iIHNlc3Npb25cbiIpOworCQlyZXR1cm4gLUVJTzsKKwl9CisJc2VzID0gdGNvbi0+
c2VzOworCXNlcnZlciA9IHNlcy0+c2VydmVyOworCisJaWYgKHNlcnZlciA9PSBOVUxMKSB7CisJ
CWNpZnNfZGJnKFZGUywgIk51bGwgdGNwIHNlc3Npb25cbiIpOworCQlyZXR1cm4gLUVJTzsKKwl9
CisKKwlzcGluX2xvY2soJnNlcnZlci0+c3J2X2xvY2spOworCWlmIChzZXJ2ZXItPnRjcFN0YXR1
cyA9PSBDaWZzRXhpdGluZykgeworCQlzcGluX3VubG9jaygmc2VydmVyLT5zcnZfbG9jayk7CisJ
CXJldHVybiAtRU5PRU5UOworCX0KKwlzcGluX3VubG9jaygmc2VydmVyLT5zcnZfbG9jayk7CisK
KwkvKiBFbnN1cmUgdGhhdCB3ZSBkbyBub3Qgc2VuZCBtb3JlIHRoYW4gNTAgb3ZlcmxhcHBpbmcg
cmVxdWVzdHMKKwkgICB0byB0aGUgc2FtZSBzZXJ2ZXIuIFdlIG1heSBtYWtlIHRoaXMgY29uZmln
dXJhYmxlIGxhdGVyIG9yCisJICAgdXNlIHNlcy0+bWF4UmVxICovCisKKwlpZiAobGVuID4gQ0lG
U01heEJ1ZlNpemUgKyBNQVhfQ0lGU19IRFJfU0laRSAtIDQpIHsKKwkJY2lmc190Y29uX2RiZyhW
RlMsICJJbnZhbGlkIGxlbmd0aCwgZ3JlYXRlciB0aGFuIG1heGltdW0gZnJhbWUsICVkXG4iLAor
CQkJICAgICAgbGVuKTsKKwkJcmV0dXJuIC1FSU87CisJfQorCisJcmMgPSB3YWl0X2Zvcl9mcmVl
X3JlcXVlc3Qoc2VydmVyLCBDSUZTX0JMT0NLSU5HX09QLCAmaW5zdGFuY2UpOworCWlmIChyYykK
KwkJcmV0dXJuIHJjOworCisJLyogbWFrZSBzdXJlIHRoYXQgd2Ugc2lnbiBpbiB0aGUgc2FtZSBv
cmRlciB0aGF0IHdlIHNlbmQgb24gdGhpcyBzb2NrZXQKKwkgICBhbmQgYXZvaWQgcmFjZXMgaW5z
aWRlIHRjcCBzZW5kbXNnIGNvZGUgdGhhdCBjb3VsZCBjYXVzZSBjb3JydXB0aW9uCisJICAgb2Yg
c21iIGRhdGEgKi8KKworCWNpZnNfc2VydmVyX2xvY2soc2VydmVyKTsKKworCXJjID0gYWxsb2Nh
dGVfbWlkKHNlcywgaW5fYnVmLCAmbWlkUSk7CisJaWYgKHJjKSB7CisJCWNpZnNfc2VydmVyX3Vu
bG9jayhzZXJ2ZXIpOworCQlyZXR1cm4gcmM7CisJfQorCisJcmMgPSBjaWZzX3NpZ25fc21iKGlu
X2J1Ziwgc2VydmVyLCAmbWlkUS0+c2VxdWVuY2VfbnVtYmVyKTsKKwlpZiAocmMpIHsKKwkJZGVs
ZXRlX21pZChtaWRRKTsKKwkJY2lmc19zZXJ2ZXJfdW5sb2NrKHNlcnZlcik7CisJCXJldHVybiBy
YzsKKwl9CisKKwltaWRRLT5taWRfc3RhdGUgPSBNSURfUkVRVUVTVF9TVUJNSVRURUQ7CisJcmMg
PSBzbWJfc2VuZChzZXJ2ZXIsIGluX2J1ZiwgbGVuKTsKKwljaWZzX3NhdmVfd2hlbl9zZW50KG1p
ZFEpOworCisJaWYgKHJjIDwgMCkKKwkJc2VydmVyLT5zZXF1ZW5jZV9udW1iZXIgLT0gMjsKKwor
CWNpZnNfc2VydmVyX3VubG9jayhzZXJ2ZXIpOworCisJaWYgKHJjIDwgMCkgeworCQlkZWxldGVf
bWlkKG1pZFEpOworCQlyZXR1cm4gcmM7CisJfQorCisJLyogV2FpdCBmb3IgYSByZXBseSAtIGFs
bG93IHNpZ25hbHMgdG8gaW50ZXJydXB0LiAqLworCXJjID0gd2FpdF9ldmVudF9pbnRlcnJ1cHRp
YmxlKHNlcnZlci0+cmVzcG9uc2VfcSwKKwkJKCEobWlkUS0+bWlkX3N0YXRlID09IE1JRF9SRVFV
RVNUX1NVQk1JVFRFRCB8fAorCQkgICBtaWRRLT5taWRfc3RhdGUgPT0gTUlEX1JFU1BPTlNFX1JF
Q0VJVkVEKSkgfHwKKwkJKChzZXJ2ZXItPnRjcFN0YXR1cyAhPSBDaWZzR29vZCkgJiYKKwkJIChz
ZXJ2ZXItPnRjcFN0YXR1cyAhPSBDaWZzTmV3KSkpOworCisJLyogV2VyZSB3ZSBpbnRlcnJ1cHRl
ZCBieSBhIHNpZ25hbCA/ICovCisJc3Bpbl9sb2NrKCZzZXJ2ZXItPnNydl9sb2NrKTsKKwlpZiAo
KHJjID09IC1FUkVTVEFSVFNZUykgJiYKKwkJKG1pZFEtPm1pZF9zdGF0ZSA9PSBNSURfUkVRVUVT
VF9TVUJNSVRURUQgfHwKKwkJIG1pZFEtPm1pZF9zdGF0ZSA9PSBNSURfUkVTUE9OU0VfUkVDRUlW
RUQpICYmCisJCSgoc2VydmVyLT50Y3BTdGF0dXMgPT0gQ2lmc0dvb2QpIHx8CisJCSAoc2VydmVy
LT50Y3BTdGF0dXMgPT0gQ2lmc05ldykpKSB7CisJCXNwaW5fdW5sb2NrKCZzZXJ2ZXItPnNydl9s
b2NrKTsKKworCQlpZiAoaW5fYnVmLT5Db21tYW5kID09IFNNQl9DT01fVFJBTlNBQ1RJT04yKSB7
CisJCQkvKiBQT1NJWCBsb2NrLiBXZSBzZW5kIGEgTlRfQ0FOQ0VMIFNNQiB0byBjYXVzZSB0aGUK
KwkJCSAgIGJsb2NraW5nIGxvY2sgdG8gcmV0dXJuLiAqLworCQkJcmMgPSBzZW5kX2NhbmNlbChz
ZXJ2ZXIsICZycXN0LCBtaWRRKTsKKwkJCWlmIChyYykgeworCQkJCWRlbGV0ZV9taWQobWlkUSk7
CisJCQkJcmV0dXJuIHJjOworCQkJfQorCQl9IGVsc2UgeworCQkJLyogV2luZG93cyBsb2NrLiBX
ZSBzZW5kIGEgTE9DS0lOR1hfQ0FOQ0VMX0xPQ0sKKwkJCSAgIHRvIGNhdXNlIHRoZSBibG9ja2lu
ZyBsb2NrIHRvIHJldHVybi4gKi8KKworCQkJcmMgPSBzZW5kX2xvY2tfY2FuY2VsKHhpZCwgdGNv
biwgaW5fYnVmLCBvdXRfYnVmKTsKKworCQkJLyogSWYgd2UgZ2V0IC1FTk9MQ0sgYmFjayB0aGUg
bG9jayBtYXkgaGF2ZQorCQkJICAgYWxyZWFkeSBiZWVuIHJlbW92ZWQuIERvbid0IGV4aXQgaW4g
dGhpcyBjYXNlLiAqLworCQkJaWYgKHJjICYmIHJjICE9IC1FTk9MQ0spIHsKKwkJCQlkZWxldGVf
bWlkKG1pZFEpOworCQkJCXJldHVybiByYzsKKwkJCX0KKwkJfQorCisJCXJjID0gd2FpdF9mb3Jf
cmVzcG9uc2Uoc2VydmVyLCBtaWRRKTsKKwkJaWYgKHJjKSB7CisJCQlzZW5kX2NhbmNlbChzZXJ2
ZXIsICZycXN0LCBtaWRRKTsKKwkJCXNwaW5fbG9jaygmc2VydmVyLT5taWRfcXVldWVfbG9jayk7
CisJCQlpZiAobWlkUS0+bWlkX3N0YXRlID09IE1JRF9SRVFVRVNUX1NVQk1JVFRFRCB8fAorCQkJ
ICAgIG1pZFEtPm1pZF9zdGF0ZSA9PSBNSURfUkVTUE9OU0VfUkVDRUlWRUQpIHsKKwkJCQkvKiBu
byBsb25nZXIgY29uc2lkZXJlZCB0byBiZSAiaW4tZmxpZ2h0IiAqLworCQkJCW1pZFEtPmNhbGxi
YWNrID0gcmVsZWFzZV9taWQ7CisJCQkJc3Bpbl91bmxvY2soJnNlcnZlci0+bWlkX3F1ZXVlX2xv
Y2spOworCQkJCXJldHVybiByYzsKKwkJCX0KKwkJCXNwaW5fdW5sb2NrKCZzZXJ2ZXItPm1pZF9x
dWV1ZV9sb2NrKTsKKwkJfQorCisJCS8qIFdlIGdvdCB0aGUgcmVzcG9uc2UgLSByZXN0YXJ0IHN5
c3RlbSBjYWxsLiAqLworCQlyc3RhcnQgPSAxOworCQlzcGluX2xvY2soJnNlcnZlci0+c3J2X2xv
Y2spOworCX0KKwlzcGluX3VubG9jaygmc2VydmVyLT5zcnZfbG9jayk7CisKKwlyYyA9IGNpZnNf
c3luY19taWRfcmVzdWx0KG1pZFEsIHNlcnZlcik7CisJaWYgKHJjICE9IDApCisJCXJldHVybiBy
YzsKKworCS8qIHJjdmQgZnJhbWUgaXMgb2sgKi8KKwlpZiAob3V0X2J1ZiA9PSBOVUxMIHx8IG1p
ZFEtPm1pZF9zdGF0ZSAhPSBNSURfUkVTUE9OU0VfUkVBRFkpIHsKKwkJcmMgPSAtRUlPOworCQlj
aWZzX3Rjb25fZGJnKFZGUywgIkJhZCBNSUQgc3RhdGU/XG4iKTsKKwkJZ290byBvdXQ7CisJfQor
CisJKnBieXRlc19yZXR1cm5lZCA9IGdldF9yZmMxMDAyX2xlbmd0aChtaWRRLT5yZXNwX2J1Zik7
CisJbWVtY3B5KG91dF9idWYsIG1pZFEtPnJlc3BfYnVmLCAqcGJ5dGVzX3JldHVybmVkICsgNCk7
CisJcmMgPSBjaWZzX2NoZWNrX3JlY2VpdmUobWlkUSwgc2VydmVyLCAwKTsKK291dDoKKwlkZWxl
dGVfbWlkKG1pZFEpOworCWlmIChyc3RhcnQgJiYgcmMgPT0gLUVBQ0NFUykKKwkJcmV0dXJuIC1F
UkVTVEFSVFNZUzsKKwlyZXR1cm4gcmM7Cit9CmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L3Ry
YW5zcG9ydC5jIGIvZnMvc21iL2NsaWVudC90cmFuc3BvcnQuYwppbmRleCBjYTkzNThjMjRjZWIu
LjMyZDUyOGI0ZGQ4MyAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC90cmFuc3BvcnQuYworKysg
Yi9mcy9zbWIvY2xpZW50L3RyYW5zcG9ydC5jCkBAIC0zMCw5ICszMCw2IEBACiAjaW5jbHVkZSAi
c21iZGlyZWN0LmgiCiAjaW5jbHVkZSAiY29tcHJlc3MuaCIKIAotLyogTWF4IG51bWJlciBvZiBp
b3ZlY3RvcnMgd2UgY2FuIHVzZSBvZmYgdGhlIHN0YWNrIHdoZW4gc2VuZGluZyByZXF1ZXN0cy4g
Ki8KLSNkZWZpbmUgQ0lGU19NQVhfSU9WX1NJWkUgOAotCiB2b2lkCiBjaWZzX3dha2VfdXBfdGFz
ayhzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZCkKIHsKQEAgLTQxLDQyICszOCw2IEBAIGNpZnNfd2Fr
ZV91cF90YXNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogCXdha2VfdXBfcHJvY2VzcyhtaWQt
PmNhbGxiYWNrX2RhdGEpOwogfQogCi1zdGF0aWMgc3RydWN0IG1pZF9xX2VudHJ5ICoKLWFsbG9j
X21pZChjb25zdCBzdHJ1Y3Qgc21iX2hkciAqc21iX2J1ZmZlciwgc3RydWN0IFRDUF9TZXJ2ZXJf
SW5mbyAqc2VydmVyKQotewotCXN0cnVjdCBtaWRfcV9lbnRyeSAqdGVtcDsKLQotCWlmIChzZXJ2
ZXIgPT0gTlVMTCkgewotCQljaWZzX2RiZyhWRlMsICIlczogbnVsbCBUQ1Agc2Vzc2lvblxuIiwg
X19mdW5jX18pOwotCQlyZXR1cm4gTlVMTDsKLQl9Ci0KLQl0ZW1wID0gbWVtcG9vbF9hbGxvYyhj
aWZzX21pZF9wb29scCwgR0ZQX05PRlMpOwotCW1lbXNldCh0ZW1wLCAwLCBzaXplb2Yoc3RydWN0
IG1pZF9xX2VudHJ5KSk7Ci0Ja3JlZl9pbml0KCZ0ZW1wLT5yZWZjb3VudCk7Ci0JdGVtcC0+bWlk
ID0gZ2V0X21pZChzbWJfYnVmZmVyKTsKLQl0ZW1wLT5waWQgPSBjdXJyZW50LT5waWQ7Ci0JdGVt
cC0+Y29tbWFuZCA9IGNwdV90b19sZTE2KHNtYl9idWZmZXItPkNvbW1hbmQpOwotCWNpZnNfZGJn
KEZZSSwgIkZvciBzbWJfY29tbWFuZCAlZFxuIiwgc21iX2J1ZmZlci0+Q29tbWFuZCk7Ci0JLyog
ZWFzaWVyIHRvIHVzZSBqaWZmaWVzICovCi0JLyogd2hlbiBtaWQgYWxsb2NhdGVkIGNhbiBiZSBi
ZWZvcmUgd2hlbiBzZW50ICovCi0JdGVtcC0+d2hlbl9hbGxvYyA9IGppZmZpZXM7Ci0JdGVtcC0+
c2VydmVyID0gc2VydmVyOwotCi0JLyoKLQkgKiBUaGUgZGVmYXVsdCBpcyBmb3IgdGhlIG1pZCB0
byBiZSBzeW5jaHJvbm91cywgc28gdGhlCi0JICogZGVmYXVsdCBjYWxsYmFjayBqdXN0IHdha2Vz
IHVwIHRoZSBjdXJyZW50IHRhc2suCi0JICovCi0JZ2V0X3Rhc2tfc3RydWN0KGN1cnJlbnQpOwot
CXRlbXAtPmNyZWF0b3IgPSBjdXJyZW50OwotCXRlbXAtPmNhbGxiYWNrID0gY2lmc193YWtlX3Vw
X3Rhc2s7Ci0JdGVtcC0+Y2FsbGJhY2tfZGF0YSA9IGN1cnJlbnQ7Ci0KLQlhdG9taWNfaW5jKCZt
aWRfY291bnQpOwotCXRlbXAtPm1pZF9zdGF0ZSA9IE1JRF9SRVFVRVNUX0FMTE9DQVRFRDsKLQly
ZXR1cm4gdGVtcDsKLX0KLQogdm9pZCBfX3JlbGVhc2VfbWlkKHN0cnVjdCBrcmVmICpyZWZjb3Vu
dCkKIHsKIAlzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZEVudHJ5ID0KQEAgLTI2OSw5ICsyMzAsOCBA
QCBzbWJfcnFzdF9sZW4oc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3Qgc21i
X3Jxc3QgKnJxc3QpCiAJcmV0dXJuIGJ1ZmxlbjsKIH0KIAotc3RhdGljIGludAotX19zbWJfc2Vu
ZF9ycXN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgaW50IG51bV9ycXN0LAotCQlz
dHJ1Y3Qgc21iX3Jxc3QgKnJxc3QpCitpbnQgX19zbWJfc2VuZF9ycXN0KHN0cnVjdCBUQ1BfU2Vy
dmVyX0luZm8gKnNlcnZlciwgaW50IG51bV9ycXN0LAorCQkgICAgc3RydWN0IHNtYl9ycXN0ICpy
cXN0KQogewogCWludCByYzsKIAlzdHJ1Y3Qga3ZlYyAqaW92OwpAQCAtNDU2LDIyICs0MTYsNiBA
QCBzbWJfc2VuZF9ycXN0KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgaW50IG51bV9y
cXN0LAogCXJldHVybiByYzsKIH0KIAotaW50Ci1zbWJfc2VuZChzdHJ1Y3QgVENQX1NlcnZlcl9J
bmZvICpzZXJ2ZXIsIHN0cnVjdCBzbWJfaGRyICpzbWJfYnVmZmVyLAotCSB1bnNpZ25lZCBpbnQg
c21iX2J1Zl9sZW5ndGgpCi17Ci0Jc3RydWN0IGt2ZWMgaW92WzJdOwotCXN0cnVjdCBzbWJfcnFz
dCBycXN0ID0geyAucnFfaW92ID0gaW92LAotCQkJCSAucnFfbnZlYyA9IDIgfTsKLQotCWlvdlsw
XS5pb3ZfYmFzZSA9IHNtYl9idWZmZXI7Ci0JaW92WzBdLmlvdl9sZW4gPSA0OwotCWlvdlsxXS5p
b3ZfYmFzZSA9IChjaGFyICopc21iX2J1ZmZlciArIDQ7Ci0JaW92WzFdLmlvdl9sZW4gPSBzbWJf
YnVmX2xlbmd0aDsKLQotCXJldHVybiBfX3NtYl9zZW5kX3Jxc3Qoc2VydmVyLCAxLCAmcnFzdCk7
Ci19Ci0KIHN0YXRpYyBpbnQKIHdhaXRfZm9yX2ZyZWVfY3JlZGl0cyhzdHJ1Y3QgVENQX1NlcnZl
cl9JbmZvICpzZXJ2ZXIsIGNvbnN0IGludCBudW1fY3JlZGl0cywKIAkJICAgICAgY29uc3QgaW50
IHRpbWVvdXQsIGNvbnN0IGludCBmbGFncywKQEAgLTYyNiw5ICs1NzAsOCBAQCB3YWl0X2Zvcl9m
cmVlX2NyZWRpdHMoc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBjb25zdCBpbnQgbnVt
X2NyZWRpdHMsCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQKLXdhaXRfZm9yX2ZyZWVfcmVx
dWVzdChzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIGNvbnN0IGludCBmbGFncywKLQkJ
ICAgICAgdW5zaWduZWQgaW50ICppbnN0YW5jZSkKK2ludCB3YWl0X2Zvcl9mcmVlX3JlcXVlc3Qo
c3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBjb25zdCBpbnQgZmxhZ3MsCisJCQkgIHVu
c2lnbmVkIGludCAqaW5zdGFuY2UpCiB7CiAJcmV0dXJuIHdhaXRfZm9yX2ZyZWVfY3JlZGl0cyhz
ZXJ2ZXIsIDEsIC0xLCBmbGFncywKIAkJCQkgICAgIGluc3RhbmNlKTsKQEAgLTY5MCw0MCArNjMz
LDcgQEAgY2lmc193YWl0X210dV9jcmVkaXRzKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZl
ciwgc2l6ZV90IHNpemUsCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgYWxsb2NhdGVfbWlk
KHN0cnVjdCBjaWZzX3NlcyAqc2VzLCBzdHJ1Y3Qgc21iX2hkciAqaW5fYnVmLAotCQkJc3RydWN0
IG1pZF9xX2VudHJ5ICoqcHBtaWRRKQotewotCXNwaW5fbG9jaygmc2VzLT5zZXNfbG9jayk7Ci0J
aWYgKHNlcy0+c2VzX3N0YXR1cyA9PSBTRVNfTkVXKSB7Ci0JCWlmICgoaW5fYnVmLT5Db21tYW5k
ICE9IFNNQl9DT01fU0VTU0lPTl9TRVRVUF9BTkRYKSAmJgotCQkJKGluX2J1Zi0+Q29tbWFuZCAh
PSBTTUJfQ09NX05FR09USUFURSkpIHsKLQkJCXNwaW5fdW5sb2NrKCZzZXMtPnNlc19sb2NrKTsK
LQkJCXJldHVybiAtRUFHQUlOOwotCQl9Ci0JCS8qIGVsc2Ugb2sgLSB3ZSBhcmUgc2V0dGluZyB1
cCBzZXNzaW9uICovCi0JfQotCi0JaWYgKHNlcy0+c2VzX3N0YXR1cyA9PSBTRVNfRVhJVElORykg
ewotCQkvKiBjaGVjayBpZiBTTUIgc2Vzc2lvbiBpcyBiYWQgYmVjYXVzZSB3ZSBhcmUgc2V0dGlu
ZyBpdCB1cCAqLwotCQlpZiAoaW5fYnVmLT5Db21tYW5kICE9IFNNQl9DT01fTE9HT0ZGX0FORFgp
IHsKLQkJCXNwaW5fdW5sb2NrKCZzZXMtPnNlc19sb2NrKTsKLQkJCXJldHVybiAtRUFHQUlOOwot
CQl9Ci0JCS8qIGVsc2Ugb2sgLSB3ZSBhcmUgc2h1dHRpbmcgZG93biBzZXNzaW9uICovCi0JfQot
CXNwaW5fdW5sb2NrKCZzZXMtPnNlc19sb2NrKTsKLQotCSpwcG1pZFEgPSBhbGxvY19taWQoaW5f
YnVmLCBzZXMtPnNlcnZlcik7Ci0JaWYgKCpwcG1pZFEgPT0gTlVMTCkKLQkJcmV0dXJuIC1FTk9N
RU07Ci0Jc3Bpbl9sb2NrKCZzZXMtPnNlcnZlci0+bWlkX3F1ZXVlX2xvY2spOwotCWxpc3RfYWRk
X3RhaWwoJigqcHBtaWRRKS0+cWhlYWQsICZzZXMtPnNlcnZlci0+cGVuZGluZ19taWRfcSk7Ci0J
c3Bpbl91bmxvY2soJnNlcy0+c2VydmVyLT5taWRfcXVldWVfbG9jayk7Ci0JcmV0dXJuIDA7Ci19
Ci0KLXN0YXRpYyBpbnQKLXdhaXRfZm9yX3Jlc3BvbnNlKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8g
KnNlcnZlciwgc3RydWN0IG1pZF9xX2VudHJ5ICptaWRRKQoraW50IHdhaXRfZm9yX3Jlc3BvbnNl
KHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3RydWN0IG1pZF9xX2VudHJ5ICptaWRR
KQogewogCWludCBlcnJvcjsKIApAQCAtNzM3LDM0ICs2NDcsNiBAQCB3YWl0X2Zvcl9yZXNwb25z
ZShzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlk
USkKIAlyZXR1cm4gMDsKIH0KIAotc3RydWN0IG1pZF9xX2VudHJ5ICoKLWNpZnNfc2V0dXBfYXN5
bmNfcmVxdWVzdChzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIsIHN0cnVjdCBzbWJfcnFz
dCAqcnFzdCkKLXsKLQlpbnQgcmM7Ci0Jc3RydWN0IHNtYl9oZHIgKmhkciA9IChzdHJ1Y3Qgc21i
X2hkciAqKXJxc3QtPnJxX2lvdlswXS5pb3ZfYmFzZTsKLQlzdHJ1Y3QgbWlkX3FfZW50cnkgKm1p
ZDsKLQotCWlmIChycXN0LT5ycV9pb3ZbMF0uaW92X2xlbiAhPSA0IHx8Ci0JICAgIHJxc3QtPnJx
X2lvdlswXS5pb3ZfYmFzZSArIDQgIT0gcnFzdC0+cnFfaW92WzFdLmlvdl9iYXNlKQotCQlyZXR1
cm4gRVJSX1BUUigtRUlPKTsKLQotCS8qIGVuYWJsZSBzaWduaW5nIGlmIHNlcnZlciByZXF1aXJl
cyBpdCAqLwotCWlmIChzZXJ2ZXItPnNpZ24pCi0JCWhkci0+RmxhZ3MyIHw9IFNNQkZMRzJfU0VD
VVJJVFlfU0lHTkFUVVJFOwotCi0JbWlkID0gYWxsb2NfbWlkKGhkciwgc2VydmVyKTsKLQlpZiAo
bWlkID09IE5VTEwpCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwotCi0JcmMgPSBjaWZzX3Np
Z25fcnFzdChycXN0LCBzZXJ2ZXIsICZtaWQtPnNlcXVlbmNlX251bWJlcik7Ci0JaWYgKHJjKSB7
Ci0JCXJlbGVhc2VfbWlkKG1pZCk7Ci0JCXJldHVybiBFUlJfUFRSKHJjKTsKLQl9Ci0KLQlyZXR1
cm4gbWlkOwotfQotCiAvKgogICogU2VuZCBhIFNNQiByZXF1ZXN0IGFuZCBzZXQgdGhlIGNhbGxi
YWNrIGZ1bmN0aW9uIGluIHRoZSBtaWQgdG8gaGFuZGxlCiAgKiB0aGUgcmVzdWx0LiBDYWxsZXIg
aXMgcmVzcG9uc2libGUgZm9yIGRlYWxpbmcgd2l0aCB0aW1lb3V0cy4KQEAgLTg0NSwzNSArNzI3
LDcgQEAgY2lmc19jYWxsX2FzeW5jKHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlciwgc3Ry
dWN0IHNtYl9ycXN0ICpycXN0LAogCXJldHVybiByYzsKIH0KIAotLyoKLSAqCi0gKiBTZW5kIGFu
IFNNQiBSZXF1ZXN0LiAgTm8gcmVzcG9uc2UgaW5mbyAob3RoZXIgdGhhbiByZXR1cm4gY29kZSkK
LSAqIG5lZWRzIHRvIGJlIHBhcnNlZC4KLSAqCi0gKiBmbGFncyBpbmRpY2F0ZSB0aGUgdHlwZSBv
ZiByZXF1ZXN0IGJ1ZmZlciBhbmQgaG93IGxvbmcgdG8gd2FpdAotICogYW5kIHdoZXRoZXIgdG8g
bG9nIE5UIFNUQVRVUyBjb2RlIChlcnJvcikgYmVmb3JlIG1hcHBpbmcgaXQgdG8gUE9TSVggZXJy
b3IKLSAqCi0gKi8KLWludAotU2VuZFJlY2VpdmVOb1JzcChjb25zdCB1bnNpZ25lZCBpbnQgeGlk
LCBzdHJ1Y3QgY2lmc19zZXMgKnNlcywKLQkJIGNoYXIgKmluX2J1ZiwgaW50IGZsYWdzKQotewot
CWludCByYzsKLQlzdHJ1Y3Qga3ZlYyBpb3ZbMV07Ci0Jc3RydWN0IGt2ZWMgcnNwX2lvdjsKLQlp
bnQgcmVzcF9idWZfdHlwZTsKLQotCWlvdlswXS5pb3ZfYmFzZSA9IGluX2J1ZjsKLQlpb3ZbMF0u
aW92X2xlbiA9IGdldF9yZmMxMDAyX2xlbmd0aChpbl9idWYpICsgNDsKLQlmbGFncyB8PSBDSUZT
X05PX1JTUF9CVUY7Ci0JcmMgPSBTZW5kUmVjZWl2ZTIoeGlkLCBzZXMsIGlvdiwgMSwgJnJlc3Bf
YnVmX3R5cGUsIGZsYWdzLCAmcnNwX2lvdik7Ci0JY2lmc19kYmcoTk9JU1ksICJTZW5kUmN2Tm9S
c3AgZmxhZ3MgJWQgcmMgJWRcbiIsIGZsYWdzLCByYyk7Ci0KLQlyZXR1cm4gcmM7Ci19Ci0KLXN0
YXRpYyBpbnQKLWNpZnNfc3luY19taWRfcmVzdWx0KHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkLCBz
dHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2ZXIpCitpbnQgY2lmc19zeW5jX21pZF9yZXN1bHQo
c3RydWN0IG1pZF9xX2VudHJ5ICptaWQsIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKnNlcnZlcikK
IHsKIAlpbnQgcmMgPSAwOwogCkBAIC05MTUsNjggKzc2OSw2IEBAIGNpZnNfc3luY19taWRfcmVz
dWx0KHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkLCBzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICpzZXJ2
ZXIpCiAJcmV0dXJuIHJjOwogfQogCi1zdGF0aWMgaW5saW5lIGludAotc2VuZF9jYW5jZWwoc3Ry
dWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLCBzdHJ1Y3Qgc21iX3Jxc3QgKnJxc3QsCi0JICAg
IHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQotewotCXJldHVybiBzZXJ2ZXItPm9wcy0+c2VuZF9j
YW5jZWwgPwotCQkJCXNlcnZlci0+b3BzLT5zZW5kX2NhbmNlbChzZXJ2ZXIsIHJxc3QsIG1pZCkg
OiAwOwotfQotCi1pbnQKLWNpZnNfY2hlY2tfcmVjZWl2ZShzdHJ1Y3QgbWlkX3FfZW50cnkgKm1p
ZCwgc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyLAotCQkgICBib29sIGxvZ19lcnJvcikK
LXsKLQl1bnNpZ25lZCBpbnQgbGVuID0gZ2V0X3JmYzEwMDJfbGVuZ3RoKG1pZC0+cmVzcF9idWYp
ICsgNDsKLQotCWR1bXBfc21iKG1pZC0+cmVzcF9idWYsIG1pbl90KHUzMiwgOTIsIGxlbikpOwot
Ci0JLyogY29udmVydCB0aGUgbGVuZ3RoIGludG8gYSBtb3JlIHVzYWJsZSBmb3JtICovCi0JaWYg
KHNlcnZlci0+c2lnbikgewotCQlzdHJ1Y3Qga3ZlYyBpb3ZbMl07Ci0JCWludCByYyA9IDA7Ci0J
CXN0cnVjdCBzbWJfcnFzdCBycXN0ID0geyAucnFfaW92ID0gaW92LAotCQkJCQkgLnJxX252ZWMg
PSAyIH07Ci0KLQkJaW92WzBdLmlvdl9iYXNlID0gbWlkLT5yZXNwX2J1ZjsKLQkJaW92WzBdLmlv
dl9sZW4gPSA0OwotCQlpb3ZbMV0uaW92X2Jhc2UgPSAoY2hhciAqKW1pZC0+cmVzcF9idWYgKyA0
OwotCQlpb3ZbMV0uaW92X2xlbiA9IGxlbiAtIDQ7Ci0JCS8qIEZJWE1FOiBhZGQgY29kZSB0byBr
aWxsIHNlc3Npb24gKi8KLQkJcmMgPSBjaWZzX3ZlcmlmeV9zaWduYXR1cmUoJnJxc3QsIHNlcnZl
ciwKLQkJCQkJICAgbWlkLT5zZXF1ZW5jZV9udW1iZXIpOwotCQlpZiAocmMpCi0JCQljaWZzX3Nl
cnZlcl9kYmcoVkZTLCAiU01CIHNpZ25hdHVyZSB2ZXJpZmljYXRpb24gcmV0dXJuZWQgZXJyb3Ig
PSAlZFxuIiwKLQkJCQkgcmMpOwotCX0KLQotCS8qIEJCIHNwZWNpYWwgY2FzZSByZWNvbm5lY3Qg
dGlkIGFuZCB1aWQgaGVyZT8gKi8KLQlyZXR1cm4gbWFwX2FuZF9jaGVja19zbWJfZXJyb3IobWlk
LCBsb2dfZXJyb3IpOwotfQotCi1zdHJ1Y3QgbWlkX3FfZW50cnkgKgotY2lmc19zZXR1cF9yZXF1
ZXN0KHN0cnVjdCBjaWZzX3NlcyAqc2VzLCBzdHJ1Y3QgVENQX1NlcnZlcl9JbmZvICppZ25vcmVk
LAotCQkgICBzdHJ1Y3Qgc21iX3Jxc3QgKnJxc3QpCi17Ci0JaW50IHJjOwotCXN0cnVjdCBzbWJf
aGRyICpoZHIgPSAoc3RydWN0IHNtYl9oZHIgKilycXN0LT5ycV9pb3ZbMF0uaW92X2Jhc2U7Ci0J
c3RydWN0IG1pZF9xX2VudHJ5ICptaWQ7Ci0KLQlpZiAocnFzdC0+cnFfaW92WzBdLmlvdl9sZW4g
IT0gNCB8fAotCSAgICBycXN0LT5ycV9pb3ZbMF0uaW92X2Jhc2UgKyA0ICE9IHJxc3QtPnJxX2lv
dlsxXS5pb3ZfYmFzZSkKLQkJcmV0dXJuIEVSUl9QVFIoLUVJTyk7Ci0KLQlyYyA9IGFsbG9jYXRl
X21pZChzZXMsIGhkciwgJm1pZCk7Ci0JaWYgKHJjKQotCQlyZXR1cm4gRVJSX1BUUihyYyk7Ci0J
cmMgPSBjaWZzX3NpZ25fcnFzdChycXN0LCBzZXMtPnNlcnZlciwgJm1pZC0+c2VxdWVuY2VfbnVt
YmVyKTsKLQlpZiAocmMpIHsKLQkJZGVsZXRlX21pZChtaWQpOwotCQlyZXR1cm4gRVJSX1BUUihy
Yyk7Ci0JfQotCXJldHVybiBtaWQ7Ci19Ci0KIHN0YXRpYyB2b2lkCiBjaWZzX2NvbXBvdW5kX2Nh
bGxiYWNrKHN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkKQogewpAQCAtMTMwNCwzNDQgKzEwOTYsNiBA
QCBjaWZzX3NlbmRfcmVjdihjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMg
KnNlcywKIAkJCQkgIHJxc3QsIHJlc3BfYnVmX3R5cGUsIHJlc3BfaW92KTsKIH0KIAotaW50Ci1T
ZW5kUmVjZWl2ZTIoY29uc3QgdW5zaWduZWQgaW50IHhpZCwgc3RydWN0IGNpZnNfc2VzICpzZXMs
Ci0JICAgICBzdHJ1Y3Qga3ZlYyAqaW92LCBpbnQgbl92ZWMsIGludCAqcmVzcF9idWZfdHlwZSAv
KiByZXQgKi8sCi0JICAgICBjb25zdCBpbnQgZmxhZ3MsIHN0cnVjdCBrdmVjICpyZXNwX2lvdikK
LXsKLQlzdHJ1Y3Qgc21iX3Jxc3QgcnFzdDsKLQlzdHJ1Y3Qga3ZlYyBzX2lvdltDSUZTX01BWF9J
T1ZfU0laRV0sICpuZXdfaW92OwotCWludCByYzsKLQotCWlmIChuX3ZlYyArIDEgPiBDSUZTX01B
WF9JT1ZfU0laRSkgewotCQluZXdfaW92ID0ga21hbGxvY19hcnJheShuX3ZlYyArIDEsIHNpemVv
ZihzdHJ1Y3Qga3ZlYyksCi0JCQkJCUdGUF9LRVJORUwpOwotCQlpZiAoIW5ld19pb3YpIHsKLQkJ
CS8qIG90aGVyd2lzZSBjaWZzX3NlbmRfcmVjdiBiZWxvdyBzZXRzIHJlc3BfYnVmX3R5cGUgKi8K
LQkJCSpyZXNwX2J1Zl90eXBlID0gQ0lGU19OT19CVUZGRVI7Ci0JCQlyZXR1cm4gLUVOT01FTTsK
LQkJfQotCX0gZWxzZQotCQluZXdfaW92ID0gc19pb3Y7Ci0KLQkvKiAxc3QgaW92IGlzIGEgUkZD
MTAwMSBsZW5ndGggZm9sbG93ZWQgYnkgdGhlIHJlc3Qgb2YgdGhlIHBhY2tldCAqLwotCW1lbWNw
eShuZXdfaW92ICsgMSwgaW92LCAoc2l6ZW9mKHN0cnVjdCBrdmVjKSAqIG5fdmVjKSk7Ci0KLQlu
ZXdfaW92WzBdLmlvdl9iYXNlID0gbmV3X2lvdlsxXS5pb3ZfYmFzZTsKLQluZXdfaW92WzBdLmlv
dl9sZW4gPSA0OwotCW5ld19pb3ZbMV0uaW92X2Jhc2UgKz0gNDsKLQluZXdfaW92WzFdLmlvdl9s
ZW4gLT0gNDsKLQotCW1lbXNldCgmcnFzdCwgMCwgc2l6ZW9mKHN0cnVjdCBzbWJfcnFzdCkpOwot
CXJxc3QucnFfaW92ID0gbmV3X2lvdjsKLQlycXN0LnJxX252ZWMgPSBuX3ZlYyArIDE7Ci0KLQly
YyA9IGNpZnNfc2VuZF9yZWN2KHhpZCwgc2VzLCBzZXMtPnNlcnZlciwKLQkJCSAgICAmcnFzdCwg
cmVzcF9idWZfdHlwZSwgZmxhZ3MsIHJlc3BfaW92KTsKLQlpZiAobl92ZWMgKyAxID4gQ0lGU19N
QVhfSU9WX1NJWkUpCi0JCWtmcmVlKG5ld19pb3YpOwotCXJldHVybiByYzsKLX0KLQotaW50Ci1T
ZW5kUmVjZWl2ZShjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc19zZXMgKnNlcywK
LQkgICAgc3RydWN0IHNtYl9oZHIgKmluX2J1Ziwgc3RydWN0IHNtYl9oZHIgKm91dF9idWYsCi0J
ICAgIGludCAqcGJ5dGVzX3JldHVybmVkLCBjb25zdCBpbnQgZmxhZ3MpCi17Ci0JaW50IHJjID0g
MDsKLQlzdHJ1Y3QgbWlkX3FfZW50cnkgKm1pZFE7Ci0JdW5zaWduZWQgaW50IGxlbiA9IGJlMzJf
dG9fY3B1KGluX2J1Zi0+c21iX2J1Zl9sZW5ndGgpOwotCXN0cnVjdCBrdmVjIGlvdiA9IHsgLmlv
dl9iYXNlID0gaW5fYnVmLCAuaW92X2xlbiA9IGxlbiB9OwotCXN0cnVjdCBzbWJfcnFzdCBycXN0
ID0geyAucnFfaW92ID0gJmlvdiwgLnJxX252ZWMgPSAxIH07Ci0Jc3RydWN0IGNpZnNfY3JlZGl0
cyBjcmVkaXRzID0geyAudmFsdWUgPSAxLCAuaW5zdGFuY2UgPSAwIH07Ci0Jc3RydWN0IFRDUF9T
ZXJ2ZXJfSW5mbyAqc2VydmVyOwotCi0JaWYgKHNlcyA9PSBOVUxMKSB7Ci0JCWNpZnNfZGJnKFZG
UywgIk51bGwgc21iIHNlc3Npb25cbiIpOwotCQlyZXR1cm4gLUVJTzsKLQl9Ci0Jc2VydmVyID0g
c2VzLT5zZXJ2ZXI7Ci0JaWYgKHNlcnZlciA9PSBOVUxMKSB7Ci0JCWNpZnNfZGJnKFZGUywgIk51
bGwgdGNwIHNlc3Npb25cbiIpOwotCQlyZXR1cm4gLUVJTzsKLQl9Ci0KLQlzcGluX2xvY2soJnNl
cnZlci0+c3J2X2xvY2spOwotCWlmIChzZXJ2ZXItPnRjcFN0YXR1cyA9PSBDaWZzRXhpdGluZykg
ewotCQlzcGluX3VubG9jaygmc2VydmVyLT5zcnZfbG9jayk7Ci0JCXJldHVybiAtRU5PRU5UOwot
CX0KLQlzcGluX3VubG9jaygmc2VydmVyLT5zcnZfbG9jayk7Ci0KLQkvKiBFbnN1cmUgdGhhdCB3
ZSBkbyBub3Qgc2VuZCBtb3JlIHRoYW4gNTAgb3ZlcmxhcHBpbmcgcmVxdWVzdHMKLQkgICB0byB0
aGUgc2FtZSBzZXJ2ZXIuIFdlIG1heSBtYWtlIHRoaXMgY29uZmlndXJhYmxlIGxhdGVyIG9yCi0J
ICAgdXNlIHNlcy0+bWF4UmVxICovCi0KLQlpZiAobGVuID4gQ0lGU01heEJ1ZlNpemUgKyBNQVhf
Q0lGU19IRFJfU0laRSAtIDQpIHsKLQkJY2lmc19zZXJ2ZXJfZGJnKFZGUywgIkludmFsaWQgbGVu
Z3RoLCBncmVhdGVyIHRoYW4gbWF4aW11bSBmcmFtZSwgJWRcbiIsCi0JCQkJbGVuKTsKLQkJcmV0
dXJuIC1FSU87Ci0JfQotCi0JcmMgPSB3YWl0X2Zvcl9mcmVlX3JlcXVlc3Qoc2VydmVyLCBmbGFn
cywgJmNyZWRpdHMuaW5zdGFuY2UpOwotCWlmIChyYykKLQkJcmV0dXJuIHJjOwotCi0JLyogbWFr
ZSBzdXJlIHRoYXQgd2Ugc2lnbiBpbiB0aGUgc2FtZSBvcmRlciB0aGF0IHdlIHNlbmQgb24gdGhp
cyBzb2NrZXQKLQkgICBhbmQgYXZvaWQgcmFjZXMgaW5zaWRlIHRjcCBzZW5kbXNnIGNvZGUgdGhh
dCBjb3VsZCBjYXVzZSBjb3JydXB0aW9uCi0JICAgb2Ygc21iIGRhdGEgKi8KLQotCWNpZnNfc2Vy
dmVyX2xvY2soc2VydmVyKTsKLQotCXJjID0gYWxsb2NhdGVfbWlkKHNlcywgaW5fYnVmLCAmbWlk
USk7Ci0JaWYgKHJjKSB7Ci0JCWNpZnNfc2VydmVyX3VubG9jayhzZXJ2ZXIpOwotCQkvKiBVcGRh
dGUgIyBvZiByZXF1ZXN0cyBvbiB3aXJlIHRvIHNlcnZlciAqLwotCQlhZGRfY3JlZGl0cyhzZXJ2
ZXIsICZjcmVkaXRzLCAwKTsKLQkJcmV0dXJuIHJjOwotCX0KLQotCXJjID0gY2lmc19zaWduX3Nt
Yihpbl9idWYsIHNlcnZlciwgJm1pZFEtPnNlcXVlbmNlX251bWJlcik7Ci0JaWYgKHJjKSB7Ci0J
CWNpZnNfc2VydmVyX3VubG9jayhzZXJ2ZXIpOwotCQlnb3RvIG91dDsKLQl9Ci0KLQltaWRRLT5t
aWRfc3RhdGUgPSBNSURfUkVRVUVTVF9TVUJNSVRURUQ7Ci0KLQlyYyA9IHNtYl9zZW5kKHNlcnZl
ciwgaW5fYnVmLCBsZW4pOwotCWNpZnNfc2F2ZV93aGVuX3NlbnQobWlkUSk7Ci0KLQlpZiAocmMg
PCAwKQotCQlzZXJ2ZXItPnNlcXVlbmNlX251bWJlciAtPSAyOwotCi0JY2lmc19zZXJ2ZXJfdW5s
b2NrKHNlcnZlcik7Ci0KLQlpZiAocmMgPCAwKQotCQlnb3RvIG91dDsKLQotCXJjID0gd2FpdF9m
b3JfcmVzcG9uc2Uoc2VydmVyLCBtaWRRKTsKLQlpZiAocmMgIT0gMCkgewotCQlzZW5kX2NhbmNl
bChzZXJ2ZXIsICZycXN0LCBtaWRRKTsKLQkJc3Bpbl9sb2NrKCZzZXJ2ZXItPm1pZF9xdWV1ZV9s
b2NrKTsKLQkJaWYgKG1pZFEtPm1pZF9zdGF0ZSA9PSBNSURfUkVRVUVTVF9TVUJNSVRURUQgfHwK
LQkJICAgIG1pZFEtPm1pZF9zdGF0ZSA9PSBNSURfUkVTUE9OU0VfUkVDRUlWRUQpIHsKLQkJCS8q
IG5vIGxvbmdlciBjb25zaWRlcmVkIHRvIGJlICJpbi1mbGlnaHQiICovCi0JCQltaWRRLT5jYWxs
YmFjayA9IHJlbGVhc2VfbWlkOwotCQkJc3Bpbl91bmxvY2soJnNlcnZlci0+bWlkX3F1ZXVlX2xv
Y2spOwotCQkJYWRkX2NyZWRpdHMoc2VydmVyLCAmY3JlZGl0cywgMCk7Ci0JCQlyZXR1cm4gcmM7
Ci0JCX0KLQkJc3Bpbl91bmxvY2soJnNlcnZlci0+bWlkX3F1ZXVlX2xvY2spOwotCX0KLQotCXJj
ID0gY2lmc19zeW5jX21pZF9yZXN1bHQobWlkUSwgc2VydmVyKTsKLQlpZiAocmMgIT0gMCkgewot
CQlhZGRfY3JlZGl0cyhzZXJ2ZXIsICZjcmVkaXRzLCAwKTsKLQkJcmV0dXJuIHJjOwotCX0KLQot
CWlmICghbWlkUS0+cmVzcF9idWYgfHwgIW91dF9idWYgfHwKLQkgICAgbWlkUS0+bWlkX3N0YXRl
ICE9IE1JRF9SRVNQT05TRV9SRUFEWSkgewotCQlyYyA9IC1FSU87Ci0JCWNpZnNfc2VydmVyX2Ri
ZyhWRlMsICJCYWQgTUlEIHN0YXRlP1xuIik7Ci0JCWdvdG8gb3V0OwotCX0KLQotCSpwYnl0ZXNf
cmV0dXJuZWQgPSBnZXRfcmZjMTAwMl9sZW5ndGgobWlkUS0+cmVzcF9idWYpOwotCW1lbWNweShv
dXRfYnVmLCBtaWRRLT5yZXNwX2J1ZiwgKnBieXRlc19yZXR1cm5lZCArIDQpOwotCXJjID0gY2lm
c19jaGVja19yZWNlaXZlKG1pZFEsIHNlcnZlciwgMCk7Ci1vdXQ6Ci0JZGVsZXRlX21pZChtaWRR
KTsKLQlhZGRfY3JlZGl0cyhzZXJ2ZXIsICZjcmVkaXRzLCAwKTsKLQotCXJldHVybiByYzsKLX0K
LQotLyogV2Ugc2VuZCBhIExPQ0tJTkdYX0NBTkNFTF9MT0NLIHRvIGNhdXNlIHRoZSBXaW5kb3dz
Ci0gICBibG9ja2luZyBsb2NrIHRvIHJldHVybi4gKi8KLQotc3RhdGljIGludAotc2VuZF9sb2Nr
X2NhbmNlbChjb25zdCB1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lmc190Y29uICp0Y29uLAot
CQkJc3RydWN0IHNtYl9oZHIgKmluX2J1ZiwKLQkJCXN0cnVjdCBzbWJfaGRyICpvdXRfYnVmKQot
ewotCWludCBieXRlc19yZXR1cm5lZDsKLQlzdHJ1Y3QgY2lmc19zZXMgKnNlcyA9IHRjb24tPnNl
czsKLQlMT0NLX1JFUSAqcFNNQiA9IChMT0NLX1JFUSAqKWluX2J1ZjsKLQotCS8qIFdlIGp1c3Qg
bW9kaWZ5IHRoZSBjdXJyZW50IGluX2J1ZiB0byBjaGFuZ2UKLQkgICB0aGUgdHlwZSBvZiBsb2Nr
IGZyb20gTE9DS0lOR19BTkRYX1NIQVJFRF9MT0NLCi0JICAgb3IgTE9DS0lOR19BTkRYX0VYQ0xV
U0lWRV9MT0NLIHRvCi0JICAgTE9DS0lOR19BTkRYX0NBTkNFTF9MT0NLLiAqLwotCi0JcFNNQi0+
TG9ja1R5cGUgPSBMT0NLSU5HX0FORFhfQ0FOQ0VMX0xPQ0t8TE9DS0lOR19BTkRYX0xBUkdFX0ZJ
TEVTOwotCXBTTUItPlRpbWVvdXQgPSAwOwotCXBTTUItPmhkci5NaWQgPSBnZXRfbmV4dF9taWQo
c2VzLT5zZXJ2ZXIpOwotCi0JcmV0dXJuIFNlbmRSZWNlaXZlKHhpZCwgc2VzLCBpbl9idWYsIG91
dF9idWYsCi0JCQkmYnl0ZXNfcmV0dXJuZWQsIDApOwotfQotCi1pbnQKLVNlbmRSZWNlaXZlQmxv
Y2tpbmdMb2NrKGNvbnN0IHVuc2lnbmVkIGludCB4aWQsIHN0cnVjdCBjaWZzX3Rjb24gKnRjb24s
Ci0JICAgIHN0cnVjdCBzbWJfaGRyICppbl9idWYsIHN0cnVjdCBzbWJfaGRyICpvdXRfYnVmLAot
CSAgICBpbnQgKnBieXRlc19yZXR1cm5lZCkKLXsKLQlpbnQgcmMgPSAwOwotCWludCByc3RhcnQg
PSAwOwotCXN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkUTsKLQlzdHJ1Y3QgY2lmc19zZXMgKnNlczsK
LQl1bnNpZ25lZCBpbnQgbGVuID0gYmUzMl90b19jcHUoaW5fYnVmLT5zbWJfYnVmX2xlbmd0aCk7
Ci0Jc3RydWN0IGt2ZWMgaW92ID0geyAuaW92X2Jhc2UgPSBpbl9idWYsIC5pb3ZfbGVuID0gbGVu
IH07Ci0Jc3RydWN0IHNtYl9ycXN0IHJxc3QgPSB7IC5ycV9pb3YgPSAmaW92LCAucnFfbnZlYyA9
IDEgfTsKLQl1bnNpZ25lZCBpbnQgaW5zdGFuY2U7Ci0Jc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAq
c2VydmVyOwotCi0JaWYgKHRjb24gPT0gTlVMTCB8fCB0Y29uLT5zZXMgPT0gTlVMTCkgewotCQlj
aWZzX2RiZyhWRlMsICJOdWxsIHNtYiBzZXNzaW9uXG4iKTsKLQkJcmV0dXJuIC1FSU87Ci0JfQot
CXNlcyA9IHRjb24tPnNlczsKLQlzZXJ2ZXIgPSBzZXMtPnNlcnZlcjsKLQotCWlmIChzZXJ2ZXIg
PT0gTlVMTCkgewotCQljaWZzX2RiZyhWRlMsICJOdWxsIHRjcCBzZXNzaW9uXG4iKTsKLQkJcmV0
dXJuIC1FSU87Ci0JfQotCi0Jc3Bpbl9sb2NrKCZzZXJ2ZXItPnNydl9sb2NrKTsKLQlpZiAoc2Vy
dmVyLT50Y3BTdGF0dXMgPT0gQ2lmc0V4aXRpbmcpIHsKLQkJc3Bpbl91bmxvY2soJnNlcnZlci0+
c3J2X2xvY2spOwotCQlyZXR1cm4gLUVOT0VOVDsKLQl9Ci0Jc3Bpbl91bmxvY2soJnNlcnZlci0+
c3J2X2xvY2spOwotCi0JLyogRW5zdXJlIHRoYXQgd2UgZG8gbm90IHNlbmQgbW9yZSB0aGFuIDUw
IG92ZXJsYXBwaW5nIHJlcXVlc3RzCi0JICAgdG8gdGhlIHNhbWUgc2VydmVyLiBXZSBtYXkgbWFr
ZSB0aGlzIGNvbmZpZ3VyYWJsZSBsYXRlciBvcgotCSAgIHVzZSBzZXMtPm1heFJlcSAqLwotCi0J
aWYgKGxlbiA+IENJRlNNYXhCdWZTaXplICsgTUFYX0NJRlNfSERSX1NJWkUgLSA0KSB7Ci0JCWNp
ZnNfdGNvbl9kYmcoVkZTLCAiSW52YWxpZCBsZW5ndGgsIGdyZWF0ZXIgdGhhbiBtYXhpbXVtIGZy
YW1lLCAlZFxuIiwKLQkJCSAgICAgIGxlbik7Ci0JCXJldHVybiAtRUlPOwotCX0KLQotCXJjID0g
d2FpdF9mb3JfZnJlZV9yZXF1ZXN0KHNlcnZlciwgQ0lGU19CTE9DS0lOR19PUCwgJmluc3RhbmNl
KTsKLQlpZiAocmMpCi0JCXJldHVybiByYzsKLQotCS8qIG1ha2Ugc3VyZSB0aGF0IHdlIHNpZ24g
aW4gdGhlIHNhbWUgb3JkZXIgdGhhdCB3ZSBzZW5kIG9uIHRoaXMgc29ja2V0Ci0JICAgYW5kIGF2
b2lkIHJhY2VzIGluc2lkZSB0Y3Agc2VuZG1zZyBjb2RlIHRoYXQgY291bGQgY2F1c2UgY29ycnVw
dGlvbgotCSAgIG9mIHNtYiBkYXRhICovCi0KLQljaWZzX3NlcnZlcl9sb2NrKHNlcnZlcik7Ci0K
LQlyYyA9IGFsbG9jYXRlX21pZChzZXMsIGluX2J1ZiwgJm1pZFEpOwotCWlmIChyYykgewotCQlj
aWZzX3NlcnZlcl91bmxvY2soc2VydmVyKTsKLQkJcmV0dXJuIHJjOwotCX0KLQotCXJjID0gY2lm
c19zaWduX3NtYihpbl9idWYsIHNlcnZlciwgJm1pZFEtPnNlcXVlbmNlX251bWJlcik7Ci0JaWYg
KHJjKSB7Ci0JCWRlbGV0ZV9taWQobWlkUSk7Ci0JCWNpZnNfc2VydmVyX3VubG9jayhzZXJ2ZXIp
OwotCQlyZXR1cm4gcmM7Ci0JfQotCi0JbWlkUS0+bWlkX3N0YXRlID0gTUlEX1JFUVVFU1RfU1VC
TUlUVEVEOwotCXJjID0gc21iX3NlbmQoc2VydmVyLCBpbl9idWYsIGxlbik7Ci0JY2lmc19zYXZl
X3doZW5fc2VudChtaWRRKTsKLQotCWlmIChyYyA8IDApCi0JCXNlcnZlci0+c2VxdWVuY2VfbnVt
YmVyIC09IDI7Ci0KLQljaWZzX3NlcnZlcl91bmxvY2soc2VydmVyKTsKLQotCWlmIChyYyA8IDAp
IHsKLQkJZGVsZXRlX21pZChtaWRRKTsKLQkJcmV0dXJuIHJjOwotCX0KLQotCS8qIFdhaXQgZm9y
IGEgcmVwbHkgLSBhbGxvdyBzaWduYWxzIHRvIGludGVycnVwdC4gKi8KLQlyYyA9IHdhaXRfZXZl
bnRfaW50ZXJydXB0aWJsZShzZXJ2ZXItPnJlc3BvbnNlX3EsCi0JCSghKG1pZFEtPm1pZF9zdGF0
ZSA9PSBNSURfUkVRVUVTVF9TVUJNSVRURUQgfHwKLQkJICAgbWlkUS0+bWlkX3N0YXRlID09IE1J
RF9SRVNQT05TRV9SRUNFSVZFRCkpIHx8Ci0JCSgoc2VydmVyLT50Y3BTdGF0dXMgIT0gQ2lmc0dv
b2QpICYmCi0JCSAoc2VydmVyLT50Y3BTdGF0dXMgIT0gQ2lmc05ldykpKTsKLQotCS8qIFdlcmUg
d2UgaW50ZXJydXB0ZWQgYnkgYSBzaWduYWwgPyAqLwotCXNwaW5fbG9jaygmc2VydmVyLT5zcnZf
bG9jayk7Ci0JaWYgKChyYyA9PSAtRVJFU1RBUlRTWVMpICYmCi0JCShtaWRRLT5taWRfc3RhdGUg
PT0gTUlEX1JFUVVFU1RfU1VCTUlUVEVEIHx8Ci0JCSBtaWRRLT5taWRfc3RhdGUgPT0gTUlEX1JF
U1BPTlNFX1JFQ0VJVkVEKSAmJgotCQkoKHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNHb29kKSB8
fAotCQkgKHNlcnZlci0+dGNwU3RhdHVzID09IENpZnNOZXcpKSkgewotCQlzcGluX3VubG9jaygm
c2VydmVyLT5zcnZfbG9jayk7Ci0KLQkJaWYgKGluX2J1Zi0+Q29tbWFuZCA9PSBTTUJfQ09NX1RS
QU5TQUNUSU9OMikgewotCQkJLyogUE9TSVggbG9jay4gV2Ugc2VuZCBhIE5UX0NBTkNFTCBTTUIg
dG8gY2F1c2UgdGhlCi0JCQkgICBibG9ja2luZyBsb2NrIHRvIHJldHVybi4gKi8KLQkJCXJjID0g
c2VuZF9jYW5jZWwoc2VydmVyLCAmcnFzdCwgbWlkUSk7Ci0JCQlpZiAocmMpIHsKLQkJCQlkZWxl
dGVfbWlkKG1pZFEpOwotCQkJCXJldHVybiByYzsKLQkJCX0KLQkJfSBlbHNlIHsKLQkJCS8qIFdp
bmRvd3MgbG9jay4gV2Ugc2VuZCBhIExPQ0tJTkdYX0NBTkNFTF9MT0NLCi0JCQkgICB0byBjYXVz
ZSB0aGUgYmxvY2tpbmcgbG9jayB0byByZXR1cm4uICovCi0KLQkJCXJjID0gc2VuZF9sb2NrX2Nh
bmNlbCh4aWQsIHRjb24sIGluX2J1Ziwgb3V0X2J1Zik7Ci0KLQkJCS8qIElmIHdlIGdldCAtRU5P
TENLIGJhY2sgdGhlIGxvY2sgbWF5IGhhdmUKLQkJCSAgIGFscmVhZHkgYmVlbiByZW1vdmVkLiBE
b24ndCBleGl0IGluIHRoaXMgY2FzZS4gKi8KLQkJCWlmIChyYyAmJiByYyAhPSAtRU5PTENLKSB7
Ci0JCQkJZGVsZXRlX21pZChtaWRRKTsKLQkJCQlyZXR1cm4gcmM7Ci0JCQl9Ci0JCX0KLQotCQly
YyA9IHdhaXRfZm9yX3Jlc3BvbnNlKHNlcnZlciwgbWlkUSk7Ci0JCWlmIChyYykgewotCQkJc2Vu
ZF9jYW5jZWwoc2VydmVyLCAmcnFzdCwgbWlkUSk7Ci0JCQlzcGluX2xvY2soJnNlcnZlci0+bWlk
X3F1ZXVlX2xvY2spOwotCQkJaWYgKG1pZFEtPm1pZF9zdGF0ZSA9PSBNSURfUkVRVUVTVF9TVUJN
SVRURUQgfHwKLQkJCSAgICBtaWRRLT5taWRfc3RhdGUgPT0gTUlEX1JFU1BPTlNFX1JFQ0VJVkVE
KSB7Ci0JCQkJLyogbm8gbG9uZ2VyIGNvbnNpZGVyZWQgdG8gYmUgImluLWZsaWdodCIgKi8KLQkJ
CQltaWRRLT5jYWxsYmFjayA9IHJlbGVhc2VfbWlkOwotCQkJCXNwaW5fdW5sb2NrKCZzZXJ2ZXIt
Pm1pZF9xdWV1ZV9sb2NrKTsKLQkJCQlyZXR1cm4gcmM7Ci0JCQl9Ci0JCQlzcGluX3VubG9jaygm
c2VydmVyLT5taWRfcXVldWVfbG9jayk7Ci0JCX0KLQotCQkvKiBXZSBnb3QgdGhlIHJlc3BvbnNl
IC0gcmVzdGFydCBzeXN0ZW0gY2FsbC4gKi8KLQkJcnN0YXJ0ID0gMTsKLQkJc3Bpbl9sb2NrKCZz
ZXJ2ZXItPnNydl9sb2NrKTsKLQl9Ci0Jc3Bpbl91bmxvY2soJnNlcnZlci0+c3J2X2xvY2spOwot
Ci0JcmMgPSBjaWZzX3N5bmNfbWlkX3Jlc3VsdChtaWRRLCBzZXJ2ZXIpOwotCWlmIChyYyAhPSAw
KQotCQlyZXR1cm4gcmM7Ci0KLQkvKiByY3ZkIGZyYW1lIGlzIG9rICovCi0JaWYgKG91dF9idWYg
PT0gTlVMTCB8fCBtaWRRLT5taWRfc3RhdGUgIT0gTUlEX1JFU1BPTlNFX1JFQURZKSB7Ci0JCXJj
ID0gLUVJTzsKLQkJY2lmc190Y29uX2RiZyhWRlMsICJCYWQgTUlEIHN0YXRlP1xuIik7Ci0JCWdv
dG8gb3V0OwotCX0KLQotCSpwYnl0ZXNfcmV0dXJuZWQgPSBnZXRfcmZjMTAwMl9sZW5ndGgobWlk
US0+cmVzcF9idWYpOwotCW1lbWNweShvdXRfYnVmLCBtaWRRLT5yZXNwX2J1ZiwgKnBieXRlc19y
ZXR1cm5lZCArIDQpOwotCXJjID0gY2lmc19jaGVja19yZWNlaXZlKG1pZFEsIHNlcnZlciwgMCk7
Ci1vdXQ6Ci0JZGVsZXRlX21pZChtaWRRKTsKLQlpZiAocnN0YXJ0ICYmIHJjID09IC1FQUNDRVMp
Ci0JCXJldHVybiAtRVJFU1RBUlRTWVM7Ci0JcmV0dXJuIHJjOwotfQogCiAvKgogICogRGlzY2Fy
ZCBhbnkgcmVtYWluaW5nIGRhdGEgaW4gdGhlIGN1cnJlbnQgU01CLiBUbyBkbyB0aGlzLCB3ZSBi
b3Jyb3cgdGhlCi0tIAoyLjQzLjAKCg==
--0000000000000599ab063ba64eb6--

