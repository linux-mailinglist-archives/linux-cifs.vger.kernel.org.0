Return-Path: <linux-cifs-owner@vger.kernel.org>
X-Original-To: lists+linux-cifs@lfdr.de
Delivered-To: lists+linux-cifs@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 357B964FAEC
	for <lists+linux-cifs@lfdr.de>; Sat, 17 Dec 2022 17:03:42 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230473AbiLQQDk (ORCPT <rfc822;lists+linux-cifs@lfdr.de>);
        Sat, 17 Dec 2022 11:03:40 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:37880 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230491AbiLQQDO (ORCPT
        <rfc822;linux-cifs@vger.kernel.org>); Sat, 17 Dec 2022 11:03:14 -0500
Received: from mail-lf1-x133.google.com (mail-lf1-x133.google.com [IPv6:2a00:1450:4864:20::133])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E9F1A12776
        for <linux-cifs@vger.kernel.org>; Sat, 17 Dec 2022 07:53:19 -0800 (PST)
Received: by mail-lf1-x133.google.com with SMTP id bp15so7780130lfb.13
        for <linux-cifs@vger.kernel.org>; Sat, 17 Dec 2022 07:53:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=cc:to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=3UaBhxTyAy3Cq6TIwF6CLYxFnkm4dDlvGtmEbPaWaGE=;
        b=dOeWUEe8I3ZmW48pUy/595OHRMmF21pdAYHiMJ+84IfRgG10ZDfRzUoCxmNHz+r5vX
         b83s+0/tZeJs202RlgZVqGZE74HOxolbtGlaXMfM6czZnE00P0OHV0YP6lb+dyNaGbvU
         /jGnrIsdvLCHszf3SCLj3p16Lkqbh8QVpCyFej3F1xT1z8Ox3oTYZbvfryalF2v3RzX1
         im7iPcPT/pBuVMyX6Pg8/pDRLNbO0MZrQ2v4SpwzG4MovHVA8i3XvbBrrUXaTup5skfV
         pQMh8VGPgSMsa3M8Q+Mp4+oAcLuaXB20SEHff0SSlpM3keoXpesyNZPvUGddBGWYipyf
         6Ccw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=cc:to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=3UaBhxTyAy3Cq6TIwF6CLYxFnkm4dDlvGtmEbPaWaGE=;
        b=UcNemanvJ4ppOZSxPo9/JBWZ98Pj0XGueDzIXfx2M6d19uhQZio8NWbf68CPUj95C0
         rzLpMCwSwHheY5LOoznnw8/7+YjrUzagBzO4Jj+xWIYohDJAmtCpIL9XY5K2W4gKml+x
         XJuwmcegl4VS5hll1D3PtgnerBuNLXlRz1+7xBEyn3/dkX1ODJMrLiUCk+s06YP+bRye
         RyLO2p7rbSNIZ8GSpTEnZJkRosy8IbeB96CEjzFohn/kG0BzEO+PEDVcBtk0ONl+rp+J
         0/PFK0g0eWQ6LnmewSRPxpO4AsrJPJFyosrMqVkf8oMDSDsK5JVA4AYQQJxOHLJx1+t0
         INYg==
X-Gm-Message-State: ANoB5pkk5twyW+uttyDVvpkILXEPZGuuMQ/6CHQdpkZPepm+XdZA7s5K
        18GxW8ALS+iN/rnmAMi5MQiYKlm8p5xhi1pGiGz8oZk6
X-Google-Smtp-Source: AA0mqf6GVG+cx+heTN+Uz2+F9Z9d7IMKjPHPYv0nChqN/V1+OVNCnOO0ryvmrl+Z+yXQf8ZtuoeSHMsMK0GVJUDuAzI=
X-Received: by 2002:a19:5f03:0:b0:4a2:67ea:a06 with SMTP id
 t3-20020a195f03000000b004a267ea0a06mr32413033lfb.580.1671292397659; Sat, 17
 Dec 2022 07:53:17 -0800 (PST)
MIME-Version: 1.0
From:   Steve French <smfrench@gmail.com>
Date:   Sat, 17 Dec 2022 09:53:06 -0600
Message-ID: <CAH2r5mvGP64e69SyU535tQp6aQu0R9RGRtY6wsCd9sdJW8G+Aw@mail.gmail.com>
Subject: [PATCH][SMB3 client] DFS/reconnect fixes part 1 of 4
To:     CIFS <linux-cifs@vger.kernel.org>
Cc:     Paulo Alcantara <pc@cjr.nz>
Content-Type: multipart/mixed; boundary="000000000000addd6c05f00815cd"
X-Spam-Status: No, score=-2.1 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,FREEMAIL_FROM,
        RCVD_IN_DNSWL_NONE,SPF_HELO_NONE,SPF_PASS autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-cifs.vger.kernel.org>
X-Mailing-List: linux-cifs@vger.kernel.org

--000000000000addd6c05f00815cd
Content-Type: text/plain; charset="UTF-8"

Noticed that some of the recent DFS/reconnect patches sent to the
mailing list bounced.  resending ...

-- 
Thanks,

Steve

--000000000000addd6c05f00815cd
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-cifs-use-fs_context-for-automounts.patch"
Content-Disposition: attachment; 
	filename="0001-cifs-use-fs_context-for-automounts.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lbs4a9lw0>
X-Attachment-Id: f_lbs4a9lw0

RnJvbSBkNjEwY2I2MThlMTMwZTU4MjI1OTkyMzE1ZWViM2JjYTA0Mjc3ZGUwIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBQYXVsbyBBbGNhbnRhcmEgPHBjQGNqci5uej4KRGF0ZTogVHVl
LCA0IE9jdCAyMDIyIDE4OjQxOjIwIC0wMzAwClN1YmplY3Q6IFtQQVRDSCAwMS8xNF0gY2lmczog
dXNlIGZzX2NvbnRleHQgZm9yIGF1dG9tb3VudHMKClVzZSBmaWxlc3lzdGVtIGNvbnRleHQgc3Vw
cG9ydCB0byBoYW5kbGUgZGZzIGxpbmtzLgoKU2lnbmVkLW9mZi1ieTogUGF1bG8gQWxjYW50YXJh
IChTVVNFKSA8cGNAY2pyLm56PgpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNo
QG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvY2lmcy9jaWZzX2Rmc19yZWYuYyB8IDEwMCArKysrKysr
KysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDQwIGlu
c2VydGlvbnMoKyksIDYwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lmc19k
ZnNfcmVmLmMgYi9mcy9jaWZzL2NpZnNfZGZzX3JlZi5jCmluZGV4IGIwODY0ZGE5ZWY0My4uMDIw
ZTcxZmUxNDU0IDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNfZGZzX3JlZi5jCisrKyBiL2ZzL2Np
ZnMvY2lmc19kZnNfcmVmLmMKQEAgLTI1OCw2MSArMjU4LDIzIEBAIGNoYXIgKmNpZnNfY29tcG9z
ZV9tb3VudF9vcHRpb25zKGNvbnN0IGNoYXIgKnNiX21vdW50ZGF0YSwKIAlnb3RvIGNvbXBvc2Vf
bW91bnRfb3B0aW9uc19vdXQ7CiB9CiAKLS8qKgotICogY2lmc19kZnNfZG9fbW91bnQgLSBtb3Vu
dHMgc3BlY2lmaWVkIHBhdGggdXNpbmcgREZTIGZ1bGwgcGF0aAotICoKLSAqIEFsd2F5cyBwYXNz
IGRvd24gQGZ1bGxwYXRoIHRvIHNtYjNfZG9fbW91bnQoKSBzbyB3ZSBjYW4gdXNlIHRoZSByb290
IHNlcnZlcgotICogdG8gcGVyZm9ybSBmYWlsb3ZlciBpbiBjYXNlIHdlIGZhaWxlZCB0byBjb25u
ZWN0IHRvIHRoZSBmaXJzdCB0YXJnZXQgaW4gdGhlCi0gKiByZWZlcnJhbC4KLSAqCi0gKiBAbW50
cHQ6CQlkaXJlY3RvcnkgZW50cnkgZm9yIHRoZSBwYXRoIHdlIGFyZSB0cnlpbmcgdG8gYXV0b21v
dW50Ci0gKiBAY2lmc19zYjoJCXBhcmVudC9yb290IHN1cGVyYmxvY2sKLSAqIEBmdWxscGF0aDoJ
CWZ1bGwgcGF0aCBpbiBVTkMgZm9ybWF0Ci0gKi8KLXN0YXRpYyBzdHJ1Y3QgdmZzbW91bnQgKmNp
ZnNfZGZzX2RvX21vdW50KHN0cnVjdCBkZW50cnkgKm1udHB0LAotCQkJCQkgIHN0cnVjdCBjaWZz
X3NiX2luZm8gKmNpZnNfc2IsCi0JCQkJCSAgY29uc3QgY2hhciAqZnVsbHBhdGgpCi17Ci0Jc3Ry
dWN0IHZmc21vdW50ICptbnQ7Ci0JY2hhciAqbW91bnRkYXRhOwotCWNoYXIgKmRldm5hbWU7Ci0K
LQlkZXZuYW1lID0ga3N0cmR1cChmdWxscGF0aCwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFkZXZuYW1l
KQotCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKLQotCWNvbnZlcnRfZGVsaW1pdGVyKGRldm5h
bWUsICcvJyk7Ci0KLQkvKiBUT0RPOiBjaGFuZ2UgdG8gY2FsbCBmc19jb250ZXh0X2Zvcl9tb3Vu
dCgpLCBmaWxsIGluIGNvbnRleHQgZGlyZWN0bHksIGNhbGwgZmNfbW91bnQgKi8KLQotCS8qIFNl
ZSBhZnNfbW50cHRfZG9fYXV0b21vdW50IGluIGZzL2Fmcy9tbnRwdC5jIGZvciBhbiBleGFtcGxl
ICovCi0KLQkvKiBzdHJpcCBmaXJzdCAnXCcgZnJvbSBmdWxscGF0aCAqLwotCW1vdW50ZGF0YSA9
IGNpZnNfY29tcG9zZV9tb3VudF9vcHRpb25zKGNpZnNfc2ItPmN0eC0+bW91bnRfb3B0aW9ucywK
LQkJCQkJICAgICAgIGZ1bGxwYXRoICsgMSwgTlVMTCwgTlVMTCk7Ci0JaWYgKElTX0VSUihtb3Vu
dGRhdGEpKSB7Ci0JCWtmcmVlKGRldm5hbWUpOwotCQlyZXR1cm4gKHN0cnVjdCB2ZnNtb3VudCAq
KW1vdW50ZGF0YTsKLQl9Ci0KLQltbnQgPSB2ZnNfc3VibW91bnQobW50cHQsICZjaWZzX2ZzX3R5
cGUsIGRldm5hbWUsIG1vdW50ZGF0YSk7Ci0Ja2ZyZWUobW91bnRkYXRhKTsKLQlrZnJlZShkZXZu
YW1lKTsKLQlyZXR1cm4gbW50OwotfQotCiAvKgogICogQ3JlYXRlIGEgdmZzbW91bnQgdGhhdCB3
ZSBjYW4gYXV0b21vdW50CiAgKi8KLXN0YXRpYyBzdHJ1Y3QgdmZzbW91bnQgKmNpZnNfZGZzX2Rv
X2F1dG9tb3VudChzdHJ1Y3QgZGVudHJ5ICptbnRwdCkKK3N0YXRpYyBzdHJ1Y3QgdmZzbW91bnQg
KmNpZnNfZGZzX2RvX2F1dG9tb3VudChzdHJ1Y3QgcGF0aCAqcGF0aCkKIHsKKwlpbnQgcmM7CisJ
c3RydWN0IGRlbnRyeSAqbW50cHQgPSBwYXRoLT5kZW50cnk7CisJc3RydWN0IGZzX2NvbnRleHQg
KmZjOwogCXN0cnVjdCBjaWZzX3NiX2luZm8gKmNpZnNfc2I7Ci0Jdm9pZCAqcGFnZTsKKwl2b2lk
ICpwYWdlID0gTlVMTDsKKwlzdHJ1Y3Qgc21iM19mc19jb250ZXh0ICpjdHgsICpjdXJfY3R4Owor
CXN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgdG1wOwogCWNoYXIgKmZ1bGxfcGF0aDsKIAlzdHJ1Y3Qg
dmZzbW91bnQgKm1udDsKIAotCWNpZnNfZGJnKEZZSSwgImluICVzXG4iLCBfX2Z1bmNfXyk7Ci0J
QlVHX09OKElTX1JPT1QobW50cHQpKTsKKwlpZiAoSVNfUk9PVChtbnRwdCkpCisJCXJldHVybiBF
UlJfUFRSKC1FU1RBTEUpOwogCiAJLyoKIAkgKiBUaGUgTVNERlMgc3BlYyBzdGF0ZXMgdGhhdCBw
YXRocyBpbiBERlMgcmVmZXJyYWwgcmVxdWVzdHMgYW5kCkBAIC0zMjEsMjkgKzI4Myw0NyBAQCBz
dGF0aWMgc3RydWN0IHZmc21vdW50ICpjaWZzX2Rmc19kb19hdXRvbW91bnQoc3RydWN0IGRlbnRy
eSAqbW50cHQpCiAJICogZ2l2ZXMgdXMgdGhlIGxhdHRlciwgc28gd2UgbXVzdCBhZGp1c3QgdGhl
IHJlc3VsdC4KIAkgKi8KIAljaWZzX3NiID0gQ0lGU19TQihtbnRwdC0+ZF9zYik7Ci0JaWYgKGNp
ZnNfc2ItPm1udF9jaWZzX2ZsYWdzICYgQ0lGU19NT1VOVF9OT19ERlMpIHsKLQkJbW50ID0gRVJS
X1BUUigtRVJFTU9URSk7Ci0JCWdvdG8gY2RkYV9leGl0OwotCX0KKwlpZiAoY2lmc19zYi0+bW50
X2NpZnNfZmxhZ3MgJiBDSUZTX01PVU5UX05PX0RGUykKKwkJcmV0dXJuIEVSUl9QVFIoLUVSRU1P
VEUpOworCisJY3VyX2N0eCA9IGNpZnNfc2ItPmN0eDsKKworCWZjID0gZnNfY29udGV4dF9mb3Jf
c3VibW91bnQocGF0aC0+bW50LT5tbnRfc2ItPnNfdHlwZSwgbW50cHQpOworCWlmIChJU19FUlIo
ZmMpKQorCQlyZXR1cm4gRVJSX0NBU1QoZmMpOworCisJY3R4ID0gc21iM19mYzJjb250ZXh0KGZj
KTsKIAogCXBhZ2UgPSBhbGxvY19kZW50cnlfcGF0aCgpOwogCS8qIGFsd2F5cyB1c2UgdHJlZSBu
YW1lIHByZWZpeCAqLwogCWZ1bGxfcGF0aCA9IGJ1aWxkX3BhdGhfZnJvbV9kZW50cnlfb3B0aW9u
YWxfcHJlZml4KG1udHB0LCBwYWdlLCB0cnVlKTsKIAlpZiAoSVNfRVJSKGZ1bGxfcGF0aCkpIHsK
IAkJbW50ID0gRVJSX0NBU1QoZnVsbF9wYXRoKTsKLQkJZ290byBmcmVlX2Z1bGxfcGF0aDsKKwkJ
Z290byBvdXQ7CiAJfQogCi0JY29udmVydF9kZWxpbWl0ZXIoZnVsbF9wYXRoLCAnXFwnKTsKKwlj
b252ZXJ0X2RlbGltaXRlcihmdWxsX3BhdGgsICcvJyk7CiAJY2lmc19kYmcoRllJLCAiJXM6IGZ1
bGxfcGF0aDogJXNcbiIsIF9fZnVuY19fLCBmdWxsX3BhdGgpOwogCi0JbW50ID0gY2lmc19kZnNf
ZG9fbW91bnQobW50cHQsIGNpZnNfc2IsIGZ1bGxfcGF0aCk7Ci0JY2lmc19kYmcoRllJLCAiJXM6
IGNpZnNfZGZzX2RvX21vdW50OiVzICwgbW50OiVwXG4iLCBfX2Z1bmNfXywgZnVsbF9wYXRoICsg
MSwgbW50KTsKKwl0bXAgPSAqY3VyX2N0eDsKKwl0bXAuc291cmNlID0gZnVsbF9wYXRoOworCXRt
cC5VTkMgPSB0bXAucHJlcGF0aCA9IE5VTEw7CisKKwlyYyA9IHNtYjNfZnNfY29udGV4dF9kdXAo
Y3R4LCAmdG1wKTsKKwlpZiAocmMpIHsKKwkJbW50ID0gRVJSX1BUUihyYyk7CisJCWdvdG8gb3V0
OworCX0KKworCXJjID0gc21iM19wYXJzZV9kZXZuYW1lKGZ1bGxfcGF0aCwgY3R4KTsKKwlpZiAo
IXJjKQorCQltbnQgPSBmY19tb3VudChmYyk7CisJZWxzZQorCQltbnQgPSBFUlJfUFRSKHJjKTsK
IAotZnJlZV9mdWxsX3BhdGg6CitvdXQ6CisJcHV0X2ZzX2NvbnRleHQoZmMpOwogCWZyZWVfZGVu
dHJ5X3BhdGgocGFnZSk7Ci1jZGRhX2V4aXQ6Ci0JY2lmc19kYmcoRllJLCAibGVhdmluZyAlc1xu
IiAsIF9fZnVuY19fKTsKIAlyZXR1cm4gbW50OwogfQogCkBAIC0zNTQsOSArMzM0LDkgQEAgc3Ry
dWN0IHZmc21vdW50ICpjaWZzX2Rmc19kX2F1dG9tb3VudChzdHJ1Y3QgcGF0aCAqcGF0aCkKIHsK
IAlzdHJ1Y3QgdmZzbW91bnQgKm5ld21udDsKIAotCWNpZnNfZGJnKEZZSSwgImluICVzXG4iLCBf
X2Z1bmNfXyk7CisJY2lmc19kYmcoRllJLCAiJXM6ICVwZFxuIiwgX19mdW5jX18sIHBhdGgtPmRl
bnRyeSk7CiAKLQluZXdtbnQgPSBjaWZzX2Rmc19kb19hdXRvbW91bnQocGF0aC0+ZGVudHJ5KTsK
KwluZXdtbnQgPSBjaWZzX2Rmc19kb19hdXRvbW91bnQocGF0aCk7CiAJaWYgKElTX0VSUihuZXdt
bnQpKSB7CiAJCWNpZnNfZGJnKEZZSSwgImxlYXZpbmcgJXMgW2F1dG9tb3VudCBmYWlsZWRdXG4i
ICwgX19mdW5jX18pOwogCQlyZXR1cm4gbmV3bW50OwotLSAKMi4zNC4xCgo=
--000000000000addd6c05f00815cd
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0002-cifs-get-rid-of-mount-options-string-parsing.patch"
Content-Disposition: attachment; 
	filename="0002-cifs-get-rid-of-mount-options-string-parsing.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lbs4bt5w1>
X-Attachment-Id: f_lbs4bt5w1

RnJvbSBjMGUwNGM1YzZmMjQ0MzAzYmNmZGVkNTdkNzFlNjFmZDNhMmE1MmU5IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBQYXVsbyBBbGNhbnRhcmEgPHBjQGNqci5uej4KRGF0ZTogVHVl
LCA0IE9jdCAyMDIyIDE4OjQxOjI3IC0wMzAwClN1YmplY3Q6IFtQQVRDSCAwMi8xNF0gY2lmczog
Z2V0IHJpZCBvZiBtb3VudCBvcHRpb25zIHN0cmluZyBwYXJzaW5nCgpBZnRlciBzd2l0Y2hpbmcg
dG8gZmlsZXN5c3RlbSBjb250ZXh0IHN1cHBvcnQsIHdlIG5vIGxvbmdlciBuZWVkIHRvCmhhbmRs
ZSBtb3VudCBvcHRpb25zIHN0cmluZyB3aGVuIGNoYXNpbmcgZGZzIHJlZmVycmFscy4gIE5vdywg
d2Ugc2V0CnRoZSBuZXcgdmFsdWVzIGRpcmVjdGx5IGludG8gc21iM19mc19jb250ZXh0LgoKU3Rh
cnQgd29ya2luZyBvbiBhIHNlcGFyYXRlIHNvdXJjZSBmaWxlIHRvIGhhbmRsZSBtb3N0IGRmcyBy
ZWxhdGVkCm1vdW50IGZ1bmN0aW9ucyBhcyBjb25uZWN0LmMgaGFzIGFscmVhZHkgYmVjYW1lIHRv
byBiaWcuICBUaGUKcmVtYWluaW5nIGZ1bmN0aW9ucyB3aWxsIGJlIG1vdmVkIGdyYWR1YWxseSBp
biBmb2xsb3ctdXAgcGF0Y2hlcy4KClNpZ25lZC1vZmYtYnk6IFBhdWxvIEFsY2FudGFyYSAoU1VT
RSkgPHBjQGNqci5uej4KU2lnbmVkLW9mZi1ieTogU3RldmUgRnJlbmNoIDxzdGZyZW5jaEBtaWNy
b3NvZnQuY29tPgotLS0KIGZzL2NpZnMvTWFrZWZpbGUgICAgICAgfCAgIDIgKy0KIGZzL2NpZnMv
Y2lmc19kZnNfcmVmLmMgfCAxNDEgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0KIGZzL2NpZnMvY2lmc2ZzLmMgICAgICAgfCAgIDYgLS0KIGZzL2NpZnMvY2lmc3Byb3Rv
LmggICAgfCAgIDcgKy0KIGZzL2NpZnMvY29ubmVjdC5jICAgICAgfCAxMDAgKystLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0KIGZzL2NpZnMvZGZzLmMgICAgICAgICAgfCAgNzYgKysrKysrKysr
KysrKysrKysrKysrKwogZnMvY2lmcy9kZnMuaCAgICAgICAgICB8ICAxNiArKysrKwogNyBmaWxl
cyBjaGFuZ2VkLCAxMDEgaW5zZXJ0aW9ucygrKSwgMjQ3IGRlbGV0aW9ucygtKQogY3JlYXRlIG1v
ZGUgMTAwNjQ0IGZzL2NpZnMvZGZzLmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBmcy9jaWZzL2Rmcy5o
CgpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9NYWtlZmlsZSBiL2ZzL2NpZnMvTWFrZWZpbGUKaW5kZXgg
N2M5Nzg1OTczZjQ5Li4zMDRhN2Y2Y2MxM2EgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvTWFrZWZpbGUK
KysrIGIvZnMvY2lmcy9NYWtlZmlsZQpAQCAtMjEsNyArMjEsNyBAQCBjaWZzLSQoQ09ORklHX0NJ
RlNfWEFUVFIpICs9IHhhdHRyLm8KIAogY2lmcy0kKENPTkZJR19DSUZTX1VQQ0FMTCkgKz0gY2lm
c19zcG5lZ28ubwogCi1jaWZzLSQoQ09ORklHX0NJRlNfREZTX1VQQ0FMTCkgKz0gY2lmc19kZnNf
cmVmLm8gZGZzX2NhY2hlLm8KK2NpZnMtJChDT05GSUdfQ0lGU19ERlNfVVBDQUxMKSArPSBjaWZz
X2Rmc19yZWYubyBkZnNfY2FjaGUubyBkZnMubwogCiBjaWZzLSQoQ09ORklHX0NJRlNfU1dOX1VQ
Q0FMTCkgKz0gbmV0bGluay5vIGNpZnNfc3duLm8KIApkaWZmIC0tZ2l0IGEvZnMvY2lmcy9jaWZz
X2Rmc19yZWYuYyBiL2ZzL2NpZnMvY2lmc19kZnNfcmVmLmMKaW5kZXggMDIwZTcxZmUxNDU0Li5j
YWU4YTUyYzZkOWEgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvY2lmc19kZnNfcmVmLmMKKysrIGIvZnMv
Y2lmcy9jaWZzX2Rmc19yZWYuYwpAQCAtNjAsNyArNjAsNyBAQCB2b2lkIGNpZnNfZGZzX3JlbGVh
c2VfYXV0b21vdW50X3RpbWVyKHZvaWQpCiAgKiBSZXR1cm5zIHBvaW50ZXIgdG8gdGhlIGJ1aWx0
IHN0cmluZywgb3IgYSBFUlJfUFRSLiBDYWxsZXIgaXMgcmVzcG9uc2libGUKICAqIGZvciBmcmVl
aW5nIHRoZSByZXR1cm5lZCBzdHJpbmcuCiAgKi8KLXN0YXRpYyBjaGFyICoKK2NoYXIgKgogY2lm
c19idWlsZF9kZXZuYW1lKGNoYXIgKm5vZGVuYW1lLCBjb25zdCBjaGFyICpwcmVwYXRoKQogewog
CXNpemVfdCBwcGxlbjsKQEAgLTExOSwxNDUgKzExOSw2IEBAIGNpZnNfYnVpbGRfZGV2bmFtZShj
aGFyICpub2RlbmFtZSwgY29uc3QgY2hhciAqcHJlcGF0aCkKIAlyZXR1cm4gZGV2OwogfQogCi0K
LS8qKgotICogY2lmc19jb21wb3NlX21vdW50X29wdGlvbnMJLQljcmVhdGVzIG1vdW50IG9wdGlv
bnMgZm9yIHJlZmVycmFsCi0gKiBAc2JfbW91bnRkYXRhOglwYXJlbnQvcm9vdCBERlMgbW91bnQg
b3B0aW9ucyAodGVtcGxhdGUpCi0gKiBAZnVsbHBhdGg6CQlmdWxsIHBhdGggaW4gVU5DIGZvcm1h
dAotICogQHJlZjoJCW9wdGlvbmFsIHNlcnZlcidzIHJlZmVycmFsCi0gKiBAZGV2bmFtZToJCXJl
dHVybiB0aGUgYnVpbHQgY2lmcyBkZXZpY2UgbmFtZSBpZiBwYXNzZWQgcG9pbnRlciBub3QgTlVM
TAotICogY3JlYXRlcyBtb3VudCBvcHRpb25zIGZvciBzdWJtb3VudCBiYXNlZCBvbiB0ZW1wbGF0
ZSBvcHRpb25zIHNiX21vdW50ZGF0YQotICogYW5kIHJlcGxhY2luZyB1bmMsaXAscHJlZml4cGF0
aCBvcHRpb25zIHdpdGggb25lcyB3ZSd2ZSBnb3QgZm9ybSByZWZfdW5jLgotICoKLSAqIFJldHVy
bnM6IHBvaW50ZXIgdG8gbmV3IG1vdW50IG9wdGlvbnMgb3IgRVJSX1BUUi4KLSAqIENhbGxlciBp
cyByZXNwb25zaWJsZSBmb3IgZnJlZWluZyByZXR1cm5lZCB2YWx1ZSBpZiBpdCBpcyBub3QgZXJy
b3IuCi0gKi8KLWNoYXIgKmNpZnNfY29tcG9zZV9tb3VudF9vcHRpb25zKGNvbnN0IGNoYXIgKnNi
X21vdW50ZGF0YSwKLQkJCQkgY29uc3QgY2hhciAqZnVsbHBhdGgsCi0JCQkJIGNvbnN0IHN0cnVj
dCBkZnNfaW5mbzNfcGFyYW0gKnJlZiwKLQkJCQkgY2hhciAqKmRldm5hbWUpCi17Ci0JaW50IHJj
OwotCWNoYXIgKm5hbWU7Ci0JY2hhciAqbW91bnRkYXRhID0gTlVMTDsKLQljb25zdCBjaGFyICpw
cmVwYXRoID0gTlVMTDsKLQlpbnQgbWRfbGVuOwotCWNoYXIgKnRrbl9lOwotCWNoYXIgKnNydklQ
ID0gTlVMTDsKLQljaGFyIHNlcCA9ICcsJzsKLQlpbnQgb2ZmLCBub2ZmOwotCi0JaWYgKHNiX21v
dW50ZGF0YSA9PSBOVUxMKQotCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKLQotCWlmIChyZWYp
IHsKLQkJaWYgKFdBUk5fT05fT05DRSghcmVmLT5ub2RlX25hbWUgfHwgcmVmLT5wYXRoX2NvbnN1
bWVkIDwgMCkpCi0JCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKLQotCQlpZiAoc3RybGVuKGZ1
bGxwYXRoKSAtIHJlZi0+cGF0aF9jb25zdW1lZCkgewotCQkJcHJlcGF0aCA9IGZ1bGxwYXRoICsg
cmVmLT5wYXRoX2NvbnN1bWVkOwotCQkJLyogc2tpcCBpbml0aWFsIGRlbGltaXRlciAqLwotCQkJ
aWYgKCpwcmVwYXRoID09ICcvJyB8fCAqcHJlcGF0aCA9PSAnXFwnKQotCQkJCXByZXBhdGgrKzsK
LQkJfQotCi0JCW5hbWUgPSBjaWZzX2J1aWxkX2Rldm5hbWUocmVmLT5ub2RlX25hbWUsIHByZXBh
dGgpOwotCQlpZiAoSVNfRVJSKG5hbWUpKSB7Ci0JCQlyYyA9IFBUUl9FUlIobmFtZSk7Ci0JCQlu
YW1lID0gTlVMTDsKLQkJCWdvdG8gY29tcG9zZV9tb3VudF9vcHRpb25zX2VycjsKLQkJfQotCX0g
ZWxzZSB7Ci0JCW5hbWUgPSBjaWZzX2J1aWxkX2Rldm5hbWUoKGNoYXIgKilmdWxscGF0aCwgTlVM
TCk7Ci0JCWlmIChJU19FUlIobmFtZSkpIHsKLQkJCXJjID0gUFRSX0VSUihuYW1lKTsKLQkJCW5h
bWUgPSBOVUxMOwotCQkJZ290byBjb21wb3NlX21vdW50X29wdGlvbnNfZXJyOwotCQl9Ci0JfQot
Ci0JcmMgPSBkbnNfcmVzb2x2ZV9zZXJ2ZXJfbmFtZV90b19pcChuYW1lLCAmc3J2SVAsIE5VTEwp
OwotCWlmIChyYyA8IDApIHsKLQkJY2lmc19kYmcoRllJLCAiJXM6IEZhaWxlZCB0byByZXNvbHZl
IHNlcnZlciBwYXJ0IG9mICVzIHRvIElQOiAlZFxuIiwKLQkJCSBfX2Z1bmNfXywgbmFtZSwgcmMp
OwotCQlnb3RvIGNvbXBvc2VfbW91bnRfb3B0aW9uc19lcnI7Ci0JfQotCi0JLyoKLQkgKiBJbiBt
b3N0IGNhc2VzLCB3ZSdsbCBiZSBidWlsZGluZyBhIHNob3J0ZXIgc3RyaW5nIHRoYW4gdGhlIG9y
aWdpbmFsLAotCSAqIGJ1dCB3ZSBkbyBoYXZlIHRvIGFzc3VtZSB0aGF0IHRoZSBhZGRyZXNzIGlu
IHRoZSBpcD0gb3B0aW9uIG1heSBiZQotCSAqIG11Y2ggbG9uZ2VyIHRoYW4gdGhlIG9yaWdpbmFs
LiBBZGQgdGhlIG1heCBsZW5ndGggb2YgYW4gYWRkcmVzcwotCSAqIHN0cmluZyB0byB0aGUgbGVu
Z3RoIG9mIHRoZSBvcmlnaW5hbCBzdHJpbmcgdG8gYWxsb3cgZm9yIHdvcnN0IGNhc2UuCi0JICov
Ci0JbWRfbGVuID0gc3RybGVuKHNiX21vdW50ZGF0YSkgKyBJTkVUNl9BRERSU1RSTEVOOwotCW1v
dW50ZGF0YSA9IGt6YWxsb2MobWRfbGVuICsgc2l6ZW9mKCJpcD0iKSArIDEsIEdGUF9LRVJORUwp
OwotCWlmIChtb3VudGRhdGEgPT0gTlVMTCkgewotCQlyYyA9IC1FTk9NRU07Ci0JCWdvdG8gY29t
cG9zZV9tb3VudF9vcHRpb25zX2VycjsKLQl9Ci0KLQkvKiBjb3B5IGFsbCBvcHRpb25zIGV4Y2Vw
dCBvZiB1bmMsaXAscHJlZml4cGF0aCAqLwotCW9mZiA9IDA7Ci0JaWYgKHN0cm5jbXAoc2JfbW91
bnRkYXRhLCAic2VwPSIsIDQpID09IDApIHsKLQkJCXNlcCA9IHNiX21vdW50ZGF0YVs0XTsKLQkJ
CXN0cm5jcHkobW91bnRkYXRhLCBzYl9tb3VudGRhdGEsIDUpOwotCQkJb2ZmICs9IDU7Ci0JfQot
Ci0JZG8gewotCQl0a25fZSA9IHN0cmNocihzYl9tb3VudGRhdGEgKyBvZmYsIHNlcCk7Ci0JCWlm
ICh0a25fZSA9PSBOVUxMKQotCQkJbm9mZiA9IHN0cmxlbihzYl9tb3VudGRhdGEgKyBvZmYpOwot
CQllbHNlCi0JCQlub2ZmID0gdGtuX2UgLSAoc2JfbW91bnRkYXRhICsgb2ZmKSArIDE7Ci0KLQkJ
aWYgKHN0cm5jYXNlY21wKHNiX21vdW50ZGF0YSArIG9mZiwgImNydWlkPSIsIDYpID09IDApIHsK
LQkJCW9mZiArPSBub2ZmOwotCQkJY29udGludWU7Ci0JCX0KLQkJaWYgKHN0cm5jYXNlY21wKHNi
X21vdW50ZGF0YSArIG9mZiwgInVuYz0iLCA0KSA9PSAwKSB7Ci0JCQlvZmYgKz0gbm9mZjsKLQkJ
CWNvbnRpbnVlOwotCQl9Ci0JCWlmIChzdHJuY2FzZWNtcChzYl9tb3VudGRhdGEgKyBvZmYsICJp
cD0iLCAzKSA9PSAwKSB7Ci0JCQlvZmYgKz0gbm9mZjsKLQkJCWNvbnRpbnVlOwotCQl9Ci0JCWlm
IChzdHJuY2FzZWNtcChzYl9tb3VudGRhdGEgKyBvZmYsICJwcmVmaXhwYXRoPSIsIDExKSA9PSAw
KSB7Ci0JCQlvZmYgKz0gbm9mZjsKLQkJCWNvbnRpbnVlOwotCQl9Ci0JCXN0cm5jYXQobW91bnRk
YXRhLCBzYl9tb3VudGRhdGEgKyBvZmYsIG5vZmYpOwotCQlvZmYgKz0gbm9mZjsKLQl9IHdoaWxl
ICh0a25fZSk7Ci0Jc3RyY2F0KG1vdW50ZGF0YSwgc2JfbW91bnRkYXRhICsgb2ZmKTsKLQltb3Vu
dGRhdGFbbWRfbGVuXSA9ICdcMCc7Ci0KLQkvKiBjb3B5IG5ldyBJUCBhbmQgcmVmIHNoYXJlIG5h
bWUgKi8KLQlpZiAobW91bnRkYXRhW3N0cmxlbihtb3VudGRhdGEpIC0gMV0gIT0gc2VwKQotCQlz
dHJuY2F0KG1vdW50ZGF0YSwgJnNlcCwgMSk7Ci0Jc3RyY2F0KG1vdW50ZGF0YSwgImlwPSIpOwot
CXN0cmNhdChtb3VudGRhdGEsIHNydklQKTsKLQotCWlmIChkZXZuYW1lKQotCQkqZGV2bmFtZSA9
IG5hbWU7Ci0JZWxzZQotCQlrZnJlZShuYW1lKTsKLQotCS8qY2lmc19kYmcoRllJLCAiJXM6IHBh
cmVudCBtb3VudGRhdGE6ICVzXG4iLCBfX2Z1bmNfXywgc2JfbW91bnRkYXRhKTsqLwotCS8qY2lm
c19kYmcoRllJLCAiJXM6IHN1Ym1vdW50IG1vdW50ZGF0YTogJXNcbiIsIF9fZnVuY19fLCBtb3Vu
dGRhdGEgKTsqLwotCi1jb21wb3NlX21vdW50X29wdGlvbnNfb3V0OgotCWtmcmVlKHNydklQKTsK
LQlyZXR1cm4gbW91bnRkYXRhOwotCi1jb21wb3NlX21vdW50X29wdGlvbnNfZXJyOgotCWtmcmVl
KG1vdW50ZGF0YSk7Ci0JbW91bnRkYXRhID0gRVJSX1BUUihyYyk7Ci0Ja2ZyZWUobmFtZSk7Ci0J
Z290byBjb21wb3NlX21vdW50X29wdGlvbnNfb3V0OwotfQotCiAvKgogICogQ3JlYXRlIGEgdmZz
bW91bnQgdGhhdCB3ZSBjYW4gYXV0b21vdW50CiAgKi8KZGlmZiAtLWdpdCBhL2ZzL2NpZnMvY2lm
c2ZzLmMgYi9mcy9jaWZzL2NpZnNmcy5jCmluZGV4IDkxNGNiYjlkZTQ4Mi4uMTBlMDBjNjI0OTIy
IDEwMDY0NAotLS0gYS9mcy9jaWZzL2NpZnNmcy5jCisrKyBiL2ZzL2NpZnMvY2lmc2ZzLmMKQEAg
LTg5NiwxMiArODk2LDYgQEAgY2lmc19zbWIzX2RvX21vdW50KHN0cnVjdCBmaWxlX3N5c3RlbV90
eXBlICpmc190eXBlLAogCQlnb3RvIG91dDsKIAl9CiAKLQlyYyA9IGNpZnNfc2V0dXBfdm9sdW1l
X2luZm8oY2lmc19zYi0+Y3R4LCBOVUxMLCBOVUxMKTsKLQlpZiAocmMpIHsKLQkJcm9vdCA9IEVS
Ul9QVFIocmMpOwotCQlnb3RvIG91dDsKLQl9Ci0KIAlyYyA9IGNpZnNfc2V0dXBfY2lmc19zYihj
aWZzX3NiKTsKIAlpZiAocmMpIHsKIAkJcm9vdCA9IEVSUl9QVFIocmMpOwpkaWZmIC0tZ2l0IGEv
ZnMvY2lmcy9jaWZzcHJvdG8uaCBiL2ZzL2NpZnMvY2lmc3Byb3RvLmgKaW5kZXggN2Q0YjM3ZWVl
Yzk4Li40YjFmNzMxNWNhMTYgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvY2lmc3Byb3RvLmgKKysrIGIv
ZnMvY2lmcy9jaWZzcHJvdG8uaApAQCAtNzUsOSArNzUsNyBAQCBleHRlcm4gY2hhciAqY2lmc19i
dWlsZF9wYXRoX3RvX3Jvb3Qoc3RydWN0IHNtYjNfZnNfY29udGV4dCAqY3R4LAogCQkJCSAgICAg
c3RydWN0IGNpZnNfdGNvbiAqdGNvbiwKIAkJCQkgICAgIGludCBhZGRfdHJlZW5hbWUpOwogZXh0
ZXJuIGNoYXIgKmJ1aWxkX3dpbGRjYXJkX3BhdGhfZnJvbV9kZW50cnkoc3RydWN0IGRlbnRyeSAq
ZGlyZW50cnkpOwotZXh0ZXJuIGNoYXIgKmNpZnNfY29tcG9zZV9tb3VudF9vcHRpb25zKGNvbnN0
IGNoYXIgKnNiX21vdW50ZGF0YSwKLQkJY29uc3QgY2hhciAqZnVsbHBhdGgsIGNvbnN0IHN0cnVj
dCBkZnNfaW5mbzNfcGFyYW0gKnJlZiwKLQkJY2hhciAqKmRldm5hbWUpOworY2hhciAqY2lmc19i
dWlsZF9kZXZuYW1lKGNoYXIgKm5vZGVuYW1lLCBjb25zdCBjaGFyICpwcmVwYXRoKTsKIGV4dGVy
biB2b2lkIGRlbGV0ZV9taWQoc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpOwogZXh0ZXJuIHZvaWQg
cmVsZWFzZV9taWQoc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpOwogZXh0ZXJuIHZvaWQgY2lmc193
YWtlX3VwX3Rhc2soc3RydWN0IG1pZF9xX2VudHJ5ICptaWQpOwpAQCAtNTYxLDkgKzU1OSw2IEBA
IGV4dGVybiBpbnQgY2hlY2tfbWZfc3ltbGluayh1bnNpZ25lZCBpbnQgeGlkLCBzdHJ1Y3QgY2lm
c190Y29uICp0Y29uLAogZXh0ZXJuIGludCBFX21kNGhhc2goY29uc3QgdW5zaWduZWQgY2hhciAq
cGFzc3dkLCB1bnNpZ25lZCBjaGFyICpwMTYsCiAJCQljb25zdCBzdHJ1Y3QgbmxzX3RhYmxlICpj
b2RlcGFnZSk7CiAKLWV4dGVybiBpbnQKLWNpZnNfc2V0dXBfdm9sdW1lX2luZm8oc3RydWN0IHNt
YjNfZnNfY29udGV4dCAqY3R4LCBjb25zdCBjaGFyICptbnRvcHRzLCBjb25zdCBjaGFyICpkZXZu
YW1lKTsKLQogZXh0ZXJuIHN0cnVjdCBUQ1BfU2VydmVyX0luZm8gKgogY2lmc19maW5kX3RjcF9z
ZXNzaW9uKHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCk7CiAKZGlmZiAtLWdpdCBhL2ZzL2Np
ZnMvY29ubmVjdC5jIGIvZnMvY2lmcy9jb25uZWN0LmMKaW5kZXggYjA0NzA2ODM1ZTAyLi45NGQx
NzQxY2VkMjEgMTAwNjQ0Ci0tLSBhL2ZzL2NpZnMvY29ubmVjdC5jCisrKyBiL2ZzL2NpZnMvY29u
bmVjdC5jCkBAIC00Niw2ICs0Niw3IEBACiAjaW5jbHVkZSAic21iZGlyZWN0LmgiCiAjaW5jbHVk
ZSAiZG5zX3Jlc29sdmUuaCIKICNpZmRlZiBDT05GSUdfQ0lGU19ERlNfVVBDQUxMCisjaW5jbHVk
ZSAiZGZzLmgiCiAjaW5jbHVkZSAiZGZzX2NhY2hlLmgiCiAjZW5kaWYKICNpbmNsdWRlICJmc19j
b250ZXh0LmgiCkBAIC0zMzk3LDk1ICszMzk4LDggQEAgYnVpbGRfdW5jX3BhdGhfdG9fcm9vdChj
b25zdCBzdHJ1Y3Qgc21iM19mc19jb250ZXh0ICpjdHgsCiAJY2lmc19kYmcoRllJLCAiJXM6IGZ1
bGxfcGF0aD0lc1xuIiwgX19mdW5jX18sIGZ1bGxfcGF0aCk7CiAJcmV0dXJuIGZ1bGxfcGF0aDsK
IH0KLQotLyoKLSAqIGV4cGFuZF9kZnNfcmVmZXJyYWwgLSBVcGRhdGUgY2lmc19zYiBmcm9tIGRm
cyByZWZlcnJhbCBwYXRoCi0gKgotICogY2lmc19zYi0+Y3R4LT5tb3VudF9vcHRpb25zIHdpbGwg
YmUgKHJlLSlhbGxvY2F0ZWQgdG8gYSBzdHJpbmcgY29udGFpbmluZyB1cGRhdGVkIG9wdGlvbnMg
Zm9yIHRoZQotICogc3VibW91bnQuICBPdGhlcndpc2UgaXQgd2lsbCBiZSBsZWZ0IHVudG91Y2hl
ZC4KLSAqLwotc3RhdGljIGludCBleHBhbmRfZGZzX3JlZmVycmFsKHN0cnVjdCBtb3VudF9jdHgg
Km1udF9jdHgsIGNvbnN0IGNoYXIgKmZ1bGxfcGF0aCwKLQkJCSAgICAgICBzdHJ1Y3QgZGZzX2lu
Zm8zX3BhcmFtICpyZWZlcnJhbCkKLXsKLQlpbnQgcmM7Ci0Jc3RydWN0IGNpZnNfc2JfaW5mbyAq
Y2lmc19zYiA9IG1udF9jdHgtPmNpZnNfc2I7Ci0Jc3RydWN0IHNtYjNfZnNfY29udGV4dCAqY3R4
ID0gbW50X2N0eC0+ZnNfY3R4OwotCWNoYXIgKmZha2VfZGV2bmFtZSA9IE5VTEwsICptZGF0YSA9
IE5VTEw7Ci0KLQltZGF0YSA9IGNpZnNfY29tcG9zZV9tb3VudF9vcHRpb25zKGNpZnNfc2ItPmN0
eC0+bW91bnRfb3B0aW9ucywgZnVsbF9wYXRoICsgMSwgcmVmZXJyYWwsCi0JCQkJCSAgICZmYWtl
X2Rldm5hbWUpOwotCWlmIChJU19FUlIobWRhdGEpKSB7Ci0JCXJjID0gUFRSX0VSUihtZGF0YSk7
Ci0JCW1kYXRhID0gTlVMTDsKLQl9IGVsc2UgewotCQkvKgotCQkgKiBXZSBjYW4gbm90IGNsZWFy
IG91dCB0aGUgd2hvbGUgc3RydWN0dXJlIHNpbmNlIHdlIG5vIGxvbmdlciBoYXZlIGFuIGV4cGxp
Y2l0Ci0JCSAqIGZ1bmN0aW9uIHRvIHBhcnNlIGEgbW91bnQtc3RyaW5nLiBJbnN0ZWFkIHdlIG5l
ZWQgdG8gY2xlYXIgb3V0IHRoZSBpbmRpdmlkdWFsCi0JCSAqIGZpZWxkcyB0aGF0IGFyZSBubyBs
b25nZXIgdmFsaWQuCi0JCSAqLwotCQlrZnJlZShjdHgtPnByZXBhdGgpOwotCQljdHgtPnByZXBh
dGggPSBOVUxMOwotCQlyYyA9IGNpZnNfc2V0dXBfdm9sdW1lX2luZm8oY3R4LCBtZGF0YSwgZmFr
ZV9kZXZuYW1lKTsKLQl9Ci0Ja2ZyZWUoZmFrZV9kZXZuYW1lKTsKLQlrZnJlZShjaWZzX3NiLT5j
dHgtPm1vdW50X29wdGlvbnMpOwotCWNpZnNfc2ItPmN0eC0+bW91bnRfb3B0aW9ucyA9IG1kYXRh
OwotCi0JcmV0dXJuIHJjOwotfQogI2VuZGlmCiAKLS8qIFRPRE86IGFsbCBjYWxsZXJzIHRvIHRo
aXMgYXJlIGJyb2tlbi4gV2UgYXJlIG5vdCBwYXJzaW5nIG1vdW50X29wdGlvbnMgaGVyZQotICog
d2Ugc2hvdWxkIHBhc3MgYSBjbG9uZSBvZiB0aGUgb3JpZ2luYWwgY29udGV4dD8KLSAqLwotaW50
Ci1jaWZzX3NldHVwX3ZvbHVtZV9pbmZvKHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCwgY29u
c3QgY2hhciAqbW50b3B0cywgY29uc3QgY2hhciAqZGV2bmFtZSkKLXsKLQlpbnQgcmM7Ci0KLQlp
ZiAoZGV2bmFtZSkgewotCQljaWZzX2RiZyhGWUksICIlczogZGV2bmFtZT0lc1xuIiwgX19mdW5j
X18sIGRldm5hbWUpOwotCQlyYyA9IHNtYjNfcGFyc2VfZGV2bmFtZShkZXZuYW1lLCBjdHgpOwot
CQlpZiAocmMpIHsKLQkJCWNpZnNfZGJnKFZGUywgIiVzOiBmYWlsZWQgdG8gcGFyc2UgJXM6ICVk
XG4iLCBfX2Z1bmNfXywgZGV2bmFtZSwgcmMpOwotCQkJcmV0dXJuIHJjOwotCQl9Ci0JfQotCi0J
aWYgKG1udG9wdHMpIHsKLQkJY2hhciAqaXA7Ci0KLQkJcmMgPSBzbWIzX3BhcnNlX29wdChtbnRv
cHRzLCAiaXAiLCAmaXApOwotCQlpZiAocmMpIHsKLQkJCWNpZnNfZGJnKFZGUywgIiVzOiBmYWls
ZWQgdG8gcGFyc2UgaXAgb3B0aW9uczogJWRcbiIsIF9fZnVuY19fLCByYyk7Ci0JCQlyZXR1cm4g
cmM7Ci0JCX0KLQotCQlyYyA9IGNpZnNfY29udmVydF9hZGRyZXNzKChzdHJ1Y3Qgc29ja2FkZHIg
KikmY3R4LT5kc3RhZGRyLCBpcCwgc3RybGVuKGlwKSk7Ci0JCWtmcmVlKGlwKTsKLQkJaWYgKCFy
YykgewotCQkJY2lmc19kYmcoVkZTLCAiJXM6IGZhaWxlZCB0byBjb252ZXJ0IGlwIGFkZHJlc3Nc
biIsIF9fZnVuY19fKTsKLQkJCXJldHVybiAtRUlOVkFMOwotCQl9Ci0JfQotCi0JaWYgKGN0eC0+
bnVsbGF1dGgpIHsKLQkJY2lmc19kYmcoRllJLCAiQW5vbnltb3VzIGxvZ2luXG4iKTsKLQkJa2Zy
ZWUoY3R4LT51c2VybmFtZSk7Ci0JCWN0eC0+dXNlcm5hbWUgPSBOVUxMOwotCX0gZWxzZSBpZiAo
Y3R4LT51c2VybmFtZSkgewotCQkvKiBCQiBmaXhtZSBwYXJzZSBmb3IgZG9tYWluIG5hbWUgaGVy
ZSAqLwotCQljaWZzX2RiZyhGWUksICJVc2VybmFtZTogJXNcbiIsIGN0eC0+dXNlcm5hbWUpOwot
CX0gZWxzZSB7Ci0JCWNpZnNfZGJnKFZGUywgIk5vIHVzZXJuYW1lIHNwZWNpZmllZFxuIik7Ci0J
LyogSW4gdXNlcnNwYWNlIG1vdW50IGhlbHBlciB3ZSBjYW4gZ2V0IHVzZXIgbmFtZSBmcm9tIGFs
dGVybmF0ZQotCSAgIGxvY2F0aW9ucyBzdWNoIGFzIGVudiB2YXJpYWJsZXMgYW5kIGZpbGVzIG9u
IGRpc2sgKi8KLQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KIHN0YXRp
YyBpbnQKIGNpZnNfYXJlX2FsbF9wYXRoX2NvbXBvbmVudHNfYWNjZXNzaWJsZShzdHJ1Y3QgVENQ
X1NlcnZlcl9JbmZvICpzZXJ2ZXIsCiAJCQkJCXVuc2lnbmVkIGludCB4aWQsCkBAIC0zNjMwLDcg
KzM1NDQsNiBAQCBzdGF0aWMgaW50IGNvbm5lY3RfZGZzX3RhcmdldChzdHJ1Y3QgbW91bnRfY3R4
ICptbnRfY3R4LCBjb25zdCBjaGFyICpmdWxsX3BhdGgsCiAJaW50IHJjOwogCXN0cnVjdCBkZnNf
aW5mbzNfcGFyYW0gcmVmID0ge307CiAJc3RydWN0IGNpZnNfc2JfaW5mbyAqY2lmc19zYiA9IG1u
dF9jdHgtPmNpZnNfc2I7Ci0JY2hhciAqb2xkbW50ID0gY2lmc19zYi0+Y3R4LT5tb3VudF9vcHRp
b25zOwogCiAJY2lmc19kYmcoRllJLCAiJXM6IGZ1bGxfcGF0aD0lcyByZWZfcGF0aD0lcyB0YXJn
ZXQ9JXNcbiIsIF9fZnVuY19fLCBmdWxsX3BhdGgsIHJlZl9wYXRoLAogCQkgZGZzX2NhY2hlX2dl
dF90Z3RfbmFtZSh0aXQpKTsKQEAgLTM2MzksMTUgKzM1NTIsMTQgQEAgc3RhdGljIGludCBjb25u
ZWN0X2Rmc190YXJnZXQoc3RydWN0IG1vdW50X2N0eCAqbW50X2N0eCwgY29uc3QgY2hhciAqZnVs
bF9wYXRoLAogCWlmIChyYykKIAkJZ290byBvdXQ7CiAKLQlyYyA9IGV4cGFuZF9kZnNfcmVmZXJy
YWwobW50X2N0eCwgZnVsbF9wYXRoLCAmcmVmKTsKKwlyYyA9IGRmc19wYXJzZV90YXJnZXRfcmVm
ZXJyYWwoZnVsbF9wYXRoICsgMSwgJnJlZiwgbW50X2N0eC0+ZnNfY3R4KTsKIAlpZiAocmMpCiAJ
CWdvdG8gb3V0OwogCi0JLyogQ29ubmVjdCB0byBuZXcgdGFyZ2V0IG9ubHkgaWYgd2Ugd2VyZSBy
ZWRpcmVjdGVkIChlLmcuIG1vdW50IG9wdGlvbnMgY2hhbmdlZCkgKi8KLQlpZiAob2xkbW50ICE9
IGNpZnNfc2ItPmN0eC0+bW91bnRfb3B0aW9ucykgewotCQltb3VudF9wdXRfY29ubnMobW50X2N0
eCk7Ci0JCXJjID0gbW91bnRfZ2V0X2Rmc19jb25ucyhtbnRfY3R4KTsKLQl9CisJLyogWFhYOiBt
YXliZSBjaGVjayBpZiB3ZSB3ZXJlIGFjdHVhbGx5IHJlZGlyZWN0ZWQgYW5kIGF2b2lkIHJlY29u
bmVjdGluZz8gKi8KKwltb3VudF9wdXRfY29ubnMobW50X2N0eCk7CisJcmMgPSBtb3VudF9nZXRf
ZGZzX2Nvbm5zKG1udF9jdHgpOworCiAJaWYgKCFyYykgewogCQlpZiAoY2lmc19pc19yZWZlcnJh
bF9zZXJ2ZXIobW50X2N0eC0+dGNvbiwgJnJlZikpCiAJCQlzZXRfcm9vdF9zZXMobW50X2N0eCk7
CmRpZmYgLS1naXQgYS9mcy9jaWZzL2Rmcy5jIGIvZnMvY2lmcy9kZnMuYwpuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjBiMTVkN2U5ZjgxOAotLS0gL2Rldi9udWxsCisr
KyBiL2ZzL2NpZnMvZGZzLmMKQEAgLTAsMCArMSw3NiBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBDb3B5cmlnaHQgKGMpIDIwMjIgUGF1bG8gQWxjYW50YXJh
IDxwYWxjYW50YXJhQHN1c2UuZGU+CisgKi8KKworI2luY2x1ZGUgImNpZnNwcm90by5oIgorI2lu
Y2x1ZGUgImNpZnNfZGVidWcuaCIKKyNpbmNsdWRlICJkbnNfcmVzb2x2ZS5oIgorI2luY2x1ZGUg
ImZzX2NvbnRleHQuaCIKKyNpbmNsdWRlICJkZnMuaCIKKworLyogUmVzb2x2ZSBVTkMgc2VydmVy
IG5hbWUgYW5kIHNldCBkZXN0aW5hdGlvbiBpcCBhZGRyZXNzIGluIGZzIGNvbnRleHQgKi8KK3N0
YXRpYyBpbnQgcmVzb2x2ZV91bmMoY29uc3QgY2hhciAqcGF0aCwgc3RydWN0IHNtYjNfZnNfY29u
dGV4dCAqY3R4KQoreworCWludCByYzsKKwljaGFyICppcCA9IE5VTEw7CisKKwlyYyA9IGRuc19y
ZXNvbHZlX3NlcnZlcl9uYW1lX3RvX2lwKHBhdGgsICZpcCwgTlVMTCk7CisJaWYgKHJjIDwgMCkg
eworCQljaWZzX2RiZyhGWUksICIlczogZmFpbGVkIHRvIHJlc29sdmUgVU5DIHNlcnZlciBuYW1l
OiAlZFxuIiwgX19mdW5jX18sIHJjKTsKKwkJcmV0dXJuIHJjOworCX0KKworCWlmICghY2lmc19j
b252ZXJ0X2FkZHJlc3MoKHN0cnVjdCBzb2NrYWRkciAqKSZjdHgtPmRzdGFkZHIsIGlwLCBzdHJs
ZW4oaXApKSkgeworCQljaWZzX2RiZyhWRlMsICIlczogY291bGQgbm90IGRldGVybWluYXRlIGRl
c3RpbmF0aW9uIGFkZHJlc3NcbiIsIF9fZnVuY19fKTsKKwkJcmMgPSAtRUhPU1RVTlJFQUNIOwor
CX0gZWxzZQorCQlyYyA9IDA7CisKKwlrZnJlZShpcCk7CisJcmV0dXJuIHJjOworfQorCisvKioK
KyAqIGRmc19wYXJzZV90YXJnZXRfcmVmZXJyYWwgLSBzZXQgZnMgY29udGV4dCBmb3IgZGZzIHRh
cmdldCByZWZlcnJhbAorICoKKyAqIEBmdWxsX3BhdGg6IGZ1bGwgcGF0aCBpbiBVTkMgZm9ybWF0
LgorICogQHJlZjogZGZzIHJlZmVycmFsIHBvaW50ZXIuCisgKiBAY3R4OiBzbWIzIGZzIGNvbnRl
eHQgcG9pbnRlci4KKyAqCisgKiBSZXR1cm4gemVybyBpZiBkZnMgcmVmZXJyYWwgd2FzIHBhcnNl
ZCBjb3JyZWN0bHksIG90aGVyd2lzZSBub24temVyby4KKyAqLworaW50IGRmc19wYXJzZV90YXJn
ZXRfcmVmZXJyYWwoY29uc3QgY2hhciAqZnVsbF9wYXRoLCBjb25zdCBzdHJ1Y3QgZGZzX2luZm8z
X3BhcmFtICpyZWYsCisJCQkgICAgICBzdHJ1Y3Qgc21iM19mc19jb250ZXh0ICpjdHgpCit7CisJ
aW50IHJjOworCWNvbnN0IGNoYXIgKnByZXBhdGggPSBOVUxMOworCWNoYXIgKnBhdGg7CisKKwlp
ZiAoIWZ1bGxfcGF0aCB8fCAhKmZ1bGxfcGF0aCB8fCAhcmVmIHx8ICFjdHgpCisJCXJldHVybiAt
RUlOVkFMOworCisJaWYgKFdBUk5fT05fT05DRSghcmVmLT5ub2RlX25hbWUgfHwgcmVmLT5wYXRo
X2NvbnN1bWVkIDwgMCkpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKHN0cmxlbihmdWxsX3Bh
dGgpIC0gcmVmLT5wYXRoX2NvbnN1bWVkKSB7CisJCXByZXBhdGggPSBmdWxsX3BhdGggKyByZWYt
PnBhdGhfY29uc3VtZWQ7CisJCS8qIHNraXAgaW5pdGlhbCBkZWxpbWl0ZXIgKi8KKwkJaWYgKCpw
cmVwYXRoID09ICcvJyB8fCAqcHJlcGF0aCA9PSAnXFwnKQorCQkJcHJlcGF0aCsrOworCX0KKwor
CXBhdGggPSBjaWZzX2J1aWxkX2Rldm5hbWUocmVmLT5ub2RlX25hbWUsIHByZXBhdGgpOworCWlm
IChJU19FUlIocGF0aCkpCisJCXJldHVybiBQVFJfRVJSKHBhdGgpOworCisJcmMgPSBzbWIzX3Bh
cnNlX2Rldm5hbWUocGF0aCwgY3R4KTsKKwlpZiAocmMpCisJCWdvdG8gb3V0OworCisJcmMgPSBy
ZXNvbHZlX3VuYyhwYXRoLCBjdHgpOworCitvdXQ6CisJa2ZyZWUocGF0aCk7CisJcmV0dXJuIHJj
OworfQpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9kZnMuaCBiL2ZzL2NpZnMvZGZzLmgKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5hZjA5OTAzYjQzNWEKLS0tIC9kZXYvbnVs
bAorKysgYi9mcy9jaWZzL2Rmcy5oCkBAIC0wLDAgKzEsMTYgQEAKKy8qIFNQRFgtTGljZW5zZS1J
ZGVudGlmaWVyOiBHUEwtMi4wICovCisvKgorICogQ29weXJpZ2h0IChjKSAyMDIyIFBhdWxvIEFs
Y2FudGFyYSA8cGFsY2FudGFyYUBzdXNlLmRlPgorICovCisKKyNpZm5kZWYgX0NJRlNfREZTX0gK
KyNkZWZpbmUgX0NJRlNfREZTX0gKKworI2luY2x1ZGUgImNpZnNnbG9iLmgiCisjaW5jbHVkZSAi
ZnNfY29udGV4dC5oIgorCitpbnQgZGZzX3BhcnNlX3RhcmdldF9yZWZlcnJhbChjb25zdCBjaGFy
ICpmdWxsX3BhdGgsIGNvbnN0IHN0cnVjdCBkZnNfaW5mbzNfcGFyYW0gKnJlZiwKKwkJCSAgICAg
IHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCk7CisKKworI2VuZGlmIC8qIF9DSUZTX0RGU19I
ICovCi0tIAoyLjM0LjEKCg==
--000000000000addd6c05f00815cd
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0003-cifs-remove-unused-smb3_fs_context-mount_options.patch"
Content-Disposition: attachment; 
	filename="0003-cifs-remove-unused-smb3_fs_context-mount_options.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lbs4bwv62>
X-Attachment-Id: f_lbs4bwv62

RnJvbSBlYzNjYzE0ZGM2NTg4MjI5OTk0N2RjYzVkMjRhNjkwMTViYjUwZDcwIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBQYXVsbyBBbGNhbnRhcmEgPHBjQGNqci5uej4KRGF0ZTogVHVl
LCA0IE9jdCAyMDIyIDE4OjQxOjMxIC0wMzAwClN1YmplY3Q6IFtQQVRDSCAwMy8xNF0gY2lmczog
cmVtb3ZlIHVudXNlZCBzbWIzX2ZzX2NvbnRleHQ6Om1vdW50X29wdGlvbnMKCkp1c3QgcmVtb3Zl
IGl0IGFzIGl0J3Mgbm8gbG9uZ2VyIHVzZWQgZHVyaW5nIG1vdW50LgoKU2lnbmVkLW9mZi1ieTog
UGF1bG8gQWxjYW50YXJhIChTVVNFKSA8cGNAY2pyLm56PgpTaWduZWQtb2ZmLWJ5OiBTdGV2ZSBG
cmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+Ci0tLQogZnMvY2lmcy9mc19jb250ZXh0LmMg
fCA5IC0tLS0tLS0tLQogZnMvY2lmcy9mc19jb250ZXh0LmggfCAyIC0tCiAyIGZpbGVzIGNoYW5n
ZWQsIDExIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2ZzL2NpZnMvZnNfY29udGV4dC5jIGIv
ZnMvY2lmcy9mc19jb250ZXh0LmMKaW5kZXggMmM5MmE4MjFlMDI4Li40MGZiZjQ2ODg2Y2MgMTAw
NjQ0Ci0tLSBhL2ZzL2NpZnMvZnNfY29udGV4dC5jCisrKyBiL2ZzL2NpZnMvZnNfY29udGV4dC5j
CkBAIC0zMDgsNyArMzA4LDYgQEAgc21iM19mc19jb250ZXh0X2R1cChzdHJ1Y3Qgc21iM19mc19j
b250ZXh0ICpuZXdfY3R4LCBzdHJ1Y3Qgc21iM19mc19jb250ZXh0ICpjdHgKIHsKIAltZW1jcHko
bmV3X2N0eCwgY3R4LCBzaXplb2YoKmN0eCkpOwogCW5ld19jdHgtPnByZXBhdGggPSBOVUxMOwot
CW5ld19jdHgtPm1vdW50X29wdGlvbnMgPSBOVUxMOwogCW5ld19jdHgtPm5vZGVuYW1lID0gTlVM
TDsKIAluZXdfY3R4LT51c2VybmFtZSA9IE5VTEw7CiAJbmV3X2N0eC0+cGFzc3dvcmQgPSBOVUxM
OwpAQCAtMzIxLDcgKzMyMCw2IEBAIHNtYjNfZnNfY29udGV4dF9kdXAoc3RydWN0IHNtYjNfZnNf
Y29udGV4dCAqbmV3X2N0eCwgc3RydWN0IHNtYjNfZnNfY29udGV4dCAqY3R4CiAJICogTWFrZSBz
dXJlIHRvIHN0YXkgaW4gc3luYyB3aXRoIHNtYjNfY2xlYW51cF9mc19jb250ZXh0X2NvbnRlbnRz
KCkKIAkgKi8KIAlEVVBfQ1RYX1NUUihwcmVwYXRoKTsKLQlEVVBfQ1RYX1NUUihtb3VudF9vcHRp
b25zKTsKIAlEVVBfQ1RYX1NUUih1c2VybmFtZSk7CiAJRFVQX0NUWF9TVFIocGFzc3dvcmQpOwog
CURVUF9DVFhfU1RSKHNlcnZlcl9ob3N0bmFtZSk7CkBAIC01NjksMTcgKzU2NywxMiBAQCBzdGF0
aWMgY29uc3Qgc3RydWN0IGZzX2NvbnRleHRfb3BlcmF0aW9ucyBzbWIzX2ZzX2NvbnRleHRfb3Bz
ID0gewogc3RhdGljIGludCBzbWIzX2ZzX2NvbnRleHRfcGFyc2VfbW9ub2xpdGhpYyhzdHJ1Y3Qg
ZnNfY29udGV4dCAqZmMsCiAJCQkJCSAgIHZvaWQgKmRhdGEpCiB7Ci0Jc3RydWN0IHNtYjNfZnNf
Y29udGV4dCAqY3R4ID0gc21iM19mYzJjb250ZXh0KGZjKTsKIAljaGFyICpvcHRpb25zID0gZGF0
YSwgKmtleTsKIAlpbnQgcmV0ID0gMDsKIAogCWlmICghb3B0aW9ucykKIAkJcmV0dXJuIDA7CiAK
LQljdHgtPm1vdW50X29wdGlvbnMgPSBrc3RyZHVwKGRhdGEsIEdGUF9LRVJORUwpOwotCWlmIChj
dHgtPm1vdW50X29wdGlvbnMgPT0gTlVMTCkKLQkJcmV0dXJuIC1FTk9NRU07Ci0KIAlyZXQgPSBz
ZWN1cml0eV9zYl9lYXRfbHNtX29wdHMob3B0aW9ucywgJmZjLT5zZWN1cml0eSk7CiAJaWYgKHJl
dCkKIAkJcmV0dXJuIHJldDsKQEAgLTE1ODEsOCArMTU3NCw2IEBAIHNtYjNfY2xlYW51cF9mc19j
b250ZXh0X2NvbnRlbnRzKHN0cnVjdCBzbWIzX2ZzX2NvbnRleHQgKmN0eCkKIAkvKgogCSAqIE1h
a2Ugc3VyZSB0aGlzIHN0YXlzIGluIHN5bmMgd2l0aCBzbWIzX2ZzX2NvbnRleHRfZHVwKCkKIAkg
Ki8KLQlrZnJlZShjdHgtPm1vdW50X29wdGlvbnMpOwotCWN0eC0+bW91bnRfb3B0aW9ucyA9IE5V
TEw7CiAJa2ZyZWUoY3R4LT51c2VybmFtZSk7CiAJY3R4LT51c2VybmFtZSA9IE5VTEw7CiAJa2Zy
ZWVfc2Vuc2l0aXZlKGN0eC0+cGFzc3dvcmQpOwpkaWZmIC0tZ2l0IGEvZnMvY2lmcy9mc19jb250
ZXh0LmggYi9mcy9jaWZzL2ZzX2NvbnRleHQuaAppbmRleCBiYmFlZTRjMjI4MWYuLjE1OWJjZmQ1
MDlkNCAxMDA2NDQKLS0tIGEvZnMvY2lmcy9mc19jb250ZXh0LmgKKysrIGIvZnMvY2lmcy9mc19j
b250ZXh0LmgKQEAgLTI2NCw4ICsyNjQsNiBAQCBzdHJ1Y3Qgc21iM19mc19jb250ZXh0IHsKIAlf
X3UxNiBjb21wcmVzc2lvbjsgLyogY29tcHJlc3Npb24gYWxnb3JpdGhtIDB4RkZGRiBkZWZhdWx0
IDA9ZGlzYWJsZWQgKi8KIAlib29sIHJvb3RmczoxOyAvKiBpZiBpdCdzIGEgU01CIHJvb3QgZmls
ZSBzeXN0ZW0gKi8KIAlib29sIHdpdG5lc3M6MTsgLyogdXNlIHdpdG5lc3MgcHJvdG9jb2wgKi8K
LQotCWNoYXIgKm1vdW50X29wdGlvbnM7CiB9OwogCiBleHRlcm4gY29uc3Qgc3RydWN0IGZzX3Bh
cmFtZXRlcl9zcGVjIHNtYjNfZnNfcGFyYW1ldGVyc1tdOwotLSAKMi4zNC4xCgo=
--000000000000addd6c05f00815cd--
